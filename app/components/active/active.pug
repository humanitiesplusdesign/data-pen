.main-table(ng-style="$ctrl.tableWidthStyle()")
  label.tableExport(ng-click="$ctrl.exportTable()") Export table
  uib-tabset(type="tabs")
    uib-tab(ng-repeat="class in $ctrl.allClasses()" ng-click="$ctrl.currentTableClass = class" index="$index" heading="{{ class.labels | prefLang }}")
      //- .main-grid(ui-grid="{ data: $ctrl.state.active.activeLayout.items, enableFiltering: true }" ng-hide="$ctrl.state.active.dividerPercent < 2" ui-grid-auto-resize ui-grid-edit ui-grid-resize-columns ui-grid-empty-base-layer)
      .main-grid(id="{{ 'grid' + $index }}" ui-grid="$ctrl.gridOptions[class.value]" ng-if="$ctrl.state.active.dividerPercent > 2" ui-grid-edit ui-grid-resize-columns)
.main-canvas(ng-style="$ctrl.canvasWidthStyle()")
  .control-area
    button.active-circle-button(uib-popover-template="'viewOptionsPopover.html'" popover-trigger="'outsideClick'" popover-placement="auto left-top" popover-class="active-options-popover" popover-is-open="$ctrl.viewOptionsPopoverVisible" ng-class="{true: 'button-active', false: ''}[$ctrl.viewOptionsPopoverVisible]")
      img.view-options-icon(src=require("images/active/view_options.svg"))
    button.active-circle-button(uib-popover-template="'layersPopover.html'" popover-trigger="'outsideClick'" popover-placement="auto left-top" popover-class="active-options-popover" popover-is-open="$ctrl.layersPopoverVisible" ng-class="{true: 'button-active', false: ''}[$ctrl.layersPopoverVisible]")
      img.layers-icon(src=require("images/active/layers.svg"))
    button.active-circle-button(uib-popover-template="'snapshotsPopover.html'" popover-trigger="'outsideClick'" popover-placement="auto left-top" popover-class="active-options-popover" popover-is-open="$ctrl.snapshotsPopoverVisible" ng-class="{true: 'button-active', false: ''}[$ctrl.snapshotsPopoverVisible]")
      img.snapshots-icon(src=require("images/active/snapshot.svg"))
    button.active-circle-button.button-disabled(disabled uib-popover-template="'layoutsPopover.html'" popover-trigger="'outsideClick'" popover-placement="auto left-top" popover-class="active-options-popover" popover-is-open="$ctrl.layoutsPopoverVisible" ng-class="{true: 'button-active', false: ''}[$ctrl.layoutsPopoverVisible]")
      img.layouts-icon(src=require("images/active/layout.svg"))
  svg.main-svg
    defs
      filter#drop-shadow(height="150%" width="150%" left="-5px" top="-5px")
        feGaussianBlur(in="SourceAlpha" stdDeviation="2" result="blur")
        feMerge
          feMergeNode(in="blur")
          feMergeNode(in="SourceGraphic")
    g.main-g
      rect.main-background
      g.main-g-links
      g.main-g-items
.draggable-divider(drag-container="true" on-drag-end="dragging = false; $ctrl.dragDivider($event)" on-drag="$ctrl.dragDivider($event)" ng-style="$ctrl.dragTabLeftStyle()")
  .drag-tab(ng-hide="$ctrl.state.active.dividerPercent > 2 && $ctrl.state.active.dividerPercent < 98")
.node-search(ng-show="$ctrl.currentlyAdding")
  .input-group
    .input-group-addon.addon-left
      i.glyphicon.glyphicon-search(ng-hide="loadingSearchResults")
      .spinner(ng-if="loadingSearchResults")
    input.form-control(type="text" ng-model="$ctrl.nodeSearchSelected" placeholder="Search" uib-typeahead="result as $ctrl.nodeSearchLabel(result) for result in $ctrl.nodeSearchResults($viewValue)" typeahead-popup-template-url="resultPopupTemplate.html" typeahead-template-url="resultTemplate.html" typeahead-loading="loadingSearchResults" typeahead-no-results="noResults" typeahead-on-select="$ctrl.nodeSearchSelect($item, $model, $label, $event)" typeahead-wait-ms="1000")
    .input-group-addon.addon-right(ng-click="$ctrl.nodeSearchRemove()")
      img.dismiss-icon(src=require("images/filter/remove.svg"))
  .type-results-only(ng-show="!noResults && loadingSearchResults")
    .fake-typeahead
      label.cold-node(ng-click="$ctrl.addColdNode($ctrl.nodeSearchSelected)") Add "{{ $ctrl.nodeSearchSelected }}" as an unlinked node
      ul.list-style-none
        li.cold-node Add "{{ $ctrl.nodeSearchSelected }}" as a new type
        li.result-type-container-loading(ng-repeat="type in $ctrl.allClassesFiltered($ctrl.nodeSearchSelected)") 
          label.resultType TYPE
          label.resultActual {{ type.labels | prefLang }}
  .no-results-container(ng-show="noResults")
    .fake-typeahead
      label.cold-node(ng-click="$ctrl.addColdNode($ctrl.nodeSearchSelected)") Add "{{ $ctrl.nodeSearchSelected }}" as an unlinked node
      ul.list-style-none
        li.cold-node Add "{{ $ctrl.nodeSearchSelected }}" as a new type
        li.result-type-container-loading(ng-repeat="type in $ctrl.allClassesFiltered($ctrl.nodeSearchSelected)") 
          label.resultType TYPE
          label.resultActual {{ type.labels | prefLang }}
      label.no-results No Results Found!
#circle-menu.circle-menu
#properties-menu.circle-menu
.tooltips
.link-tooltips
script(type="text/ng-template" id="resultTemplate.html")
  a(ng-if="match.model")
    span.resultType {{ match.model.additionalInformation.typeDescriptions | prefLang }}
    span.resultActual {{ match.label }}
    label.resultSource(ng-repeat="ds in match.model.additionalInformation.dataSourceDescriptions") {{ ds.value | makeAcronym }}
  a(ng-if="!match.model")
    label.resultType.type-label TYPE
    label.resultActual {{ match.labels | prefLang }}
script(type="text/ng-template" id="resultPopupTemplate.html")
  .custom-popup-wrapper(ng-style="{top:position().top+'px', left: position().left+'px'}" style="display: block;" ng-show="isOpen() && !moveInProgress" aria-hidden="{{!isOpen()}}")
    label.cold-node(ng-click="$parent.$ctrl.addColdNode(query)") Add "{{ query }}" as an unlinked node
    label.cold-node Add "{{ query }}" as a new type
    ul.dropdown-menu(role="listbox")
      li.uib-typeahead-match.result-type-container(ng-repeat="type in $parent.$ctrl.allClassesFiltered(query)")
        div(uib-typeahead-match index="$index" match="type" query="query" template-url="templateUrl")
      li.uib-typeahead-match(ng-repeat="match in matches track by $index" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)" ng-click="selectMatch($index)" role="option" id="{{::match.id}}")
        div(uib-typeahead-match index="$index" match="match" query="query" template-url="templateUrl")
script(type="text/ng-template" id="viewOptionsPopover.html")
  .view-options-popover.pop-on-top
    h4 View options
    hr
    label.optionToggle
      input(type="checkbox" ng-model="$ctrl.viewOptionsShowLinks" ng-click="$ctrl.updateCanvas()")
      span.checkbox-title Show links
    hr
    label.optionToggle
      input(type="checkbox" ng-model="$ctrl.viewOptionsShowLabels" ng-click="$ctrl.viewOptionsShowLabels ? $ctrl.showTooltips() : $ctrl.hideTooltips()")
      span.checkbox-title Show node labels
    label.optionToggle
      input(type="checkbox" ng-model="$ctrl.viewOptionsShowLinkLabels" ng-click="$ctrl.viewOptionsShowLinkLabels ? $ctrl.showLinkTooltips() : $ctrl.hideLinkTooltips()")
      span.checkbox-title Show link labels
    hr
    label.optionToggle
      input(type="checkbox")
      span.checkbox-title Show node reconciliation status
    p.description.option-description
script(type="text/ng-template" id="layersPopover.html")
  .layers-popover.pop-on-top
    h4 Layers
    hr
    label.optionToggle
      input(type="checkbox")
      span.checkbox-title Show layer effect
    hr
    ul(ui-sortable)
      li.layer-row(ng-repeat="class in $ctrl.allClasses()")
        input(type="checkbox")
        span.checkbox-title {{ class.labels | prefLang }}
script(type="text/ng-template" id="snapshotsPopover.html")
  .snapshots-popover.pop-on-top
    h4 Snapshots
    hr
    input.snapshot-name-input(type="text" ng-model="layoutDescription")
    button.data-pen-button.snapshot-save-button(ng-class="{'button-disabled' : !layoutDescription}" ng-click="$ctrl.saveLayout(layoutDescription); layoutDescription = ''") Save
    hr
    label.no-snapshots(ng-show="$ctrl.state.project.project.layouts.length == 0") Create a snapshot to save this layout.
    .snapshot-list
      .snapshot-row.transition-100(ng-repeat="layout in $ctrl.savedLayouts() | orderBy:'-'" ng-click="$ctrl.loadLayout(layout)" ng-init="actionsVisibility=''" ng-mouseenter="actionsVisibility='visible'" ng-mouseleave="actionsVisibility=''")
        .snapshot-details-container
          label.snapshot-name-label(ng-class="{'limit-width' : actionsVisibility=='visible'}") {{ layout.description }}
          span.snapshot-entities-label
            span.calibre-numbers-kern {{ layout.items.length }}
            |  entities
        .action-items-container(ng-class="actionsVisibility")
          a.snapshot-option Rename
          a.snapshot-option.delete-option(ng-click="$ctrl.deleteLayout(layout)") Delete
script(type="text/ng-template" id="layoutsPopover.html")
  .layouts-popover.pop-on-top
    h4 Layouts
    hr
