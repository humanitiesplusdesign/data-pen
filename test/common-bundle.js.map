{"version":3,"sources":["webpack:///webpack/bootstrap 2b0ac529c79d1c4dc9ef","webpack:///./node_modules/babel-runtime/helpers/classCallCheck.js","webpack:///./node_modules/babel-runtime/helpers/createClass.js","webpack:///./app/models/rdf.ts","webpack:///./node_modules/rdfstore/src/utils.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/babel-runtime/core-js/object/get-prototype-of.js","webpack:///./node_modules/babel-runtime/helpers/possibleConstructorReturn.js","webpack:///./node_modules/babel-runtime/helpers/inherits.js","webpack:///./node_modules/core-js/library/modules/_export.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/core-js/library/modules/_wks.js","webpack:///./app/components/collection-utils.ts","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/core-js/library/modules/_object-dp.js","webpack:///./node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/core-js/library/modules/_descriptors.js","webpack:///./app/services/project-service/data-model.ts","webpack:///./node_modules/core-util-is/lib/util.js","webpack:///./app/services/sparql-item-service.ts","webpack:///./app/models/citable.ts","webpack:///./node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/core-js/library/modules/_is-object.js","webpack:///./node_modules/angular-sparql-service/dist/sparql-service.js","webpack:///./node_modules/process-nextick-args/index.js","webpack:///./node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/core-js/library/modules/_fails.js","webpack:///./node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/core-js/library/modules/_to-iobject.js","webpack:///./app/filters/preferred-language-filter.ts","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/jsonld/browser/ignore.js","webpack:///./node_modules/core-js/library/modules/_to-object.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/core-js/library/modules/es6.string.iterator.js","webpack:///./node_modules/core-js/library/modules/_iterators.js","webpack:///./node_modules/core-js/library/modules/_object-keys.js","webpack:///./node_modules/babel-runtime/helpers/get.js","webpack:///./node_modules/babel-runtime/core-js/get-iterator.js","webpack:///./app/services/worker-service/serialization-service.ts","webpack:///./app/services/project-service/project.ts","webpack:///./app/services/sparql-autocomplete-service.ts","webpack:///./app/services/sparql-statistics-service.ts","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/core-js/library/modules/_uid.js","webpack:///./node_modules/babel-runtime/helpers/typeof.js","webpack:///./node_modules/core-js/library/modules/_object-create.js","webpack:///./node_modules/core-js/library/modules/_to-length.js","webpack:///./node_modules/core-js/library/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/library/modules/web.dom.iterable.js","webpack:///./node_modules/core-js/library/modules/_object-pie.js","webpack:///./app/components/misc-utils.ts","webpack:///./node_modules/core-js/library/modules/_for-of.js","webpack:///./app/services/project-service/primary-endpoint-configuration.ts","webpack:///./node_modules/rdfstore/src/quad_index.js","webpack:///./node_modules/string_decoder/lib/string_decoder.js","webpack:///./node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/core-js/library/modules/_defined.js","webpack:///./node_modules/core-js/library/modules/_shared-key.js","webpack:///./node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/core-js/library/modules/_object-sap.js","webpack:///./node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/core-js/library/modules/_iter-define.js","webpack:///./node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/core-js/library/modules/_cof.js","webpack:///./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/library/modules/_wks-ext.js","webpack:///./node_modules/core-js/library/modules/_meta.js","webpack:///./node_modules/core-js/library/modules/_wks-define.js","webpack:///./node_modules/core-js/library/modules/_object-gops.js","webpack:///./node_modules/core-js/library/modules/_object-gopd.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./app/models/richnode.ts","webpack:///./node_modules/core-js/library/modules/_validate-collection.js","webpack:///./app/services/project-service/remote-endpoint-configuration.ts","webpack:///./app/services/project-service/schema.ts","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/rdfstore/src/abstract_query_tree.js","webpack:///./node_modules/rdfstore/src/btree.js","webpack:///./node_modules/rdfstore/src/rdf_model.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/url/url.js","webpack:///./node_modules/n3/lib/N3Lexer.js","webpack:///./node_modules/n3/lib/N3Parser.js","webpack:///./node_modules/n3/lib/N3Util.js","webpack:///./node_modules/readable-stream/readable-browser.js","webpack:///./node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/n3/lib/N3Writer.js","webpack:///./node_modules/angular-http-auth/src/http-auth-interceptor.js","webpack:///./node_modules/babel-runtime/core-js/object/define-property.js","webpack:///./node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/core-js/library/modules/_object-gpo.js","webpack:///./node_modules/core-js/library/modules/_redefine.js","webpack:///./node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/library/modules/_iter-step.js","webpack:///./node_modules/core-js/library/modules/_is-array.js","webpack:///./node_modules/core-js/library/modules/_object-gopn.js","webpack:///./node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/babel-runtime/core-js/set.js","webpack:///./node_modules/core-js/library/modules/_collection-strong.js","webpack:///./node_modules/core-js/library/modules/_redefine-all.js","webpack:///./node_modules/core-js/library/modules/_an-instance.js","webpack:///./node_modules/core-js/library/modules/_iter-call.js","webpack:///./node_modules/core-js/library/modules/_is-array-iter.js","webpack:///./node_modules/core-js/library/modules/_collection.js","webpack:///./node_modules/core-js/library/modules/_collection-to-json.js","webpack:///./node_modules/core-js/library/modules/_set-collection-of.js","webpack:///./node_modules/core-js/library/modules/_set-collection-from.js","webpack:///./node_modules/babel-runtime/core-js/map.js","webpack:///./app/services/fibra-sparql-service.ts","webpack:///./node_modules/rdfstore/src/store.js","webpack:///./node_modules/rdfstore/src/query_filters.js","webpack:///./node_modules/stream-http/index.js","webpack:///./node_modules/stream-http/lib/capability.js","webpack:///./node_modules/stream-http/lib/response.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/readable-browser.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/util-deprecate/browser.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/n3/lib/N3Store.js","webpack:///./node_modules/n3/lib/N3StreamParser.js","webpack:///./node_modules/stream-browserify/index.js","webpack:///./node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/n3/lib/N3StreamWriter.js","webpack:///./node_modules/es6-promise/dist/es6-promise.js","webpack:///./node_modules/rdfstore/src/lexicon.js","webpack:///./node_modules/core-js/library/fn/object/define-property.js","webpack:///./node_modules/core-js/library/modules/es6.object.define-property.js","webpack:///./node_modules/core-js/library/fn/object/get-prototype-of.js","webpack:///./node_modules/core-js/library/modules/es6.object.get-prototype-of.js","webpack:///./node_modules/babel-runtime/core-js/symbol/iterator.js","webpack:///./node_modules/core-js/library/fn/symbol/iterator.js","webpack:///./node_modules/core-js/library/modules/_string-at.js","webpack:///./node_modules/core-js/library/modules/_iter-create.js","webpack:///./node_modules/core-js/library/modules/_object-dps.js","webpack:///./node_modules/core-js/library/modules/_array-includes.js","webpack:///./node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/library/modules/_html.js","webpack:///./node_modules/core-js/library/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/library/modules/_add-to-unscopables.js","webpack:///./node_modules/babel-runtime/core-js/symbol.js","webpack:///./node_modules/core-js/library/fn/symbol/index.js","webpack:///./node_modules/core-js/library/modules/es6.symbol.js","webpack:///./node_modules/core-js/library/modules/_enum-keys.js","webpack:///./node_modules/core-js/library/modules/_object-gopn-ext.js","webpack:///./node_modules/core-js/library/modules/es7.symbol.async-iterator.js","webpack:///./node_modules/core-js/library/modules/es7.symbol.observable.js","webpack:///./node_modules/babel-runtime/core-js/object/set-prototype-of.js","webpack:///./node_modules/core-js/library/fn/object/set-prototype-of.js","webpack:///./node_modules/core-js/library/modules/es6.object.set-prototype-of.js","webpack:///./node_modules/core-js/library/modules/_set-proto.js","webpack:///./node_modules/babel-runtime/core-js/object/create.js","webpack:///./node_modules/core-js/library/fn/object/create.js","webpack:///./node_modules/core-js/library/modules/es6.object.create.js","webpack:///./node_modules/babel-runtime/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-descriptor.js","webpack:///./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/core-js/library/fn/set.js","webpack:///./node_modules/core-js/library/modules/es6.set.js","webpack:///./node_modules/core-js/library/modules/_set-species.js","webpack:///./node_modules/core-js/library/modules/_array-methods.js","webpack:///./node_modules/core-js/library/modules/_array-species-create.js","webpack:///./node_modules/core-js/library/modules/_array-species-constructor.js","webpack:///./node_modules/core-js/library/modules/es7.set.to-json.js","webpack:///./node_modules/core-js/library/modules/_array-from-iterable.js","webpack:///./node_modules/core-js/library/modules/es7.set.of.js","webpack:///./node_modules/core-js/library/modules/es7.set.from.js","webpack:///./node_modules/core-js/library/fn/map.js","webpack:///./node_modules/core-js/library/modules/es6.map.js","webpack:///./node_modules/core-js/library/modules/es7.map.to-json.js","webpack:///./node_modules/core-js/library/modules/es7.map.of.js","webpack:///./node_modules/core-js/library/modules/es7.map.from.js","webpack:///./app/services/id-consolidation-utils.ts","webpack:///./node_modules/circular-json/build/circular-json.node.js","webpack:///./node_modules/rdfstore/src/query_engine.js","webpack:///./node_modules/rdfstore/src/parser.js","webpack:///./node_modules/rdfstore/src/query_plan.js","webpack:///./node_modules/rdfstore/src/rdf_loader.js","webpack:///./node_modules/rdfstore/src/network_transport.js","webpack:///./node_modules/stream-http/lib/request.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///util (ignored)?578c","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/to-arraybuffer/index.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/builtin-status-codes/browser.js","webpack:///./node_modules/punycode/punycode.js","webpack:///./node_modules/url/util.js","webpack:///./node_modules/querystring-es3/index.js","webpack:///./node_modules/querystring-es3/decode.js","webpack:///./node_modules/querystring-es3/encode.js","webpack:///./node_modules/https-browserify/index.js","webpack:///./node_modules/rdfstore/src/rvn3_parser.js","webpack:///./node_modules/n3/N3.js","webpack:///./node_modules/n3/lib ^\\.\\/N3.*$","webpack:///util (ignored)","webpack:///./node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:///./node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/readable-stream/writable-browser.js","webpack:///./node_modules/readable-stream/duplex-browser.js","webpack:///./node_modules/readable-stream/transform.js","webpack:///./node_modules/readable-stream/passthrough.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/util/node_modules/inherits/inherits_browser.js","webpack:///./node_modules/rdfstore/src/jsonld_parser.js","webpack:///./node_modules/jsonld/js/jsonld.js","webpack:///vertx (ignored)","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/rdfstore/src/graph_callbacks.js","webpack:///./node_modules/rdfstore/src/quad_backend.js","webpack:///./node_modules/rdfstore/src/persistent_quad_backend.js","webpack:///./node_modules/rdfstore/src/persistent_lexicon.js"],"names":["CNode","value","termType","language","undefined","datatype","__className","stringToSPARQLString","RDF","langString","equals","XMLSchema","string","toCanonical","other","NodeFromNode","DefaultGraph","instance","UNDEF","Variable","NamedNode","BlankNode","Literal","Quad","subject","predicate","object","graph","Triple","Graph","triples","DataFactory","nextBlankNodeId","binding","n","type","id","indexOf","substring","length","lastIndexOf","languageOrDatatype","nodeFromBinding","nodeFromNode","nodeFromCanonicalRepresentation","namedNode","blankNode","literal","variable","defaultGraph","triple","quad","FIBRA","ns","Project","sourceFile","groupProp","qualifiedAssertion","order","schemaNS","instanceNS","updateEndpoint","configuration","configurationReference","schema","schemaReference","autocompletionQuery","propertyQuery","classQuery","itemQuery","deleteItemQuery","RemoteEndpointConfiguration","PrimaryEndpointConfiguration","AuthorityEndpointConfiguration","ArchiveEndpointConfiguration","Schema","SD","_name","SKOS","prefLabel","altLabel","related","RDFS","label","Class","Property","VOID","sparqlEndpoint","DCTerms","rightsHolder","description","FOAF","homepage","OWL","sameAs","Thing","ObjectProperty","DatatypeProperty","dateTime","CIDOC","Person","Place","Group","GETTY","AdminPlaceConcept","PhysicalPlaceConcept","PhysAdminPlaceConcept","PersonConcept","GroupConcept","MADS","CorporateName","PersonalName","NameTitle","Geographic","GEOVOCAB","Feature","NodeMap","imap","key","get","remove","f","each","map","ret","mapped","set","some","find","has","empty","values","keys","k","entries","o","clear","size","ENodeMap","create","ONodeMap","index","removei","EONodeMap","NodeSet","m","arr","forEach","add","oset","ONodeSet","firstValue","lastValue","goc","ogoc","cpush","cpushs","FMap","s","orElse","contained","obj","push","func","EMap","IdentitySet","a","v","splice","StringSet","str","OMap","arguments","ka","va","EOMap","OStringSet","obj2","superClasses","subClasses","properties","inverseProperties","domains","ranges","superProperties","subProperties","DataModel","classMap","propertyMap","rootClasses","rootProperties","types","join","angular","PropertyAndValue","property","p","pruned","RichPropertyValue","PropertyToValues","includePropertiesOfProperties","toPropertyAndValues","pv","pv2","v2","Item","localProperties","remoteProperties","localInverseProperties","remoteInverseProperties","SimpleConstraint","constraintString","priority","SparqlItemService","workerService","ids","queryRemote","canceller","getItems","then","items","info","endpointType","endpoint","item","idGroups","call","createNewItems","r","propertiess","props","propertiesToAdd","propertiesToRemove","getItemPropertiesQuery","coalesceIdsQuery","SparqlItemWorkerService","fibraSparqlService","$q","sparqlUpdateWorkerService","stateWorkerService","queryTemplate","state","project","replace","idGroup","defer","query","timeout","idPropertyMap","idPropertyValueMap","idSameAses","response","results","bindings","b","processItemResult","dataModel","notify","itemIdQuery","seenIds","item2","all","remoteEndpoints","queryTemplate2","response2","error","stripFunctions","resolve","promise","update","triplesToAdd","triplesToRemove","updateGraphs","deferred","i","subjects","reject","propertyValueMap","sameAses","propertyToValues","goe","labels","literalFromBinding","oNode","sourceEndpoints","module","config","$provide","service","CitableSource","Citable","source","url","descriptions","rightsHolders","dateCreated","Date","tb","toTurtle","c","prefixes","fragmentsById","toISOString","descr","rh","getPrefLangString","uriCache","literals","prefLang","uri","lname","match","toLocaleLowerCase","dl","pl","al","plParts","split","l","lparts","every","cl","Array","filter","$ngRedux","node","getState","general","cjson","SerializationService","prototypeMappings","mappings","className","prototype","json","parse","restorePrototypes","conf","ttl","idGenerator","ignoredProperties","val","propertyHandlers","prop","propertyMapping","defaultPrefix","encodeURIComponent","valueConverters","stringify","args","seen","restorePrototypesInternal","arg","__proto__","hasOwnProperty","Mark","defaultMatchQuery","classStatisticsQuery","getClassStatisticsQuery","propertyStatisticsQuery","getPropertyStatisticsQuery","authorityEndpoints","archiveEndpoints","schemas","sourceClassSettings","layouts","dateBoundaryStart","dateBoundaryEnd","ae","endsWith","ve","constraints","concat","graphStoreEndpoint","toJson","listProjectsQuery","AutocompletionResults","localMatchingResults","localNonMatchingResults","remoteResults","ResultGroup","Result","datasources","matchedLabel","additionalInformation","SparqlAutocompleteService","limit","ProcessingData","unifyMap","idToGroupIdSet","idToPrefLabelSet","idToMatchedLabelSet","idToAltLabelSet","idToDatasourceSet","result","consolidate","idToIdSet","idSet","datasourceSet","groupIdSet","prefLabelSet","matchedLabelSet","altLabelSet","oDatasourceSet","oid","adds","oGroupIdSet","oPrefLabelSet","oMatchedLabelSet","oAltLabelSet","SparqlAutocompleteWorkerService","d","pd","localResults","primaryProcessed","processAndConsolidate","buildResults","rg","remoteGroupIdToGroup","endpointConfiguration","console","log","filteredIds","res","idToResult","groupIdToGroup","resultId","id2","altLabels","prefLabels","slice","gid","glabel","resultGroup","PropertyStatistics","min","max","SparqlStatisticsService","SparqlStatisticsWorkerService","citableToTurtle","UUID","flatten","TurtleBuilder","lut","toString","d0","Math","random","d1","d2","d3","initial","reduce","flat","toFlatten","isArray","compatibleEndpoints","nece","e","aq","listPrimaryEndpointConfigurationsQuery","FullRichNodeFromNode","RichNodeFromRichNode","PrunedRichNodeFromNode","schemaEndpoint","listRemoteEndpointConfigurationsQuery","listSchemasQuery","SparqlServiceDefinition","FibraSparqlService","sparqlService","services","name","persistent","err","rdfStore","RDFStoreInternalSparqlService","RemoteInternalSparqlService","params","graphIRI","data","put","post","execute","head","vars","convertBinding","toNT","handler","load","handler2","err2","token","lang","UnifyMap","ifpVarPlusValueToIdSet","idVar","sameAsVar","ifpVars","valueToIdSet","oidSet"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAY,2BAA2B;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kDAA0C,WAAW,EAAE;AACvD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA,kDAA0C,oBAAoB,WAAW;;;;;;;;;ACjJzE;;AAEA;;AAEA;AACA;AACA;AACA;AACA,E;;;;;;;ACRA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;;;;;;AC1BD;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;;;IACaA,K,WAAAA,K;AACT,mBAAYC,KAAZ,EAAmBC,QAAnB,EAAyE;AAAA,YAA5CC,QAA4C,uEAAjCC,SAAiC;AAAA,YAAtBC,QAAsB,uEAAXD,SAAW;AAAA;;AACrE,aAAKH,KAAL,GAAaA,KAAb;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA,aAAKE,QAAL,GAAgBA,QAAhB;AACA,aAAKC,WAAL,GAAmB,OAAnB;AACH;;;;sCACa;AACV,oBAAQ,KAAKJ,QAAb;AACI,qBAAK,WAAL;AAAkB,2BAAO,MAAM,KAAKD,KAAX,GAAmB,GAA1B;AAClB,qBAAK,WAAL;AAAkB,2BAAO,OAAO,KAAKA,KAAnB;AAClB,qBAAK,SAAL;AAAgB,2BAAO,oCAAcM,oBAAd,CAAmC,KAAKN,KAAxC,KAAkD,KAAKE,QAAL,GAAgB,MAAM,KAAKA,QAA3B,GAAuC,CAAC,KAAKE,QAAN,IAAkBG,IAAIC,UAAJ,CAAeC,MAAf,CAAsB,KAAKL,QAA3B,CAAlB,IAA0DM,UAAUC,MAAV,CAAiBF,MAAjB,CAAwB,KAAKL,QAA7B,CAA1D,GAAmG,EAAnG,GAAwG,OAAO,KAAKA,QAAL,CAAcQ,WAAd,EAAxM,CAAP;AAChB,qBAAK,UAAL;AAAiB,2BAAO,MAAM,KAAKZ,KAAlB;AACjB,qBAAK,cAAL;AAAqB,2BAAO,EAAP;AACrB,qBAAK,OAAL;AAAc,2BAAO,OAAP;AACd;AAAS,0BAAM,uBAAuB,IAA7B;AAPb;AASH;;;+BACMa,K,EAAO;AACV,mBAAO,KAAKZ,QAAL,KAAkBY,MAAMZ,QAAxB,IAAoC,KAAKD,KAAL,KAAea,MAAMb,KAAzD,KAAmE,KAAKC,QAAL,KAAkB,SAAlB,IAAgC,KAAKC,QAAL,KAAkBW,MAAMX,QAAxB,IAAoC,KAAKE,QAAL,KAAkBS,MAAMT,QAA/J,CAAP;AACH;;;;;IAEQU,Y,WAAAA,Y;;;AACT,0BAAYD,KAAZ,EAAmB;AAAA;AAAA,iJACTA,MAAMb,KADG,EACIa,MAAMZ,QADV,EACoBY,MAAMX,QAD1B,EACoCW,MAAMT,QAD1C;AAElB;;;EAH6BL,K;;IAKrBgB,Y,WAAAA,Y;;;AACT,4BAAc;AAAA;AAAA,iJAAQ,EAAR,EAAY,cAAZ;AAA8B;;;;sCAC9B;AAAE,mBAAO,EAAP;AAAY;;;+BACrBF,K,EAAO;AAAE,mBAAOA,MAAMZ,QAAN,KAAmB,cAA1B;AAA2C;;;EAH7BF,K;;AAKlCgB,aAAaC,QAAb,GAAwB,IAAID,YAAJ,EAAxB;;IACaE,K,WAAAA,K;;;AACT,qBAAc;AAAA;AAAA,mIAAQ,EAAR,EAAY,OAAZ;AAAuB;;;;sCACvB;AAAE,mBAAO,EAAP;AAAY;;;+BACrBJ,K,EAAO;AAAE,mBAAOA,MAAMZ,QAAN,KAAmB,OAA1B;AAAoC;;;EAH7BF,K;;AAK3BkB,MAAMD,QAAN,GAAiB,IAAIC,KAAJ,EAAjB;;IACaC,Q,WAAAA,Q;;;AACT,sBAAYlB,KAAZ,EAAmB;AAAA;AAAA,yIAAQA,KAAR,EAAe,UAAf;AAA6B;;;;sCAClC;AAAE,mBAAO,MAAM,KAAKA,KAAlB;AAA0B;;;EAFhBD,K;;IAIjBoB,S,WAAAA,S;;;AACT,uBAAYnB,KAAZ,EAAmB;AAAA;AAAA,2IAAQA,KAAR,EAAe,WAAf;AAA8B;;;;sCACnC;AAAE,mBAAO,MAAM,KAAKA,KAAX,GAAmB,GAA1B;AAAgC;;;EAFrBD,K;;IAIlBqB,S,WAAAA,S;;;AACT,uBAAYpB,KAAZ,EAAmB;AAAA;AAAA,2IAAQA,KAAR,EAAe,WAAf;AAA8B;;;;sCACnC;AAAE,mBAAO,MAAM,KAAKA,KAAlB;AAA0B;;;EAFfD,K;;IAIlBsB,O,WAAAA,O;;;AACT,qBAAYrB,KAAZ,EAA4C;AAAA,YAAzBE,QAAyB,uEAAd,EAAc;AAAA,YAAVE,QAAU;AAAA;AAAA,uIAClCJ,KADkC,EAC3B,SAD2B,EAChBE,QADgB,EACNE,WAAWA,QAAX,GAAuBF,WAAWK,IAAIC,UAAf,GAA4BE,UAAUC,MADvD;AAE3C;;;EAHwBZ,K;;IAKhBuB,I,WAAAA,I;AACT,kBAAYC,OAAZ,EAAqBC,SAArB,EAAgCC,MAAhC,EAAwCC,KAAxC,EAA+C;AAAA;;AAC3C,aAAKH,OAAL,GAAeA,OAAf;AACA,aAAKC,SAAL,GAAiBA,SAAjB;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,KAAL,GAAaA,KAAb;AACH;;;;sCACa;AACV,mBAAO,KAAKH,OAAL,CAAaX,WAAb,KAA6B,GAA7B,GAAmC,KAAKY,SAAL,CAAeZ,WAAf,EAAnC,GAAkE,GAAlE,GAAwE,KAAKa,MAAL,CAAYb,WAAZ,EAAxE,IAAqG,KAAKc,KAAL,CAAWzB,QAAX,KAAwB,cAAxB,GAAyC,EAAzC,GAA+C,MAAM,KAAKyB,KAAL,CAAWd,WAAX,EAA1J,CAAP;AACH;;;+BACMC,K,EAAO;AACV,mBAAO,KAAKU,OAAL,CAAad,MAAb,CAAoBI,MAAMU,OAA1B,KAAsC,KAAKC,SAAL,CAAef,MAAf,CAAsBI,MAAMW,SAA5B,CAAtC,IAAgF,KAAKC,MAAL,CAAYhB,MAAZ,CAAmBI,MAAMY,MAAzB,CAAhF,IAAoH,KAAKC,KAAL,CAAWjB,MAAX,CAAkBI,MAAMa,KAAxB,CAA3H;AACH;;;;;IAEQC,M,WAAAA,M;AACT,oBAAYJ,OAAZ,EAAqBC,SAArB,EAAgCC,MAAhC,EAAwC;AAAA;;AACpC,aAAKF,OAAL,GAAeA,OAAf;AACA,aAAKC,SAAL,GAAiBA,SAAjB;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,KAAL,GAAaX,aAAaC,QAA1B;AACH;;;;sCACa;AACV,mBAAO,KAAKO,OAAL,CAAaX,WAAb,KAA6B,GAA7B,GAAmC,KAAKY,SAAL,CAAeZ,WAAf,EAAnC,GAAkE,GAAlE,GAAwE,KAAKa,MAAL,CAAYb,WAAZ,EAA/E;AACH;;;+BACMC,K,EAAO;AACV,mBAAO,KAAKU,OAAL,CAAad,MAAb,CAAoBI,MAAMU,OAA1B,KAAsC,KAAKC,SAAL,CAAef,MAAf,CAAsBI,MAAMW,SAA5B,CAAtC,IAAgF,KAAKC,MAAL,CAAYhB,MAAZ,CAAmBI,MAAMY,MAAzB,CAAhF,IAAoH,KAAKC,KAAL,CAAWjB,MAAX,CAAkBI,MAAMa,KAAxB,CAA3H;AACH;;;;;IAEQE,K,WAAAA,K,GACT,eAAYF,KAAZ,EAAiC;AAAA,QAAdG,OAAc,uEAAJ,EAAI;AAAA;;AAC7B,SAAKH,KAAL,GAAaA,KAAb;AACA,SAAKG,OAAL,GAAeA,OAAf;AACH,C;;IAEQC,W,WAAAA,W;AACT,2BAAc;AAAA;;AACV,aAAKC,eAAL,GAAuB,CAAvB;AACH;;;;2CAuBkBC,O,EAAS;AACxB,mBAAO,IAAIX,OAAJ,CAAYW,QAAQhC,KAApB,EAA2BgC,QAAQ9B,QAAnC,EAA6C8B,QAAQ5B,QAAR,GAAmB,IAAIe,SAAJ,CAAca,QAAQ5B,QAAtB,CAAnB,GAAsD,CAAC4B,QAAQ,UAAR,IAAsBA,QAAQ,UAAR,CAAtB,GAA4C,EAA7C,MAAqD,EAArD,GAA0DzB,IAAIC,UAA9D,GAA2EE,UAAUC,MAAxL,CAAP;AACH;;;wCACeqB,O,EAAS;AACrB,gBAAIC,IAAI,IAAIlC,KAAJ,CAAUiC,QAAQhC,KAAlB,EAAyBgC,QAAQE,IAAR,KAAiB,SAAjB,GAA6B,SAA7B,GAA0CF,QAAQE,IAAR,KAAiB,KAAjB,GAAyB,WAAzB,GAAuC,WAA1G,CAAR;AACA,gBAAIF,QAAQE,IAAR,KAAiB,SAArB,EAAgC;AAC5BD,kBAAE/B,QAAF,GAAa8B,QAAQ,UAAR,IAAsBA,QAAQ,UAAR,CAAtB,GAA4C,EAAzD;AACAC,kBAAE7B,QAAF,GAAa4B,QAAQ5B,QAAR,GAAmB,IAAIe,SAAJ,CAAca,QAAQ5B,QAAtB,CAAnB,GAAsD6B,EAAE/B,QAAF,KAAe,EAAf,GAAoBK,IAAIC,UAAxB,GAAqCE,UAAUC,MAAlH;AACH;AACD,mBAAOsB,CAAP;AACH;;;qCACYpB,K,EAAO;AAChB,gBAAIA,MAAMZ,QAAN,KAAmB,SAAvB,EACI,OAAO,IAAIoB,OAAJ,CAAYR,MAAMb,KAAlB,EAAyBa,MAAMX,QAA/B,EAAyCW,MAAMT,QAA/C,CAAP,CADJ,KAGI,OAAO,IAAIL,KAAJ,CAAUc,MAAMb,KAAhB,EAAuBa,MAAMZ,QAA7B,CAAP;AACP;;;wDAC+BkC,E,EAAI;AAChC,gBAAIA,GAAGC,OAAH,CAAW,GAAX,MAAoB,CAAxB,EACI,OAAO,IAAIjB,SAAJ,CAAcgB,GAAGE,SAAH,CAAa,CAAb,EAAgBF,GAAGG,MAAH,GAAY,CAA5B,CAAd,CAAP,CADJ,KAEK,IAAIH,GAAGC,OAAH,CAAW,IAAX,MAAqB,CAAzB,EACD,OAAO,IAAIhB,SAAJ,CAAce,GAAGE,SAAH,CAAa,CAAb,CAAd,CAAP,CADC,KAEA;AACD,oBAAIrC,QAAQmC,GAAGE,SAAH,CAAa,CAAb,EAAgBF,GAAGI,WAAH,CAAe,GAAf,CAAhB,CAAZ;AACA,oBAAIJ,GAAGI,WAAH,CAAe,GAAf,MAAwBJ,GAAGI,WAAH,CAAe,GAAf,IAAsB,CAAlD,EACI,OAAO,IAAIlB,OAAJ,CAAYrB,KAAZ,EAAmBmC,GAAGE,SAAH,CAAaF,GAAGI,WAAH,CAAe,GAAf,CAAb,CAAnB,CAAP,CADJ,KAEK,IAAIJ,GAAGI,WAAH,CAAe,KAAf,MAA0BJ,GAAGI,WAAH,CAAe,GAAf,IAAsB,CAApD,EACD,OAAO,IAAIlB,OAAJ,CAAYrB,KAAZ,EAAmB,EAAnB,EAAuB,IAAImB,SAAJ,CAAcgB,GAAGE,SAAH,CAAaF,GAAGI,WAAH,CAAe,KAAf,CAAb,EAAoCJ,GAAGG,MAAH,GAAY,CAAhD,CAAd,CAAvB,CAAP,CADC,KAGD,OAAO,IAAIjB,OAAJ,CAAYrB,KAAZ,CAAP;AACP;AACJ;;;kCACSA,K,EAAO;AAAE,mBAAO,IAAImB,SAAJ,CAAcnB,KAAd,CAAP;AAA8B;;;kCACvCA,K,EAAO;AAAE,mBAAO,IAAIoB,SAAJ,CAAcpB,QAAQA,KAAR,GAAiB,MAAM,EAAE,KAAK+B,eAA5C,CAAP;AAAuE;;;gCAClF/B,K,EAAOwC,kB,EAAoB;AAC/B,gBAAI,OAAQA,kBAAR,KAAgC,QAApC,EACI,OAAO,IAAInB,OAAJ,CAAYrB,KAAZ,EAAmBwC,kBAAnB,CAAP,CADJ,KAGI,OAAO,IAAInB,OAAJ,CAAYrB,KAAZ,EAAmBG,SAAnB,EAA8BqC,kBAA9B,CAAP;AACP;;;iCACQxC,K,EAAO;AAAE,mBAAO,IAAIkB,QAAJ,CAAalB,KAAb,CAAP;AAA6B;;;uCAChC;AAAE,mBAAOe,aAAaC,QAApB;AAA+B;;;+BACzCO,O,EAASC,S,EAAWC,M,EAAQ;AAC/B,mBAAO,IAAIE,MAAJ,CAAWJ,OAAX,EAAoBC,SAApB,EAA+BC,MAA/B,CAAP;AACH;;;6BACIF,O,EAASC,S,EAAWC,M,EAAQC,K,EAAO;AACpC,mBAAO,IAAIJ,IAAJ,CAASC,OAAT,EAAkBC,SAAlB,EAA6BC,MAA7B,EAAqCC,QAAQA,KAAR,GAAgBX,aAAaC,QAAlE,CAAP;AACH;;;wCArEsBgB,O,EAAS;AAC5B,mBAAOF,YAAYd,QAAZ,CAAqByB,eAArB,CAAqCT,OAArC,CAAP;AACH;;;qCACmBnB,K,EAAO;AACvB,mBAAOiB,YAAYd,QAAZ,CAAqB0B,YAArB,CAAkC7B,KAAlC,CAAP;AACH;;;wDACsCsB,E,EAAI;AACvC,mBAAOL,YAAYd,QAAZ,CAAqB2B,+BAArB,CAAqDR,EAArD,CAAP;AACH;;;kCACgBnC,K,EAAO;AAAE,mBAAO8B,YAAYd,QAAZ,CAAqB4B,SAArB,CAA+B5C,KAA/B,CAAP;AAA+C;;;kCACxDA,K,EAAO;AAAE,mBAAO8B,YAAYd,QAAZ,CAAqB6B,SAArB,CAA+B7C,KAA/B,CAAP;AAA+C;;;gCAC1DA,K,EAAOwC,kB,EAAoB;AACtC,mBAAOV,YAAYd,QAAZ,CAAqB8B,OAArB,CAA6B9C,KAA7B,EAAoCwC,kBAApC,CAAP;AACH;;;iCACexC,K,EAAO;AAAE,mBAAO8B,YAAYd,QAAZ,CAAqB+B,QAArB,CAA8B/C,KAA9B,CAAP;AAA8C;;;uCACjD;AAAE,mBAAO8B,YAAYd,QAAZ,CAAqBgC,YAArB,EAAP;AAA6C;;;+BACvDzB,O,EAASC,S,EAAWC,M,EAAQ;AACtC,mBAAOK,YAAYd,QAAZ,CAAqBiC,MAArB,CAA4B1B,OAA5B,EAAqCC,SAArC,EAAgDC,MAAhD,CAAP;AACH;;;6BACWF,O,EAASC,S,EAAWC,M,EAAQC,K,EAAO;AAC3C,mBAAOI,YAAYd,QAAZ,CAAqBkC,IAArB,CAA0B3B,OAA1B,EAAmCC,SAAnC,EAA8CC,MAA9C,EAAsDC,KAAtD,CAAP;AACH;;;;;AAkDLI,YAAYd,QAAZ,GAAuB,IAAIc,WAAJ,EAAvB;AACA;;IACaqB,K,WAAAA,K;;;;AAEbA,MAAMC,EAAN,GAAW,2CAAX;AACAD,MAAME,OAAN,GAAgB,IAAIlC,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,SAAzB,CAAhB;AACAD,MAAMG,UAAN,GAAmB,IAAInC,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,YAAzB,CAAnB;AACAD,MAAMI,SAAN,GAAkB,IAAIpC,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,OAAzB,CAAlB;AACAD,MAAMzB,KAAN,GAAc,IAAIP,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,OAAzB,CAAd;AACAD,MAAMK,kBAAN,GAA2B,IAAIrC,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,oBAAzB,CAA3B;AACAD,MAAMM,KAAN,GAAc,IAAItC,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,OAAzB,CAAd;AACAD,MAAMO,QAAN,GAAiB,IAAIvC,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,UAAzB,CAAjB;AACAD,MAAMQ,UAAN,GAAmB,IAAIxC,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,YAAzB,CAAnB;AACAD,MAAMS,cAAN,GAAuB,IAAIzC,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,gBAAzB,CAAvB;AACAD,MAAMU,aAAN,GAAsB,IAAI1C,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,eAAzB,CAAtB;AACAD,MAAMW,sBAAN,GAA+B,IAAI3C,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,wBAAzB,CAA/B;AACAD,MAAMY,MAAN,GAAe,IAAI5C,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,QAAzB,CAAf;AACAD,MAAMa,eAAN,GAAwB,IAAI7C,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,iBAAzB,CAAxB;AACAD,MAAMc,mBAAN,GAA4B,IAAI9C,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,qBAAzB,CAA5B;AACAD,MAAMe,aAAN,GAAsB,IAAI/C,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,eAAzB,CAAtB;AACAD,MAAMgB,UAAN,GAAmB,IAAIhD,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,YAAzB,CAAnB;AACAD,MAAMiB,SAAN,GAAkB,IAAIjD,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,WAAzB,CAAlB;AACAD,MAAMkB,eAAN,GAAwB,IAAIlD,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,iBAAzB,CAAxB;AACAD,MAAMmB,2BAAN,GAAoC,IAAInD,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,6BAAzB,CAApC;AACAD,MAAMoB,4BAAN,GAAqC,IAAIpD,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,8BAAzB,CAArC;AACAD,MAAMqB,8BAAN,GAAuC,IAAIrD,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,gCAAzB,CAAvC;AACAD,MAAMsB,4BAAN,GAAqC,IAAItD,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,8BAAzB,CAArC;AACAD,MAAMuB,MAAN,GAAe,IAAIvD,SAAJ,CAAcgC,MAAMC,EAAN,GAAW,QAAzB,CAAf;;IACauB,E,WAAAA,E;;;;AAEbA,GAAGvB,EAAH,GAAQ,kDAAR;AACAuB,GAAGC,KAAH,GAAW,IAAIzD,SAAJ,CAAcwD,GAAGvB,EAAH,GAAQ,MAAtB,CAAX;;IACayB,I,WAAAA,I;;;;AAEbA,KAAKzB,EAAL,GAAU,sCAAV;AACAyB,KAAKC,SAAL,GAAiB,IAAI3D,SAAJ,CAAc0D,KAAKzB,EAAL,GAAU,WAAxB,CAAjB;AACAyB,KAAKE,QAAL,GAAgB,IAAI5D,SAAJ,CAAc0D,KAAKzB,EAAL,GAAU,UAAxB,CAAhB;AACAyB,KAAKG,OAAL,GAAe,IAAI7D,SAAJ,CAAc0D,KAAKzB,EAAL,GAAU,SAAxB,CAAf;;IACa6B,I,WAAAA,I;;;;AAEbA,KAAK7B,EAAL,GAAU,uCAAV;AACA6B,KAAKC,KAAL,GAAa,IAAI/D,SAAJ,CAAc8D,KAAK7B,EAAL,GAAU,OAAxB,CAAb;AACA6B,KAAKE,KAAL,GAAa,IAAIhE,SAAJ,CAAc8D,KAAK7B,EAAL,GAAU,OAAxB,CAAb;AACA6B,KAAKG,QAAL,GAAgB,IAAIjE,SAAJ,CAAc8D,KAAK7B,EAAL,GAAU,UAAxB,CAAhB;;IACaiC,I,WAAAA,I;;;;AAEbA,KAAKjC,EAAL,GAAU,0BAAV;AACAiC,KAAKC,cAAL,GAAsB,IAAInE,SAAJ,CAAckE,KAAKjC,EAAL,GAAU,gBAAxB,CAAtB;;IACamC,O,WAAAA,O;;;;AAEbA,QAAQnC,EAAR,GAAa,2BAAb;AACAmC,QAAQC,YAAR,GAAuB,IAAIrE,SAAJ,CAAcoE,QAAQnC,EAAR,GAAa,cAA3B,CAAvB;AACAmC,QAAQE,WAAR,GAAsB,IAAItE,SAAJ,CAAcoE,QAAQnC,EAAR,GAAa,aAA3B,CAAtB;;IACasC,I,WAAAA,I;;;;AAEbA,KAAKtC,EAAL,GAAU,4BAAV;AACAsC,KAAKC,QAAL,GAAgB,IAAIxE,SAAJ,CAAcuE,KAAKtC,EAAL,GAAU,UAAxB,CAAhB;;IACawC,G,WAAAA,G;;;;AAEbA,IAAIxC,EAAJ,GAAS,gCAAT;AACAwC,IAAIC,MAAJ,GAAa,IAAI1E,SAAJ,CAAcyE,IAAIxC,EAAJ,GAAS,QAAvB,CAAb;AACAwC,IAAIE,KAAJ,GAAY,IAAI3E,SAAJ,CAAcyE,IAAIxC,EAAJ,GAAS,OAAvB,CAAZ;AACAwC,IAAIT,KAAJ,GAAY,IAAIhE,SAAJ,CAAcyE,IAAIxC,EAAJ,GAAS,OAAvB,CAAZ;AACAwC,IAAIG,cAAJ,GAAqB,IAAI5E,SAAJ,CAAcyE,IAAIxC,EAAJ,GAAS,gBAAvB,CAArB;AACAwC,IAAII,gBAAJ,GAAuB,IAAI7E,SAAJ,CAAcyE,IAAIxC,EAAJ,GAAS,kBAAvB,CAAvB;;IACa7C,G,WAAAA,G;;;;AAEbA,IAAI6C,EAAJ,GAAS,6CAAT;AACA7C,IAAI2B,IAAJ,GAAW,IAAIf,SAAJ,CAAcZ,IAAI6C,EAAJ,GAAS,MAAvB,CAAX;AACA7C,IAAIC,UAAJ,GAAiB,IAAIW,SAAJ,CAAcZ,IAAI6C,EAAJ,GAAS,YAAvB,CAAjB;AACA7C,IAAIoB,MAAJ,GAAa,IAAIR,SAAJ,CAAcZ,IAAI6C,EAAJ,GAAS,QAAvB,CAAb;AACA7C,IAAIgB,OAAJ,GAAc,IAAIJ,SAAJ,CAAcZ,IAAI6C,EAAJ,GAAS,SAAvB,CAAd;AACA7C,IAAIiB,SAAJ,GAAgB,IAAIL,SAAJ,CAAcZ,IAAI6C,EAAJ,GAAS,WAAvB,CAAhB;AACA7C,IAAIkB,MAAJ,GAAa,IAAIN,SAAJ,CAAcZ,IAAI6C,EAAJ,GAAS,QAAvB,CAAb;AACA7C,IAAIP,KAAJ,GAAY,IAAImB,SAAJ,CAAcZ,IAAI6C,EAAJ,GAAS,OAAvB,CAAZ;;IACa1C,S,WAAAA,S;;;;AAEbA,UAAU0C,EAAV,GAAe,mCAAf;AACA1C,UAAUC,MAAV,GAAmB,IAAIQ,SAAJ,CAAcT,UAAU0C,EAAV,GAAe,QAA7B,CAAnB;AACA1C,UAAUuF,QAAV,GAAqB,IAAI9E,SAAJ,CAAcT,UAAU0C,EAAV,GAAe,UAA7B,CAArB;;IACa8C,K,WAAAA,K;;;;AAEbA,MAAM9C,EAAN,GAAW,qCAAX;AACA8C,MAAMC,MAAN,GAAe,IAAIhF,SAAJ,CAAc+E,MAAM9C,EAAN,GAAW,YAAzB,CAAf;AACA8C,MAAME,KAAN,GAAc,IAAIjF,SAAJ,CAAc+E,MAAM9C,EAAN,GAAW,WAAzB,CAAd;AACA8C,MAAMG,KAAN,GAAc,IAAIlF,SAAJ,CAAc+E,MAAM9C,EAAN,GAAW,WAAzB,CAAd;;IACakD,K,WAAAA,K;;;;AAEbA,MAAMlD,EAAN,GAAW,kCAAX;AACAkD,MAAMC,iBAAN,GAA0B,IAAIpF,SAAJ,CAAcmF,MAAMlD,EAAN,GAAW,mBAAzB,CAA1B;AACAkD,MAAME,oBAAN,GAA6B,IAAIrF,SAAJ,CAAcmF,MAAMlD,EAAN,GAAW,sBAAzB,CAA7B;AACAkD,MAAMG,qBAAN,GAA8B,IAAItF,SAAJ,CAAcmF,MAAMlD,EAAN,GAAW,uBAAzB,CAA9B;AACAkD,MAAMI,aAAN,GAAsB,IAAIvF,SAAJ,CAAcmF,MAAMlD,EAAN,GAAW,eAAzB,CAAtB;AACAkD,MAAMK,YAAN,GAAqB,IAAIxF,SAAJ,CAAcmF,MAAMlD,EAAN,GAAW,cAAzB,CAArB;;IACawD,I,WAAAA,I;;;;AAEbA,KAAKxD,EAAL,GAAU,iCAAV;AACAwD,KAAKC,aAAL,GAAqB,IAAI1F,SAAJ,CAAcyF,KAAKxD,EAAL,GAAU,eAAxB,CAArB;AACAwD,KAAKE,YAAL,GAAoB,IAAI3F,SAAJ,CAAcyF,KAAKxD,EAAL,GAAU,cAAxB,CAApB;AACAwD,KAAKG,SAAL,GAAiB,IAAI5F,SAAJ,CAAcyF,KAAKxD,EAAL,GAAU,WAAxB,CAAjB;AACAwD,KAAKI,UAAL,GAAkB,IAAI7F,SAAJ,CAAcyF,KAAKxD,EAAL,GAAU,YAAxB,CAAlB;;IACa6D,Q,WAAAA,Q;;;;AAEbA,SAAS7D,EAAT,GAAc,8BAAd;AACA6D,SAASC,OAAT,GAAmB,IAAI/F,SAAJ,CAAc8F,SAAS7D,EAAT,GAAc,SAA5B,CAAnB;;IACa+D,O,WAAAA,O;AACT,uBAA+B;AAAA,YAAnBC,IAAmB,uEAAZ,2BAAY;AAAA;;AAC3B,aAAKA,IAAL,GAAYA,IAAZ;AACA,aAAK/G,WAAL,GAAmB,SAAnB;AACH;;;;4BACGgH,G,EAAK;AACL,mBAAO,KAAKD,IAAL,CAAUE,GAAV,CAAcD,IAAIzG,WAAJ,EAAd,CAAP;AACH;;;+BACMyG,G,EAAK;AACR,mBAAO,KAAKD,IAAL,CAAUG,MAAV,CAAiBF,IAAIzG,WAAJ,EAAjB,CAAP;AACH;;;6BACI4G,C,EAAG;AAAA;;AACJ,iBAAKJ,IAAL,CAAUK,IAAV,CAAe,UAACzH,KAAD,EAAQqH,GAAR,EAAaK,GAAb;AAAA,uBAAqBF,EAAExH,KAAF,EAAS8B,YAAYd,QAAZ,CAAqB2B,+BAArB,CAAqD0E,GAArD,CAAT,SAArB;AAAA,aAAf;AACH;;;4BACGG,C,EAAG;AAAA;;AACH,gBAAIG,MAAM,IAAIR,OAAJ,EAAV;AACA,iBAAKM,IAAL,CAAU,UAACzH,KAAD,EAAQqH,GAAR,EAAgB;AACtB,oBAAIO,SAASJ,EAAExH,KAAF,EAASqH,GAAT,SAAb;AACAM,oBAAIE,GAAJ,CAAQD,OAAOP,GAAf,EAAoBO,OAAO5H,KAA3B;AACH,aAHD;AAIA,mBAAO2H,GAAP;AACH;;;gCACO;AACJ,gBAAIA,MAAM,IAAIR,OAAJ,EAAV;AACA,iBAAKM,IAAL,CAAU,UAACzH,KAAD,EAAQqH,GAAR;AAAA,uBAAgBM,IAAIE,GAAJ,CAAQR,GAAR,EAAarH,KAAb,CAAhB;AAAA,aAAV;AACA,mBAAO2H,GAAP;AACH;;;kCACSH,C,EAAG;AAAA;;AACT,gBAAIG,MAAM,IAAIR,OAAJ,EAAV;AACA,iBAAKM,IAAL,CAAU,UAACzH,KAAD,EAAQqH,GAAR,EAAgB;AACtBM,oBAAIE,GAAJ,CAAQR,GAAR,EAAaG,EAAExH,KAAF,EAASqH,GAAT,UAAb;AACH,aAFD;AAGA,mBAAOM,GAAP;AACH;;;6BACIH,C,EAAG;AAAA;;AACJ,mBAAO,KAAKJ,IAAL,CAAUU,IAAV,CAAe,UAAC9H,KAAD,EAAQqH,GAAR,EAAaK,GAAb;AAAA,uBAAqBF,EAAExH,KAAF,EAAS8B,YAAYd,QAAZ,CAAqB2B,+BAArB,CAAqD0E,GAArD,CAAT,UAArB;AAAA,aAAf,CAAP;AACH;;;6BACIG,C,EAAG;AAAA;;AACJ,gBAAIG,MAAM,KAAKP,IAAL,CAAUW,IAAV,CAAe,UAAC/H,KAAD,EAAQqH,GAAR,EAAaK,GAAb;AAAA,uBAAqBF,EAAExH,KAAF,EAAS8B,YAAYd,QAAZ,CAAqB2B,+BAArB,CAAqD0E,GAArD,CAAT,UAArB;AAAA,aAAf,CAAV;AACA,gBAAI,CAACM,GAAL,EACI,OAAO,IAAP;AACJ,mBAAO,EAAEN,KAAKvF,YAAYd,QAAZ,CAAqB2B,+BAArB,CAAqDgF,IAAIN,GAAzD,CAAP,EAAsErH,OAAO2H,IAAI3H,KAAjF,EAAP;AACH;;;4BACGqH,G,EAAK;AACL,mBAAO,KAAKD,IAAL,CAAUY,GAAV,CAAcX,IAAIzG,WAAJ,EAAd,CAAP;AACH;;;4BACGyG,G,EAAKrH,K,EAAO;AACZ,iBAAKoH,IAAL,CAAUS,GAAV,CAAcR,IAAIzG,WAAJ,EAAd,EAAiCZ,KAAjC;AACA,mBAAO,IAAP;AACH;;;gCAIO;AACJ,mBAAO,KAAKoH,IAAL,CAAUa,KAAV,EAAP;AACH;;;iCACQ;AACL,mBAAO,KAAKb,IAAL,CAAUc,MAAV,EAAP;AACH;;;+BACM;AACH,mBAAO,KAAKd,IAAL,CAAUe,IAAV,GAAiBT,GAAjB,CAAqB;AAAA,uBAAK5F,YAAYd,QAAZ,CAAqB2B,+BAArB,CAAqDyF,CAArD,CAAL;AAAA,aAArB,CAAP;AACH;;;kCACS;AACN,mBAAO,KAAKhB,IAAL,CAAUiB,OAAV,GAAoBX,GAApB,CAAwB,aAAK;AAAE,uBAAO,EAAEL,KAAKvF,YAAYd,QAAZ,CAAqB2B,+BAArB,CAAqD2F,EAAEjB,GAAvD,CAAP,EAAoErH,OAAOsI,EAAEtI,KAA7E,EAAP;AAA8F,aAA7H,CAAP;AACH;;;gCACO;AACJ,iBAAKoH,IAAL,CAAUmB,KAAV;AACA,mBAAO,IAAP;AACH;;;4BAlBU;AACP,mBAAO,KAAKnB,IAAL,CAAUoB,IAAV,EAAP;AACH;;;;;IAkBQC,Q,WAAAA,Q;;;AACT,wBAA8D;AAAA,YAAlDC,MAAkD,uEAAzC,YAAM;AAAE,mBAAO,EAAP;AAAY,SAAqB;AAAA,YAAnBtB,IAAmB,uEAAZ,2BAAY;AAAA;;AAAA,gJACpDA,IADoD;;AAE1D,gBAAKsB,MAAL,GAAcA,MAAd;AACA,gBAAKtB,IAAL,GAAYA,IAAZ;AAH0D;AAI7D;;;;4BACGC,G,EAAKqB,M,EAAQ;AACb,gBAAI,CAAC,KAAKV,GAAL,CAASX,GAAT,CAAL,EACI,KAAKQ,GAAL,CAASR,GAAT,EAAcqB,SAASA,OAAOrB,GAAP,CAAT,GAAuB,KAAKqB,MAAL,CAAYrB,GAAZ,CAArC;AACJ,mBAAO,KAAKC,GAAL,CAASD,GAAT,CAAP;AACH;;;gCACO;AACJ,gBAAIM,MAAM,IAAIc,QAAJ,CAAa,KAAKC,MAAlB,CAAV;AACA,iBAAKjB,IAAL,CAAU,UAACzH,KAAD,EAAQqH,GAAR;AAAA,uBAAgBM,IAAIE,GAAJ,CAAQR,GAAR,EAAarH,KAAb,CAAhB;AAAA,aAAV;AACA,mBAAO2H,GAAP;AACH;;;EAfyBR,O;;IAiBjBwB,Q,WAAAA,Q;;;AACT,wBAAc;AAAA;AAAA,yIACJ,2BADI;AAEb;;;;4BACGnB,C,EAAG;AAAA;;AACH,gBAAIG,MAAM,IAAIgB,QAAJ,EAAV;AACA,iBAAKlB,IAAL,CAAU,UAACzH,KAAD,EAAQqH,GAAR,EAAgB;AACtB,oBAAIO,SAASJ,EAAExH,KAAF,EAASqH,GAAT,UAAb;AACAM,oBAAIE,GAAJ,CAAQD,OAAOP,GAAf,EAAoBO,OAAO5H,KAA3B;AACH,aAHD;AAIA,mBAAO2H,GAAP;AACH;;;gCACO;AACJ,gBAAIA,MAAM,IAAIgB,QAAJ,EAAV;AACA,iBAAKlB,IAAL,CAAU,UAACzH,KAAD,EAAQqH,GAAR;AAAA,uBAAgBM,IAAIE,GAAJ,CAAQR,GAAR,EAAarH,KAAb,CAAhB;AAAA,aAAV;AACA,mBAAO2H,GAAP;AACH;;;kCACSH,C,EAAG;AAAA;;AACT,gBAAIG,MAAM,IAAIgB,QAAJ,EAAV;AACA,iBAAKlB,IAAL,CAAU,UAACzH,KAAD,EAAQqH,GAAR,EAAgB;AACtBM,oBAAIE,GAAJ,CAAQR,GAAR,EAAaG,EAAExH,KAAF,EAASqH,GAAT,UAAb;AACH,aAFD;AAGA,mBAAOM,GAAP;AACH;;;gCACOiB,K,EAAO;AACX,iBAAKxB,IAAL,CAAUyB,OAAV,CAAkBD,KAAlB;AACH;;;EA1ByBzB,O;;IA4BjB2B,S,WAAAA,S;;;AACT,uBAAYJ,MAAZ,EAAoB;AAAA;AAAA,2IACVA,MADU,EACF,4BADE;AAEnB;;;;4BACGlB,C,EAAG;AAAA;;AACH,gBAAIG,MAAM,IAAImB,SAAJ,EAAV;AACA,iBAAKrB,IAAL,CAAU,UAACzH,KAAD,EAAQqH,GAAR,EAAgB;AACtB,oBAAIO,SAASJ,EAAExH,KAAF,EAASqH,GAAT,UAAb;AACAM,oBAAIE,GAAJ,CAAQD,OAAOP,GAAf,EAAoBO,OAAO5H,KAA3B;AACH,aAHD;AAIA,mBAAO2H,GAAP;AACH;;;gCACO;AACJ,gBAAIA,MAAM,IAAImB,SAAJ,EAAV;AACA,iBAAKrB,IAAL,CAAU,UAACzH,KAAD,EAAQqH,GAAR;AAAA,uBAAgBM,IAAIE,GAAJ,CAAQR,GAAR,EAAarH,KAAb,CAAhB;AAAA,aAAV;AACA,mBAAO2H,GAAP;AACH;;;kCACSH,C,EAAG;AAAA;;AACT,gBAAIG,MAAM,IAAImB,SAAJ,EAAV;AACA,iBAAKrB,IAAL,CAAU,UAACzH,KAAD,EAAQqH,GAAR,EAAgB;AACtBM,oBAAIE,GAAJ,CAAQR,GAAR,EAAaG,EAAExH,KAAF,EAASqH,GAAT,UAAb;AACH,aAFD;AAGA,mBAAOM,GAAP;AACH;;;gCACOiB,K,EAAO;AACX,iBAAKxB,IAAL,CAAUyB,OAAV,CAAkBD,KAAlB;AACH;;;EA1B0BH,Q;;IA4BlBM,O,WAAAA,O;AACT,uBAA8B;AAAA,YAAlBrB,GAAkB,uEAAZ,2BAAY;AAAA;;AAC1B,aAAKsB,CAAL,GAAS,IAAI7B,OAAJ,CAAYO,GAAZ,CAAT;AACH;;;;4BACG1H,K,EAAO;AACP,iBAAKgJ,CAAL,CAAOnB,GAAP,CAAW7H,KAAX,EAAkBA,KAAlB;AACA,mBAAO,IAAP;AACH;;;6BACIiJ,G,EAAK;AAAA;;AACNA,gBAAIC,OAAJ,CAAY;AAAA,uBAAK,QAAKC,GAAL,CAASlH,CAAT,CAAL;AAAA,aAAZ;AACA,mBAAO,IAAP;AACH;;;6BACImH,I,EAAM;AAAA;;AACPA,iBAAK3B,IAAL,CAAU;AAAA,uBAAK,QAAK0B,GAAL,CAASlH,CAAT,CAAL;AAAA,aAAV;AACA,mBAAO,IAAP;AACH;;;4BACGjC,K,EAAO;AACP,mBAAO,KAAKgJ,CAAL,CAAOhB,GAAP,CAAWhI,KAAX,CAAP;AACH;;;4BACGA,K,EAAO;AACP,mBAAO,KAAKgJ,CAAL,CAAO1B,GAAP,CAAWtH,KAAX,CAAP;AACH;;;gCACO;AACJ,iBAAKgJ,CAAL,CAAOT,KAAP;AACA,mBAAO,IAAP;AACH;;;+BACMvI,K,EAAO;AACV,mBAAO,KAAKgJ,CAAL,CAAOzB,MAAP,CAAcvH,KAAd,CAAP;AACH;;;iCACQ;AACL,mBAAO,KAAKgJ,CAAL,CAAOd,MAAP,EAAP;AACH;;;gCAIO;AACJ,mBAAO,KAAKc,CAAL,CAAOf,KAAP,EAAP;AACH;;;6BACIT,C,EAAG;AAAA;;AACJ,iBAAKwB,CAAL,CAAOvB,IAAP,CAAY,UAACzH,KAAD,EAAQqH,GAAR,EAAaK,GAAb;AAAA,uBAAqBF,EAAExH,KAAF,EAASA,KAAT,UAArB;AAAA,aAAZ;AACH;;;4BACGwH,C,EAAG;AAAA;;AACH,gBAAIG,MAAM,IAAIoB,OAAJ,EAAV;AACA,iBAAKtB,IAAL,CAAU;AAAA,uBAASE,IAAIwB,GAAJ,CAAQ3B,EAAExH,KAAF,EAASA,KAAT,UAAR,CAAT;AAAA,aAAV;AACA,mBAAO2H,GAAP;AACH;;;gCACO;AACJ,gBAAIA,MAAM,IAAIoB,OAAJ,EAAV;AACA,iBAAKtB,IAAL,CAAU;AAAA,uBAASE,IAAIwB,GAAJ,CAAQnJ,KAAR,CAAT;AAAA,aAAV;AACA,mBAAO2H,GAAP;AACH;;;6BACIH,C,EAAG;AAAA;;AACJ,mBAAO,KAAKwB,CAAL,CAAOlB,IAAP,CAAY,UAAC9H,KAAD,EAAQqH,GAAR,EAAaK,GAAb;AAAA,uBAAqBF,EAAExH,KAAF,EAASA,KAAT,UAArB;AAAA,aAAZ,CAAP;AACH;;;6BACIwH,C,EAAG;AAAA;;AACJ,gBAAIG,MAAM,KAAKqB,CAAL,CAAOjB,IAAP,CAAY,UAAC/H,KAAD,EAAQqH,GAAR,EAAaK,GAAb;AAAA,uBAAqBF,EAAExH,KAAF,EAASA,KAAT,UAArB;AAAA,aAAZ,CAAV;AACA,gBAAI,CAAC2H,GAAL,EACI,OAAO,IAAP;AACJ,mBAAOA,IAAI3H,KAAX;AACH;;;4BA3BU;AACP,mBAAO,KAAKgJ,CAAL,CAAOR,IAAd;AACH;;;;;IA2BQa,Q,WAAAA,Q;;;AACT,wBAAc;AAAA;;AAAA,gJACJ,2BADI;;AAEV,gBAAKhJ,WAAL,GAAmB,UAAnB;AAFU;AAGb;;;;gCACOuI,K,EAAO;AACX,iBAAKI,CAAL,CAAO5B,IAAP,CAAYyB,OAAZ,CAAoBD,KAApB;AACH;;;4BACGpB,C,EAAG;AAAA;;AACH,gBAAIG,MAAM,IAAI0B,QAAJ,EAAV;AACA,iBAAK5B,IAAL,CAAU;AAAA,uBAASE,IAAIwB,GAAJ,CAAQ3B,EAAExH,KAAF,EAASA,KAAT,UAAR,CAAT;AAAA,aAAV;AACA,mBAAO2H,GAAP;AACH;;;gCACO;AACJ,gBAAIA,MAAM,IAAI0B,QAAJ,EAAV;AACA,iBAAK5B,IAAL,CAAU;AAAA,uBAASE,IAAIwB,GAAJ,CAAQnJ,KAAR,CAAT;AAAA,aAAV;AACA,mBAAO2H,GAAP;AACH;;;gCACO;AACJ,mBAAO,KAAKqB,CAAL,CAAO5B,IAAP,CAAYkC,UAAZ,EAAP;AACH;;;+BACM;AACH,mBAAO,KAAKN,CAAL,CAAO5B,IAAP,CAAYmC,SAAZ,EAAP;AACH;;;EAvByBR,O;;;;;;AC9d9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,uCAAuC;AACvC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,IAAI;AAChE;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,uBAAuB,eAAe;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,uBAAuB,eAAe;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5fA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;ACpBA,6BAA6B;AAC7B,uCAAuC;;;;;;;;;ACDvC,kBAAkB,yD;;;;;;;ACAlB;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;;AAEA;AACA,E;;;;;;;AChBA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,E;;;;;;AChCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,eAAe;AACf,eAAe;AACf,eAAe;AACf,gBAAgB;AAChB;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAwXgBS,G,GAAAA,G;QAKAC,I,GAAAA,I;QAOAC,K,GAAAA,K;QAMAC,M,GAAAA,M;;;;IAzYHC,I,WAAAA,I;AACT,oBAAc;AAAA;;AACV,aAAKC,CAAL,GAAS,EAAT;AACA,aAAKxJ,WAAL,GAAmB,MAAnB;AACH;;;;4BACGgH,G,EAAKqB,M,EAAQ;AACb,gBAAI,CAAC,KAAKV,GAAL,CAASX,GAAT,CAAL,EACI,KAAKQ,GAAL,CAASR,GAAT,EAAcqB,OAAOrB,GAAP,CAAd;AACJ,mBAAO,KAAKC,GAAL,CAASD,GAAT,CAAP;AACH;;;4BACGA,G,EAAK;AACL,mBAAO,KAAKwC,CAAL,CAAOxC,GAAP,MAAgBlH,SAAvB;AACH;;;4BACGkH,G,EAAKrH,K,EAAO;AACZ,iBAAK6J,CAAL,CAAOxC,GAAP,IAAcrH,KAAd;AACA,mBAAO,IAAP;AACH;;;4BACGqH,G,EAAK;AACL,mBAAO,KAAKwC,CAAL,CAAOxC,GAAP,CAAP;AACH;;;4BACGA,G,EAAKyC,M,EAAQ;AACb,mBAAO,KAAK9B,GAAL,CAASX,GAAT,IAAgB,KAAKC,GAAL,CAASD,GAAT,CAAhB,GAAgCyC,OAAOzC,GAAP,CAAvC;AACH;;;+BACMA,G,EAAK;AACR,gBAAI0C,YAAY,KAAK/B,GAAL,CAASX,GAAT,CAAhB;AACA,mBAAO,KAAKwC,CAAL,CAAOxC,GAAP,CAAP;AACA,mBAAO0C,SAAP;AACH;;;6BACIC,G,EAAK;AACN,iBAAK,IAAI3C,GAAT,IAAgB2C,GAAhB;AACI,qBAAKnC,GAAL,CAASR,GAAT,EAAc2C,IAAI3C,GAAJ,CAAd;AADJ,aAEA,OAAO,IAAP;AACH;;;6BACI2C,G,EAAK;AACN,iBAAK,IAAI3C,GAAT,IAAgB2C,GAAhB;AACI,qBAAKnC,GAAL,CAASR,GAAT,EAAc2C,IAAI3C,GAAJ,CAAd;AADJ,aAEA,OAAO,IAAP;AACH;;;gCACO;AACJ,iBAAKwC,CAAL,GAAS,EAAT;AACA,mBAAO,IAAP;AACH;;;+BACM;AACH,gBAAIlC,MAAM,EAAV;AACA,iBAAK,IAAIN,GAAT,IAAgB,KAAKwC,CAArB;AACIlC,oBAAIsC,IAAJ,CAAS5C,GAAT;AADJ,aAEA,OAAOM,GAAP;AACH;;;iCACQ;AACL,gBAAIA,MAAM,EAAV;AACA,iBAAK,IAAIN,GAAT,IAAgB,KAAKwC,CAArB;AACIlC,oBAAIsC,IAAJ,CAAS,KAAKJ,CAAL,CAAOxC,GAAP,CAAT;AADJ,aAEA,OAAOM,GAAP;AACH;;;kCACS;AACN,gBAAIA,MAAM,EAAV;AACA,iBAAK,IAAIN,GAAT,IAAgB,KAAKwC,CAArB;AACIlC,oBAAIsC,IAAJ,CAAS,EAAE5C,QAAF,EAAOrH,OAAO,KAAK6J,CAAL,CAAOxC,GAAP,CAAd,EAAT;AADJ,aAEA,OAAOM,GAAP;AACH;;;4BACGH,C,EAAG;AAAA;;AACH,gBAAIG,MAAM,IAAIiC,IAAJ,EAAV;AACA,iBAAKnC,IAAL,CAAU,UAACzH,KAAD,EAAQqH,GAAR,EAAgB;AACtB,oBAAIO,SAASJ,EAAExH,KAAF,EAASqH,GAAT,QAAb;AACAM,oBAAIE,GAAJ,CAAQD,OAAOP,GAAf,EAAoBO,OAAO5H,KAA3B;AACH,aAHD;AAIA,mBAAO2H,GAAP;AACH;;;kCACSH,C,EAAG;AAAA;;AACT,gBAAIG,MAAM,IAAIiC,IAAJ,EAAV;AACA,iBAAKnC,IAAL,CAAU,UAACzH,KAAD,EAAQqH,GAAR,EAAgB;AACtBM,oBAAIE,GAAJ,CAAQR,GAAR,EAAaG,EAAExH,KAAF,EAASqH,GAAT,SAAb;AACH,aAFD;AAGA,mBAAOM,GAAP;AACH;;;6BACIuC,I,EAAM;AACP,iBAAK,IAAI7C,GAAT,IAAgB,KAAKwC,CAArB;AACIK,qBAAK,KAAKL,CAAL,CAAOxC,GAAP,CAAL,EAAkBA,GAAlB,EAAuB,IAAvB;AADJ,aAEA,OAAOlH,SAAP;AACH;;;6BACI+J,I,EAAM;AACP,iBAAK,IAAI7C,GAAT,IAAgB,KAAKwC,CAArB;AACI,oBAAIK,KAAK,KAAKL,CAAL,CAAOxC,GAAP,CAAL,EAAkBA,GAAlB,EAAuB,IAAvB,CAAJ,EACI,OAAO,IAAP;AAFR,aAGA,OAAO,KAAP;AACH;;;6BACI6C,I,EAAM;AACP,iBAAK,IAAI7C,GAAT,IAAgB,KAAKwC,CAArB;AACI,oBAAIK,KAAK,KAAKL,CAAL,CAAOxC,GAAP,CAAL,EAAkBA,GAAlB,EAAuB,IAAvB,CAAJ,EACI,OAAO,EAAErH,OAAO,KAAK6J,CAAL,CAAOxC,GAAP,CAAT,EAAsBA,KAAKA,GAA3B,EAAP;AAFR,aAGA,OAAO,IAAP;AACH;;;gCACO;AACJ,gBAAIM,MAAM,IAAIiC,IAAJ,EAAV;AACA,iBAAKnC,IAAL,CAAU,UAACzH,KAAD,EAAQqH,GAAR,EAAgB;AACtBM,oBAAIE,GAAJ,CAAQR,GAAR,EAAarH,KAAb;AACH,aAFD;AAGA,mBAAO2H,GAAP;AACH;;;+BACM;AACH,gBAAIa,OAAO,CAAX;AACA;AACA,iBAAK,IAAInB,GAAT,IAAgB,KAAKwC,CAArB;AACIrB;AADJ,aAHG,CAKH;AACA,mBAAOA,IAAP;AACH;;;gCACO;AACJ,iBAAK,IAAInB,GAAT,IAAgB,KAAKwC,CAArB;AACI,uBAAO,KAAP;AADJ,aAEA,OAAO,IAAP;AACH;;;;;IAEQM,I,WAAAA,I;;;AACT,oBAA2C;AAAA,YAA/BzB,MAA+B,uEAAtB,YAAM;AAAE,mBAAO,EAAP;AAAY,SAAE;AAAA;;AAAA;;AAEvC,eAAKA,MAAL,GAAcA,MAAd;AAFuC;AAG1C;;;;4BACGrB,G,EAAKqB,M,EAAQ;AACb,gBAAI,CAAC,KAAKV,GAAL,CAASX,GAAT,CAAL,EACI,KAAKQ,GAAL,CAASR,GAAT,EAAcqB,SAASA,OAAOrB,GAAP,CAAT,GAAuB,KAAKqB,MAAL,CAAYrB,GAAZ,CAArC;AACJ,mBAAO,KAAKC,GAAL,CAASD,GAAT,CAAP;AACH;;;EATqBuC,I;;IAWbQ,W,WAAAA,W;AACT,2BAAc;AAAA;;AACV,aAAKC,CAAL,GAAS,EAAT;AACH;;;;gCACO;AACJ,iBAAKA,CAAL,GAAS,EAAT;AACA,mBAAO,IAAP;AACH;;;4BACGhD,G,EAAK;AACL,mBAAO,KAAKgD,CAAL,CAAOjI,OAAP,CAAeiF,GAAf,MAAwB,CAAC,CAAhC;AACH;;;4BACGA,G,EAAK;AACL,gBAAI,KAAKW,GAAL,CAASX,GAAT,CAAJ,EACI,OAAO,IAAP;AACJ,iBAAKgD,CAAL,CAAOJ,IAAP,CAAY5C,GAAZ;AACA,mBAAO,IAAP;AACH;;;6BACI4B,G,EAAK;AAAA;;AACNA,gBAAIC,OAAJ,CAAY;AAAA,uBAAK,OAAKC,GAAL,CAASmB,CAAT,CAAL;AAAA,aAAZ;AACA,mBAAO,IAAP;AACH;;;6BACIlB,I,EAAM;AAAA;;AACPA,iBAAK3B,IAAL,CAAU;AAAA,uBAAK,OAAK0B,GAAL,CAASmB,CAAT,CAAL;AAAA,aAAV;AACA,mBAAO,IAAP;AACH;;;+BACMjD,G,EAAK;AACR,gBAAIuB,QAAQ,KAAKyB,CAAL,CAAOjI,OAAP,CAAeiF,GAAf,CAAZ;AACA,gBAAIuB,UAAU,CAAC,CAAf,EACI,OAAO,KAAP;AACJ,iBAAKyB,CAAL,CAAOE,MAAP,CAAc3B,KAAd,EAAqB,CAArB;AACA,mBAAO,IAAP;AACH;;;6BACIsB,I,EAAM;AAAA;AAAA;AAAA;;AAAA;AACP,gEAAkB,KAAKG,CAAvB;AAAA,wBAASrK,KAAT;;AACIkK,yBAAKlK,KAAL,EAAYA,KAAZ,EAAmB,IAAnB;AADJ;AADO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGP,mBAAOG,SAAP;AACH;;;+BACM;AACH,mBAAO,KAAKkK,CAAL,CAAO/H,MAAd;AACH;;;gCACO;AACJ,mBAAO,KAAKkG,IAAL,OAAgB,CAAvB;AACH;;;iCACQ;AACL,mBAAO,KAAK6B,CAAZ;AACH;;;4BACG7C,C,EAAG;AAAA;;AACH,gBAAIG,MAAM,IAAIyC,WAAJ,EAAV;AACA,iBAAK3C,IAAL,CAAU;AAAA,uBAASE,IAAIwB,GAAJ,CAAQ3B,EAAExH,KAAF,EAASA,KAAT,SAAR,CAAT;AAAA,aAAV;AACA,mBAAO2H,GAAP;AACH;;;6BACIH,C,EAAG;AAAA;AAAA;AAAA;;AAAA;AACJ,iEAAkB,KAAK6C,CAAvB;AAAA,wBAASrK,KAAT;;AACI,wBAAIwH,EAAExH,KAAF,EAASA,KAAT,EAAgB,IAAhB,CAAJ,EACI,OAAO,IAAP;AAFR;AADI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIJ,mBAAO,KAAP;AACH;;;6BACIwH,C,EAAG;AAAA;AAAA;AAAA;;AAAA;AACJ,iEAAkB,KAAK6C,CAAvB;AAAA,wBAASrK,KAAT;;AACI,wBAAIwH,EAAExH,KAAF,EAASA,KAAT,EAAgB,IAAhB,CAAJ,EACI,OAAOA,KAAP;AAFR;AADI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIJ,mBAAO,IAAP;AACH;;;;;IAEQwK,S,WAAAA,S;AACT,yBAAc;AAAA;;AACV,aAAKX,CAAL,GAAS,EAAT;AACA,aAAKxJ,WAAL,GAAmB,WAAnB;AACH;;;;gCACO;AACJ,iBAAKwJ,CAAL,GAAS,EAAT;AACA,mBAAO,IAAP;AACH;;;4BACGxC,G,EAAK;AACL,mBAAO,KAAKwC,CAAL,CAAOxC,GAAP,MAAgBlH,SAAvB;AACH;;;4BACGkH,G,EAAK;AACL,iBAAKwC,CAAL,CAAOxC,GAAP,IAAc,EAAd;AACA,mBAAO,IAAP;AACH;;;6BACI4B,G,EAAK;AAAA;;AACNA,gBAAIC,OAAJ,CAAY;AAAA,uBAAO,OAAKC,GAAL,CAASsB,GAAT,CAAP;AAAA,aAAZ;AACA,mBAAO,IAAP;AACH;;;6BACIrB,I,EAAM;AAAA;;AACPA,iBAAK3B,IAAL,CAAU;AAAA,uBAAO,OAAK0B,GAAL,CAASsB,GAAT,CAAP;AAAA,aAAV;AACA,mBAAO,IAAP;AACH;;;+BACMpD,G,EAAK;AACR,gBAAI0C,YAAY,KAAK/B,GAAL,CAASX,GAAT,CAAhB;AACA,mBAAO,KAAKwC,CAAL,CAAOxC,GAAP,CAAP;AACA,mBAAO0C,SAAP;AACH;;;6BACIG,I,EAAM;AACP,iBAAK,IAAI7C,GAAT,IAAgB,KAAKwC,CAArB;AACIK,qBAAK7C,GAAL,EAAUA,GAAV,EAAe,IAAf;AADJ,aAEA,OAAOlH,SAAP;AACH;;;+BACM;AACH,gBAAIqI,OAAO,CAAX;AACA;AACA,iBAAK,IAAInB,GAAT,IAAgB,KAAKwC,CAArB;AACIrB;AADJ,aAHG,CAKH;AACA,mBAAOA,IAAP;AACH;;;iCACQ;AACL,gBAAIb,MAAM,EAAV;AACA,iBAAK,IAAIN,GAAT,IAAgB,KAAKwC,CAArB;AACIlC,oBAAIsC,IAAJ,CAAS5C,GAAT;AADJ,aAEA,OAAOM,GAAP;AACH;;;4BACGH,C,EAAG;AAAA;;AACH,gBAAIG,MAAM,IAAI6C,SAAJ,EAAV;AACA,iBAAK/C,IAAL,CAAU;AAAA,uBAASE,IAAIwB,GAAJ,CAAQ3B,EAAExH,KAAF,EAASA,KAAT,SAAR,CAAT;AAAA,aAAV;AACA,mBAAO2H,GAAP;AACH;;;6BACIH,C,EAAG;AACJ,iBAAK,IAAIxH,KAAT,IAAkB,KAAK6J,CAAvB;AACI,oBAAIrC,EAAExH,KAAF,EAASA,KAAT,EAAgB,IAAhB,CAAJ,EACI,OAAO,IAAP;AAFR,aAGA,OAAO,KAAP;AACH;;;6BACIwH,C,EAAG;AACJ,iBAAK,IAAIxH,KAAT,IAAkB,KAAK6J,CAAvB;AACI,oBAAIrC,EAAExH,KAAF,EAASA,KAAT,EAAgB,IAAhB,CAAJ,EACI,OAAOA,KAAP;AAFR,aAGA,OAAO,IAAP;AACH;;;gCACO;AACJ,gBAAI2H,MAAM,IAAI6C,SAAJ,EAAV;AACA,iBAAK/C,IAAL,CAAU;AAAA,uBAASE,IAAIwB,GAAJ,CAAQnJ,KAAR,CAAT;AAAA,aAAV;AACA,mBAAO2H,GAAP;AACH;;;gCACO;AACJ,iBAAK,IAAI3H,KAAT,IAAkB,KAAK6J,CAAvB;AACI,uBAAO,KAAP;AADJ,aAEA,OAAO,IAAP;AACH;;;;;IAEQa,I,WAAAA,I;;;AACT,oBAAc;AAAA;;AAAA,yIACDC,SADC;;AAEV,gBAAKtK,WAAL,GAAmB,MAAnB;AACA,gBAAKuK,EAAL,GAAU,EAAV;AACA,gBAAKC,EAAL,GAAU,EAAV;AAJU;AAKb;;;;4BACGxD,G,EAAKrH,K,EAAO;AACZ,gBAAI,CAAC,KAAKgI,GAAL,CAASX,GAAT,CAAL,EAAoB;AAChB,sIAAUA,GAAV,EAAerH,KAAf;AACA,qBAAK4K,EAAL,CAAQX,IAAR,CAAa5C,GAAb;AACA,qBAAKwD,EAAL,CAAQZ,IAAR,CAAajK,KAAb;AACH;AACD,mBAAO,IAAP;AACH;;;+BACMqH,G,EAAK;AACR,gBAAIrH,QAAQ,KAAKsH,GAAL,CAASD,GAAT,CAAZ;AACA,gBAAIrH,UAAUG,SAAd,EAAyB;AACrB,yIAAakH,GAAb;AACA,oBAAIuB,QAAQ,KAAKgC,EAAL,CAAQxI,OAAR,CAAgBiF,GAAhB,CAAZ;AACA,qBAAKuD,EAAL,CAAQL,MAAR,CAAe3B,KAAf,EAAsB,CAAtB;AACA,qBAAKiC,EAAL,CAAQN,MAAR,CAAe3B,KAAf,EAAsB,CAAtB;AACH;AACD,mBAAO5I,UAAUG,SAAjB;AACH;;;gCACOyI,K,EAAO;AACX,qIAAa,KAAKgC,EAAL,CAAQhC,KAAR,CAAb;AACA,iBAAKgC,EAAL,CAAQL,MAAR,CAAe3B,KAAf,EAAsB,CAAtB;AACA,iBAAKiC,EAAL,CAAQN,MAAR,CAAe3B,KAAf,EAAsB,CAAtB;AACH;;;mCACU;AACP,mBAAO,KAAKgC,EAAL,CAAQ,CAAR,CAAP;AACH;;;kCACS;AACN,mBAAO,KAAKA,EAAL,CAAQ,KAAKA,EAAL,CAAQtI,MAAR,GAAiB,CAAzB,CAAP;AACH;;;qCACY;AACT,mBAAO,KAAKuI,EAAL,CAAQ,CAAR,CAAP;AACH;;;oCACW;AACR,mBAAO,KAAKA,EAAL,CAAQ,KAAKA,EAAL,CAAQvI,MAAR,GAAiB,CAAzB,CAAP;AACH;;;+BACM;AACH,mBAAO,KAAKsI,EAAL,CAAQtI,MAAf;AACH;;;gCACO;AACJ,mBAAO,KAAKsI,EAAL,CAAQtI,MAAR,KAAmB,CAA1B;AACH;;;+BACM;AACH,mBAAO,KAAKsI,EAAZ;AACH;;;iCACQ;AACL,mBAAO,KAAKC,EAAZ;AACH;;;gCACO;AACJ;AACA,iBAAKD,EAAL,GAAU,EAAV;AACA,iBAAKC,EAAL,GAAU,EAAV;AACA,mBAAO,IAAP;AACH;;;EA3DqBjB,I;;IA6DbkB,K,WAAAA,K;;;AACT,mBAAYpC,MAAZ,EAAoB;AAAA;;AAAA;;AAEhB,gBAAKA,MAAL,GAAcA,MAAd;AAFgB;AAGnB;;;;4BACGrB,G,EAAKqB,M,EAAQ;AACb,gBAAI,CAAC,KAAKV,GAAL,CAASX,GAAT,CAAL,EACI,KAAKQ,GAAL,CAASR,GAAT,EAAcqB,SAASA,OAAOrB,GAAP,CAAT,GAAuB,KAAKqB,MAAL,CAAYrB,GAAZ,CAArC;AACJ,mBAAO,KAAKC,GAAL,CAASD,GAAT,CAAP;AACH;;;EATsBqD,I;;IAWdK,U,WAAAA,U;;;AACT,0BAAc;AAAA;;AAAA,qJACDJ,SADC;;AAEV,gBAAKN,CAAL,GAAS,EAAT;AAFU;AAGb;;;;4BACGhD,G,EAAK;AACL,gBAAI,CAAC,KAAKW,GAAL,CAASX,GAAT,CAAL,EAAoB;AAChB,kJAAUA,GAAV;AACA,qBAAKgD,CAAL,CAAOJ,IAAP,CAAY5C,GAAZ;AACH;AACD,mBAAO,IAAP;AACH;;;+BACMA,G,EAAK;AACR,gBAAI0C,iJAAyB1C,GAAzB,CAAJ;AACA,gBAAI0C,SAAJ,EACI,KAAKM,CAAL,CAAOE,MAAP,CAAc,KAAKF,CAAL,CAAOjI,OAAP,CAAeiF,GAAf,CAAd,EAAmC,CAAnC;AACJ,mBAAO0C,SAAP;AACH;;;+BACM;AACH,mBAAO,KAAKM,CAAL,CAAO/H,MAAd;AACH;;;gCACO;AACJ,mBAAO,KAAK+H,CAAL,CAAO/H,MAAP,KAAkB,CAAzB;AACH;;;iCACQ;AACL,mBAAO,KAAK+H,CAAZ;AACH;;;gCACO;AACJ,mBAAO,KAAKA,CAAL,CAAO,CAAP,CAAP;AACH;;;+BACM;AACH,mBAAO,KAAKA,CAAL,CAAO,KAAKA,CAAL,CAAO/H,MAAP,GAAgB,CAAvB,CAAP;AACH;;;gCACO;AACJ;AACA,iBAAK+H,CAAL,GAAS,EAAT;AACA,mBAAO,IAAP;AACH;;;EArC2BG,S;;AAuCzB,SAAShB,GAAT,CAAaQ,GAAb,EAAkB3C,GAAlB,EAAuBqB,MAAvB,EAA+B;AAClC,QAAIsB,IAAI3C,GAAJ,MAAalH,SAAjB,EACI6J,IAAI3C,GAAJ,IAAWqB,SAASA,OAAOrB,GAAP,CAAT,GAAuB,EAAlC;AACJ,WAAO2C,IAAI3C,GAAJ,CAAP;AACH;AACM,SAASoC,IAAT,CAAcO,GAAd,EAAmB3C,GAAnB,EAAwB4B,GAAxB,EAA6BP,MAA7B,EAAqC;AACxC,QAAIsB,IAAI3C,GAAJ,MAAalH,SAAjB,EAA4B;AACxB6J,YAAI3C,GAAJ,IAAWqB,SAASA,OAAOrB,GAAP,CAAT,GAAuB,EAAlC;AACA4B,YAAIgB,IAAJ,CAASD,IAAI3C,GAAJ,CAAT;AACH;AACD,WAAO2C,IAAI3C,GAAJ,CAAP;AACH;AACM,SAASqC,KAAT,CAAeT,GAAf,EAAoBe,GAApB,EAAyB3C,GAAzB,EAA8BrH,KAA9B,EAAqC;AACxC,QAAIgK,IAAI3C,GAAJ,MAAalH,SAAjB,EAA4B;AACxB6J,YAAI3C,GAAJ,IAAWrH,KAAX;AACAiJ,YAAIgB,IAAJ,CAASjK,KAAT;AACH;AACJ;AACM,SAAS2J,MAAT,CAAgBV,GAAhB,EAAqBe,GAArB,EAA0BgB,IAA1B,EAAgC;AACnC,SAAK,IAAI3D,GAAT,IAAgB2D,IAAhB;AACItB,cAAMT,GAAN,EAAWe,GAAX,EAAgB3C,GAAhB,EAAqB2D,KAAK3D,GAAL,CAArB;AADJ;AAEH,C;;;;;;AC7YD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;ACvLtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;;;;;;ACLzC;AACA;AACA,iCAAiC,QAAQ,mBAAmB,UAAU,EAAE,EAAE;AAC1E,CAAC;;;;;;;;ACHD;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;;;IACalC,K,WAAAA,K;;;AACT,iBAAYhD,EAAZ,EAAgB;AAAA;;AAAA,oIACNA,EADM;;AAEZ,UAAK8I,YAAL,GAAoB,mBAApB;AACA,UAAKC,UAAL,GAAkB,mBAAlB;AACA,UAAKC,UAAL,GAAkB,mBAAlB;AACA,UAAKC,iBAAL,GAAyB,mBAAzB;AALY;AAMf;;;;;IAEQhG,Q,WAAAA,Q;;;AACT,oBAAYjD,EAAZ,EAAgB;AAAA;;AAAA,2IACNA,EADM;;AAEZ,WAAKkJ,OAAL,GAAe,mBAAf;AACA,WAAKC,MAAL,GAAc,mBAAd;AACA,WAAKC,eAAL,GAAuB,mBAAvB;AACA,WAAKC,aAAL,GAAqB,mBAArB;AALY;AAMf;;;;;IAEQC,S,WAAAA,S;AACT,uBAAc;AAAA;;AACV,SAAKC,QAAL,GAAgB,2BAAhB;AACA,SAAKC,WAAL,GAAmB,2BAAnB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACH;;;;8BACgBC,K,EAAO;AACpB,UAAIA,MAAMxJ,MAAN,KAAiB,CAArB,EACI,OAAO,EAAP,CADJ,KAGI,OAAO,0BAA0BwJ,MAAMpE,GAAN,CAAU;AAAA,eAAMvF,GAAGvB,WAAH,EAAN;AAAA,OAAV,EAAkCmL,IAAlC,CAAuC,IAAvC,CAA1B,GAAyE,IAAhF;AACP;;;;;AAELN,UAAUvH,aAAV;AA6BAuH,UAAUtH,UAAV,moB;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;AC1GA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;IAAY6H,O;;AACZ;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;IACaC,gB,WAAAA,gB;AACT,8BAAYC,QAAZ,EAAsBzK,MAAtB,EAA+C;AAAA,YAAjB0J,UAAiB,uEAAJ,EAAI;AAAA;;AAC3C,aAAKe,QAAL,GAAgBA,QAAhB;AACA,aAAKzK,MAAL,GAAcA,MAAd;AACA,aAAK0J,UAAL,GAAkBA,UAAlB;AACA,aAAK9K,WAAL,GAAmB,kBAAnB;AACH;;;;iCACQ;AACL,mBAAO,IAAI4L,gBAAJ,CAAqB,qCAA2B,KAAKC,QAAhC,CAArB,EAAgE,qCAA2B,KAAKzK,MAAhC,CAAhE,EAAyG,KAAK0J,UAAL,CAAgBzD,GAAhB,CAAoB;AAAA,uBAAKyE,EAAEC,MAAF,EAAL;AAAA,aAApB,CAAzG,CAAP;AACH;;;;;IAEQC,iB,WAAAA,iB,GACT,2BAAYrM,KAAZ,EAAoC;AAAA,QAAjBmL,UAAiB,uEAAJ,EAAI;AAAA;;AAChC,SAAKnL,KAAL,GAAaA,KAAb;AACA,SAAKmL,UAAL,GAAkBA,UAAlB;AACH,C;;IAEQmB,gB,WAAAA,gB;AACT,8BAAYJ,QAAZ,EAAsB;AAAA;;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;AACA,aAAKhE,MAAL,GAAc,EAAd;AACA,aAAK7H,WAAL,GAAmB,kBAAnB;AACH;;;;4CAImBkM,6B,EAA+B;AAC/C,mBAAOD,iBAAiBE,mBAAjB,CAAqC,IAArC,EAA2CD,6BAA3C,CAAP;AACH;;;4CAL0BE,E,EAAIF,6B,EAA+B;AAC1D,mBAAOE,GAAGvE,MAAH,CAAUR,GAAV,CAAc;AAAA,uBAAK,IAAIuE,gBAAJ,CAAqBQ,GAAGP,QAAxB,EAAkC5B,EAAEtK,KAApC,EAA2C,wBAAQsK,EAAEa,UAAF,CAAazD,GAAb,CAAiB;AAAA,2BAAOgF,IAAIxE,MAAJ,CAAWR,GAAX,CAAe;AAAA,+BAAM,IAAIuE,gBAAJ,CAAqBS,IAAIR,QAAzB,EAAmCS,GAAG3M,KAAtC,CAAN;AAAA,qBAAf,CAAP;AAAA,iBAAjB,CAAR,CAA3C,CAAL;AAAA,aAAd,CAAP;AACH;;;;;IAKQ4M,I,WAAAA,I;;;AACT,oBAAc;AAAA;;AAAA,uIACDjC,SADC;;AAEV,cAAKkC,eAAL,GAAuB,EAAvB;AACA,cAAKC,gBAAL,GAAwB,EAAxB;AACA,cAAKC,sBAAL,GAA8B,EAA9B;AACA,cAAKC,uBAAL,GAA+B,EAA/B;AALU;AAMb;;;;;IAEQC,gB,WAAAA,gB,GACT,0BAAYC,gBAAZ,EAA4C;AAAA,QAAdC,QAAc,uEAAH,CAAG;AAAA;;AACxC,SAAKD,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH,C;;IAEQC,iB,WAAAA,iB;;;AACT;AACA,+BAAYC,aAAZ,EAA2B;AAAA;;AACvB,aAAKA,aAAL,GAAqBA,aAArB;AACH;AACD;;;;;;;;;;gCAMQC,G,EAAqC;AAAA,gBAAhCC,WAAgC,uEAAlB,KAAkB;AAAA,gBAAXC,SAAW;;AACzC,mBAAO,KAAKC,QAAL,CAAc,CAACH,GAAD,CAAd,EAAqBC,WAArB,EAAkCC,SAAlC,EAA6CE,IAA7C,CAAkD,UAACC,KAAD;AAAA,uBAAWA,MAAM,CAAN,CAAX;AAAA,aAAlD,EAAuE,IAAvE,EAA6E,UAACC,IAAD,EAAU;AAAE,uBAAO,EAAEC,cAAcD,KAAKC,YAArB,EAAmCC,UAAUF,KAAKE,QAAlD,EAA4DC,MAAMH,KAAKD,KAAL,CAAW,CAAX,CAAlE,EAAP;AAA2F,aAApL,CAAP;AACH;AACD;;;;;;;;;iCAMSK,Q,EAA0C;AAAA,gBAAhCT,WAAgC,uEAAlB,KAAkB;AAAA,gBAAXC,SAAW;;AAC/C,mBAAO,KAAKH,aAAL,CAAmBY,IAAnB,CAAwB,yBAAxB,EAAmD,UAAnD,EAA+D,CAACD,SAAStG,GAAT,CAAa;AAAA,uBAAO4F,IAAI5F,GAAJ,CAAQ;AAAA,2BAAMvF,GAAGvB,WAAH,EAAN;AAAA,iBAAR,CAAP;AAAA,aAAb,CAAD,EAAuD2M,WAAvD,CAA/D,EAAoIC,SAApI,CAAP;AACH;;;sCAC2C;AAAA,gBAAhCD,WAAgC,uEAAlB,KAAkB;AAAA,gBAAXC,SAAW;;AACxC,mBAAO,KAAKH,aAAL,CAAmBY,IAAnB,CAAwB,yBAAxB,EAAmD,UAAnD,EAA+D,CAAC,KAAD,EAAQV,WAAR,CAA/D,EAAqFC,SAArF,CAAP;AACH;;;wCAC8B;AAAA,gBAAjBrC,UAAiB,uEAAJ,EAAI;;AAC3B,mBAAO,KAAK+C,cAAL,CAAoB,CAAC/C,UAAD,CAApB,EAAkCuC,IAAlC,CAAuC;AAAA,uBAAKS,EAAE,CAAF,CAAL;AAAA,aAAvC,EAAkD,IAAlD,EAAwD;AAAA,uBAAKA,EAAE,CAAF,CAAL;AAAA,aAAxD,CAAP;AACH;;;yCACgC;AAAA,gBAAlBC,WAAkB,uEAAJ,EAAI;;AAC7B,mBAAO,KAAKf,aAAL,CAAmBY,IAAnB,CAAwB,yBAAxB,EAAmD,gBAAnD,EAAqE,CAACG,YAAY1G,GAAZ,CAAgB;AAAA,uBAAS2G,MAAM3G,GAAN,CAAU;AAAA,2BAAM+E,GAAGL,MAAH,EAAN;AAAA,iBAAV,CAAT;AAAA,aAAhB,CAAD,CAArE,CAAP;AACH;;;kCACSjK,E,EAAImM,e,EAA0C;AAAA,gBAAzBC,kBAAyB,uEAAJ,EAAI;;AACpD,mBAAO,KAAKlB,aAAL,CAAmBY,IAAnB,CAAwB,yBAAxB,EAAmD,WAAnD,EAAgE,CAAE9L,EAAF,EAAOmM,gBAAgB5G,GAAhB,CAAoB;AAAA,uBAAM+E,GAAGL,MAAH,EAAN;AAAA,aAApB,CAAP,EAA+CmC,mBAAmB7G,GAAnB,CAAuB;AAAA,uBAAM+E,GAAGL,MAAH,EAAN;AAAA,aAAvB,CAA/C,CAAhE,CAAP;AACH;;;mCACUjK,E,EAAI;AACX,mBAAO,KAAKkL,aAAL,CAAmBY,IAAnB,CAAwB,yBAAxB,EAAmD,YAAnD,EAAiE,CAAC9L,EAAD,CAAjE,CAAP;AACH;;;;;AAELiL,kBAAkBoB,sBAAlB;AAsBApB,kBAAkBqB,gBAAlB;AAQArB,kBAAkB/I,eAAlB;;IAYaqK,uB,WAAAA,uB;;;AACT;AACA,qCAAYC,kBAAZ,EAAgCC,EAAhC,EAAoCC,yBAApC,EAA+DC,kBAA/D,EAAmF;AAAA;;AAC/E,aAAKH,kBAAL,GAA0BA,kBAA1B;AACA,aAAKC,EAAL,GAAUA,EAAV;AACA,aAAKC,yBAAL,GAAiCA,yBAAjC;AACA,aAAKC,kBAAL,GAA0BA,kBAA1B;AACH;;;;iCAyBQd,Q,EAA0C;AAAA;;AAAA,gBAAhCT,WAAgC,uEAAlB,KAAkB;AAAA,gBAAXC,SAAW;;AAC/C,gBAAIuB,gBAAgB,KAAKD,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsC7K,SAA1D;AACA,gBAAI,CAAC4J,QAAL,EACIe,gBAAgBA,cAAcG,OAAd,CAAsB,sCAAtB,EAA8D,EAA9D,CAAhB,CADJ,KAGIH,gBAAgBA,cAAcG,OAAd,CAAsB,YAAtB,EAAoClB,SAAStG,GAAT,CAAa;AAAA,uBAAWyH,QAAQzH,GAAR,CAAY;AAAA,2BAAM,MAAMyH,QAAQ,CAAR,CAAN,GAAmB,GAAnB,GAAyBhN,EAAzB,GAA8B,GAApC;AAAA,iBAAZ,EAAqD4J,IAArD,CAA0D,EAA1D,CAAX;AAAA,aAAb,EAAuFA,IAAvF,CAA4F,EAA5F,CAApC,CAAhB;AACJgD,4BAAgBA,cAAcG,OAAd,CAAsB,aAAtB,EAAqC,KAAKJ,kBAAL,CAAwBE,KAAxB,CAA8B9O,QAAnE,CAAhB;AACA,gBAAIyN,QAAQ,0BAAS,UAACxL,EAAD;AAAA,uBAAQ,IAAIyK,IAAJ,CAAS,iBAAY5L,QAAZ,CAAqB4B,SAArB,CAA+BT,EAA/B,CAAT,CAAR;AAAA,aAAT,CAAZ;AACA,gBAAIwF,MAAM,KAAKiH,EAAL,CAAQQ,KAAR,EAAV;AACA,iBAAKT,kBAAL,CAAwBU,KAAxB,CAA8B,KAAKP,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCnB,QAApE,EAA8EiB,aAA9E,EAA6F,EAAEO,SAAS9B,SAAX,EAA7F,EAAqHE,IAArH,CAA0H,oBAAY;AAClI,oBAAI6B,gBAAgB,0BAAS;AAAA,2BAAM,2BAAN;AAAA,iBAAT,CAApB;AACA,oBAAIC,qBAAqB,0BAAS;AAAA,2BAAM,0BAAS;AAAA,+BAAM,2BAAN;AAAA,qBAAT,CAAN;AAAA,iBAAT,CAAzB;AACA,oBAAIC,aAAa,kBAAa;AAAA,2BAAM,EAAN;AAAA,iBAAb,CAAjB;AAHkI;AAAA;AAAA;;AAAA;AAIlI,oEAAcC,SAASC,OAAT,CAAiBC,QAA/B,4GAAyC;AAAA,4BAAhCC,CAAgC;;AACrC,4BAAI9B,OAAOJ,MAAMnE,GAAN,CAAUqG,EAAE,IAAF,EAAQ7P,KAAlB,CAAX;AACA0O,gDAAwBoB,iBAAxB,CAA0C/B,IAA1C,EAAgDA,KAAKlB,eAArD,EAAsE,OAAKiC,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCc,SAA5G,EAAuHR,cAAc/F,GAAd,CAAkBqG,EAAE,IAAF,EAAQ7P,KAA1B,CAAvH,EAAyJwP,mBAAmBhG,GAAnB,CAAuBqG,EAAE,IAAF,EAAQ7P,KAA/B,CAAzJ,EAAgMyP,WAAWjG,GAAX,CAAeuE,IAAf,CAAhM,EAAsN,OAAKe,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCnB,QAA5P,EAAsQ+B,CAAtQ;AACH;AAPiI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQlI,oBAAItC,WAAJ,EAAiB;AACb5F,wBAAIqI,MAAJ,CAAW,EAAEnC,cAAc,SAAhB,EAA2BC,UAAU,OAAKgB,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCnB,QAA3E,EAAqFH,OAAOA,MAAMzF,MAAN,EAA5F,EAAX;AACA,wBAAI+H,cAAc,EAAlB;AACA,wBAAIC,UAAU,gCAAd;AAHa;AAAA;AAAA;;AAAA;AAIb,yEAAiBvC,MAAMzF,MAAN,EAAjB,iHAAiC;AAAA,gCAAxB6F,IAAwB;;AAC7BkC,2CAAe,MAAMlC,KAAKnN,WAAL,EAAN,GAA2BmN,KAAKnN,WAAL,EAA3B,GAAgD,GAA/D;AACAsP,oCAAQ/G,GAAR,CAAY4E,KAAKnN,WAAL,EAAZ;AAF6B;AAAA;AAAA;;AAAA;AAG7B,iFAAkB6O,WAAWnI,GAAX,CAAeyG,IAAf,CAAlB,iHAAwC;AAAA,wCAA/BoC,KAA+B;;AACpCF,mDAAe,MAAMlC,KAAKnN,WAAL,EAAN,GAA2BuP,MAAMvP,WAAN,EAA3B,GAAiD,GAAhE;AACAsP,4CAAQ/G,GAAR,CAAYgH,MAAMvP,WAAN,EAAZ;AACH;AAN4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhC;AAXY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYb,wBAAIoN,QAAJ,EACIA,SAAS9E,OAAT,CAAiB,eAAO;AAAA;AAAA;AAAA;;AAAA;AACpB,6EAAeoE,GAAf;AAAA,oCAASnL,EAAT;;AACI,oCAAI,CAAC+N,QAAQlI,GAAR,CAAY7F,EAAZ,CAAL,EACI8N,eAAe,MAAM3C,IAAI,CAAJ,CAAN,GAAe,GAAf,GAAqBnL,EAArB,GAA0B,GAAzC;AAFR;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIvB,qBAJD;AAKJ,2BAAKyM,EAAL,CAAQwB,GAAR,CAAY,OAAKtB,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCoB,eAAtC,GAAwD3I,GAAxD,CAA4D,oBAAY;AAChF,4BAAI4I,iBAAiBxC,SAAS1J,SAA9B;AACAkM,yCAAiBA,eAAepB,OAAf,CAAuB,YAAvB,EAAqCe,WAArC,CAAjB;AACAK,yCAAiBA,eAAepB,OAAf,CAAuB,aAAvB,EAAsC,OAAKJ,kBAAL,CAAwBE,KAAxB,CAA8B9O,QAApE,CAAjB;AACA,+BAAO,OAAKyO,kBAAL,CAAwBU,KAAxB,CAA8BvB,SAASA,QAAvC,EAAiDwC,cAAjD,EAAiE,EAAEhB,SAAS9B,SAAX,EAAjE,EAAyFE,IAAzF,CAA8F,qBAAa;AAC9G,gCAAI6C,UAAUZ,OAAV,CAAkBC,QAAlB,CAA2BtN,MAA3B,KAAsC,CAA1C,EAA6C;AAAA;AAAA;AAAA;;AAAA;AACzC,qFAAciO,UAAUZ,OAAV,CAAkBC,QAAhC,iHAA0C;AAAA,4CAAjCC,EAAiC;;AACtC,4CAAI9B,QAAOJ,MAAMnE,GAAN,CAAUqG,GAAE,IAAF,EAAQ7P,KAAlB,CAAX;AACA0O,gEAAwBoB,iBAAxB,CAA0C/B,KAA1C,EAAgDA,MAAKjB,gBAArD,EAAuE,OAAKgC,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCc,SAA7G,EAAwHR,cAAc/F,GAAd,CAAkBqG,GAAE,IAAF,EAAQ7P,KAA1B,CAAxH,EAA0JwP,mBAAmBhG,GAAnB,CAAuBqG,GAAE,IAAF,EAAQ7P,KAA/B,CAA1J,EAAiMyP,WAAWjG,GAAX,CAAeuE,KAAf,CAAjM,EAAuND,SAAS3L,EAAhO,EAAoO0N,EAApO;AACH;AAJwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKzClI,oCAAIqI,MAAJ,CAAW,EAAEnC,cAAc,QAAhB,EAA0BC,UAAUA,SAAS3L,EAA7C,EAAiDwL,OAAOA,MAAMzF,MAAN,EAAxD,EAAX;AACH;AACJ,yBARM,EAQJ,UAACsI,KAAD;AAAA,mCAAW7I,IAAIqI,MAAJ,CAAW,EAAEnC,cAAc,QAAhB,EAA0BC,UAAUA,SAAS3L,EAA7C,EAAiDqO,OAAO,2CAAqBC,cAArB,CAAoCD,KAApC,CAAxD,EAAX,CAAX;AAAA,yBARI,CAAP;AASH,qBAbW,CAAZ,EAaI9C,IAbJ,CAaS;AAAA,+BAAM/F,IAAI+I,OAAJ,CAAY/C,MAAMzF,MAAN,EAAZ,CAAN;AAAA,qBAbT;AAcH,iBAhCD,MAkCIP,IAAI+I,OAAJ,CAAY/C,MAAMzF,MAAN,EAAZ;AACP,aA3CD;AA4CA,mBAAOP,IAAIgJ,OAAX;AACH;;;mCACUxO,E,EAAI;AACX,mBAAO,KAAKwM,kBAAL,CAAwBiC,MAAxB,CAA+B,KAAK9B,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCrL,cAArE,EAAqF,KAAKkL,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsC5K,eAAtC,CAAsD6K,OAAtD,CAA8D,OAA9D,EAAuE/M,GAAGvB,WAAH,EAAvE,CAArF,EAA+K8M,IAA/K,CAAoL,UAACS,CAAD;AAAA,uBAAO,IAAP;AAAA,aAApL,EAAiM,UAACA,CAAD;AAAA,uBAAO,KAAP;AAAA,aAAjM,CAAP;AACH;;;kCACShM,E,EAAImM,e,EAA0C;AAAA,gBAAzBC,kBAAyB,uEAAJ,EAAI;;AACpD,gBAAIsC,eAAe,EAAnB;AACA,gBAAIC,kBAAkB,EAAtB;AACAxC,4BAAgBpF,OAAhB,CAAwB;AAAA,uBAAY2H,aAAa5G,IAAb,CAAkB,gBAAW9H,EAAX,EAAe+J,SAASA,QAAxB,EAAkCA,SAASzK,MAA3C,CAAlB,CAAZ;AAAA,aAAxB;AACA8M,+BAAmBrF,OAAnB,CAA2B;AAAA,uBAAY4H,gBAAgB7G,IAAhB,CAAqB,gBAAW9H,EAAX,EAAe+J,SAASA,QAAxB,EAAkCA,SAASzK,MAA3C,CAArB,CAAZ;AAAA,aAA3B;AACA,mBAAO,KAAKoN,yBAAL,CAA+BkC,YAA/B,CAA4C,KAAKjC,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCrL,cAAlF,EAAkG,CAAC,eAAU,KAAKkL,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCvN,KAAtC,GAA8C,iBAAYkB,SAAZ,CAAsB,KAAKkM,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCvN,KAA5D,CAA9C,GAAmH,kBAAaV,QAA1I,EAAoJ6P,YAApJ,CAAD,CAAlG,EAAuQ,CAAC,eAAU,KAAK/B,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCvN,KAAtC,GAA8C,iBAAYkB,SAAZ,CAAsB,KAAKkM,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCvN,KAA5D,CAA9C,GAAmH,kBAAaV,QAA1I,EAAoJ8P,eAApJ,CAAD,CAAvQ,CAAP;AACH;;;yCACgC;AAAA;;AAAA,gBAAlB1C,WAAkB,uEAAJ,EAAI;;AAC7B,gBAAI4C,WAAW,KAAKpC,EAAL,CAAQQ,KAAR,EAAf;AACA,gBAAI6B,IAAI,CAAR;AACA,gBAAIJ,eAAe,EAAnB;AACA,gBAAIK,WAAW,EAAf;AACA9C,wBAAYlF,OAAZ,CAAoB,sBAAc;AAC9B,oBAAI3H,UAAU,mBAAc,OAAKuN,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCtL,UAAtC,GAAmD,sBAAjE,CAAd;AACAuN,yBAASjH,IAAT,CAAc1I,OAAd;AACA4J,2BAAWjC,OAAX,CAAmB;AAAA,2BAAY2H,aAAa5G,IAAb,CAAkB,gBAAW1I,OAAX,EAAoB2K,SAASA,QAA7B,EAAuCA,SAASzK,MAAhD,CAAlB,CAAZ;AAAA,iBAAnB;AACH,aAJD;AAKAuP,qBAAShB,MAAT,CAAgBkB,QAAhB;AACA,iBAAKrC,yBAAL,CAA+BkC,YAA/B,CAA4C,KAAKjC,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCrL,cAAlF,EAAkG,CAAC,eAAU,KAAKkL,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCvN,KAAtC,GAA8C,iBAAYkB,SAAZ,CAAsB,KAAKkM,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCvN,KAA5D,CAA9C,GAAmH,kBAAaV,QAA1I,EAAoJ6P,YAApJ,CAAD,CAAlG,EAAuQnD,IAAvQ,CAA4Q;AAAA,uBAAMsD,SAASN,OAAT,CAAiBQ,QAAjB,CAAN;AAAA,aAA5Q,EAA8SF,SAASG,MAAvT,EAA+TH,SAAShB,MAAxU;AACA,mBAAOgB,SAASL,OAAhB;AACH;;;0CAtGwB5C,I,EAAM5C,U,EAAY4E,S,EAAWpE,W,EAAayF,gB,EAAkBC,Q,EAAUvD,Q,EAAU+B,C,EAAG;AACxG,gBAAIA,EAAE,UAAF,CAAJ,EAAmB;AACf,oBAAIyB,mBAAmB3F,YAAYnC,GAAZ,CAAgBqG,EAAE,UAAF,EAAc7P,KAA9B,EAAqC,YAAM;AAC9D,wBAAI2H,MAAM,IAAI2E,gBAAJ,CAAqByD,UAAUpE,WAAV,CAAsB4F,GAAtB,CAA0B1B,EAAE,UAAF,EAAc7P,KAAxC,EAA+C;AAAA,+BAAM,wBAAa,iBAAYgB,QAAZ,CAAqByB,eAArB,CAAqCoN,EAAE,UAAF,CAArC,CAAb,CAAN;AAAA,qBAA/C,CAArB,CAAV;AACA,wBAAIA,EAAE,eAAF,CAAJ,EACIlI,IAAIuE,QAAJ,CAAasF,MAAb,CAAoBrI,GAApB,CAAwB,iBAAYnI,QAAZ,CAAqByQ,kBAArB,CAAwC5B,EAAE,eAAF,CAAxC,CAAxB;AACJ1E,+BAAWlB,IAAX,CAAgBtC,GAAhB;AACA,2BAAOA,GAAP;AACH,iBANsB,CAAvB;AAOA,oBAAI1F,IAAImP,iBAAiB5H,GAAjB,CAAqBqG,EAAE,UAAF,EAAc7P,KAAnC,EAA0CwJ,GAA1C,CAA8CqG,EAAE,QAAF,EAAY7P,KAAZ,GAAoB,GAApB,GAA0B6P,EAAE,QAAF,EAAY,UAAZ,CAA1B,GAAoD,GAApD,GAA0DA,EAAE,QAAF,EAAYzP,QAApH,EAA8H,YAAM;AACxI,wBAAIsR,QAAQ,mCAAyB,iBAAY1Q,QAAZ,CAAqByB,eAArB,CAAqCoN,EAAE,QAAF,CAArC,CAAzB,CAAZ;AACA6B,0BAAMC,eAAN,GAAwB,gCAAxB;AACAL,qCAAiBpJ,MAAjB,CAAwB+B,IAAxB,CAA6B,IAAIoC,iBAAJ,CAAsBqF,KAAtB,CAA7B;AACA,wBAAI7B,EAAE,aAAF,CAAJ,EACI6B,MAAMF,MAAN,CAAarI,GAAb,CAAiB,iBAAYnI,QAAZ,CAAqByQ,kBAArB,CAAwC5B,EAAE,aAAF,CAAxC,CAAjB;AACJ,2BAAO6B,KAAP;AACH,iBAPO,CAAR;AAQA,oBAAI,SAAI7L,MAAJ,CAAWpF,MAAX,CAAkB6Q,iBAAiBpF,QAAnC,CAAJ,EACImF,SAASpH,IAAT,CAAchI,CAAd;AACJ,oBAAI,UAAK6C,SAAL,CAAerE,MAAf,CAAsB6Q,iBAAiBpF,QAAvC,KAAoD,UAAKhH,KAAL,CAAWzE,MAAX,CAAkB6Q,iBAAiBpF,QAAnC,CAAxD,EACI6B,KAAKyD,MAAL,CAAYrI,GAAZ,CAAgBlH,CAAhB;AACJA,kBAAE0P,eAAF,CAAkBxI,GAAlB,CAAsB2E,QAAtB;AACH;AACJ;;;;;AAiFL9B,QAAQ4F,MAAR,CAAe,oCAAf,EAAqD,EAArD,EACKC,MADL,cACY,UAACC,QAAD,EAAc;AACtBA,aAASC,OAAT,CAAiB,mBAAjB,EAAsC3E,iBAAtC;AACH,CAHD,G;;;;;;;ACtPA;;;;;;;;;;;;;;;AACA;;;;IACa4E,a,WAAAA,a,GACT,uBAAY1M,cAAZ,EAA4B5D,KAA5B,EAAmC;AAAA;;AAC/B,SAAK4D,cAAL,GAAsBA,cAAtB;AACA,SAAK5D,KAAL,GAAaA,KAAb;AACH,C;;IAEQuQ,O,WAAAA,O;AACT,qBAAY9P,EAAZ,EAA6J;AAAA,YAA7I+P,MAA6I,uEAApI,IAAIF,aAAJ,CAAkB,IAAlB,CAAoI;AAAA,YAA3GR,MAA2G,uEAAlG,mBAAkG;AAAA,YAAlFW,GAAkF;AAAA,YAA7EC,YAA6E,uEAA9D,mBAA8D;AAAA,YAA9CC,aAA8C,uEAA9B,EAA8B;AAAA,YAA1BC,WAA0B,uEAAZ,IAAIC,IAAJ,EAAY;AAAA;;AACzJ,aAAKL,MAAL,GAAcA,MAAd;AACA,aAAKV,MAAL,GAAcA,MAAd;AACA,aAAKW,GAAL,GAAWA,GAAX;AACA,aAAKC,YAAL,GAAoBA,YAApB;AACA,aAAKC,aAAL,GAAqBA,aAArB;AACA,aAAKC,WAAL,GAAmBA,WAAnB;AACA,aAAKjS,WAAL,GAAmB,SAAnB;AACA,aAAK8B,EAAL,GAAUA,EAAV;AACA,aAAK+P,MAAL,GAAcA,MAAd;AACH;;;;iCA+CQM,E,EAAI;AAAEP,oBAAQQ,QAAR,CAAiB,IAAjB,EAAuBD,EAAvB;AAA6B;;;iCA9C5BE,C,EAAGF,E,EAAI;AACnBA,eAAGG,QAAH,CAAY,MAAZ,IAAsB,UAAKvP,EAA3B;AACAoP,eAAGG,QAAH,CAAY,SAAZ,IAAyB,aAAQvP,EAAjC;AACAoP,eAAGG,QAAH,CAAY,MAAZ,IAAsB,UAAKvP,EAA3B;AACAoP,eAAGG,QAAH,CAAY,OAAZ,IAAuB,WAAMvP,EAA7B;AACAoP,eAAGG,QAAH,CAAY,KAAZ,IAAqB,SAAIvP,EAAzB;AACAoP,eAAGG,QAAH,CAAY,KAAZ,IAAqB,eAAUvP,EAA/B;AACA,gBAAIoE,IAAIgL,GAAGI,aAAH,CAAiBtL,GAAjB,CAAqBoL,EAAEvQ,EAAvB,CAAR;AACAuQ,cAAElB,MAAF,CAAS/J,IAAT,CAAc,iBAAS;AACnB,oBAAIvC,MAAMlF,KAAV,EACIwH,IAAIA,2BACHtC,MAAMtE,WAAN,EADG,QAAJ;AAEP,aAJD;AAKA4G,gBAAIA,6BACOkL,EAAEJ,WAAF,CAAcO,WAAd,EADP,uBAAJ;AAEAH,cAAEN,YAAF,CAAe3K,IAAf,CAAoB,iBAAS;AACzB,oBAAIqL,MAAM9S,KAAV,EACIwH,IAAIA,gCACEsL,MAAMlS,WAAN,EADF,QAAJ;AAEP,aAJD;AAKA,gBAAI8R,EAAEP,GAAN,EACI3K,IAAIA,2BACCkL,EAAEP,GADH,SAAJ;AAEJ,gBAAIO,EAAEL,aAAF,CAAgB/P,MAAhB,GAAyB,CAA7B,EAAgC;AAC5BkF,oBAAIA,6BAAJ;AAEAkL,kBAAEL,aAAF,CAAgBnJ,OAAhB,CAAwB,cAAM;AAC1B1B,wBAAIA,WAAQuL,GAAG5Q,EAAX,SAAJ;AACA,wBAAI,CAACqQ,GAAGI,aAAH,CAAiB5K,GAAjB,CAAqB+K,GAAG5Q,EAAxB,CAAL,EAAkC;AAC9BqQ,2BAAGI,aAAH,CAAiB/K,GAAjB,CAAqBkL,GAAG5Q,EAAxB,QAAgC4Q,GAAG5Q,EAAnC;AACA4Q,2BAAGN,QAAH,CAAYD,EAAZ;AACH;AACJ,iBAND;AAOAhL,oBAAIA,EAAEnF,SAAF,CAAY,CAAZ,EAAemF,EAAElF,MAAF,GAAW,CAA1B,IAA+B,IAAnC;AACA,oBAAIoQ,EAAEL,aAAF,CAAgB/P,MAAhB,GAAyB,CAA7B,EACIoQ,EAAEL,aAAF,CAAgBnJ,OAAhB,CAAwB,UAAC6J,EAAD,EAAKnK,KAAL,EAAe;AACnCpB,wBAAIA,8FAGRuL,GAAG5Q,EAHK,2BAIRyG,KAJQ,aAAJ;AAMH,iBAPD;AAQP;AACD4J,eAAGI,aAAH,CAAiB/K,GAAjB,CAAqB6K,EAAEvQ,EAAvB,EAA2BqF,CAA3B;AACH;;;;;;;;;;;ACjEL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvqBAAqB,eAAe,GAAG;AACvC,sBAAsB;AACtB,SAAS,qCAAqC,yDAAyD,EAAE,uBAAuB,gCAAgC,EAAE;AAClK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAA8C;AACpE,iCAAiC;AACjC,SAAS,qCAAqC,kDAAkD,EAAE,uBAAuB,gCAAgC,EAAE;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,SAAS,qCAAqC,kDAAkD,EAAE,uBAAuB,gCAAgC,EAAE;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB,IAAI,gBAAgB;AACtE,sBAAsB;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB,IAAI,gBAAgB;AACtE;AACA,sBAAsB;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB,IAAI,gBAAgB;AACtE;AACA,sBAAsB;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB,IAAI;AACtD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,eAAe;AACxC,0BAA0B;AAC1B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,eAAe;AACxC,0BAA0B;AAC1B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAA8C;AACpE;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;;;AAGA,OAAO;AACP;AACA,CAAC;AACD,0C;;;;;;;+CC/ZA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;ACNA,uBAAuB;AACvB;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;;;;;;;;;;QAGgBwL,iB,GAAAA,iB;;AAFhB;;IAAYhH,O;;;;;;AACZ,IAAIiH,WAAW,mBAAf;AACO,SAASD,iBAAT,CAA2BE,QAA3B,EAAqCC,QAArC,EAA+CC,GAA/C,EAAoD;AACvD,QAAIA,OAAOH,SAASjL,GAAT,CAAaoL,GAAb,CAAX,EAA8B;AAC1B;AACA,eAAOH,SAAS3L,GAAT,CAAa8L,GAAb,CAAP;AACH;AACD,QAAI,CAACF,QAAL,EAAe;AACX,YAAIE,GAAJ,EAAS;AACL,gBAAIC,QAAQD,IAAIlE,OAAJ,CAAY,MAAZ,EAAoB,EAApB,EAAwBA,OAAxB,CAAgC,MAAhC,EAAwC,EAAxC,EAA4CA,OAA5C,CAAoD,GAApD,EAAyD,GAAzD,EAA8DA,OAA9D,CAAsE,WAAtE,EAAmF,UAACoE,KAAD;AAAA,uBAAW,MAAMA,MAAMC,iBAAN,EAAjB;AAAA,aAAnF,CAAZ;AACA,gBAAIF,UAAU,EAAd,EACI,OAAOA,KAAP;AACJ,mBAAOD,GAAP;AACH;AACD,eAAO,GAAP;AACH;AACD,QAAII,KAAK,IAAT;AACA,QAAIC,KAAK,IAAT;AACA,QAAIC,KAAK,IAAT;AACA,QAAIC,UAAUR,SAASS,KAAT,CAAe,GAAf,CAAd;AACA,QAAIzH,IAAI,SAAJA,CAAI,IAAK;AACT,YAAI0H,EAAE3T,QAAF,KAAe,EAAnB,EACIsT,KAAKK,EAAE7T,KAAP,CADJ,KAGI0T,KAAKG,EAAE7T,KAAP;AACJ,YAAI6T,EAAE3T,QAAF,KAAeiT,QAAnB,EACI,OAAO,IAAP;AACJ,YAAIW,SAASD,EAAE3T,QAAF,CAAW0T,KAAX,CAAiB,GAAjB,CAAb;AACA,YAAIE,OAAOxR,MAAP,IAAiBqR,QAAQrR,MAAzB,IAAmCqR,QAAQI,KAAR,CAAc,UAAC/T,KAAD,EAAQ4I,KAAR;AAAA,mBAAkB5I,UAAU8T,OAAOlL,KAAP,CAA5B;AAAA,SAAd,CAAvC,EACI6K,KAAKI,EAAE7T,KAAP;AACJ,eAAO,KAAP;AACH,KAXD;AAYA,QAAIgU,KAAKd,oBAAoBe,KAApB,GAA4Bf,SAASnL,IAAT,CAAcoE,CAAd,CAA5B,GAA+C+G,SAASnL,IAAT,CAAcoE,CAAd,CAAxD;AACA,QAAI6H,EAAJ,EAAQ;AACJ,YAAIZ,GAAJ,EACIH,SAASpL,GAAT,CAAauL,GAAb,EAAkBY,GAAGhU,KAArB;AACJ,eAAOgU,GAAGhU,KAAV;AACH;AACD,QAAIyT,EAAJ,EACI,OAAOA,EAAP;AACJ,QAAID,EAAJ,EACI,OAAOA,EAAP;AACJ,QAAIE,EAAJ,EACI,OAAOA,EAAP;AACJ,QAAIN,GAAJ,EAAS;AACL,YAAIC,SAAQD,IAAIlE,OAAJ,CAAY,MAAZ,EAAoB,EAApB,EAAwBA,OAAxB,CAAgC,MAAhC,EAAwC,EAAxC,EAA4CA,OAA5C,CAAoD,GAApD,EAAyD,GAAzD,CAAZ;AACAmE,iBAAQA,OAAM,CAAN,IAAWA,OAAMhR,SAAN,CAAgB,CAAhB,EAAmB6M,OAAnB,CAA2B,WAA3B,EAAwC,UAACoE,KAAD;AAAA,mBAAW,MAAMA,MAAMC,iBAAN,EAAjB;AAAA,SAAxC,CAAnB;AACA,YAAIF,WAAU,EAAd,EACI,OAAOA,MAAP;AACJ,eAAOD,GAAP;AACH;AACD,WAAO,GAAP;AACH;AACDpH,QAAQ4F,MAAR,CAAe,+BAAf,EAAgD,EAAhD,EACKsC,MADL,CACY,eADZ,EAC6B,eAD7B,aAC6C,UAACC,QAAD;AAAA,WAAc,UAACC,IAAD,EAAU;AACjE,YAAI,CAACA,IAAL,EACI,OAAO,GAAP;AACJ,eAAOpB,kBAAkBoB,KAAK5C,MAAvB,EAA+B2C,SAASE,QAAT,GAAoBC,OAApB,CAA4BpU,QAA3D,EAAqEkU,KAAKpU,KAA1E,CAAP;AACH,KAJ4C;AAAA,CAD7C;AAMAgM,QAAQ4F,MAAR,CAAe,yBAAf,EAA0C,EAA1C,EACKsC,MADL,CACY,UADZ,EACwB,eADxB,aACwC,UAACC,QAAD;AAAA,WAAc,UAACjB,QAAD,EAAWE,GAAX,EAAmB;AACrE,eAAOJ,kBAAkBE,QAAlB,EAA4BiB,SAASE,QAAT,GAAoBC,OAApB,CAA4BpU,QAAxD,EAAkEkT,GAAlE,CAAP;AACH,KAFuC;AAAA,CADxC,G;;;;;;;AC5DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA,C;;;;;;AC3HA,kD;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA,C;;;;;;;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B,cAAc;AACd;AACA,CAAC;AACD;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,UAAU;AACV,CAAC;;;;;;;AChBD;;;;;;;ACAA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACNA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;ACrCA,kBAAkB,yD;;;;;;;ACAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;IAAYpH,O;;AACZ;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;IAAYuI,K;;;;;;IACCC,oB,WAAAA,oB;AACT;AACA,oCAAc;AAAA;;AACV,aAAKC,iBAAL,GAAyB,EAAzB;AACA,YAAIC,WAAW;AACX,uCADW;AAEX,+BAFW;AAGX,uCAHW;AAIX,uCAJW;AAKX,yCALW;AAMX,sGANW;AAOX,mGAPW;AAQX,oCARW;AASX,qCATW;AAUX,yCAVW;AAWX,mDAXW;AAYX,mCAZW;AAaX,mEAbW;AAcX;AAdW,SAAf;AAgBA,aAAK,IAAIC,SAAT,IAAsBD,QAAtB;AACI,iBAAKD,iBAAL,CAAuBE,SAAvB,IAAoCD,SAASC,SAAT,EAAoBC,SAAxD;AADJ;AAEH;;;;iCAaQC,I,EAAM;AACX,gBAAI7K,MAAMuK,MAAMO,KAAN,CAAYD,IAAZ,CAAV;AACA,iBAAKE,iBAAL,CAAuB/K,GAAvB;AACA,mBAAOA,GAAP;AACH;;;uCACcA,G,EAAKwI,E,EAAIwC,I,EAAM;AAC1B,gBAAIA,KAAKrC,QAAT,EACI,KAAK,IAAItL,GAAT,IAAgB2N,KAAKrC,QAArB;AACIH,mBAAGG,QAAH,CAAYtL,GAAZ,IAAmB2N,KAAKrC,QAAL,CAActL,GAAd,CAAnB;AADJ,aAEJ,IAAI4N,MAAM,EAAV;AACA,gBAAI9S,KAAK6S,KAAKE,WAAL,CAAiBlL,GAAjB,CAAT;AACA,iBAAK,IAAI3C,IAAT,IAAgB2C,GAAhB;AACI,oBAAIA,IAAI3C,IAAJ,MAAalH,SAAb,IAA0B6J,IAAI3C,IAAJ,MAAa,IAAvC,IAA+C,EAAE2C,IAAI3C,IAAJ,aAAoB4M,KAApB,IAA6BjK,IAAI3C,IAAJ,EAAS/E,MAAT,KAAoB,CAAnD,CAA/C,KAAyG,CAAC0S,KAAKG,iBAAN,IAA2B,CAACH,KAAKG,iBAAL,CAAuB9N,IAAvB,CAArI,CAAJ,EAAuK;AACnK,wBAAI+N,MAAMpL,IAAI3C,IAAJ,CAAV;AACA,wBAAI2N,KAAKK,gBAAL,IAAyBL,KAAKK,gBAAL,CAAsBhO,IAAtB,CAA7B,EACI2N,KAAKK,gBAAL,CAAsBhO,IAAtB,EAA2B+N,GAA3B,EAAgC5C,EAAhC,EAAoCnL,IAApC,EAAyC2C,GAAzC,EADJ,KAEK,IAAIgL,KAAKK,gBAAL,IAAyBL,KAAKK,gBAAL,CAAsB,EAAtB,CAA7B,EACDL,KAAKK,gBAAL,CAAsB,EAAtB,EAA0BD,GAA1B,EAA+B5C,EAA/B,EAAmCnL,IAAnC,EAAwC2C,GAAxC,EADC,KAEA;AACD,4BAAIsL,OAAQN,KAAKO,eAAL,IAAwBP,KAAKO,eAAL,CAAqBlO,IAArB,CAAzB,GAAsD2N,KAAKO,eAAL,CAAqBlO,IAArB,CAAtD,GAAkF2N,KAAKQ,aAAL,GAAqB,GAArB,GAA2BC,mBAAmBpO,IAAnB,CAAxH;AACA,4BAAIa,SAAS,IAAb;AACA,4BAAI8M,KAAKU,eAAL,IAAwBV,KAAKU,eAAL,CAAqBrO,IAArB,CAA5B,EAAuD;AACnD,gCAAIiD,IAAI0K,KAAKU,eAAL,CAAqBrO,IAArB,EAA0B2C,IAAI3C,IAAJ,CAA1B,EAAoCA,IAApC,EAAyC2C,GAAzC,EAA8CwI,EAA9C,CAAR;AACAtK,qCAAUoC,aAAa2J,KAAd,GAAuB3J,CAAvB,GAA2B,CAACA,CAAD,CAApC;AACH,yBAHD,MAIK,IAAI0K,KAAKU,eAAL,IAAwBV,KAAKU,eAAL,CAAqB,EAArB,CAA5B,EAAsD;AACvD,gCAAIpL,KAAI0K,KAAKU,eAAL,CAAqB,EAArB,EAAyB1L,IAAI3C,IAAJ,CAAzB,EAAmCA,IAAnC,EAAwC2C,GAAxC,EAA6CwI,EAA7C,CAAR;AACAtK,qCAAUoC,cAAa2J,KAAd,GAAuB3J,EAAvB,GAA2B,CAACA,EAAD,CAApC;AACH;AACD,4BAAIpC,WAAW,IAAf,EAAqB;AACjB,gCAAI8B,IAAI3C,IAAJ,aAAoB4M,KAAxB,EACI/L,SAAS8B,IAAI3C,IAAJ,EAAS6M,MAAT,CAAgB;AAAA,uCAAK5J,MAAMnK,SAAX;AAAA,6BAAhB,EAAsCuH,GAAtC,CAA0C;AAAA,uCAAK,6BAAcpH,oBAAd,CAAmC,OAAOgK,CAAP,KAAa,QAAb,GAAwBA,CAAxB,GAA4BiK,MAAMoB,SAAN,CAAgBrL,CAAhB,CAA/D,CAAL;AAAA,6BAA1C,CAAT,CADJ,KAGIpC,SAAS,CAAC,6BAAc5H,oBAAd,CAAmC,OAAO0J,IAAI3C,IAAJ,CAAP,KAAoB,QAApB,GAA+B2C,IAAI3C,IAAJ,CAA/B,GAA0CkN,MAAMoB,SAAN,CAAgB3L,IAAI3C,IAAJ,CAAhB,CAA7E,CAAD,CAAT;AACP;AACD,4BAAIa,UAAUA,OAAO5F,MAAP,GAAgB,CAA9B,EAAiC;AAC7B2S,mCAAOK,OAAO,GAAd;AAD6B;AAAA;AAAA;;AAAA;AAE7B,gFAAkBpN,MAAlB;AAAA,wCAASlI,KAAT;;AACIiV,2CAAOjV,QAAQ,IAAf;AADJ;AAF6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAI7BiV,kCAAMA,IAAI5S,SAAJ,CAAc,CAAd,EAAiB4S,IAAI3S,MAAJ,GAAa,CAA9B,IAAmC,MAAzC;AACH;AACJ;AACJ;AA/BL,aAgCA,IAAI2S,IAAI3S,MAAJ,GAAa,CAAjB,EACI2S,MAAM9S,KAAK,GAAL,GAAW8S,GAAjB;AACJzC,eAAGI,aAAH,CAAiB/K,GAAjB,CAAqB1F,EAArB,EAAyB8S,GAAzB;AACH;;;0CACiBW,I,EAAM;AACpB,gBAAIC,OAAO,mBAAX;AACA,iBAAKC,yBAAL,CAA+BF,IAA/B,EAAqCC,IAArC;AACA,mBAAOD,IAAP;AACH;;;kDACyBA,I,EAAMC,I,EAAM;AAAA;;AAClC,gBAAI,CAACD,IAAD,IAAS,QAAOA,IAAP,uDAAOA,IAAP,OAAgB,QAAzB,IAAqCC,KAAK7N,GAAL,CAAS4N,IAAT,CAAzC,EACI;AACJ,gBAAIA,gBAAgB3B,KAApB,EACI2B,KAAK1M,OAAL,CAAa;AAAA,uBAAO,MAAK4M,yBAAL,CAA+BC,GAA/B,EAAoCF,IAApC,CAAP;AAAA,aAAb,EADJ,KAEK;AACDA,qBAAK1M,GAAL,CAASyM,IAAT;AACA,oBAAIA,KAAKvV,WAAT,EAAsB;AAClB,wBAAIuU,YAAY,KAAKH,iBAAL,CAAuBmB,KAAKvV,WAA5B,CAAhB;AACA,wBAAI,CAACuU,SAAL,EACI,MAAM,uBAAuBgB,KAAKvV,WAAlC;AACJuV,yBAAKI,SAAL,GAAiBpB,SAAjB;AACH;AACD,qBAAK,IAAIvN,GAAT,IAAgBuO,IAAhB;AACI,wBAAIA,KAAKK,cAAL,CAAoB5O,GAApB,CAAJ,EACI,KAAKyO,yBAAL,CAA+BF,KAAKvO,GAAL,CAA/B,EAA0CwO,IAA1C;AAFR;AAGH;AACJ;;;uCAjFqB7L,G,EAAK;AACvB,gBAAIrC,MAAM,EAAV;AACA,iBAAK,IAAIN,GAAT,IAAgB2C,GAAhB;AACI,oBAAI,sBAAOA,IAAI3C,GAAJ,CAAP,MAAoB,QAAxB,EACIM,IAAIN,GAAJ,IAAWmN,qBAAqB/D,cAArB,CAAoCzG,IAAI3C,GAAJ,CAApC,CAAX,CADJ,KAEK,IAAI,OAAO2C,IAAI3C,GAAJ,CAAP,KAAoB,UAAxB,EACDM,IAAIN,GAAJ,IAAW2C,IAAI3C,GAAJ,CAAX;AAJR,aAKA,OAAOM,GAAP;AACH;;;+BACaqC,G,EAAK;AACf,mBAAOuK,MAAMoB,SAAN,CAAgB3L,GAAhB,CAAP;AACH;;;;;AAwELgC,QAAQ4F,MAAR,CAAe,sCAAf,EAAuD,EAAvD,EACKC,MADL,cACY,UAACC,QAAD;AAAA,WAAcA,SAASC,OAAT,CAAiB,sBAAjB,EAAyCyC,oBAAzC,CAAd;AAAA,CADZ,G;;;;;;;ACvHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACO,IAAI0B,+BAAJ;AACP,CAAC,UAAUA,IAAV,EAAgB;AACbA,OAAKA,KAAK,KAAL,IAAc,CAAnB,IAAwB,KAAxB;AACAA,OAAKA,KAAK,QAAL,IAAiB,CAAtB,IAA2B,QAA3B;AACAA,OAAKA,KAAK,OAAL,IAAgB,CAArB,IAA0B,OAA1B;AACAA,OAAKA,KAAK,MAAL,IAAe,CAApB,IAAyB,MAAzB;AACAA,OAAKA,KAAK,OAAL,IAAgB,CAArB,IAA0B,OAA1B;AACH,CAND,EAMGA,iBAPQA,IAOR,GAASA,OAAO,EAAhB,CANH;;IAOa7S,O,WAAAA,O;;;AACT,qBAAc;AAAA;;AAAA,yIACDsH,SADC;;AAEV,UAAKhH,UAAL,GAAkB,sBAAlB;AACA,UAAKD,QAAL,GAAgB,6BAAhB;AACA,UAAKqM,SAAL,GAAiB,0BAAjB;AACA,UAAK9L,mBAAL,GAA2B,qDAA0BkS,iBAArD;AACA,UAAKC,oBAAL,GAA4B,iDAAwBC,uBAApD;AACA,UAAKC,uBAAL,GAA+B,iDAAwBC,0BAAvD;AACA,UAAKnS,SAAL,GAAiB,qCAAkBoK,sBAAnC;AACA,UAAKC,gBAAL,GAAwB,qCAAkBA,gBAA1C;AACA,UAAKpK,eAAL,GAAuB,qCAAkBA,eAAzC;AACA,UAAKF,UAAL,GAAkB,qBAAUA,UAA5B;AACA,UAAKD,aAAL,GAAqB,qBAAUA,aAA/B;AACA,UAAKsS,kBAAL,GAA0B,EAA1B;AACA,UAAKC,gBAAL,GAAwB,EAAxB;AACA,UAAKC,OAAL,GAAe,EAAf;AACA,UAAKC,mBAAL,GAA2B;AACvB,gEAA0D;AACtD,yDAAiD,IADK;AAEtD,wDAAgD;AAFM,OADnC;AAKvB,oEAA8D;AAC1D,wDAAgD;AADU;AALvC,KAA3B;AASA,UAAKC,OAAL,GAAe,EAAf;AACA,UAAKC,iBAAL,GAAyB,EAAzB;AACA,UAAKC,eAAL,GAAuB,EAAvB;AACA,UAAKzW,WAAL,GAAmB,SAAnB;AA5BU;AA6Bb;;;;2BACM;AAAA;;AACH,UAAI,KAAKwW,iBAAL,KAA2B,EAA/B,EACI,KAAKL,kBAAL,CAAwBtC,MAAxB,CAA+B;AAAA,eAAM6C,GAAGjJ,QAAH,CAAYkJ,QAAZ,CAAqB,cAArB,CAAN;AAAA,OAA/B,EAA2E9N,OAA3E,CAAmF;AAAA,eAAM+N,GAAGC,WAAH,ksBAmB3E,OAAKL,iBAnBsE,kEAoB3E,OAAKC,eApBsE,+CAAN;AAAA,OAAnF;AAsBP;;;sCACiB;AACd,aAAO,KAAKL,gBAAL,CAAsBU,MAAtB,CAA6B,KAAKX,kBAAlC,CAAP;AACH;;;iCACY;AACT,UAAIrK,IAAI,gEAAR;AACAA,QAAElI,mBAAF,GAAwB,KAAKA,mBAA7B;AACAkI,QAAE/H,SAAF,GAAc,KAAKA,SAAnB;AACA+H,QAAE9H,eAAF,GAAoB,KAAKA,eAAzB;AACA8H,QAAEiK,oBAAF,GAAyB,KAAKA,oBAA9B;AACAjK,QAAEmK,uBAAF,GAA4B,KAAKA,uBAAjC;AACAnK,QAAEsC,gBAAF,GAAqB,KAAKA,gBAA1B;AACAtC,QAAEjI,aAAF,GAAkB,KAAKA,aAAvB;AACAiI,QAAEhI,UAAF,GAAe,KAAKA,UAApB;AACA,aAAOgI,CAAP;AACH;;;6BACQqG,E,EAAI;AAAA;;AACT,UAAI,CAACA,GAAGI,aAAH,CAAiB5K,GAAjB,CAAqB,KAAK7F,EAA1B,CAAL,EAAoC;AAChCqQ,WAAGG,QAAH,CAAY,OAAZ,IAAuB,WAAMvP,EAA7B;AACAoP,WAAGG,QAAH,CAAY,MAAZ,IAAsB,UAAKvP,EAA3B;AACAoP,WAAGI,aAAH,CAAiB/K,GAAjB,CAAqB,KAAK1F,EAA1B,QAAkC,KAAKA,EAAvC;AACA,yIAAeqQ,EAAf;AACA,YAAIhL,IAAIgL,GAAGI,aAAH,CAAiBtL,GAAjB,CAAqB,KAAKnF,EAA1B,CAAR;AACA,YAAI,KAAKuU,OAAL,CAAapU,MAAb,GAAsB,CAA1B,EAA6B;AACzBkF,cAAIA,qBAAJ;AAEA,eAAKkP,OAAL,CAAaxN,OAAb,CAAqB,cAAM;AACvB1B,gBAAIA,WAAQuP,GAAG5U,EAAX,SAAJ;AACH,WAFD;AAGAqF,cAAIA,EAAEnF,SAAF,CAAY,CAAZ,EAAemF,EAAElF,MAAF,GAAW,CAA1B,IAA+B,IAAnC;AACA,eAAKoU,OAAL,CACKxC,MADL,CACY;AAAA,mBAAM6C,GAAG7E,MAAH,CAAU5M,cAAV,KAA6B,OAAK4M,MAAL,CAAY5M,cAAzC,IAA2D,OAAK4M,MAAL,CAAYxQ,KAAZ,KAAsBqV,GAAG7E,MAAH,CAAUxQ,KAAjG;AAAA,WADZ,EAEKwH,OAFL,CAEa,cAAM;AACf1B,gBAAIA,kDAETuP,GAAG5U,EAFM,oCAGC4U,GAAG7E,MAAH,CAAU5M,cAHX,SAAJ;AAIA,gBAAIyR,GAAG7E,MAAH,CAAUxQ,KAAd,EACI8F,IAAIA,2BACXuP,GAAG7E,MAAH,CAAUxQ,KADC,OAAJ;AAEJ8F,gBAAIA,WAAJ;AAEH,WAZD;AAaH;AACD,YAAI,KAAKgP,kBAAL,CAAwBlU,MAAxB,GAAiC,CAArC,EAAwC;AACpCkF,cAAIA,gCAAJ;AAEA,eAAKgP,kBAAL,CAAwBtN,OAAxB,CAAgC,cAAM;AAClC1B,gBAAIA,WAAQuP,GAAG5U,EAAX,SAAJ;AACH,WAFD;AAGAqF,cAAIA,EAAEnF,SAAF,CAAY,CAAZ,EAAemF,EAAElF,MAAF,GAAW,CAA1B,IAA+B,IAAnC;AACA,eAAKkU,kBAAL,CACKtC,MADL,CACY;AAAA,mBAAM6C,GAAG7E,MAAH,CAAU5M,cAAV,KAA6B,OAAK4M,MAAL,CAAY5M,cAAzC,IAA2D,OAAK4M,MAAL,CAAYxQ,KAAZ,KAAsBqV,GAAG7E,MAAH,CAAUxQ,KAAjG;AAAA,WADZ,EAEKwH,OAFL,CAEa,cAAM;AACf1B,gBAAIA,6DAETuP,GAAG5U,EAFM,oCAGC4U,GAAG7E,MAAH,CAAU5M,cAHX,SAAJ;AAIA,gBAAIyR,GAAG7E,MAAH,CAAUxQ,KAAd,EACI8F,IAAIA,2BACXuP,GAAG7E,MAAH,CAAUxQ,KADC,OAAJ;AAEJ8F,gBAAIA,WAAJ;AAEH,WAZD;AAaH;AACD,YAAI,KAAKiP,gBAAL,CAAsBnU,MAAtB,GAA+B,CAAnC,EAAsC;AAClCkF,cAAIA,8BAAJ;AAEA,eAAKiP,gBAAL,CAAsBvN,OAAtB,CAA8B,cAAM;AAChC1B,gBAAIA,WAAQuP,GAAG5U,EAAX,SAAJ;AACH,WAFD;AAGAqF,cAAIA,EAAEnF,SAAF,CAAY,CAAZ,EAAemF,EAAElF,MAAF,GAAW,CAA1B,IAA+B,IAAnC;AACA,eAAKmU,gBAAL,CACKvC,MADL,CACY;AAAA,mBAAM6C,GAAG7E,MAAH,CAAU5M,cAAV,KAA6B,OAAK4M,MAAL,CAAY5M,cAAzC,IAA2D,OAAK4M,MAAL,CAAYxQ,KAAZ,KAAsBqV,GAAG7E,MAAH,CAAUxQ,KAAjG;AAAA,WADZ,EAEKwH,OAFL,CAEa,cAAM;AACf1B,gBAAIA,2DAETuP,GAAG5U,EAFM,oCAGC4U,GAAG7E,MAAH,CAAU5M,cAHX,SAAJ;AAIA,gBAAIyR,GAAG7E,MAAH,CAAUxQ,KAAd,EACI8F,IAAIA,2BACXuP,GAAG7E,MAAH,CAAUxQ,KADC,OAAJ;AAEJ8F,gBAAIA,WAAJ;AAEH,WAZD;AAaH;AACD,YAAI,KAAK9F,KAAT,EACI8F,IAAIA,yBACL,KAAK9F,KADA,SAAJ;AAEJ8F,YAAIA,sCACY,oCAAclH,oBAAd,CAAmC,KAAK2D,mBAAxC,CADZ,uCAEa,oCAAc3D,oBAAd,CAAmC,KAAK8V,oBAAxC,CAFb,0CAGgB,oCAAc9V,oBAAd,CAAmC,KAAKgW,uBAAxC,CAHhB,4BAIE,oCAAchW,oBAAd,CAAmC,KAAK8D,SAAxC,CAJF,mCAKS,oCAAc9D,oBAAd,CAAmC,KAAKmO,gBAAxC,CALT,kCAMQ,oCAAcnO,oBAAd,CAAmC,KAAK+D,eAAxC,CANR,6BAOG,oCAAc/D,oBAAd,CAAmC,KAAK6D,UAAxC,CAPH,gCAQM,oCAAc7D,oBAAd,CAAmC,KAAK4D,aAAxC,CARN,iCASO,KAAK4J,QATZ,mCAUQ,KAAKlK,cAVb,uCAWY,KAAKwT,kBAXjB,4BAYC,oCAAc9W,oBAAd,CAAmC,KAAKoD,QAAxC,CAZD,sCAaY,oCAAcpD,oBAAd,CAAmC,2CAAqB+W,MAArB,CAA4B,KAAKV,mBAAjC,CAAnC,CAbZ,0BAcA,oCAAcrW,oBAAd,CAAmC,2CAAqB+W,MAArB,CAA4B,KAAKT,OAAjC,CAAnC,CAdA,oCAeU,oCAActW,oBAAd,CAAmC,2CAAqB+W,MAArB,CAA4B,KAAKR,iBAAjC,CAAnC,CAfV,kCAgBQ,oCAAcvW,oBAAd,CAAmC,2CAAqB+W,MAArB,CAA4B,KAAKP,eAAjC,CAAnC,CAhBR,6BAiBG,oCAAcxW,oBAAd,CAAmC,KAAKqD,UAAxC,CAjBH,QAAJ;AAkBA6O,WAAGI,aAAH,CAAiB/K,GAAjB,CAAqB,KAAK1F,EAA1B,EAA8BqF,CAA9B;AACH;AACJ;;;;;AAELnE,QAAQiU,iBAAR,2tF;;;;;;;ACxLA;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;IAAYtL,O;;AACZ;;;;;;IACauL,qB,WAAAA,qB,GACT,iCAAc;AAAA;;AACV,SAAKC,oBAAL,GAA4B,EAA5B;AACA,SAAKC,uBAAL,GAA+B,EAA/B;AACA,SAAKC,aAAL,GAAqB,EAArB;AACH,C;;IAEQC,W,WAAAA,W,GACT,qBAAYzS,KAAZ,EAAmB;AAAA;;AACf,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKyK,OAAL,GAAe,EAAf;AACH,C;;IAEQiI,M,WAAAA,M,GACT,gBAAYtK,GAAZ,EAAiBuK,WAAjB,EAA8BC,YAA9B,EAA4ChT,SAA5C,EAAuD;AAAA;;AACnD,SAAKwI,GAAL,GAAWA,GAAX;AACA,SAAKuK,WAAL,GAAmBA,WAAnB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKhT,SAAL,GAAiBA,SAAjB;AACA,SAAKiT,qBAAL,GAA6B,EAA7B;AACH,C;;IAEQC,yB,WAAAA,yB;;;AACT,uCAAY3K,aAAZ,EAA2B;AAAA;;AACvB,aAAKA,aAAL,GAAqBA,aAArB;AACH;;;;qCACYgC,K,EAAO4I,K,EAAuC;AAAA,gBAAhC1K,WAAgC,uEAAlB,KAAkB;AAAA,gBAAXC,SAAW;;AACvD,mBAAO,KAAKH,aAAL,CAAmBY,IAAnB,CAAwB,iCAAxB,EAA2D,cAA3D,EAA2E,CAACoB,KAAD,EAAQ4I,KAAR,EAAe1K,WAAf,CAA3E,EAAwGC,SAAxG,CAAP;AACH;;;;;AAELwK,0BAA0B7B,iBAA1B;;IAsDM+B,c;AACF,8BAAc;AAAA;;AACV,aAAKC,QAAL,GAAgB,oCAAhB;AACA,aAAKC,cAAL,GAAsB,0BAAS;AAAA,mBAAM,gCAAN;AAAA,SAAT,CAAtB;AACA,aAAKC,gBAAL,GAAwB,0BAAS;AAAA,mBAAM,mBAAN;AAAA,SAAT,CAAxB;AACA,aAAKC,mBAAL,GAA2B,0BAAS;AAAA,mBAAM,mBAAN;AAAA,SAAT,CAA3B;AACA,aAAKC,eAAL,GAAuB,0BAAS;AAAA,mBAAM,mBAAN;AAAA,SAAT,CAAvB;AACA,aAAKC,iBAAL,GAAyB,0BAAS;AAAA,mBAAM,gCAAN;AAAA,SAAT,CAAzB;AACH;;;;8CACqBC,M,EAAQ3K,Q,EAAU;AAAA;;AACpC2K,mBAAO9I,OAAP,CAAeC,QAAf,CAAwB1G,OAAxB,CAAgC,mBAAW;AACvC,oBAAI/G,KAAKH,QAAQ,IAAR,EAAchC,KAAvB;AACA,sBAAKwY,iBAAL,CAAuBhP,GAAvB,CAA2BrH,EAA3B,EAA+BgH,GAA/B,CAAmC2E,QAAnC;AACA,oBAAI9L,QAAQ,WAAR,CAAJ,EACI,MAAKqW,gBAAL,CAAsB7O,GAAtB,CAA0BrH,EAA1B,EAA8BgH,GAA9B,CAAkC,iBAAYnI,QAAZ,CAAqByB,eAArB,CAAqCT,QAAQ,WAAR,CAArC,CAAlC;AACJ,oBAAIA,QAAQ,UAAR,CAAJ,EACI,MAAKuW,eAAL,CAAqB/O,GAArB,CAAyBrH,EAAzB,EAA6BgH,GAA7B,CAAiC,iBAAYnI,QAAZ,CAAqByB,eAArB,CAAqCT,QAAQ,UAAR,CAArC,CAAjC;AACJ,oBAAIA,QAAQ,cAAR,CAAJ,EACI,MAAKsW,mBAAL,CAAyB9O,GAAzB,CAA6BrH,EAA7B,EAAiCgH,GAAjC,CAAqC,iBAAYnI,QAAZ,CAAqByB,eAArB,CAAqCT,QAAQ,cAAR,CAArC,CAArC;AACJ,oBAAIA,QAAQ,SAAR,CAAJ,EAAwB;AACpB,0BAAKoW,cAAL,CAAoB5O,GAApB,CAAwBrH,EAAxB,EAA4BgH,GAA5B,CAAgCnH,QAAQ,SAAR,EAAmBhC,KAAnD;AACA,wBAAIgC,QAAQ,YAAR,CAAJ,EACI,MAAKqW,gBAAL,CAAsB7O,GAAtB,CAA0BxH,QAAQ,SAAR,EAAmBhC,KAA7C,EAAoDmJ,GAApD,CAAwD,iBAAYnI,QAAZ,CAAqByB,eAArB,CAAqCT,QAAQ,YAAR,CAArC,CAAxD;AACP;AACJ,aAdD;AAeA,iBAAKmW,QAAL,CAAcO,WAAd,CAA0BD,MAA1B;AACA,iBAAKN,QAAL,CAAcQ,SAAd,CAAwBlR,IAAxB,CAA6B,UAACmR,KAAD,EAAQzW,EAAR,EAAe;AACxC,oBAAI0W,gBAAgB,MAAKL,iBAAL,CAAuBlR,GAAvB,CAA2BnF,EAA3B,CAApB;AACA,oBAAI2W,aAAa,MAAKV,cAAL,CAAoB9Q,GAApB,CAAwBnF,EAAxB,CAAjB;AACA,oBAAI4W,eAAe,MAAKV,gBAAL,CAAsB/Q,GAAtB,CAA0BnF,EAA1B,CAAnB;AACA,oBAAI6W,kBAAkB,MAAKV,mBAAL,CAAyBhR,GAAzB,CAA6BnF,EAA7B,CAAtB;AACA,oBAAI8W,cAAc,MAAKV,eAAL,CAAqBjR,GAArB,CAAyBnF,EAAzB,CAAlB;AACAyW,sBAAMnR,IAAN,CAAW,eAAO;AACd,wBAAIyR,iBAAiB,MAAKV,iBAAL,CAAuBlR,GAAvB,CAA2B6R,GAA3B,CAArB;AACA,wBAAIN,kBAAkBK,cAAtB,EAAsC;AAClC,4BAAIL,aAAJ,EAAmB;AACf,gCAAIK,cAAJ,EACIL,cAAcO,IAAd,CAAmBF,cAAnB;AACJ,kCAAKV,iBAAL,CAAuB3Q,GAAvB,CAA2BsR,GAA3B,EAAgCN,aAAhC;AACH,yBAJD,MAKK,IAAIK,cAAJ,EACD,MAAKV,iBAAL,CAAuB3Q,GAAvB,CAA2B1F,EAA3B,EAA+B+W,cAA/B;AACP;AACD,wBAAIG,cAAc,MAAKjB,cAAL,CAAoB9Q,GAApB,CAAwB6R,GAAxB,CAAlB;AACA,wBAAIL,eAAeO,WAAnB,EAAgC;AAC5B,4BAAIP,UAAJ,EAAgB;AACZ,gCAAIO,WAAJ,EACIP,WAAWM,IAAX,CAAgBC,WAAhB;AACJ,kCAAKjB,cAAL,CAAoBvQ,GAApB,CAAwBsR,GAAxB,EAA6BL,UAA7B;AACH,yBAJD,MAKK,IAAIO,WAAJ,EACD,MAAKjB,cAAL,CAAoBvQ,GAApB,CAAwB1F,EAAxB,EAA4BkX,WAA5B;AACP;AACD,wBAAIC,gBAAgB,MAAKjB,gBAAL,CAAsB/Q,GAAtB,CAA0B6R,GAA1B,CAApB;AACA,wBAAIJ,iBAAiBO,aAArB,EAAoC;AAChC,4BAAIP,YAAJ,EAAkB;AACd,gCAAIO,aAAJ,EACIP,aAAaK,IAAb,CAAkBE,aAAlB;AACJ,kCAAKjB,gBAAL,CAAsBxQ,GAAtB,CAA0BsR,GAA1B,EAA+BJ,YAA/B;AACH,yBAJD,MAKK,IAAIO,aAAJ,EACD,MAAKjB,gBAAL,CAAsBxQ,GAAtB,CAA0B1F,EAA1B,EAA8BmX,aAA9B;AACP;AACD,wBAAIC,mBAAmB,MAAKjB,mBAAL,CAAyBhR,GAAzB,CAA6B6R,GAA7B,CAAvB;AACA,wBAAIH,oBAAoBO,gBAAxB,EAA0C;AACtC,4BAAIP,eAAJ,EAAqB;AACjB,gCAAIO,gBAAJ,EACIP,gBAAgBI,IAAhB,CAAqBG,gBAArB;AACJ,kCAAKjB,mBAAL,CAAyBzQ,GAAzB,CAA6BsR,GAA7B,EAAkCH,eAAlC;AACH,yBAJD,MAKK,IAAIO,gBAAJ,EACD,MAAKjB,mBAAL,CAAyBzQ,GAAzB,CAA6B1F,EAA7B,EAAiCoX,gBAAjC;AACP;AACD,wBAAIC,eAAe,MAAKjB,eAAL,CAAqBjR,GAArB,CAAyB6R,GAAzB,CAAnB;AACA,wBAAIF,gBAAgBO,YAApB,EAAkC;AAC9B,4BAAIP,WAAJ,EAAiB;AACb,gCAAIO,YAAJ,EACIP,YAAYG,IAAZ,CAAiBI,YAAjB;AACJ,kCAAKjB,eAAL,CAAqB1Q,GAArB,CAAyBsR,GAAzB,EAA8BF,WAA9B;AACH,yBAJD,MAKK,IAAIO,YAAJ,EACD,MAAKjB,eAAL,CAAqB1Q,GAArB,CAAyB1F,EAAzB,EAA6BqX,YAA7B;AACP;AACJ,iBAnDD;AAoDH,aA1DD;AA2DH;;;;;IAEQC,+B,WAAAA,+B;;;AACT;AACA,6CAAY7K,EAAZ,EAAgBD,kBAAhB,EAAoCG,kBAApC,EAAwD;AAAA;;AACpD,aAAKF,EAAL,GAAUA,EAAV;AACA,aAAKD,kBAAL,GAA0BA,kBAA1B;AACA,aAAKG,kBAAL,GAA0BA,kBAA1B;AACH;;;;qCAiCYO,K,EAAO4I,K,EAAuC;AAAA;;AAAA,gBAAhC1K,WAAgC,uEAAlB,KAAkB;AAAA,gBAAXC,SAAW;;AACvD,gBAAIkM,IAAI,KAAK9K,EAAL,CAAQQ,KAAR,EAAR;AACA,gBAAIO,UAAU,IAAI4H,qBAAJ,EAAd;AACA,gBAAIxI,gBAAgB,KAAKD,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsChL,mBAA1D;AACA8K,4BAAgBA,cAAcG,OAAd,CAAsB,UAAtB,EAAkC,oCAAc5O,oBAAd,CAAmC+O,KAAnC,CAAlC,CAAhB;AACAN,4BAAgBA,cAAcG,OAAd,CAAsB,UAAtB,EAAkC,KAAK+I,KAAvC,CAAhB;AACAlJ,4BAAgBA,cAAcG,OAAd,CAAsB,gBAAtB,EAAwC,KAAKJ,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCiI,WAAtC,GAAoD,KAAKpI,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCiI,WAA1F,GAAwG,EAAhJ,CAAhB;AACAnI,4BAAgBA,cAAcG,OAAd,CAAsB,aAAtB,EAAqC,KAAKJ,kBAAL,CAAwBE,KAAxB,CAA8B9O,QAAnE,CAAhB;AACA,gBAAIyZ,KAAK,IAAIzB,cAAJ,EAAT;AACA,gBAAI0B,eAAe,gCAAnB;AACA,gBAAIC,mBAAmB,KAAKlL,kBAAL,CAAwBU,KAAxB,CAA8B,KAAKP,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCnB,QAApE,EAA8EiB,aAA9E,EAA6F,EAAEO,SAAS9B,SAAX,EAA7F,EAAqHE,IAArH,CAA0H,UAACgC,QAAD,EAAc;AAC3JiK,mBAAGG,qBAAH,CAAyBpK,QAAzB,EAAmC,OAAKZ,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCnB,QAAzE;AACA6B,wBAAQ6H,oBAAR,GAA+BiC,gCAAgCM,YAAhC,CAA6CJ,EAA7C,EAAiDC,YAAjD,EAA+D,OAAK9K,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCc,SAArG,EAAgH,OAAKjB,kBAAL,CAAwBE,KAAxB,CAA8B9O,QAA9I,CAA/B;AACA,oBAAI,CAACqN,WAAL,EACImM,EAAEhJ,OAAF,CAAUf,OAAV,EADJ,KAGI+J,EAAE1J,MAAF,CAAS,EAAEnC,cAAc,SAAhB,EAA2BC,UAAU,OAAKgB,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsC9M,EAA3E,EAA+EwN,SAASA,OAAxF,EAAT;AACP,aAPsB,CAAvB;AAQA,gBAAIpC,WAAJ,EAAiB;AACboC,wBAAQ6H,oBAAR,CAA6BtO,OAA7B,CAAqC;AAAA,2BAAM8Q,GAAGrK,OAAH,CAAWzG,OAAX,CAAmB;AAAA,+BAAKiF,EAAEb,GAAF,CAAMpE,OAAN,CAAc;AAAA,mCAAM0Q,aAAazQ,GAAb,CAAiBhH,GAAGnC,KAApB,CAAN;AAAA,yBAAd,CAAL;AAAA,qBAAnB,CAAN;AAAA,iBAArC;AACA;AACA,oBAAIia,uBAAuB,2BAA3B;AACA,qBAAKrL,EAAL,CAAQwB,GAAR,CAAY,KAAKtB,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCoB,eAAtC,GAAwD3I,GAAxD,CAA4D,iCAAyB;AAC7FqH,oCAAgBmL,sBAAsBjW,mBAAtC;AACA8K,oCAAgBA,cAAcG,OAAd,CAAsB,UAAtB,EAAkC,oCAAc5O,oBAAd,CAAmC+O,KAAnC,CAAlC,CAAhB;AACAN,oCAAgBA,cAAcG,OAAd,CAAsB,UAAtB,EAAkC,KAAK+I,KAAvC,CAAhB;AACAlJ,oCAAgBA,cAAcG,OAAd,CAAsB,gBAAtB,EAAwCgL,sBAAsBhD,WAAtB,GAAoCgD,sBAAsBhD,WAA1D,GAAwE,EAAhH,CAAhB;AACAnI,oCAAgBA,cAAcG,OAAd,CAAsB,aAAtB,EAAqC,OAAKJ,kBAAL,CAAwBE,KAAxB,CAA8B9O,QAAnE,CAAhB;AACA,2BAAO,OAAKyO,kBAAL,CAAwBU,KAAxB,CAA8B6K,sBAAsBpM,QAApD,EAA8DiB,aAA9D,EAA6E,EAAEO,SAAS9B,SAAX,EAA7E,EAAqGE,IAArG,CAA0G,UAACgC,QAAD,EAAc;AAC3H,4BAAIA,SAASC,OAAT,CAAiBC,QAAjB,CAA0BtN,MAA1B,KAAqC,CAAzC,EAA4C;AACxC,mCAAOuX,iBAAiBnM,IAAjB,CAAsB,YAAM;AAC/BiM,mCAAGG,qBAAH,CAAyBpK,QAAzB,EAAmCwK,sBAAsB/X,EAAzD;AACAwN,wCAAQ+H,aAAR,GAAwB+B,gCAAgCM,YAAhC,CAA6CJ,EAA7C,EAAiDC,YAAjD,EAA+D,OAAK9K,kBAAL,CAAwBE,KAAxB,CAA8BC,OAA9B,CAAsCc,SAArG,EAAgH,OAAKjB,kBAAL,CAAwBE,KAAxB,CAA8B9O,QAA9I,CAAxB;AACAwZ,kCAAE1J,MAAF,CAAS,EAAEnC,cAAc,QAAhB,EAA0BC,UAAUoM,sBAAsB/X,EAA1D,EAA8DwN,SAASA,OAAvE,EAAT;AACH,6BAJM,CAAP;AAKH;AACJ,qBARM,EAQJ,UAACa,KAAD;AAAA,+BAAWkJ,EAAE1J,MAAF,CAAS,EAAEnC,cAAc,QAAhB,EAA0BC,UAAUoM,sBAAsB/X,EAA1D,EAA8DqO,OAAO,2CAAqBC,cAArB,CAAoCD,KAApC,CAArE,EAAT,CAAX;AAAA,qBARI,CAAP;AASH,iBAfW,CAAZ,EAeI9C,IAfJ,CAeS,YAAM;AACXyM,4BAAQC,GAAR,CAAYzK,OAAZ;AACA+J,sBAAEhJ,OAAF,CAAUf,OAAV;AACH,iBAlBD;AAmBH;AACD,mBAAO+J,EAAE/I,OAAT;AACH;;;qCA3EmBgJ,E,EAAIU,W,EAAatK,S,EAAWoD,Q,EAAU;AACtD,gBAAImH,MAAM,EAAV;AACA,gBAAIC,aAAa,2BAAjB;AACA,gBAAIC,iBAAiB,2BAArB;AACAb,eAAGxB,QAAH,CAAYQ,SAAZ,CAAsBlR,IAAtB,CAA2B,UAACmR,KAAD,EAAQzW,EAAR,EAAe;AACtC,oBAAI,CAACyW,MAAM1Q,MAAN,GAAeJ,IAAf,CAAoB;AAAA,2BAAKuS,YAAYrS,GAAZ,CAAgBsC,CAAhB,CAAL;AAAA,iBAApB,CAAL,EAAmD;AAC/C,wBAAImQ,WAAW7B,MAAM1Q,MAAN,GAAeH,IAAf,CAAoB;AAAA,+BAAOwS,WAAWvS,GAAX,CAAe0S,GAAf,CAAP;AAAA,qBAApB,CAAf;AACA,wBAAI,CAACD,QAAL,EAAe;AACX,4BAAIhC,SAAS,IAAIb,MAAJ,CAAWgB,MAAM1Q,MAAN,GAAeR,GAAf,CAAmB;AAAA,mCAAO,iBAAY1G,QAAZ,CAAqB4B,SAArB,CAA+BuW,GAA/B,CAAP;AAAA,yBAAnB,CAAX,EAA2EQ,GAAGnB,iBAAH,CAAqBlR,GAArB,CAAyBnF,EAAzB,EAA6B+F,MAA7B,EAA3E,EAAkHyR,GAAGrB,mBAAH,CAAuBhR,GAAvB,CAA2BnF,EAA3B,EAA+B+F,MAA/B,GAAwC,CAAxC,CAAlH,EAA8JyR,GAAGtB,gBAAH,CAAoBrQ,GAApB,CAAwB7F,EAAxB,IAA8BwX,GAAGtB,gBAAH,CAAoB/Q,GAApB,CAAwBnF,EAAxB,EAA4B+F,MAA5B,GAAqC,CAArC,CAA9B,GAAwE,IAAtO,CAAb;AACA,4BAAIyS,YAAYhB,GAAGpB,eAAH,CAAmBvQ,GAAnB,CAAuB7F,EAAvB,IAA6BwX,GAAGpB,eAAH,CAAmBjR,GAAnB,CAAuBnF,EAAvB,EAA2B+F,MAA3B,EAA7B,GAAmE,EAAnF;AACA,4BAAIyR,GAAGtB,gBAAH,CAAoBrQ,GAApB,CAAwB7F,EAAxB,CAAJ,EAAiC;AAC7B,gCAAIyY,aAAajB,GAAGtB,gBAAH,CAAoB/Q,GAApB,CAAwBnF,EAAxB,EAA4B+F,MAA5B,EAAjB;AACAyS,wCAAYA,UAAUxD,MAAV,CAAiByD,WAAWC,KAAX,CAAiB,CAAjB,CAAjB,CAAZ;AACH;AACDpC,+BAAOV,qBAAP,CAA6B,UAA7B,IAA2C4C,UAAUrY,MAAV,GAAmB,CAAnB,GAAuBqY,SAAvB,GAAmC,IAA9E;AACAlC,+BAAOV,qBAAP,CAA6B,MAA7B,IAAuC4B,GAAGvB,cAAH,CAAkB9Q,GAAlB,CAAsBnF,EAAtB,EAA0B+F,MAA1B,GAAmCR,GAAnC,CAAuC;AAAA,mCAAK,iBAAY1G,QAAZ,CAAqB4B,SAArB,CAA+B0H,CAA/B,CAAL;AAAA,yBAAvC,CAAvC;AACAmO,+BAAOV,qBAAP,CAA6B,WAA7B,IAA4C4B,GAAGvB,cAAH,CAAkB9Q,GAAlB,CAAsBnF,EAAtB,EAA0B+F,MAA1B,GAAmCR,GAAnC,CAAuC,aAAK;AACpF,mCAAOiS,GAAGtB,gBAAH,CAAoBrQ,GAApB,CAAwB7F,EAAxB,IAA8BwX,GAAGtB,gBAAH,CAAoB/Q,GAApB,CAAwBnF,EAAxB,EAA4B+F,MAA5B,GAAqC,CAArC,CAA9B,GAAwE,IAA/E;AACH,yBAF2C,CAA5C;AAGA0Q,8BAAMnR,IAAN,CAAW;AAAA,mCAAO8S,WAAW1S,GAAX,CAAe6S,GAAf,EAAoBjC,MAApB,CAAP;AAAA,yBAAX;AACAkB,2BAAGvB,cAAH,CAAkB9Q,GAAlB,CAAsBnF,EAAtB,EAA0BsF,IAA1B,CAA+B;AAAA,mCAAO+S,eAAehR,GAAf,CAAmBsR,GAAnB,EAAwB,YAAM;AAChE,oCAAIC,SAAShL,UAAUrE,QAAV,CAAmB1D,GAAnB,CAAuB8S,GAAvB,IAA8B,gDAAkB/K,UAAUrE,QAAV,CAAmBpE,GAAnB,CAAuBwT,GAAvB,EAA4BtJ,MAA9C,EAAsD2B,QAAtD,CAA9B,GACRwG,GAAGtB,gBAAH,CAAoBrQ,GAApB,CAAwB8S,GAAxB,IAA+BnB,GAAGtB,gBAAH,CAAoB/Q,GAApB,CAAwBwT,GAAxB,EAA6B5S,MAA7B,GAAsC,CAAtC,EAAyClI,KAAxE,GAAgF8a,GADrF;AAEA,oCAAIE,cAAc,IAAIrD,WAAJ,CAAgBoD,MAAhB,CAAlB;AACAT,oCAAIrQ,IAAJ,CAAS+Q,WAAT;AACA,uCAAOA,WAAP;AACH,6BANqC,EAMnCrL,OANmC,CAM3B1F,IAN2B,CAMtBwO,MANsB,CAAP;AAAA,yBAA/B;AAOH;AACJ;AACJ,aAzBD;AA0BA,mBAAO6B,GAAP;AACH;;;;;AA8CLtO,QAAQ4F,MAAR,CAAe,4CAAf,EAA6D,EAA7D,EACKC,MADL,cACY,UAACC,QAAD,EAAc;AACtBA,aAASC,OAAT,CAAiB,2BAAjB,EAA8CiG,yBAA9C;AACH,CAHD,G;;;;;;;ACvQA;;;;;;;;;;;;;;;;;;;AACA;;IAAYhM,O;;AACZ;;;;;;IACaiP,kB,WAAAA,kB,GACT,4BAAY/J,QAAZ,EAAsBhJ,MAAtB,EAA8BgT,GAA9B,EAAmCC,GAAnC,EAAwC;AAAA;;AACpC,SAAKjK,QAAL,GAAgBA,QAAhB;AACA,SAAKhJ,MAAL,GAAcA,MAAd;AACA,SAAKgT,GAAL,GAAWA,GAAX;AACA,SAAKC,GAAL,GAAWA,GAAX;AACH,C;;IAEQC,uB,WAAAA,uB;;;AACT;AACA,qCAAY/N,aAAZ,EAA2B;AAAA;;AACvB,aAAKA,aAAL,GAAqBA,aAArB;AACH;;;;2CACkB6M,qB,EAAuB1M,S,EAAW;AACjD,mBAAO,KAAKH,aAAL,CAAmBY,IAAnB,CAAwB,+BAAxB,EAAyD,oBAAzD,EAA+E,CAACiM,sBAAsBpM,QAAvB,EAAiCoM,sBAAsB9D,oBAAvD,CAA/E,EAA6J5I,SAA7J,CAAP;AACH;;;8CACqB0M,qB,EAAuB1M,S,EAAW;AACpD,mBAAO,KAAKH,aAAL,CAAmBY,IAAnB,CAAwB,+BAAxB,EAAyD,uBAAzD,EAAkF,CAACiM,sBAAsBpM,QAAvB,EAAiCoM,sBAAsB5D,uBAAvD,CAAlF,EAAmK9I,SAAnK,CAAP;AACH;;;;;AAEL4N,wBAAwB/E,uBAAxB;AAWA+E,wBAAwB7E,0BAAxB;;IAca8E,6B,WAAAA,6B;;;AACT;AACA,2CAAY1M,kBAAZ,EAAgC;AAAA;;AAC5B,aAAKA,kBAAL,GAA0BA,kBAA1B;AACH;;;;2CACkBb,Q,EAAUuB,K,EAAO7B,S,EAAW;AAC3C,mBAAO,KAAKmB,kBAAL,CAAwBU,KAAxB,CAA8BvB,QAA9B,EAAwCuB,KAAxC,EAA+C7B,SAA/C,EAA0DE,IAA1D,CAA+D,oBAAY;AAC9E,oBAAI/F,MAAM,2BAAV;AAD8E;AAAA;AAAA;;AAAA;AAE9E,oEAAc+H,SAASC,OAAT,CAAiBC,QAA/B;AAAA,4BAASC,CAAT;;AACIlI,4BAAIE,GAAJ,CAAQgI,EAAE,IAAF,EAAQ7P,KAAhB,EAAuB6P,EAAE,WAAF,EAAe7P,KAAtC;AADJ;AAF8E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAI9E,uBAAO2H,GAAP;AACH,aALM,CAAP;AAMH;;;8CACqBmG,Q,EAAUuB,K,EAAO7B,S,EAAW;AAC9C,mBAAO,KAAKmB,kBAAL,CAAwBU,KAAxB,CAA8BvB,QAA9B,EAAwCuB,KAAxC,EAA+C7B,SAA/C,EAA0DE,IAA1D,CAA+D,oBAAY;AAC9E,oBAAI/F,MAAM,2BAAV;AAD8E;AAAA;AAAA;;AAAA;AAE9E,qEAAc+H,SAASC,OAAT,CAAiBC,QAA/B;AAAA,4BAASC,CAAT;;AACIlI,4BAAI6B,GAAJ,CAAQqG,EAAE,SAAF,IAAeA,EAAE,SAAF,EAAa7P,KAA5B,GAAoC,EAA5C,EAAgD;AAAA,mCAAM,2BAAN;AAAA,yBAAhD,EAAkE6H,GAAlE,CAAsEgI,EAAE,YAAF,EAAgB7P,KAAtF,EAA6F,IAAIib,kBAAJ,CAAuBpL,EAAE,UAAF,EAAc7P,KAArC,EAA4C6P,EAAE,QAAF,EAAY7P,KAAxD,EAA+D6P,EAAE,KAAF,EAAS7P,KAAxE,EAA+E6P,EAAE,KAAF,EAAS7P,KAAxF,CAA7F;AADJ;AAF8E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAI9E,uBAAO2H,GAAP;AACH,aALM,CAAP;AAMH;;;;;AAELqE,QAAQ4F,MAAR,CAAe,0CAAf,EAA2D,EAA3D,EACKC,MADL,cACY,UAACC,QAAD,EAAc;AACtBA,aAASC,OAAT,CAAiB,yBAAjB,EAA4CqJ,uBAA5C;AACAtJ,aAASC,OAAT,CAAiB,+BAAjB,EAAkDsJ,6BAAlD;AACH,CAJD,G;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AC5vDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC7SA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,iHAAiH,mBAAmB,EAAE,mBAAmB,4JAA4J;;AAErT,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA,CAAC;AACD;AACA,E;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;ACxCA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;;;;;;;ACLA;AACA;AACA;;AAEA;AACA,oEAAoE,iCAAiC;AACrG;;;;;;;ACNA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA,cAAc;;;;;;;;ACAd;;;;;;;;;;;QAEgB5I,Q,GAAAA,Q;QAaA6I,e,GAAAA,e;QAQAC,I,GAAAA,I;QAYAC,O,GAAAA,O;;AAlChB;;;;AACO,SAAS/I,QAAT,CAAkBD,EAAlB,EAAsB;AACzB,QAAI3I,IAAI,EAAR;AACA,SAAK,IAAIxC,GAAT,IAAgBmL,GAAGG,QAAnB;AACI9I,YAAIA,IAAI,UAAJ,GAAiBxC,GAAjB,GAAuB,KAAvB,GAA+BmL,GAAGG,QAAH,CAAYtL,GAAZ,CAA/B,GAAkD,OAAtD;AADJ,KAEAmL,GAAGI,aAAH,CAAiB1K,MAAjB,GAA0BgB,OAA1B,CAAkC;AAAA,eAAOW,IAAIA,IAAIY,IAAIpI,SAAJ,CAAc,CAAd,EAAiBoI,IAAInI,MAAJ,GAAa,CAA9B,CAAJ,GAAuC,QAAlD;AAAA,KAAlC;AACA,WAAOuH,CAAP;AACH;;IACY4R,a,WAAAA,a,GACT,yBAAc;AAAA;;AACV,SAAK9I,QAAL,GAAgB,EAAhB;AACA,SAAKC,aAAL,GAAqB,2BAArB;AACH,C;;AAEE,SAAS0I,eAAT,CAAyB5I,CAAzB,EAA4B;AAC/B,QAAIF,KAAK,IAAIiJ,aAAJ,EAAT;AACA/I,MAAED,QAAF,CAAWD,EAAX;AACA,WAAOC,SAASD,EAAT,CAAP;AACH;AACD,IAAIkJ,MAAM,EAAV;AACA,KAAK,IAAIzK,IAAI,CAAb,EAAgBA,IAAI,GAApB,EAAyBA,GAAzB;AACIyK,QAAIzK,CAAJ,IAAS,CAACA,IAAI,EAAJ,GAAS,GAAT,GAAe,EAAhB,IAAsBA,EAAE0K,QAAF,CAAW,EAAX,CAA/B;AADJ,CAEO,SAASJ,IAAT,GAAgB;AACnB;AACA,QAAIK,KAAKC,KAAKC,MAAL,KAAgB,UAAhB,GAA6B,CAAtC;AACA,QAAIC,KAAKF,KAAKC,MAAL,KAAgB,UAAhB,GAA6B,CAAtC;AACA,QAAIE,KAAKH,KAAKC,MAAL,KAAgB,UAAhB,GAA6B,CAAtC;AACA,QAAIG,KAAKJ,KAAKC,MAAL,KAAgB,UAAhB,GAA6B,CAAtC;AACA,WAAOJ,IAAIE,KAAK,IAAT,IAAiBF,IAAIE,MAAM,CAAN,GAAU,IAAd,CAAjB,GAAuCF,IAAIE,MAAM,EAAN,GAAW,IAAf,CAAvC,GAA8DF,IAAIE,MAAM,EAAN,GAAW,IAAf,CAA9D,GAAqF,GAArF,GACHF,IAAIK,KAAK,IAAT,CADG,GACcL,IAAIK,MAAM,CAAN,GAAU,IAAd,CADd,GACoC,GADpC,GAC0CL,IAAIK,MAAM,EAAN,GAAW,IAAX,GAAkB,IAAtB,CAD1C,GACwEL,IAAIK,MAAM,EAAN,GAAW,IAAf,CADxE,GAC+F,GAD/F,GAEHL,IAAIM,KAAK,IAAL,GAAY,IAAhB,CAFG,GAEqBN,IAAIM,MAAM,CAAN,GAAU,IAAd,CAFrB,GAE2C,GAF3C,GAEiDN,IAAIM,MAAM,EAAN,GAAW,IAAf,CAFjD,GAEwEN,IAAIM,MAAM,EAAN,GAAW,IAAf,CAFxE,GAGHN,IAAIO,KAAK,IAAT,CAHG,GAGcP,IAAIO,MAAM,CAAN,GAAU,IAAd,CAHd,GAGoCP,IAAIO,MAAM,EAAN,GAAW,IAAf,CAHpC,GAG2DP,IAAIO,MAAM,EAAN,GAAW,IAAf,CAHlE;AAIA;AACH;AACM,SAAST,OAAT,CAAiBvS,GAAjB,EAAoC;AAAA,QAAdiT,OAAc,uEAAJ,EAAI;;AACvC,WAAOjT,IAAIkT,MAAJ,CAAW,UAACC,IAAD,EAAOC,SAAP;AAAA,eAAqBD,KAAKjF,MAAL,CAAYlD,MAAMqI,OAAN,CAAcD,SAAd,IAA2Bb,QAAQa,SAAR,CAA3B,GAAgDA,SAA5D,CAArB;AAAA,KAAX,EAAwGH,OAAxG,CAAP;AACH,C;;;;;;ACrCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA,mEAAmE,gBAAgB;AACnF;AACA;AACA,GAAG,4CAA4C,gCAAgC;AAC/E;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;IACa3X,4B,WAAAA,4B;;;AACT,0CAAc;AAAA;;AAAA,mLACDoG,SADC;;AAEV,UAAK4R,mBAAL,GAA2B,EAA3B;AACA,UAAKtY,mBAAL,GAA2B,qDAA0BkS,iBAArD;AACA,UAAK/R,SAAL,GAAiB,qCAAkBoK,sBAAnC;AACA,UAAKC,gBAAL,GAAwB,qCAAkBA,gBAA1C;AACA,UAAKpK,eAAL,GAAuB,qCAAkBA,eAAzC;AACA,UAAK+R,oBAAL,GAA4B,iDAAwBC,uBAApD;AACA,UAAKC,uBAAL,GAA+B,iDAAwBC,0BAAvD;AACA,UAAKpS,UAAL,GAAkB,qBAAUA,UAA5B;AACA,UAAKD,aAAL,GAAqB,qBAAUA,aAA/B;AACA,UAAK7D,WAAL,GAAmB,8BAAnB;AAXU;AAYb;;;;6BACQmS,E,EAAI;AACT,UAAI,CAACA,GAAGI,aAAH,CAAiB5K,GAAjB,CAAqB,KAAK7F,EAA1B,CAAL,EAAoC;AAChCqQ,WAAGG,QAAH,CAAY,OAAZ,IAAuB,WAAMvP,EAA7B;AACAoP,WAAGI,aAAH,CAAiB/K,GAAjB,CAAqB,KAAK1F,EAA1B,QAAkC,KAAKA,EAAvC;AACA,mLAAeqQ,EAAf;AACA,YAAIhL,IAAIgL,GAAGI,aAAH,CAAiBtL,GAAjB,CAAqB,KAAKnF,EAA1B,CAAR;AACA,YAAIqa,OAAO,KAAKD,mBAAL,CAAyBrI,MAAzB,CAAgC;AAAA,iBAAKuI,CAAL;AAAA,SAAhC,CAAX;AACA,YAAID,KAAKla,MAAL,KAAgB,CAApB,EAAuB;AACnBkF,cAAIA,iCAAJ;AAEAgV,eAAKtT,OAAL,CAAa;AAAA,mBAAK1B,IAAIA,WAAQiV,CAAR,SAAT;AAAA,WAAb;AACAjV,cAAIA,EAAEnF,SAAF,CAAY,CAAZ,EAAemF,EAAElF,MAAF,GAAW,CAA1B,IAA+B,IAAnC;AACH;AACDkF,YAAIA,sCACY,oCAAclH,oBAAd,CAAmC,KAAK2D,mBAAxC,CADZ,uCAEa,oCAAc3D,oBAAd,CAAmC,KAAK8V,oBAAxC,CAFb,0CAGgB,oCAAc9V,oBAAd,CAAmC,KAAKgW,uBAAxC,CAHhB,gCAIM,oCAAchW,oBAAd,CAAmC,KAAK4D,aAAxC,CAJN,6BAKG,oCAAc5D,oBAAd,CAAmC,KAAK6D,UAAxC,CALH,4BAME,oCAAc7D,oBAAd,CAAmC,KAAK8D,SAAxC,CANF,mCAOS,oCAAc9D,oBAAd,CAAmC,KAAKmO,gBAAxC,CAPT,kCAQQ,oCAAcnO,oBAAd,CAAmC,KAAK+D,eAAxC,CARR,QAAJ;AASAmO,WAAGI,aAAH,CAAiB/K,GAAjB,CAAqB,KAAK1F,EAA1B,EAA8BqF,CAA9B;AACH;AACJ;;;kCACa2E,C,EAAG;AACb,UAAIuQ,KAAK,KAAKzY,mBAAd;AACAyY,WAAKvQ,EAAEzK,KAAF,GAAUgb,GAAGxN,OAAH,CAAW,eAAX,EAA4B,YAAY/C,EAAEzK,KAAd,GAAsB,KAAlD,EAAyDwN,OAAzD,CAAiE,aAAjE,EAAgF,GAAhF,CAAV,GAAiGwN,GAAGxN,OAAH,CAAW,mBAAX,EAAgC,EAAhC,EAAoCA,OAApC,CAA4C,iBAA5C,EAA+D,EAA/D,CAAtG;AACA/C,QAAElI,mBAAF,GAAwByY,EAAxB;AACAA,WAAK,KAAKtY,SAAV;AACAsY,WAAKvQ,EAAEzK,KAAF,GAAUgb,GAAGxN,OAAH,CAAW,eAAX,EAA4B,YAAY/C,EAAEzK,KAAd,GAAsB,KAAlD,EAAyDwN,OAAzD,CAAiE,aAAjE,EAAgF,GAAhF,CAAV,GAAiGwN,GAAGxN,OAAH,CAAW,mBAAX,EAAgC,EAAhC,EAAoCA,OAApC,CAA4C,iBAA5C,EAA+D,EAA/D,CAAtG;AACA/C,QAAE/H,SAAF,GAAcsY,EAAd;AACAA,WAAK,KAAKjO,gBAAV;AACAiO,WAAKvQ,EAAEzK,KAAF,GAAUgb,GAAGxN,OAAH,CAAW,eAAX,EAA4B,YAAY/C,EAAEzK,KAAd,GAAsB,KAAlD,EAAyDwN,OAAzD,CAAiE,aAAjE,EAAgF,GAAhF,CAAV,GAAiGwN,GAAGxN,OAAH,CAAW,mBAAX,EAAgC,EAAhC,EAAoCA,OAApC,CAA4C,iBAA5C,EAA+D,EAA/D,CAAtG;AACA/C,QAAEsC,gBAAF,GAAqBiO,EAArB;AACAA,WAAK,KAAKrY,eAAV;AACAqY,WAAKvQ,EAAEzK,KAAF,GAAUgb,GAAGxN,OAAH,CAAW,eAAX,EAA4B,YAAY/C,EAAEzK,KAAd,GAAsB,KAAlD,EAAyDwN,OAAzD,CAAiE,aAAjE,EAAgF,GAAhF,CAAV,GAAiGwN,GAAGxN,OAAH,CAAW,mBAAX,EAAgC,EAAhC,EAAoCA,OAApC,CAA4C,iBAA5C,EAA+D,EAA/D,CAAtG;AACA/C,QAAE9H,eAAF,GAAoBqY,EAApB;AACAA,WAAK,KAAKtG,oBAAV;AACAsG,WAAKvQ,EAAEzK,KAAF,GAAUgb,GAAGxN,OAAH,CAAW,eAAX,EAA4B,YAAY/C,EAAEzK,KAAd,GAAsB,KAAlD,EAAyDwN,OAAzD,CAAiE,aAAjE,EAAgF,GAAhF,CAAV,GAAiGwN,GAAGxN,OAAH,CAAW,mBAAX,EAAgC,EAAhC,EAAoCA,OAApC,CAA4C,iBAA5C,EAA+D,EAA/D,CAAtG;AACA/C,QAAEiK,oBAAF,GAAyBsG,EAAzB;AACAA,WAAK,KAAKpG,uBAAV;AACAoG,WAAKvQ,EAAEzK,KAAF,GAAUgb,GAAGxN,OAAH,CAAW,eAAX,EAA4B,YAAY/C,EAAEzK,KAAd,GAAsB,KAAlD,EAAyDwN,OAAzD,CAAiE,aAAjE,EAAgF,GAAhF,CAAV,GAAiGwN,GAAGxN,OAAH,CAAW,mBAAX,EAAgC,EAAhC,EAAoCA,OAApC,CAA4C,iBAA5C,EAA+D,EAA/D,CAAtG;AACA/C,QAAEmK,uBAAF,GAA4BoG,EAA5B;AACAA,WAAK,KAAKxY,aAAV;AACAwY,WAAKvQ,EAAEzK,KAAF,GAAUgb,GAAGxN,OAAH,CAAW,eAAX,EAA4B,YAAY/C,EAAEzK,KAAd,GAAsB,KAAlD,EAAyDwN,OAAzD,CAAiE,aAAjE,EAAgF,GAAhF,CAAV,GAAiGwN,GAAGxN,OAAH,CAAW,mBAAX,EAAgC,EAAhC,EAAoCA,OAApC,CAA4C,iBAA5C,EAA+D,EAA/D,CAAtG;AACA/C,QAAEjI,aAAF,GAAkBwY,EAAlB;AACAA,WAAK,KAAKvY,UAAV;AACAuY,WAAKvQ,EAAEzK,KAAF,GAAUgb,GAAGxN,OAAH,CAAW,eAAX,EAA4B,YAAY/C,EAAEzK,KAAd,GAAsB,KAAlD,EAAyDwN,OAAzD,CAAiE,aAAjE,EAAgF,GAAhF,CAAV,GAAiGwN,GAAGxN,OAAH,CAAW,mBAAX,EAAgC,EAAhC,EAAoCA,OAApC,CAA4C,iBAA5C,EAA+D,EAA/D,CAAtG;AACA/C,QAAEhI,UAAF,GAAeuY,EAAf;AACH;;;;;AAELnY,6BAA6BoY,sCAA7B,m+C;;;;;;;;AC1EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,+BAA+B,gCAAgC;AAC/D;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+BAA+B,gCAAgC;AAC/D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA,oDAAoD,uBAAuB;;;AAG3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,QAAQ;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,kCAAkC;;AAElC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,OAAO;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;AC7OA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,sCAAsC,sCAAsC;AACzG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;;;;;;;;AC/QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA,kDAAkD;AAClD;AACA,uCAAuC;AACvC;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,qDAAqD,OAAO,EAAE;AAC9D;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;;AAEA,8BAA8B,aAAa;;AAE3C;AACA;AACA;AACA;AACA;AACA,yCAAyC,oCAAoC;AAC7E,6CAA6C,oCAAoC;AACjF,KAAK,4BAA4B,oCAAoC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA,kCAAkC,2BAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;ACrEA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;;;;;;;ACHA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,CAAC;AACD;AACA,qBAAqB;AACrB;AACA,SAAS;AACT,GAAG,EAAE;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,sBAAsB;AAChF,kFAAkF,wBAAwB;AAC1G;;;;;;;ACRA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;AACA;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;;;IACaC,oB,WAAAA,oB;;;AACT,kCAAYxI,IAAZ,EAAqI;AAAA,YAAnH5C,MAAmH,uEAA1G,mBAA0G;AAAA,YAA1FY,YAA0F,uEAA3E,mBAA2E;AAAA,YAA3DtG,KAA2D,uEAAnD,mBAAmD;AAAA,YAAnC6F,eAAmC,uEAAjB,gCAAiB;AAAA;;AAAA,sKAC3HyC,IAD2H;;AAEjI,cAAK5C,MAAL,GAAcA,MAAd;AACA,cAAKY,YAAL,GAAoBA,YAApB;AACA,cAAKtG,KAAL,GAAaA,KAAb;AACA,cAAK6F,eAAL,GAAuBA,eAAvB;AALiI;AAMpI;;;;;IAEQkL,oB,WAAAA,oB;;;AACT,kCAAYzI,IAAZ,EAAkB;AAAA;;AAAA,uKACRA,IADQ;;AAEd,eAAK5C,MAAL,GAAc4C,KAAK5C,MAAnB;AACA,eAAKY,YAAL,GAAoBgC,KAAKhC,YAAzB;AACA,eAAKtG,KAAL,GAAasI,KAAKtI,KAAlB;AACA,eAAK6F,eAAL,GAAuByC,KAAKzC,eAA5B;AALc;AAMjB;;;;;IAEQmL,sB,WAAAA,sB;;;AACT,oCAAY1I,IAAZ,EAAkB;AAAA;AAAA,qKACRA,IADQ;AAEjB;;;;;;;;;ACxBL;AACA;AACA;AACA;AACA;;;;;;;;ACJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;IACa9P,2B,WAAAA,2B;;;AACT,yCAAc;AAAA;;AAAA,iLACDqG,SADC;;AAEV,UAAKmB,KAAL,GAAa,mBAAb;AACA,UAAK7H,mBAAL,GAA2B,qDAA0BkS,iBAArD;AACA,UAAKjS,aAAL,GAAqB,qBAAUA,aAA/B;AACA,UAAKC,UAAL,GAAkB,qBAAUA,UAA5B;AACA,UAAKC,SAAL,GAAiB,qCAAkBoK,sBAAnC;AACA,UAAK4H,oBAAL,GAA4B,iDAAwBC,uBAApD;AACA,UAAKC,uBAAL,GAA+B,iDAAwBC,0BAAvD;AACA,UAAKlW,WAAL,GAAmB,6BAAnB;AATU;AAUb;;;;6BACQmS,E,EAAI;AACT,UAAI,CAACA,GAAGI,aAAH,CAAiB5K,GAAjB,CAAqB,KAAK7F,EAA1B,CAAL,EAAoC;AAChCqQ,WAAGG,QAAH,CAAY,OAAZ,IAAuB,WAAMvP,EAA7B;AACAoP,WAAGG,QAAH,CAAY,MAAZ,IAAsB,UAAKvP,EAA3B;AACAoP,WAAGG,QAAH,CAAY,KAAZ,IAAqB,SAAIvP,EAAzB;AACA,YAAIoE,UAAQ,KAAKrF,EAAb,SAAJ;AACA,aAAK2J,KAAL,CAAWrE,IAAX,CAAgB;AAAA,iBAAQD,IAAIA,KAAOtF,KAAKtB,WAAL,EAAP,QAAZ;AAAA,SAAhB;AACA4G,YAAIA,EAAEnF,SAAF,CAAY,CAAZ,EAAemF,EAAElF,MAAF,GAAW,CAA1B,IAA+B,IAAnC;AACAkQ,WAAGI,aAAH,CAAiB/K,GAAjB,CAAqB,KAAK1F,EAA1B,EAA8BqF,CAA9B;AACA,iLAAegL,EAAf;AACAhL,YAAIgL,GAAGI,aAAH,CAAiBtL,GAAjB,CAAqB,KAAKnF,EAA1B,CAAJ;AACAqF,YAAIA,kCACQ,KAAKuV,cADb,kCAEO,KAAKjP,QAFZ,uCAGY,oCAAcxN,oBAAd,CAAmC,KAAK2D,mBAAxC,CAHZ,4BAIE,oCAAc3D,oBAAd,CAAmC,KAAK8D,SAAxC,CAJF,uCAKa,oCAAc9D,oBAAd,CAAmC,KAAK8V,oBAAxC,CALb,0CAMgB,oCAAc9V,oBAAd,CAAmC,KAAKgW,uBAAxC,CANhB,gCAOM,oCAAchW,oBAAd,CAAmC,KAAK4D,aAAxC,CAPN,6BAQG,oCAAc5D,oBAAd,CAAmC,KAAK6D,UAAxC,CARH,QAAJ;AASAqO,WAAGI,aAAH,CAAiB/K,GAAjB,CAAqB,KAAK1F,EAA1B,EAA8BqF,CAA9B;AACH;AACJ;;;;;AAELlD,4BAA4B0Y,qCAA5B,48C;;;;;;;AC5CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;;;IACatY,M,WAAAA,M;;;AACT,oBAAc;AAAA;;AAAA,uIACDiG,SADC;;AAEV,UAAKxG,UAAL,GAAkB,qBAAUA,UAA5B;AACA,UAAKD,aAAL,GAAqB,qBAAUA,aAA/B;AACA,UAAK7D,WAAL,GAAmB,QAAnB;AAJU;AAKb;;;;6BACQmS,E,EAAI;AACT,UAAI,CAACA,GAAGI,aAAH,CAAiB5K,GAAjB,CAAqB,KAAK7F,EAA1B,CAAL,EAAoC;AAChCqQ,WAAGG,QAAH,CAAY,OAAZ,IAAuB,WAAMvP,EAA7B;AACAoP,WAAGG,QAAH,CAAY,MAAZ,IAAsB,UAAKvP,EAA3B;AACAoP,WAAGI,aAAH,CAAiB/K,GAAjB,CAAqB,KAAK1F,EAA1B,QAAkC,KAAKA,EAAvC;AACA,uIAAeqQ,EAAf;AACA,YAAIhL,IAAIgL,GAAGI,aAAH,CAAiBtL,GAAjB,CAAqB,KAAKnF,EAA1B,CAAR;AACAqF,YAAIA,iCACO,KAAKsG,QADZ,8BAEG,oCAAcxN,oBAAd,CAAmC,KAAK6D,UAAxC,CAFH,gCAGM,oCAAc7D,oBAAd,CAAmC,KAAK4D,aAAxC,CAHN,QAAJ;AAIAsO,WAAGI,aAAH,CAAiB/K,GAAjB,CAAqB,KAAK1F,EAA1B,EAA8BqF,CAA9B;AACH;AACJ;;;;;AAEL9C,OAAOuY,gBAAP,6yC;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;ACrBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;;AAGA;AACA,mCAAmC;AACnC,iCAAiC,0BAA0B;AAC3D;AACA,iBAAiB;AACjB;AACA;;;AAGA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sFAAsF,yBAAyB;AAC/G;AACA;AACA;AACA,gCAAgC;AAChC,qCAAqC;AACrC;AACA,oDAAoD;AACpD,iCAAiC;AACjC,qDAAqD;AACrD,qBAAqB;AACrB,gCAAgC;AAChC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB,0CAA0C;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb,gBAAgB,wBAAwB;AACxC;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,aAAa;AACb,qBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,SAAS;AACT,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA,SAAS;AACT,oBAAoB;AACpB;AACA;AACA,SAAS;AACT,oBAAoB;AACpB;AACA;AACA,SAAS;AACT,oBAAoB;AACpB;AACA;AACA,SAAS;AACT,oBAAoB;AACpB;AACA;AACA,SAAS;AACT,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,iDAAiD,SAAS,+DAA+D,EAAE;AAC3H,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wBAAwB,+BAA+B;AACvD;AACA;AACA,SAAS;AACT;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA,SAAS;AACT,wBAAwB,0BAA0B;AAClD;AACA;AACA,SAAS;AACT;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,wBAAwB,2BAA2B;AACnD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wBAAwB,+BAA+B;AACvD;AACA;AACA,SAAS;AACT;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA,SAAS;AACT,wBAAwB,0BAA0B;AAClD;AACA;AACA,SAAS;AACT;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,wBAAwB,2BAA2B;AACnD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACtpBA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA,mDAAmD,YAAY;AAC/D,aAAa;AACb,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA,sDAAsD;AACtD,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,qCAAqC,WAAW;AAChD;AACA;;AAEA;;AAEA,iCAAiC,SAAS;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;;AAET,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B,SAAS;AACT,kCAAkC;AAClC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;;AAErB;;AAEA;;AAEA;AACA,6CAA6C,wBAAwB;AACrE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,gBAAgB;AACpC;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;;AAEA;;AAEA,wBAAwB,wBAAwB;AAChD;AACA;AACA;;AAEA;AACA;;AAEA,uCAAuC,kBAAkB;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;;AAEA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mBAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;ACr8BA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yEAAyE,uCAAuC;;AAEhH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qEAAqE,iCAAiC;;AAEtG;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,kEAAkE,+BAA+B;;AAEjG;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,qEAAqE,iCAAiC;;AAEtG;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,uBAAuB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,uBAAuB;AACvC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAmB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACrpBA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,KAAK;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,2CAA2C,KAAK;AAChD,0CAA0C,KAAK;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3tBA;AACA;AACA;AACA,+CAA+C,qBAAqB;;AAEpE;AACA;AACA,sCAAsC,EAAE,kBAAkB,EAAE;AAC5D,0BAA0B;AAC1B;AACA;AACA,+EAA+E,KAAK;AACpF;AACA,wCAAwC,EAAE;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gEAAgE;AAChE,uCAAuC,EAAE,6CAA6C;AACtF;AACA;AACA;AACA;AACA;AACA,kkBAAkkB,EAAE,UAAU,mNAAmN,EAAE,UAAU,+MAA+M,EAAE,UAAU,uBAAuB,WAAW,EAAE;AAC5iC,wYAAwY,YAAY,EAAE;AACtZ,qEAAqE,YAAY,EAAE;AACnF,mCAAmC,YAAY,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,uDAAuD;AACzaAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,uDAAuD;AAC7E;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC,oDAAoD;AAC1F,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,mBAAmB,aAAa;AAChC,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,qCAAqC,EAAE;AACtE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;;;;;;;;ACtWA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,uBAAuB;AACrE;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uEAAuE;AACrG;AACA;AACA;AACA,8BAA8B,gEAAgE;AAC9F;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mFAAmF;AACjH;AACA;AACA;AACA;AACA,8BAA8B,oFAAoF;AAClH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,4BAA4B;AAC5B,GAAG;;AAEH;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uEAAuE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yEAAyE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,2DAA2D;AAC3D;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,WAAW;AACX;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,qDAAqD;AACrD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,WAAW;AACX;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,yDAAyD;AACzD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC3rBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,4BAA4B,UAAU;AACtC,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;;AAEA;AACA;;;;;;;AChJA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC;;AAEA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtpBA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C,iBAAiB,gBAAgB,EAAE;AAClF,8BAA8B,4BAA4B,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D,mCAAmC,uCAAuC;AAC1E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,wCAAwC;AAC/F;AACA,WAAW,2CAA2C;AACtD,qBAAqB;AACrB;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;ACvUA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5IA,kBAAkB,yD;;;;;;ACAlB;AACA;AACA;AACA;;;;;;;ACHA;AACA,sEAAsE,mBAAmB,UAAU,EAAE,EAAE;AACvG,CAAC;;;;;;;ACFD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACZA;;;;;;;ACAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA,UAAU;AACV;;;;;;;ACFA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB,EAAE;;AAE/C;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA,kBAAkB,yD;;;;;;;ACAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,6BAA6B;AAC7B,0BAA0B;AAC1B,0BAA0B;AAC1B,qBAAqB;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,8EAA8E,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qBAAqB;AACrB,0BAA0B;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;AC/IA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACNA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;ACXA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,GAAG,EAAE;AACL;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,GAAG,EAAE;AACL;;;;;;;AC3BA,kBAAkB,yD;;;;;;;;;;;;;;;;ACAlB;;;;;;;;;;;;;;;AACA;;IAAYjR,O;;AACZ;;AACA;;;;;;IACakR,uB,WAAAA,uB,GACT,iCAAYhb,IAAZ,EAAkBC,EAAlB,EAAsB;AAAA;;AAClB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,EAAL,GAAUA,EAAV;AACH,C;;IAEQgb,kB;;;AACT;AACA,gCAAYC,aAAZ,EAA2BxO,EAA3B,EAA+B;AAAA;;AAAA;;AAC3B,aAAKwO,aAAL,GAAqBA,aAArB;AACA,aAAKxO,EAAL,GAAUA,EAAV;AACA,aAAKyO,QAAL,GAAgB,0BAAS,UAAClb,EAAD,EAAQ;AAC7B,gBAAIA,GAAGC,OAAH,CAAW,QAAX,MAAyB,CAA7B,EAAgC;AAC5B,oBAAI+L,IAAI,MAAKS,EAAL,CAAQQ,KAAR,EAAR;AACA,oCAAU,EAAEkO,MAAMnb,EAAR,EAAYob,YAAY,IAAxB,EAAV,EAA0C,UAACC,GAAD,EAAMC,QAAN,EAAmB;AACzD,wBAAID,GAAJ,EACIrP,EAAEgD,MAAF,CAASqM,GAAT,EADJ,KAGIrP,EAAEuC,OAAF,CAAU,IAAIgN,6BAAJ,CAAkCD,QAAlC,EAA4C,MAAK7O,EAAjD,CAAV;AACP,iBALD;AAMA,uBAAOT,EAAEwC,OAAT;AACH,aATD,MAWI,OAAO,MAAK/B,EAAL,CAAQ8B,OAAR,CAAgB,IAAIiN,2BAAJ,CAAgC,MAAKP,aAArC,EAAoDjb,EAApD,CAAhB,CAAP;AACP,SAbe,CAAhB;AAcH;;;;8BACKA,E,EAAIkN,M,EAAOuO,M,EAAQ;AACrB,mBAAO,KAAKP,QAAL,CAAc7T,GAAd,CAAkBrH,EAAlB,EAAsBuL,IAAtB,CAA2B;AAAA,uBAAK7D,EAAEwF,KAAF,CAAQA,MAAR,EAAeuO,MAAf,CAAL;AAAA,aAA3B,CAAP;AACH;;;+BACMzb,E,EAAIkN,K,EAAOuO,M,EAAQ;AACtB,mBAAO,KAAKP,QAAL,CAAc7T,GAAd,CAAkBrH,EAAlB,EAAsBuL,IAAtB,CAA2B;AAAA,uBAAK7D,EAAE+G,MAAF,CAASvB,KAAT,EAAgBuO,MAAhB,CAAL;AAAA,aAA3B,CAAP;AACH;;;4BACGzb,E,EAAI0b,Q,EAAUD,M,EAAQ;AACtB,mBAAO,KAAKP,QAAL,CAAc7T,GAAd,CAAkBrH,EAAlB,EAAsBuL,IAAtB,CAA2B;AAAA,uBAAK7D,EAAEvC,GAAF,CAAMuW,QAAN,EAAgBD,MAAhB,CAAL;AAAA,aAA3B,CAAP;AACH;;;4BACGzb,E,EAAI2b,I,EAAMD,Q,EAAUD,M,EAAQ;AAC5B,mBAAO,KAAKP,QAAL,CAAc7T,GAAd,CAAkBrH,EAAlB,EAAsBuL,IAAtB,CAA2B;AAAA,uBAAK7D,EAAEkU,GAAF,CAAMD,IAAN,EAAYD,QAAZ,EAAsBD,MAAtB,CAAL;AAAA,aAA3B,CAAP;AACH;;;6BACIzb,E,EAAI2b,I,EAAMD,Q,EAAUD,M,EAAQ;AAC7B,mBAAO,KAAKP,QAAL,CAAc7T,GAAd,CAAkBrH,EAAlB,EAAsBuL,IAAtB,CAA2B;AAAA,uBAAK7D,EAAEmU,IAAF,CAAOF,IAAP,EAAaD,QAAb,EAAuBD,MAAvB,CAAL;AAAA,aAA3B,CAAP;AACH;;;;;;;IAECD,2B;AACF,yCAAY9T,CAAZ,EAAeiE,QAAf,EAAyB;AAAA;;AACrB,aAAKjE,CAAL,GAASA,CAAT;AACA,aAAKiE,QAAL,GAAgBA,QAAhB;AACH;;;;8BACKuB,O,EAAOuO,M,EAAQ;AACjB,mBAAO,KAAK/T,CAAL,CAAOwF,KAAP,CAAa,KAAKvB,QAAlB,EAA4BuB,OAA5B,EAAmCuO,MAAnC,EAA2ClQ,IAA3C,CAAgD;AAAA,uBAAK7D,EAAEiU,IAAP;AAAA,aAAhD,CAAP;AACH;;;+BACMzO,K,EAAOuO,M,EAAQ;AAClB,mBAAO,KAAK/T,CAAL,CAAO+G,MAAP,CAAc,KAAK9C,QAAnB,EAA6BuB,KAA7B,EAAoCuO,MAApC,EAA4ClQ,IAA5C,CAAiD;AAAA,uBAAK7D,EAAEiU,IAAP;AAAA,aAAjD,CAAP;AACH;;;4BACGD,Q,EAAUD,M,EAAQ;AAClB,mBAAO,KAAK/T,CAAL,CAAOvC,GAAP,CAAW,KAAKwG,QAAhB,EAA0B+P,QAA1B,EAAoCD,MAApC,EAA4ClQ,IAA5C,CAAiD;AAAA,uBAAK7D,EAAEiU,IAAP;AAAA,aAAjD,CAAP;AACH;;;6BACIA,I,EAAMD,Q,EAAUD,M,EAAQ;AACzB,mBAAO,KAAK/T,CAAL,CAAOmU,IAAP,CAAY,KAAKlQ,QAAjB,EAA2BgQ,IAA3B,EAAiCD,QAAjC,EAA2CD,MAA3C,EAAmDlQ,IAAnD,CAAwD;AAAA,uBAAK7D,EAAEiU,IAAP;AAAA,aAAxD,CAAP;AACH;;;4BACGA,I,EAAMD,Q,EAAUD,M,EAAQ;AACxB,mBAAO,KAAK/T,CAAL,CAAOkU,GAAP,CAAW,KAAKjQ,QAAhB,EAA0BgQ,IAA1B,EAAgCD,QAAhC,EAA0CD,MAA1C,EAAkDlQ,IAAlD,CAAuD;AAAA,uBAAK7D,EAAEiU,IAAP;AAAA,aAAvD,CAAP;AACH;;;;;IAEQJ,6B;AACT,2CAAY7T,CAAZ,EAAe+E,EAAf,EAAmB;AAAA;;AACf,aAAK/E,CAAL,GAASA,CAAT;AACA,aAAK+E,EAAL,GAAUA,EAAV;AACH;;;;8BAoBKS,O,EAAOuO,M,EAAQ;AAAA;;AACjB,gBAAI5M,WAAW,KAAKpC,EAAL,CAAQQ,KAAR,EAAf;AACA,gBAAI;AACA,qBAAKvF,CAAL,CAAOoU,OAAP,CAAe5O,OAAf,EAAsB,UAACmO,GAAD,EAAM7N,OAAN,EAAkB;AACpC,wBAAI6N,GAAJ,EAAS;AACLrD,gCAAQC,GAAR,CAAY,iBAAZ,EAA+B,OAAKvQ,CAApC,EAAuCwF,OAAvC,EAA8CmO,GAA9C;AACAxM,iCAASG,MAAT,CAAgBqM,GAAhB;AACH,qBAHD,MAIK;AACD,4BAAI7V,MAAM;AACNuW,kCAAM;AACFC,sCAAM;AADJ,6BADA;AAINxO,qCAAS;AACLC,0CAAU;AADL;AAJH,yBAAV;AAQA,4BAAIuO,OAAO,gCAAX;AACAxW,4BAAIgI,OAAJ,CAAYC,QAAZ,GAAuBD,QAAQjI,GAAR,CAAY,mBAAW;AAC1C,gCAAI8K,KAAK,EAAT;AACA,iCAAK,IAAIlI,CAAT,IAActI,OAAd,EAAuB;AACnBmc,qCAAKhV,GAAL,CAASmB,CAAT;AACA,oCAAItI,QAAQsI,CAAR,MAAe,IAAnB,EACIkI,GAAGlI,CAAH,IAAQoT,8BAA8BU,cAA9B,CAA6Cpc,QAAQsI,CAAR,CAA7C,CAAR;AACP;AACD,mCAAOkI,EAAP;AACH,yBARsB,CAAvB;AASA7K,4BAAIuW,IAAJ,CAASC,IAAT,GAAgBA,KAAKjW,MAAL,EAAhB;AACA8I,iCAASN,OAAT,CAAiB/I,GAAjB;AACH;AACJ,iBA3BD;AA4BH,aA7BD,CA8BA,OAAO6V,GAAP,EAAY;AACRrD,wBAAQC,GAAR,CAAY,qBAAZ,EAAmC,KAAKvQ,CAAxC,EAA2CwF,OAA3C,EAAkDmO,GAAlD;AACA,sBAAMA,GAAN;AACH;AACD,mBAAOxM,SAASL,OAAhB;AACH;;;+BACMtB,K,EAAOuO,M,EAAQ;AAClB,gBAAI5M,WAAW,KAAKpC,EAAL,CAAQQ,KAAR,EAAf;AACA,iBAAKvF,CAAL,CAAOoU,OAAP,CAAe5O,KAAf,EAAsB,UAACmO,GAAD,EAAM7N,OAAN,EAAkB;AACpC,oBAAI6N,GAAJ,EACIxM,SAASG,MAAT,CAAgBqM,GAAhB,EADJ,KAGIxM,SAASN,OAAT,CAAiBf,OAAjB;AACP,aALD;AAMA,mBAAOqB,SAASL,OAAhB;AACH;;;4BACGkN,Q,EAAUD,M,EAAQ;AAClB,gBAAI5M,WAAW,KAAKpC,EAAL,CAAQQ,KAAR,EAAf;AACA,iBAAKvF,CAAL,CAAOnI,KAAP,CAAamc,QAAb,EAAuB,UAACL,GAAD,EAAM9b,KAAN,EAAgB;AACnC,oBAAI8b,GAAJ,EACIxM,SAASG,MAAT,CAAgBqM,GAAhB,EADJ,KAGIxM,SAASN,OAAT,CAAiBhP,MAAM2c,IAAN,EAAjB;AACP,aALD;AAMA,mBAAOrN,SAASL,OAAhB;AACH;;;6BACImN,I,EAAMD,Q,EAAUD,M,EAAQ;AACzB,gBAAI5M,WAAW,KAAKpC,EAAL,CAAQQ,KAAR,EAAf;AACA,gBAAIkP,UAAU,SAAVA,OAAU,CAACd,GAAD,EAAM9b,KAAN,EAAgB;AAC1B,oBAAI8b,GAAJ,EACIxM,SAASG,MAAT,CAAgBqM,GAAhB,EADJ,KAGIxM,SAASN,OAAT;AACP,aALD;AAMA,gBAAImN,QAAJ,EACI,KAAKhU,CAAL,CAAO0U,IAAP,CAAY,aAAZ,EAA2BT,IAA3B,EAAiCD,QAAjC,EAA2CS,OAA3C,EADJ,KAGI,KAAKzU,CAAL,CAAO0U,IAAP,CAAY,aAAZ,EAA2BT,IAA3B,EAAiCQ,OAAjC;AACJ,mBAAOtN,SAASL,OAAhB;AACH;;;4BACGmN,I,EAAMD,Q,EAAUD,M,EAAQ;AAAA;;AACxB,gBAAI5M,WAAW,KAAKpC,EAAL,CAAQQ,KAAR,EAAf;AACA,gBAAIkP,UAAU,SAAVA,OAAU,CAACd,GAAD,EAAS;AACnB,oBAAIA,GAAJ,EACIxM,SAASG,MAAT,CAAgBqM,GAAhB;AACJ,oBAAIgB,WAAW,SAAXA,QAAW,CAACC,IAAD,EAAO/c,KAAP,EAAiB;AAC5B,wBAAI+c,IAAJ,EACIzN,SAASG,MAAT,CAAgBsN,IAAhB,EADJ,KAGIzN,SAASN,OAAT;AACP,iBALD;AAMA,oBAAImN,QAAJ,EACI,OAAKhU,CAAL,CAAO0U,IAAP,CAAY,aAAZ,EAA2BT,IAA3B,EAAiCD,QAAjC,EAA2CW,QAA3C,EADJ,KAGI,OAAK3U,CAAL,CAAO0U,IAAP,CAAY,aAAZ,EAA2BT,IAA3B,EAAiCU,QAAjC;AACP,aAbD;AAcA,gBAAIX,QAAJ,EACI,KAAKhU,CAAL,CAAOtB,KAAP,CAAasV,QAAb,EAAuBS,OAAvB,EADJ,KAGI,KAAKzU,CAAL,CAAOtB,KAAP,CAAa+V,OAAb;AACJ,mBAAOtN,SAASL,OAAhB;AACH;;;uCAhHqB3O,O,EAAS;AAC3B,oBAAQA,QAAQ0c,KAAhB;AACI,qBAAK,KAAL;AAAY,2BAAO;AACfxc,8BAAM,KADS;AAEflC,+BAAOgC,QAAQhC;AAFA,qBAAP;AAIZ,qBAAK,OAAL;AAAc,2BAAO;AACjBkC,8BAAM,OADW;AAEjBlC,+BAAOgC,QAAQhC;AAFE,qBAAP;AAId,qBAAK,SAAL;AAAgB,2BAAO;AACnBkC,8BAAM,SADa;AAEnBlC,+BAAOgC,QAAQhC,KAFI;AAGnB,oCAAYgC,QAAQ2c,IAHD;AAInBve,kCAAU4B,QAAQE;AAJC,qBAAP;AAMhB;AAAS,0BAAM,0BAA0BF,QAAQ0c,KAAxC;AAfb;AAiBH;;;;;;;AAgGL1S,QAAQ4F,MAAR,CAAe,qCAAf,EAAsD,EAAtD,EACKC,MADL,cACY,UAACC,QAAD,EAAc;AACtBA,aAASC,OAAT,CAAiB,oBAAjB,EAAuCoL,kBAAvC;AACH,CAHD,G;;;;;;AC1LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT,KAAK;AACL;AACA,SAAS;AACT,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC,WAAW,QAAQ,2BAA2B,WAAW,EAAE;AAC/F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC,0BAA0B,QAAQ,2BAA2B,0BAA0B,EAAE;AAC7H;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,qEAAqE;AACrE,KAAK;AACL;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wEAAwE;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA,yEAAyE;AACzE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,uBAAuB,wCAAwC,eAAe,EAAE;AAChF,KAAK;AACL,uBAAuB,eAAe;AACtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,uBAAuB,wCAAwC,eAAe,EAAE;AAChF,KAAK;AACL,uBAAuB,eAAe;AACtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;;AAEA,sBAAsB,uCAAuC;;AAE7D;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qBAAqB;AACnC,cAAc,kCAAkC;AAChD,cAAc,0BAA0B;AACxC,cAAc,WAAW;AACzB,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC55BA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yEAAyE,eAAe;AACxF;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,0EAA0E,SAAS,kBAAkB,EAAE;AACvG;AACA,mFAAmF,sBAAsB,EAAE;AAC3G;AACA;AACA,aAAa;AACb,SAAS;AACT,yEAAyE,SAAS,kBAAkB,EAAE;AACtG;AACA,kFAAkF,sBAAsB,EAAE;AAC1G;AACA;AACA,aAAa;AACb,SAAS;AACT,0EAA0E,SAAS,kBAAkB,EAAE;AACvG;AACA,mFAAmF,sBAAsB,EAAE;AAC3G;AACA;AACA,aAAa;AACb,SAAS;AACT,8BAA8B,0BAA0B,GAAG,0BAA0B;AACrF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA,SAAS;AACT;AACA,wBAAwB,8BAA8B;AACtD;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA,mCAAmC,+BAA+B;AAClE;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,gCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB,aAAa;AACb;AACA,kCAAkC;AAClC;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sEAAsE,2DAA2D;AACjI;AACA;AACA,aAAa;AACb;AACA,kCAAkC;AAClC,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,mGAAmG,SAAS,cAAc;AAC1H;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA,yCAAyC;AACzC,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;;AAGT;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA;;AAEA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA,eAAe;AACf;AACA;;AAEA;AACA,eAAe;AACf;AACA;;AAEA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,+BAA+B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,+BAA+B;;AAE/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;;AAEA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB,KAAK;AACL,gBAAgB;AAChB,KAAK;AACL,gBAAgB;AAChB,KAAK;AACL,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB,KAAK;AACL,gBAAgB;AAChB,KAAK;AACL,gBAAgB;AAChB,KAAK;AACL,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB,KAAK;AACL,gBAAgB;AAChB,KAAK;AACL,gBAAgB;AAChB,KAAK;AACL,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB,KAAK;AACL,gBAAgB;AAChB,KAAK;AACL,gBAAgB;AAChB,KAAK;AACL,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA,KAAK;;AAEL;AACA,oBAAoB,eAAe;AACnC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,oDAAoD;AAC5E,aAAa;AACb;AACA,wBAAwB,iDAAiD;AACzE,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB,4BAA4B;AAC5B;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gCAAgC;AAChC,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,4BAA4B;AAC5B,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,oBAAoB,eAAe;AACnC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;;;;AC3wDA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;AClFA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACxEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI,aAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,wCAAwC,eAAe,IAAI;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACxNA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,2EAA2E,6EAA6E;AACxJ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,kGAAkG;AAClG,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,4FAA4F;AAC5F,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,4EAA4E;;AAE5E;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA,mDAAmD,iEAAiE;AACpH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA,C;;;;;;;AC9+BA;;;;;;;;ACAA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;ACviCAAiC;;AAEjC;;AAEA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;ACtpBA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,C;;;;;;ACrNA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,uCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC,aAAa,gBAAgB,aAAa;AACnF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,uCAAuC;AACjD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;;;;;;;ACvXA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,sBAAsB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,sDAAsD,wBAAwB,QAAQ;AACtF,iCAAiC,cAAc,QAAQ;AACvD;AACA;;AAEA;AACA;AACA;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;;;;;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,2EAA2E,6EAA6E;AACxJ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,kGAAkG;AAClG,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,4FAA4F;AAC5F,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,4EAA4E;;AAE5E;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA,mDAAmD,iEAAiE;AACpH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA,C;;;;;;;AC7+BA;;;;;;;;ACAA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,C;;;;;;ACrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,uBAAuB,SAAS;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,KAAK;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACzkBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,mBAAmB;AAC3C;;AAEA;AACA;AACA;AACA,iDAAiD,kBAAkB,wBAAwB,EAAE;AAC7F,8BAA8B,iBAAiB,wBAAwB,EAAE;AACzE,GAAG;;AAEH;AACA,uDAAuD,gCAAgC;AACvF,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;AACA;AACA;;;;;;;iFC7BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2EAA2E;;AAE3E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,sBAAsB;;AAEpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,uBAAuB,QAAQ;AAC/B;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kEAAkE,QAAQ;;AAE1E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE,QAAQ;AAC1E;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC,QAAQ;;AAE7C;;AAEA,qBAAqB,wBAAwB;AAC7C;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,qEAAqE;AAC1F;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,qEAAqE;AAC1F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,cAAc,SAAS;AACvB;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAyB,wCAAwC,EAAE;AAAA;AACnE,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA,CAAC;;;;;;;;;AC18BD;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,iBAAiB;;AAEjB,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,iBAAiB;;AAEjB,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gCAAgC,8BAA8B;AAC9D,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;;AAET,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACthBA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA,qEAAuE,4CAA4C;;;;;;;ACFnH;AACA;;;;;;;ACDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACRD,kBAAkB,yD;;;;;;ACAlB;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;;AAEA;AACA,6FAAkF,aAAa,EAAE;;AAEjG;AACA,qDAAqD,4BAA4B;AACjF;AACA;;;;;;;ACZA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,YAAY,eAAe;AAChC;AACA,KAAK;AACL;AACA;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,cAAc;AACd,iBAAiB;AACjB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;;;;;;ACjCA,8BAA8B;;;;;;;ACA9B,kBAAkB,yD;;;;;;ACAlB;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB,sBAAsB,uBAAuB,WAAW,IAAI;AAC5D,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,KAAK;AACL;AACA,sBAAsB,mCAAmC;AACzD,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,gCAAgC;AAChG;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0DAA0D,kBAAkB;;AAE5E;AACA;AACA;AACA,oBAAoB,uBAAuB;;AAE3C,oDAAoD,6BAA6B;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,0BAA0B,eAAe,EAAE;AAC3C,0BAA0B,gBAAgB;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO,QAAQ,iCAAiC;AACpG,CAAC;AACD;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACdA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AClBA;;;;;;;ACAA;;;;;;;ACAA,kBAAkB,yD;;;;;;ACAlB;AACA;;;;;;;ACDA;AACA;AACA,8BAA8B,+CAA8C;;;;;;;ACF5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,OAAO,YAAY,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA;;;;;;;ACxBA,kBAAkB,yD;;;;;;ACAlB;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA,8BAA8B,kCAAsC;;;;;;;ACFpE,kBAAkB,yD;;;;;;ACAlB;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACRD;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,mEAAmE;AAC5F,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACbD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,GAAG;AACH;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,eAAe;AACzB;AACA;AACA;AACA,wCAAwC;AACxC;AACA,8BAA8B;AAC9B,6BAA6B;AAC7B,+BAA+B;AAC/B,mCAAmC;AACnC,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;;;;;;;AC3CA;AACA;;AAEA;AACA;AACA;;;;;;;ACLA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACfA;AACA;;AAEA,uCAAuC,0CAAkD;;;;;;;ACHzF;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;;;;;;;ACDA;AACA;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,mEAAmE;AAC5F,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;;;;;;AClBD;AACA;;AAEA,uCAAuC,0CAAkD;;;;;;;ACHzF;AACA;;;;;;;ACDA;AACA;;;;;;;;ACDA;;;;;;;;;;;;;;;;;;;AACA;;;;IACayB,Q,WAAAA,Q;AACT,wBAAc;AAAA;;AACV,aAAKjG,SAAL,GAAiB,0BAAS;AAAA,mBAAM,gCAAN;AAAA,SAAT,CAAjB,CADU,CACwC;AAClD,aAAKkG,sBAAL,GAA8B,0BAAS;AAAA,mBAAM,0BAAS;AAAA,uBAAM,gCAAN;AAAA,aAAT,CAAN;AAAA,SAAT,CAA9B,CAFU,CAEqE;AAClF;;;;oCACWpG,M,EAA4G;AAAA,gBAApGqG,KAAoG,uEAA5F,IAA4F;;AAAA;;AAAA,gBAAtFC,SAAsF,uEAA1E,QAA0E;AAAA,gBAAhEC,OAAgE,uEAAtDvG,OAAOyF,IAAP,CAAYC,IAAZ,CAAiBjK,MAAjB,CAAwB;AAAA,uBAAK5J,EAAElI,OAAF,CAAU,KAAV,MAAqB,CAA1B;AAAA,aAAxB,CAAsD;;AACpHqW,mBAAO9I,OAAP,CAAeC,QAAf,CAAwB1G,OAAxB,CAAgC,mBAAW;AACvC,oBAAI/G,KAAKH,QAAQ8c,KAAR,EAAe9e,KAAxB;AACA,sBAAK2Y,SAAL,CAAenP,GAAf,CAAmBrH,EAAnB,EAAuBgH,GAAvB,CAA2BhH,EAA3B;AACA,oBAAIH,QAAQ+c,SAAR,CAAJ,EAAwB;AACpB,0BAAKpG,SAAL,CAAerR,GAAf,CAAmBnF,EAAnB,EAAuBgH,GAAvB,CAA2BnH,QAAQ+c,SAAR,EAAmB/e,KAA9C;AACA,0BAAK2Y,SAAL,CAAenP,GAAf,CAAmBxH,QAAQ+c,SAAR,EAAmB/e,KAAtC,EAA6CmJ,GAA7C,CAAiDhH,EAAjD;AACH;AANsC;AAAA;AAAA;;AAAA;AAOvC,oEAAc6c,OAAd;AAAA,4BAAS1U,CAAT;;AACI,4BAAItI,QAAQsI,CAAR,CAAJ,EACI,MAAKuU,sBAAL,CAA4BrV,GAA5B,CAAgCc,CAAhC,EAAmCd,GAAnC,CAAuCxH,QAAQsI,CAAR,EAAWtK,KAAlD,EAAyDmJ,GAAzD,CAA6DhH,EAA7D;AAFR;AAPuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAU1C,aAVD;AAWA;AACA,iBAAK0c,sBAAL,CAA4BpX,IAA5B,CAAiC;AAAA,uBAAgBwX,aAAaxX,IAAb,CAAkB;AAAA,2BAAO6F,IAAI7F,IAAJ,CAAS;AAAA,+BAAO,MAAKkR,SAAL,CAAenP,GAAf,CAAmBkR,GAAnB,EAAwBtB,IAAxB,CAA6B9L,GAA7B,CAAP;AAAA,qBAAT,CAAP;AAAA,iBAAlB,CAAhB;AAAA,aAAjC;AACA;AACA,iBAAKqL,SAAL,CAAelR,IAAf,CAAoB,UAACmR,KAAD;AAAA,uBAAWA,MAAMnR,IAAN,CAAW,cAAM;AAC5C,wBAAIyX,SAAS,MAAKvG,SAAL,CAAerR,GAAf,CAAmBnF,EAAnB,CAAb;AACA,wBAAIyW,UAAUsG,MAAd,EAAsB;AAClB,8BAAKvG,SAAL,CAAe9Q,GAAf,CAAmB1F,EAAnB,EAAuByW,KAAvB;AACAA,8BAAMQ,IAAN,CAAW8F,MAAX;AACH;AACJ,iBAN8B,CAAX;AAAA,aAApB;AAOH;;;;;;;;;AC7BL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0BAA0B,iBAAiB;AAC3C;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,kBAAkB,qCAAqC;AACvD,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;;AAEb;AACA,wBAAwB,eAAe;AACvC;AACA;;AAEA;AACA,SAAS;;AAET,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,4BAA4B;AAC5B,SAAS;AACT,4BAA4B;AAC5B,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT,4BAA4B;AAC5B,SAAS;AACT,4BAA4B;AAC5B,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,4BAA4B;AAC5B,SAAS;AACT,4BAA4B;AAC5B,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,4BAA4B;AAC5B,SAAS;AACT,4BAA4B;AAC5B,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,wBAAwB;AACxC;AACA;AACA,YAAY,2BAA2B;AACvC;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA,KAAK;AACL;;AAEA,oBAAoB,kBAAkB;AACtC;AACA;AACA;;AAEA,wBAAwB,sBAAsB;AAC9C;AACA;AACA,iBAAiB;AACjB,8GAA8G,SAAS,cAAc;AACrI;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,SAAS;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL,2BAA2B,iCAAiC;AAC5D;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6CAA6C;AAC7C;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA,wCAAwC,kBAAkB;AAC1D;;AAEA,wCAAwC,sCAAsC;AAC9E;AACA;AACA;AACA,4CAA4C,qBAAqB;AACjE;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4BAA4B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qCAAqC;AACrC,wDAAwD,+CAA+C;AACvG,qCAAqC;AACrC,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;;AAEA,qBAAqB,OAAO;AAC5B;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mCAAmC;AACnC;AACA;AACA,yBAAyB;AACzB;AACA,mCAAmC;AACnC;;AAEA;AACA,yBAAyB,iCAAiC;AAC1D;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,mBAAmB;AACnE;AACA,wDAAwD,eAAe;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,kBAAkB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC;AACjC;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,SAAS;AAC7B;AACA,gBAAgB,gBAAgB;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb,SAAS;AACT,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,iCAAiC;;AAEhE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;;AAEA,gCAAgC,mBAAmB;AACnD;AACA;;AAEA,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,YAAY,KAAK,EAAE;AACpC,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,4BAA4B,qBAAqB;AACjD;;AAEA,gCAAgC,mBAAmB;AACnD;AACA;;AAEA,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,YAAY,KAAK,EAAE;AACpC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,8BAA8B,WAAW,QAAQ,WAAW;AAC5D,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,8CAA8C,oBAAoB,WAAW,EAAE,QAAQ,oBAAoB,WAAW,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qCAAqC;AACrC;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,uBAAuB,WAAW,EAAE,QAAQ,uBAAuB,WAAW,EAAE;AACtH;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;;;;;ACh4DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA,uBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;;AAEA;AACA,WAAW;;AAEX;AACA;AACA,WAAW;;AAEX;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,yBAAyB,EAAE;AACnF,wDAAwD,yBAAyB,EAAE;AACnF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,yBAAyB,EAAE;AACnF,wDAAwD,yBAAyB,EAAE;AACnF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;;AAEA;;AAEA;AACA,0BAA0B,yBAAyB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,uBAAuB;;AAEvB,kCAAkC,8BAA8B;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA,2BAA2B;AAC3B,wBAAwB,aAAa;AACrC;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;;AAGA;AACA,mCAAmC;AACnC;AACA;AACA,iFAAiF;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ,4BAA4B;AACrD;;AAEA,wBAAwB,gBAAgB;AACxC;;AAEA;AACA,wBAAwB,6CAA6C;AACrE,UAAU;AACV,wBAAwB,sEAAsE;AAC9F;AACA;;AAEA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,wBAAwB,aAAa;AACrC;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;;AAGA;AACA,mCAAmC;AACnC;AACA;AACA,iFAAiF;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB,2CAA2C;AAC3C,oBAAoB;AACpB,2CAA2C;AAC3C;AACA,2BAA2B;AAC3B,wBAAwB,aAAa;AACrC;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;;AAGA;AACA,mCAAmC;AACnC;AACA;AACA,iFAAiF;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,wBAAwB,aAAa;AACrC;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;;AAGA;AACA,mCAAmC;AACnC;AACA;AACA,iFAAiF;AACjF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB,SAAS;AACT;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA,qBAAqB;AACrB,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,wBAAwB,6BAA6B;AACrD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,kCAAkC;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,cAAc;AACtC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D;AACA;AACA;AACA,yCAAyC;AACzC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,qBAAqB;AACrB;;AAEA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,oCAAoC;AACzD;AACA;AACA;AACA,wCAAwC;AACxC,yCAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,SAAS;AACT;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,0BAA0B;AAC1B;;AAEA,qBAAqB,YAAY;AACjC;AACA;AACA,cAAc;AACd;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,cAAc;AACd,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;;AAEA;AACA,sBAAsB,kBAAkB;AACxC;AACA;AACA,yBAAyB;AACzB;AACA,eAAe;AACf,yBAAyB;AACzB;AACA;AACA;AACA,cAAc;AACd,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,aAAa;;AAEtC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA,UAAU;AACV;AACA;;AAEA;;;AAGA,wBAAwB,eAAe;AACvC;AACA;AACA;;AAEA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,aAAa;;AAEtC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA,UAAU;AACV;AACA;;AAEA;;;AAGA,wBAAwB,eAAe;AACvC;AACA;AACA;;AAEA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,wBAAwB,eAAe;AACvC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;;AAEA,wBAAwB,eAAe;AACvC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;;AAEA;AACA,sBAAsB,kBAAkB;AACxC;AACA;AACA,yBAAyB;AACzB;AACA,eAAe;AACf,yBAAyB;AACzB;AACA;AACA;AACA,cAAc;AACd,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,aAAa;;AAEtC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA,UAAU;AACV;AACA;;AAEA;;;AAGA,wBAAwB,eAAe;AACvC;AACA;AACA;;AAEA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,qBAAqB,eAAe;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,qBAAqB,eAAe;AACpC;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,8BAA8B,UAAU,mDAAmD;AAC3F,wBAAwB,+FAA+F;AACvH,uBAAuB,wDAAwD;AAC/E,2BAA2B;;AAE3B;AACA;;AAEA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,uBAAuB,mDAAmD;AAC1E,wBAAwB,gGAAgG;AACxH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,UAAU,mDAAmD;AACpF,qBAAqB,+FAA+F;AACpH,qBAAqB;AACrB,UAAU;AACV,uBAAuB,UAAU,mDAAmD;AACpF,qBAAqB,+FAA+F;AACpH,oBAAoB,uDAAuD;AAC3E;;AAEA;AACA;;AAEA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,8BAA8B,UAAU,mDAAmD;AAC3F,wBAAwB,+FAA+F;AACvH,uBAAuB,wDAAwD;AAC/E,2BAA2B;;AAE3B;AACA;;AAEA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,mBAAmB,UAAU,mDAAmD;AAChF,wBAAwB,gGAAgG;AACxH;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,UAAU,mDAAmD;AACpF,qBAAqB,+FAA+F;AACpH,qBAAqB;AACrB,UAAU;AACV,uBAAuB,UAAU,mDAAmD;AACpF,qBAAqB,+FAA+F;AACpH,oBAAoB,uDAAuD;AAC3E;;AAEA;AACA;;AAEA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,2BAA2B;AAC3B;;AAEA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB,aAAa;AACrC;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,aAAa;AACrC;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAA6C;;AAE7E;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA,mBAAmB;AACnB,iBAAiB;AACjB,aAAa;AACb,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,SAAS,wBAAwB,EAAE;AACnE;AACA,kCAAkC,SAAS,kDAAkD,EAAE;AAC/F,gCAAgC,WAAW;AAC3C;AACA,gCAAgC,SAAS,oDAAoD,EAAE;AAC/F,gCAAgC,SAAS,+CAA+C,EAAE;AAC1F;AACA,gCAAgC,SAAS,wBAAwB;AACjE,+BAA+B,0BAA0B,SAAS,iDAAiD,EAAE;AACrH;AACA,4BAA4B;AAC5B,2DAA2D,KAAK;AAChE,sCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gCAAgC,uBAAuB,UAAU,EAAE;AACnE;AACA,gCAAgC,uBAAuB,WAAW;AAClE;AACA;AACA,gCAAgC,uBAAuB,UAAU,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gCAAgC;AACtE;AACA;AACA;AACA;AACA;AACA,sCAAsC,gCAAgC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA,2BAA2B,oEAAoE;AAC/F,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,6BAA6B;AACvE;AACA;AACA,yCAAyC;AACzC;AACA,aAAa;AACb;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc;AACd;;AAEA;AACA,cAAc;AACd;;AAEA;AACA,cAAc;AACd;;AAEA;AACA,cAAc;AACd;;AAEA;AACA,cAAc;AACd;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,QAAQ;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,kBAAkB;AACxD;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,kBAAkB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,mBAAmB;AAC7E;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,mBAAmB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,kEAAkE,mBAAmB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,8DAA8D,mBAAmB;AACjF;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,gEAAgE,mBAAmB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,sEAAsE,mBAAmB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,mBAAmB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,mBAAmB;AAC7E;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,mBAAmB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,oBAAoB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,oBAAoB;AAC1E;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,oBAAoB;AAC1E;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,oBAAoB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,oBAAoB;AAC9E;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,oBAAoB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,8DAA8D,oBAAoB;AAClF;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,gEAAgE,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,gEAAgE,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,kEAAkE,oBAAoB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,oBAAoB;AAC1E;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,oBAAoB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,oBAAoB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,oBAAoB;AAC9E;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,oBAAoB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,oBAAoB;AAChF;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,8DAA8D,oBAAoB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,gEAAgE,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,kEAAkE,oBAAoB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,kEAAkE,oBAAoB;AACtF;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,oEAAoE,oBAAoB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,mBAAmB;AAC/E;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,mBAAmB;AAC7E;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,mBAAmB;AAC/E;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,8DAA8D,mBAAmB;AACjF;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,oBAAoB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,oBAAoB;AAC1E;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,mBAAmB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,kEAAkE,oBAAoB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,0EAA0E,oBAAoB;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA,kFAAkF,mBAAmB;AACrG;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,oBAAoB;AAC9E;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,oBAAoB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,mBAAmB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,oEAAoE,mBAAmB;AACvF;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,oBAAoB;AAC9E;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,oBAAoB;AAChF;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,8DAA8D,oBAAoB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,8DAA8D,mBAAmB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,sEAAsE,mBAAmB;AACzF;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,oBAAoB;AAChF;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,8DAA8D,oBAAoB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,gEAAgE,mBAAmB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,wEAAwE,oBAAoB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA,gFAAgF,mBAAmB;AACnG;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,8DAA8D,oBAAoB;AAClF;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,gEAAgE,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,kEAAkE,oBAAoB;AACtF;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,oEAAoE,oBAAoB;AACxF;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,sEAAsE,oBAAoB;AAC1F;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,wEAAwE,oBAAoB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,kEAAkE,mBAAmB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,0EAA0E,mBAAmB;AAC7F;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,gEAAgE,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,kEAAkE,oBAAoB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,kEAAkE,oBAAoB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,sEAAsE,oBAAoB;AAC1F;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,sEAAsE,mBAAmB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,4EAA4E,oBAAoB;AAChG;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,8EAA8E,oBAAoB;AAClG;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA,gFAAgF,mBAAmB;AACnG;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,mBAAmB;AAC/E;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,oBAAoB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,mBAAmB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,mBAAmB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,8DAA8D,mBAAmB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,oBAAoB;AAC1E;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,oBAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,oBAAoB;AAC9E;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,oBAAoB;AAChF;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,8DAA8D,oBAAoB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,0DAA0D,mBAAmB;AAC7E;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,4DAA4D,oBAAoB;AAChF;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,8DAA8D,oBAAoB;AAClF;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,gEAAgE,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,kEAAkE,oBAAoB;AACtF;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,oEAAoE,oBAAoB;AACxF;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,sEAAsE,oBAAoB;AAC1F;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,wEAAwE,oBAAoB;AAC5F;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,0EAA0E,oBAAoB;AAC9F;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,4EAA4E,oBAAoB;AAChG;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,8EAA8E,oBAAoB;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;;AAEA;AACA;;;AAGA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;AC3vmBD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,iDAAiD;AACjD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,eAAe;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,wBAAwB,eAAe;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA,oCAAoC;AACpC,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,gBAAgB,OAAO;AAC/C,6BAA6B,MAAM,QAAQ;AAC3C,oCAAoC;AACpC;AACA;AACA,gCAAgC,oBAAoB;AACpD,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mEAAmE;AACnE,oEAAoE;;AAEpE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,oBAAoB;AACpC;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,oBAAoB;AACpC;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;;AAEA;AACA;AACA,gCAAgC,6BAA6B;AAC7D;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gBAAgB,qBAAqB;AACrC;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,qBAAqB;AAClC;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,qBAAqB;AACrC;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,qBAAqB;AACrC;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;;;;;;AC/tBA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,sFAAsF,iBAAiB;AACvG;AACA,yBAAyB;AACzB;AACA,sFAAsF,iBAAiB;AACvG,6BAA6B;AAC7B,sFAAsF,iBAAiB;AACvG;AACA;AACA,qBAAqB;AACrB;AACA,kFAAkF,iBAAiB;AACnG;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,sDAAsD,iBAAiB;AACvE;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,uEAAuE,iCAAiC,yGAAyG,mBAAmB,sBAAsB,sBAAsB;;;;;;;AC5IhR;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,6BAA6B;AACrE,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,C;;;;;;ACnEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ,2CAA2C;AAC3C,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClUA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;ACnFA,e;;;;;;;ACAA;;AAEA;;AAEA,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,G;;;;;;ACzED;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,sBAAsB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;ACzLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,E;;;;;;AC9CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;AC1BA;;AAEA;;AAEA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;sDC/DA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,MAAM;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,KAAK;AACL,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB,yCAAyC,qBAAqB;;AAE9D;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;;AAEtD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,iBAAiB;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAEA;AACA;AACA;AACA;AACA,GAAG;AAAA;AACH,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA,CAAC;;;;;;;;;ACphBD;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;ACfA;;AAEA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpFA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,wBAAwB;AACxB;AACA;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA,E;;;;;;YC/DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC;;;;;;;ACzBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wB;;;;;;AC9BA,e;;;;;;;ACAA;;AAEA;;AAEA,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,G;;;;;;;ACzED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,E;;;;;;AC9CA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA,C;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA;;AAEA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB,4BAA4B;AAC5B,iBAAiB;AACjB;AACA,gCAAgC;AAChC,qBAAqB;AACrB,gCAAgC;AAChC,qBAAqB;AACrB,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;;AAGA;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;;;;;gFC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,8BAA8B;AAC9D,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAqD;AACjE,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qDAAqD;AAClE,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,WAAW;AACxC;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,0BAA0B,gBAAgB;AAC1C;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;;AAElB;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,gCAAgC;AACrC;AACA,0BAA0B,mDAAmD;AAC7E;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA,iBAAiB,qBAAqB;;AAEtC;;AAEA;AACA,6CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,4CAA4C;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,8BAA8B,0CAA0C;AACxE,SAAS,mDAAmD;AAC5D;AACA;AACA;AACA,uCAAuC;AACvC;AACA,8BAA8B,0CAA0C;AACxE,SAAS,mDAAmD;AAC5D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gDAAgD;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW,sDAAsD;AACjE,WAAW,mDAAmD;AAC9D;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,uCAAuC;AACvC;AACA,8BAA8B,0CAA0C;AACxE,SAAS,mDAAmD;AAC5D;AACA;AACA;AACA,uCAAuC;AACvC;AACA,8BAA8B,0CAA0C;AACxE,SAAS,mDAAmD;AAC5D;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB,mCAAmC,iCAAiC;AACpE;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,WAAW,sDAAsD;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gDAAgD;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA,WAAW,4DAA4D;AACvE,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,8BAA8B,0CAA0C;AACxE,SAAS,mDAAmD;AAC5D;AACA;AACA;AACA,uCAAuC;AACvC;AACA,8BAA8B,0CAA0C;AACxE,SAAS,mDAAmD;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI,mDAAmD;AAClE;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gDAAgD;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0CAA0C;AACnD,SAAS,mDAAmD;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,WAAW;AAClB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mCAAmC;AAC9E;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mCAAmC;AAC5E;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,sCAAsC;AACnD,SAAS;AACT;AACA;AACA,yBAAyB,2BAA2B;AACpD;AACA,mDAAmD,YAAY;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,yBAAyB;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,0BAA0B;AACzE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uDAAuD,YAAY;AACnE;AACA;AACA,oDAAoD,sBAAsB;AAC1E;;AAEA;AACA,qBAAqB,2BAA2B;AAChD;;AAEA;AACA;AACA,sDAAsD,YAAY;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,qCAAqC,oCAAoC;AACzE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C,YAAY;AACzD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,iCAAiC,sBAAsB;AACvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,YAAY;;AAE5C;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,YAAY;;AAEnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,WAAW,mDAAmD;AAC9D;AACA;AACA;AACA,kCAAkC;AAClC;AACA,WAAW,sDAAsD;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,iCAAiC,wCAAwC;AACzE;AACA;AACA;AACA,kCAAkC;AAClC;AACA,WAAW,wCAAwC;AACnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,+BAA+B,2CAA2C;AAC1E;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,SAAS,iDAAiD;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,WAAW,qDAAqD;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,WAAW,2CAA2C;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,iCAAiC,6CAA6C;AAC9E;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,sBAAsB;AACzE;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA,sCAAsC;AACtC;AACA,eAAe,6DAA6D;AAC5E;AACA;AACA,yCAAyC,sBAAsB;AAC/D;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,mCAAmC,sBAAsB;AACzD;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA,oCAAoC;AACpC;AACA,aAAa,6DAA6D;AAC1E;AACA;AACA,+CAA+C,sBAAsB;AACrE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,0BAA0B;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,+BAA+B,4CAA4C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,+BAA+B,4CAA4C;AAC3E;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gCAAgC;AAChC;AACA,SAAS,qDAAqD;AAC9D,KAAK;AACL;AACA;AACA,gCAAgC;AAChC;AACA,+BAA+B,2CAA2C;AAC1E;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,SAAS,kDAAkD;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc,gBAAgB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,mBAAmB,mBAAmB;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B;;AAEA;AACA,iDAAiD,sBAAsB;AACvE;AACA;;AAEA;AACA,uCAAuC,sBAAsB;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC,+BAA+B,4CAA4C;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,kCAAkC;AAClC;AACA,iCAAiC,uCAAuC;AACxE,OAAO;AACP;AACA,kCAAkC;AAClC;AACA,iCAAiC,uCAAuC;AACxE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,kCAAkC;AAClC;AACA,iCAAiC,4CAA4C;AAC7E,OAAO;AACP;AACA,kCAAkC;AAClC;AACA,iCAAiC,4CAA4C;AAC7E,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,kCAAkC;AAClC;AACA;AACA,WAAW,+CAA+C;AAC1D,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,WAAW,6DAA6D;AACxE;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gEAAgE,YAAY;AAC5E;AACA,yCAAyC,WAAW;AACpD,GAAG;AACH,yCAAyC,wBAAwB;AACjE;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,qCAAqC,WAAW;AAC5D;AACA;AACA;AACA,YAAY,qCAAqC,wBAAwB;AACzE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,uDAAuD;AAC9E;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,cAAc;AACd,aAAa;;AAEb,gBAAgB,iBAAiB;AACjC;;AAEA,qBAAqB;AACrB,kBAAkB,0DAA0D;;AAE5E;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,uDAAuD;AAC3E;;AAEA;AACA;;AAEA,gBAAgB,oDAAoD;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA,cAAc;;AAEd;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4BAA4B;AAC7D;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,aAAa;AACb,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,wCAAwC;AACxC;AACA,WAAW;AACX;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B,eAAe,EAAE;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,6BAA6B,EAAE;AACrD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC,IAAI;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,GAAG;AACH;;AAEA;;AAEA,CAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,YAAY;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6CAA6C;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,WAAW,8CAA8C;AACzD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C,sBAAsB;AACpE;AACA;AACA,mBAAmB,qBAAqB;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,UAAU;AACxC,WAAW,6CAA6C;AACxD;AACA,OAAO;AACP;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW,6CAA6C;AACxD,OAAO;AACP;AACA;AACA;AACA,iCAAiC,6CAA6C;AAC9E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,kBAAkB;AACpC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,kBAAkB;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,6BAA6B,aAAa;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mDAAmD,0BAA0B;AAC7E,gDAAgD,0BAA0B;AAC1E;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sBAAsB;AACrE,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,8CAA8C;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gEAAgE,YAAY;AAC5E;AACA;AACA,oCAAoC,yBAAyB;;AAE7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,0DAA0D;AACjE;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA,OAAO,4DAA4D;AACnE;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA,OAAO,mDAAmD;AAC1D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,OAAO,mDAAmD;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,SAAS,oDAAoD;AAC7D;AACA;AACA;AACA;AACA,gCAAgC;AAChC,+BAA+B,+CAA+C;AAC9E;;AAEA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA,gCAAgC;AAChC;AACA,+BAA+B,+CAA+C;AAC9E;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,gCAAgC;AAChC;AACA,+BAA+B,+CAA+C;AAC9E;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA,kCAAkC;AAClC;AACA;AACA,WAAW,+CAA+C;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kCAAkC;AAClC;AACA,WAAW,2DAA2D;AACtE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,SAAS,gDAAgD;AACzD;;AAEA;AACA;AACA;AACA,0BAA0B,yBAAyB;AACnD;AACA;AACA,kCAAkC;AAClC;AACA;AACA,WAAW,gDAAgD;AAC3D;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,WAAW,gDAAgD;AAC3D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,SAAS,qDAAqD;AAC9D;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,SAAS,oDAAoD;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,SAAS,oDAAoD;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,6BAA6B,iDAAiD;AAC9E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA,OAAO,qCAAqoBAAoB,kBAAkB;AACtC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6DAA6D;AACtE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,8CAA8C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAA4D;AAC3E,WAAW;AACX;AACA;AACA;AACA;AACA,eAAe,qDAAqD;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB,WAAW;AACX,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,8BAA8B,iBAAiB;AAC/C;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB,KAAK;AACL,wBAAwB;AACxB;;AAEA;AACA,wBAAwB;;AAExB;AACA;AACA,uBAAuB;AACvB,KAAK;AACL,uBAAuB;AACvB,KAAK;AACL,uBAAuB;AACvB;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B,SAAS;AACT,4BAA4B;AAC5B;;AAEA;AACA;AACA,8BAA8B;AAC9B,SAAS;AACT,8BAA8B;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAA0D;AAC1D;AACA;AACA;AACA,gBAAgB,mCAAmC;AACnD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,CAAC,WAAW;;AAEZ;;AAEA;AACA;AACA;;AAEA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;;AAEA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AAAA;AACH,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;;;;;;;AC9/PD,e;;;;;;ACAA;AACA;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,OAAO;AACP,GAAG;AACH,MAAM;AACN,EAAE;AACF;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,oBAAoB;AACpC;;AAEA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,yBAAyB;AACvE;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,2BAA2B;AAC3B,EAAE;AACF,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA,KAAK;AACL,yBAAyB;AACzB;;AAEA;AACA;AACA,KAAK;AACL,sBAAsB;AACtB;;AAEA;AACA;AACA,KAAK;AACL,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,0BAA0B;AAC1C;AACA;AACA,aAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB,QAAQ,2BAA2B,sBAAsB,EAAE;AAC7G;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,GAAG;AACH;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,MAAM;AACN,EAAE;AACF;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,2CAA2C;AAC3C;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF,KAAK;AACL;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,EAAE;;AAEF;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,iEAAiE,wBAAwB;AACzF;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,oBAAoB;AACpC;;AAEA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA,wDAAwD,oCAAoC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACvfA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,mBAAmB,mCAAmC;AACtD;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;;;;;;;;AC/HA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,iBAAiB;AAClF;AACA;AACA,yDAAyD,cAAc;AACvE;AACA,aAAa;AACb;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C,iCAAiC,YAAY;AAC7C;;AAEA;;;;;;;ACtMA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mEAAmE,gBAAgB;AACnF,sDAAsD,aAAa;AACnE;AACA,gEAAgE,sCAAsC;AACtG,8CAA8C,aAAa;;AAE3D,gCAAgC,gBAAgB,EAAE;AAClD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,+CAA+C,6BAA6B;AAC5E;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,kDAAkD,sCAAsC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,2CAA2C;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8CAA8C,8CAA8C;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6BAA6B;AAC3D,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,YAAY;AAC5D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,wCAAwC,YAAY;AACpD;AACA;;AAEA;AACA;AACA","file":"common-bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [], result;\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n \t\tif(executeModules) {\n \t\t\tfor(i=0; i < executeModules.length; i++) {\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = executeModules[i]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// objects to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData === 0) {\n \t\t\treturn new Promise(function(resolve) { resolve(); });\n \t\t}\n\n \t\t// a Promise means \"currently loading\".\n \t\tif(installedChunkData) {\n \t\t\treturn installedChunkData[2];\n \t\t}\n\n \t\t// setup Promise in chunk cache\n \t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t});\n \t\tinstalledChunkData[2] = promise;\n\n \t\t// start chunk loading\n \t\tvar head = document.getElementsByTagName('head')[0];\n \t\tvar script = document.createElement('script');\n \t\tscript.type = 'text/javascript';\n \t\tscript.charset = 'utf-8';\n \t\tscript.async = true;\n \t\tscript.timeout = 120000;\n\n \t\tif (__webpack_require__.nc) {\n \t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t}\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \"-bundle.js\";\n \t\tvar timeout = setTimeout(onScriptComplete, 120000);\n \t\tscript.onerror = script.onload = onScriptComplete;\n \t\tfunction onScriptComplete() {\n \t\t\t// avoid mem leaks in IE.\n \t\t\tscript.onerror = script.onload = null;\n \t\t\tclearTimeout(timeout);\n \t\t\tvar chunk = installedChunks[chunkId];\n \t\t\tif(chunk !== 0) {\n \t\t\t\tif(chunk) {\n \t\t\t\t\tchunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));\n \t\t\t\t}\n \t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t}\n \t\t};\n \t\thead.appendChild(script);\n\n \t\treturn promise;\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2b0ac529c79d1c4dc9ef","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/classCallCheck.js\n// module id = 1\n// module chunks = 2","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/createClass.js\n// module id = 2\n// module chunks = 2","'use strict';\nimport { SparqlService } from 'angular-sparql-service';\nimport { EMap, EOMap, FMap, OMap } from 'components/collection-utils';\nexport class CNode {\n    constructor(value, termType, language = undefined, datatype = undefined) {\n        this.value = value;\n        this.termType = termType;\n        this.language = language;\n        this.datatype = datatype;\n        this.__className = 'CNode';\n    }\n    toCanonical() {\n        switch (this.termType) {\n            case 'NamedNode': return '<' + this.value + '>';\n            case 'BlankNode': return '_:' + this.value;\n            case 'Literal': return SparqlService.stringToSPARQLString(this.value) + (this.language ? '@' + this.language : (!this.datatype || RDF.langString.equals(this.datatype) || XMLSchema.string.equals(this.datatype) ? '' : '^^' + this.datatype.toCanonical()));\n            case 'Variable': return '?' + this.value;\n            case 'DefaultGraph': return '';\n            case 'UNDEF': return 'UNDEF';\n            default: throw 'Unknown term type ' + this;\n        }\n    }\n    equals(other) {\n        return this.termType === other.termType && this.value === other.value && (this.termType !== 'Literal' || (this.language === other.language && this.datatype === other.datatype));\n    }\n}\nexport class NodeFromNode extends CNode {\n    constructor(other) {\n        super(other.value, other.termType, other.language, other.datatype);\n    }\n}\nexport class DefaultGraph extends CNode {\n    constructor() { super('', 'DefaultGraph'); }\n    toCanonical() { return ''; }\n    equals(other) { return other.termType === 'DefaultGraph'; }\n}\nDefaultGraph.instance = new DefaultGraph();\nexport class UNDEF extends CNode {\n    constructor() { super('', 'UNDEF'); }\n    toCanonical() { return ''; }\n    equals(other) { return other.termType === 'UNDEF'; }\n}\nUNDEF.instance = new UNDEF();\nexport class Variable extends CNode {\n    constructor(value) { super(value, 'Variable'); }\n    toCanonical() { return '?' + this.value; }\n}\nexport class NamedNode extends CNode {\n    constructor(value) { super(value, 'NamedNode'); }\n    toCanonical() { return '<' + this.value + '>'; }\n}\nexport class BlankNode extends CNode {\n    constructor(value) { super(value, 'BlankNode'); }\n    toCanonical() { return '?' + this.value; }\n}\nexport class Literal extends CNode {\n    constructor(value, language = '', datatype) {\n        super(value, 'Literal', language, datatype ? datatype : (language ? RDF.langString : XMLSchema.string));\n    }\n}\nexport class Quad {\n    constructor(subject, predicate, object, graph) {\n        this.subject = subject;\n        this.predicate = predicate;\n        this.object = object;\n        this.graph = graph;\n    }\n    toCanonical() {\n        return this.subject.toCanonical() + ' ' + this.predicate.toCanonical() + ' ' + this.object.toCanonical() + (this.graph.termType === 'DefaultGraph' ? '' : (' ' + this.graph.toCanonical()));\n    }\n    equals(other) {\n        return this.subject.equals(other.subject) && this.predicate.equals(other.predicate) && this.object.equals(other.object) && this.graph.equals(other.graph);\n    }\n}\nexport class Triple {\n    constructor(subject, predicate, object) {\n        this.subject = subject;\n        this.predicate = predicate;\n        this.object = object;\n        this.graph = DefaultGraph.instance;\n    }\n    toCanonical() {\n        return this.subject.toCanonical() + ' ' + this.predicate.toCanonical() + ' ' + this.object.toCanonical();\n    }\n    equals(other) {\n        return this.subject.equals(other.subject) && this.predicate.equals(other.predicate) && this.object.equals(other.object) && this.graph.equals(other.graph);\n    }\n}\nexport class Graph {\n    constructor(graph, triples = []) {\n        this.graph = graph;\n        this.triples = triples;\n    }\n}\nexport class DataFactory {\n    constructor() {\n        this.nextBlankNodeId = 0;\n    }\n    static nodeFromBinding(binding) {\n        return DataFactory.instance.nodeFromBinding(binding);\n    }\n    static nodeFromNode(other) {\n        return DataFactory.instance.nodeFromNode(other);\n    }\n    static nodeFromCanonicalRepresentation(id) {\n        return DataFactory.instance.nodeFromCanonicalRepresentation(id);\n    }\n    static namedNode(value) { return DataFactory.instance.namedNode(value); }\n    static blankNode(value) { return DataFactory.instance.blankNode(value); }\n    static literal(value, languageOrDatatype) {\n        return DataFactory.instance.literal(value, languageOrDatatype);\n    }\n    static variable(value) { return DataFactory.instance.variable(value); }\n    static defaultGraph() { return DataFactory.instance.defaultGraph(); }\n    static triple(subject, predicate, object) {\n        return DataFactory.instance.triple(subject, predicate, object);\n    }\n    static quad(subject, predicate, object, graph) {\n        return DataFactory.instance.quad(subject, predicate, object, graph);\n    }\n    literalFromBinding(binding) {\n        return new Literal(binding.value, binding.language, binding.datatype ? new NamedNode(binding.datatype) : ((binding['xml:lang'] ? binding['xml:lang'] : '') !== '' ? RDF.langString : XMLSchema.string));\n    }\n    nodeFromBinding(binding) {\n        let n = new CNode(binding.value, binding.type === 'literal' ? 'Literal' : (binding.type === 'uri' ? 'NamedNode' : 'BlankNode'));\n        if (binding.type === 'literal') {\n            n.language = binding['xml:lang'] ? binding['xml:lang'] : '';\n            n.datatype = binding.datatype ? new NamedNode(binding.datatype) : (n.language !== '' ? RDF.langString : XMLSchema.string);\n        }\n        return n;\n    }\n    nodeFromNode(other) {\n        if (other.termType === 'Literal')\n            return new Literal(other.value, other.language, other.datatype);\n        else\n            return new CNode(other.value, other.termType);\n    }\n    nodeFromCanonicalRepresentation(id) {\n        if (id.indexOf('<') === 0)\n            return new NamedNode(id.substring(1, id.length - 1));\n        else if (id.indexOf('_:') === 0)\n            return new BlankNode(id.substring(2));\n        else {\n            let value = id.substring(1, id.lastIndexOf('\"'));\n            if (id.lastIndexOf('@') === id.lastIndexOf('\"') + 1)\n                return new Literal(value, id.substring(id.lastIndexOf('@')));\n            else if (id.lastIndexOf('^^<') === id.lastIndexOf('\"') + 1)\n                return new Literal(value, '', new NamedNode(id.substring(id.lastIndexOf('^^<'), id.length - 1)));\n            else\n                return new Literal(value);\n        }\n    }\n    namedNode(value) { return new NamedNode(value); }\n    blankNode(value) { return new BlankNode(value ? value : ('b' + ++this.nextBlankNodeId)); }\n    literal(value, languageOrDatatype) {\n        if (typeof (languageOrDatatype) === 'string')\n            return new Literal(value, languageOrDatatype);\n        else\n            return new Literal(value, undefined, languageOrDatatype);\n    }\n    variable(value) { return new Variable(value); }\n    defaultGraph() { return DefaultGraph.instance; }\n    triple(subject, predicate, object) {\n        return new Triple(subject, predicate, object);\n    }\n    quad(subject, predicate, object, graph) {\n        return new Quad(subject, predicate, object, graph ? graph : DefaultGraph.instance);\n    }\n}\nDataFactory.instance = new DataFactory();\n// DRAFT\nexport class FIBRA {\n}\nFIBRA.ns = 'http://hdlab.stanford.edu/fibra/ontology#';\nFIBRA.Project = new NamedNode(FIBRA.ns + 'Project');\nFIBRA.sourceFile = new NamedNode(FIBRA.ns + 'sourceFile');\nFIBRA.groupProp = new NamedNode(FIBRA.ns + 'group');\nFIBRA.graph = new NamedNode(FIBRA.ns + 'graph');\nFIBRA.qualifiedAssertion = new NamedNode(FIBRA.ns + 'qualifiedAssertion');\nFIBRA.order = new NamedNode(FIBRA.ns + 'order');\nFIBRA.schemaNS = new NamedNode(FIBRA.ns + 'schemaNS');\nFIBRA.instanceNS = new NamedNode(FIBRA.ns + 'instanceNS');\nFIBRA.updateEndpoint = new NamedNode(FIBRA.ns + 'updateEndpoint');\nFIBRA.configuration = new NamedNode(FIBRA.ns + 'configuration');\nFIBRA.configurationReference = new NamedNode(FIBRA.ns + 'configurationReference');\nFIBRA.schema = new NamedNode(FIBRA.ns + 'schema');\nFIBRA.schemaReference = new NamedNode(FIBRA.ns + 'schemaReference');\nFIBRA.autocompletionQuery = new NamedNode(FIBRA.ns + 'autocompletionQuery');\nFIBRA.propertyQuery = new NamedNode(FIBRA.ns + 'propertyQuery');\nFIBRA.classQuery = new NamedNode(FIBRA.ns + 'classQuery');\nFIBRA.itemQuery = new NamedNode(FIBRA.ns + 'itemQuery');\nFIBRA.deleteItemQuery = new NamedNode(FIBRA.ns + 'deleteItemQuery');\nFIBRA.RemoteEndpointConfiguration = new NamedNode(FIBRA.ns + 'RemoteEndpointConfiguration');\nFIBRA.PrimaryEndpointConfiguration = new NamedNode(FIBRA.ns + 'PrimaryEndpointConfiguration');\nFIBRA.AuthorityEndpointConfiguration = new NamedNode(FIBRA.ns + 'AuthorityEndpointConfiguration');\nFIBRA.ArchiveEndpointConfiguration = new NamedNode(FIBRA.ns + 'ArchiveEndpointConfiguration');\nFIBRA.Schema = new NamedNode(FIBRA.ns + 'Schema');\nexport class SD {\n}\nSD.ns = 'http://www.w3.org/ns/sparql-service-description#';\nSD._name = new NamedNode(SD.ns + 'name');\nexport class SKOS {\n}\nSKOS.ns = 'http://www.w3.org/2004/02/skos/core#';\nSKOS.prefLabel = new NamedNode(SKOS.ns + 'prefLabel');\nSKOS.altLabel = new NamedNode(SKOS.ns + 'altLabel');\nSKOS.related = new NamedNode(SKOS.ns + 'related');\nexport class RDFS {\n}\nRDFS.ns = 'http://www.w3.org/2000/01/rdf-schema#';\nRDFS.label = new NamedNode(RDFS.ns + 'label');\nRDFS.Class = new NamedNode(RDFS.ns + 'Class');\nRDFS.Property = new NamedNode(RDFS.ns + 'Property');\nexport class VOID {\n}\nVOID.ns = 'http://rdfs.org/ns/void#';\nVOID.sparqlEndpoint = new NamedNode(VOID.ns + 'sparqlEndpoint');\nexport class DCTerms {\n}\nDCTerms.ns = 'http://purl.org/dc/terms/';\nDCTerms.rightsHolder = new NamedNode(DCTerms.ns + 'rightsHolder');\nDCTerms.description = new NamedNode(DCTerms.ns + 'description');\nexport class FOAF {\n}\nFOAF.ns = 'http://xmlns.com/foaf/0.1/';\nFOAF.homepage = new NamedNode(FOAF.ns + 'homepage');\nexport class OWL {\n}\nOWL.ns = 'http://www.w3.org/2002/07/owl#';\nOWL.sameAs = new NamedNode(OWL.ns + 'sameAs');\nOWL.Thing = new NamedNode(OWL.ns + 'Thing');\nOWL.Class = new NamedNode(OWL.ns + 'Class');\nOWL.ObjectProperty = new NamedNode(OWL.ns + 'ObjectProperty');\nOWL.DatatypeProperty = new NamedNode(OWL.ns + 'DatatypeProperty');\nexport class RDF {\n}\nRDF.ns = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nRDF.type = new NamedNode(RDF.ns + 'type');\nRDF.langString = new NamedNode(RDF.ns + 'langString');\nRDF.Triple = new NamedNode(RDF.ns + 'Triple');\nRDF.subject = new NamedNode(RDF.ns + 'subject');\nRDF.predicate = new NamedNode(RDF.ns + 'predicate');\nRDF.object = new NamedNode(RDF.ns + 'object');\nRDF.value = new NamedNode(RDF.ns + 'value');\nexport class XMLSchema {\n}\nXMLSchema.ns = 'http://www.w3.org/2001/XMLSchema#';\nXMLSchema.string = new NamedNode(XMLSchema.ns + 'string');\nXMLSchema.dateTime = new NamedNode(XMLSchema.ns + 'dateTime');\nexport class CIDOC {\n}\nCIDOC.ns = 'http://www.cidoc-crm.org/cidoc-crm/';\nCIDOC.Person = new NamedNode(CIDOC.ns + 'E21_Person');\nCIDOC.Place = new NamedNode(CIDOC.ns + 'E53_Place');\nCIDOC.Group = new NamedNode(CIDOC.ns + 'E74_Group');\nexport class GETTY {\n}\nGETTY.ns = 'http://vocab.getty.edu/ontology#';\nGETTY.AdminPlaceConcept = new NamedNode(GETTY.ns + 'AdminPlaceConcept');\nGETTY.PhysicalPlaceConcept = new NamedNode(GETTY.ns + 'PhysicalPlaceConcept');\nGETTY.PhysAdminPlaceConcept = new NamedNode(GETTY.ns + 'PhysAdminPlaceConcept');\nGETTY.PersonConcept = new NamedNode(GETTY.ns + 'PersonConcept');\nGETTY.GroupConcept = new NamedNode(GETTY.ns + 'GroupConcept');\nexport class MADS {\n}\nMADS.ns = 'http://www.loc.gov/mads/rdf/v1#';\nMADS.CorporateName = new NamedNode(MADS.ns + 'CorporateName');\nMADS.PersonalName = new NamedNode(MADS.ns + 'PersonalName');\nMADS.NameTitle = new NamedNode(MADS.ns + 'NameTitle');\nMADS.Geographic = new NamedNode(MADS.ns + 'Geographic');\nexport class GEOVOCAB {\n}\nGEOVOCAB.ns = 'http://geovocab.org/spatial#';\nGEOVOCAB.Feature = new NamedNode(GEOVOCAB.ns + 'Feature');\nexport class NodeMap {\n    constructor(imap = new FMap()) {\n        this.imap = imap;\n        this.__className = 'NodeMap';\n    }\n    get(key) {\n        return this.imap.get(key.toCanonical());\n    }\n    remove(key) {\n        return this.imap.remove(key.toCanonical());\n    }\n    each(f) {\n        this.imap.each((value, key, map) => f(value, DataFactory.instance.nodeFromCanonicalRepresentation(key), this));\n    }\n    map(f) {\n        let ret = new NodeMap();\n        this.each((value, key) => {\n            let mapped = f(value, key, this);\n            ret.set(mapped.key, mapped.value);\n        });\n        return ret;\n    }\n    clone() {\n        let ret = new NodeMap();\n        this.each((value, key) => ret.set(key, value));\n        return ret;\n    }\n    mapValues(f) {\n        let ret = new NodeMap();\n        this.each((value, key) => {\n            ret.set(key, f(value, key, this));\n        });\n        return ret;\n    }\n    some(f) {\n        return this.imap.some((value, key, map) => f(value, DataFactory.instance.nodeFromCanonicalRepresentation(key), this));\n    }\n    find(f) {\n        let ret = this.imap.find((value, key, map) => f(value, DataFactory.instance.nodeFromCanonicalRepresentation(key), this));\n        if (!ret)\n            return null;\n        return { key: DataFactory.instance.nodeFromCanonicalRepresentation(ret.key), value: ret.value };\n    }\n    has(key) {\n        return this.imap.has(key.toCanonical());\n    }\n    set(key, value) {\n        this.imap.set(key.toCanonical(), value);\n        return this;\n    }\n    get size() {\n        return this.imap.size();\n    }\n    empty() {\n        return this.imap.empty();\n    }\n    values() {\n        return this.imap.values();\n    }\n    keys() {\n        return this.imap.keys().map(k => DataFactory.instance.nodeFromCanonicalRepresentation(k));\n    }\n    entries() {\n        return this.imap.entries().map(o => { return { key: DataFactory.instance.nodeFromCanonicalRepresentation(o.key), value: o.value }; });\n    }\n    clear() {\n        this.imap.clear();\n        return this;\n    }\n}\nexport class ENodeMap extends NodeMap {\n    constructor(create = () => { return {}; }, imap = new EMap()) {\n        super(imap);\n        this.create = create;\n        this.imap = imap;\n    }\n    goc(key, create) {\n        if (!this.has(key))\n            this.set(key, create ? create(key) : this.create(key));\n        return this.get(key);\n    }\n    clone() {\n        let ret = new ENodeMap(this.create);\n        this.each((value, key) => ret.set(key, value));\n        return ret;\n    }\n}\nexport class ONodeMap extends NodeMap {\n    constructor() {\n        super(new OMap());\n    }\n    map(f) {\n        let ret = new ONodeMap();\n        this.each((value, key) => {\n            let mapped = f(value, key, this);\n            ret.set(mapped.key, mapped.value);\n        });\n        return ret;\n    }\n    clone() {\n        let ret = new ONodeMap();\n        this.each((value, key) => ret.set(key, value));\n        return ret;\n    }\n    mapValues(f) {\n        let ret = new ONodeMap();\n        this.each((value, key) => {\n            ret.set(key, f(value, key, this));\n        });\n        return ret;\n    }\n    removei(index) {\n        this.imap.removei(index);\n    }\n}\nexport class EONodeMap extends ENodeMap {\n    constructor(create) {\n        super(create, new EOMap());\n    }\n    map(f) {\n        let ret = new EONodeMap();\n        this.each((value, key) => {\n            let mapped = f(value, key, this);\n            ret.set(mapped.key, mapped.value);\n        });\n        return ret;\n    }\n    clone() {\n        let ret = new EONodeMap();\n        this.each((value, key) => ret.set(key, value));\n        return ret;\n    }\n    mapValues(f) {\n        let ret = new EONodeMap();\n        this.each((value, key) => {\n            ret.set(key, f(value, key, this));\n        });\n        return ret;\n    }\n    removei(index) {\n        this.imap.removei(index);\n    }\n}\nexport class NodeSet {\n    constructor(map = new FMap()) {\n        this.m = new NodeMap(map);\n    }\n    add(value) {\n        this.m.set(value, value);\n        return this;\n    }\n    adda(arr) {\n        arr.forEach(n => this.add(n));\n        return this;\n    }\n    adds(oset) {\n        oset.each(n => this.add(n));\n        return this;\n    }\n    has(value) {\n        return this.m.has(value);\n    }\n    get(value) {\n        return this.m.get(value);\n    }\n    clear() {\n        this.m.clear();\n        return this;\n    }\n    remove(value) {\n        return this.m.remove(value);\n    }\n    values() {\n        return this.m.values();\n    }\n    get size() {\n        return this.m.size;\n    }\n    empty() {\n        return this.m.empty();\n    }\n    each(f) {\n        this.m.each((value, key, map) => f(value, value, this));\n    }\n    map(f) {\n        let ret = new NodeSet();\n        this.each(value => ret.add(f(value, value, this)));\n        return ret;\n    }\n    clone() {\n        let ret = new NodeSet();\n        this.each(value => ret.add(value));\n        return ret;\n    }\n    some(f) {\n        return this.m.some((value, key, map) => f(value, value, this));\n    }\n    find(f) {\n        let ret = this.m.find((value, key, map) => f(value, value, this));\n        if (!ret)\n            return null;\n        return ret.value;\n    }\n}\nexport class ONodeSet extends NodeSet {\n    constructor() {\n        super(new OMap());\n        this.__className = 'ONodeSet';\n    }\n    removei(index) {\n        this.m.imap.removei(index);\n    }\n    map(f) {\n        let ret = new ONodeSet();\n        this.each(value => ret.add(f(value, value, this)));\n        return ret;\n    }\n    clone() {\n        let ret = new ONodeSet();\n        this.each(value => ret.add(value));\n        return ret;\n    }\n    first() {\n        return this.m.imap.firstValue();\n    }\n    last() {\n        return this.m.imap.lastValue();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/models/rdf.ts","var slowNextTick = (function () {\n\n    if(typeof(process) !== 'undefined' && process.nextTick) {\n        return process.nextTick;\n    }\n\n    if(typeof(window) !== 'undefined' && window.setImmediate) {\n        return window.setImmediate;\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n\n})();\n\nvar spin = 0;\nvar yieldFrequency = 100;\nvar nextTick = function(f) {\n    spin++;\n    if(spin < yieldFrequency) {\n        f();\n    } else {\n        spin = 0;\n        slowNextTick(f);\n    }\n};\n\n/**\n * Function that generates a hash key for a bound term.\n * @param term\n * @returns {*}\n */\nvar hashTerm = function(term) {\n    try {\n        if(term == null) {\n            return \"\";\n        } if(term.token==='uri') {\n            return \"u\"+term.value;\n        } else if(term.token === 'blank') {\n            return \"b\"+term.value;\n        } else if(term.token === 'literal') {\n            var l = \"l\"+term.value;\n            l = l + (term.type || \"\");\n            l = l + (term.lang || \"\");\n\n            return l;\n        }\n    } catch(e) {\n        if(typeof(term) === 'object') {\n            var key = \"\";\n            for(p in term) {\n                key = key + p + term[p];\n            }\n\n            return key;\n        }\n        return term;\n    }\n};\n\n/**\n * Returns a String with the lexical representation of a URI term.\n * @param term the URI term to be transformed into a String representation.\n * @param env Repository of the prefixes where th prefix of the URI will be resolved.\n * @returns the lexical representation of the URI term.\n */\nvar lexicalFormBaseUri = function(term, env) {\n    var uri = null;\n    env = env || {};\n    if(term.value == null) {\n        // URI has prefix and suffix, we'll try to resolve it.\n        var prefix = term.prefix;\n        var suffix = term.suffix;\n        var resolvedPrefix = env.namespaces[prefix];\n        if(resolvedPrefix != null) {\n            uri = resolvedPrefix+suffix;\n        } else {\n            uri = prefix+\":\"+suffix;\n        }\n    } else {\n        // URI is not prefixed\n        uri = term.value;\n    }\n\n    if(uri===null) {\n        return null;\n    } else {\n        // Should we apply the base URI namespace?\n        if(uri.indexOf(\":\") == -1) {\n            uri = (env.base||\"\") + uri; // applyBaseUri\n        }\n    }\n\n    return uri;\n};\n\n\nparseISO8601 = function (str) {\n    return Date.parse(str);\n};\n\nif (!Date.prototype.toISOString) {\n    (function() {\n\n        function pad(number) {\n            if (number < 10) {\n                return '0' + number;\n            }\n            return number;\n        }\n\n        Date.prototype.toISOString = function() {\n            return this.getUTCFullYear() +\n                '-' + pad(this.getUTCMonth() + 1) +\n                '-' + pad(this.getUTCDate()) +\n                'T' + pad(this.getUTCHours()) +\n                ':' + pad(this.getUTCMinutes()) +\n                ':' + pad(this.getUTCSeconds()) +\n                '.' + (this.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n                'Z';\n        };\n\n    }());\n}\n\niso8601 = function(date) {\n    return date.toISOString();\n};\n\ncompareDateComponents = function(stra,strb) {\n    var dateA = parseISO8601(stra);\n    var dateB = parseISO8601(strb);\n\n    if(dateA == dateB) {\n        return 0;\n    } else if(dateA < dateB) {\n        return -1;\n    } else {\n        return 1;\n    }\n};\n\nlexicalFormLiteral = function(term, env) {\n    var value = term.value;\n    var lang = term.lang;\n    var type = term.type;\n\n    var indexedValue = null;\n    if(value != null && type != null && typeof(type) != 'string') {\n        var typeValue = type.value;\n\n        if(typeValue == null) {\n            var typePrefix = type.prefix;\n            var typeSuffix = type.suffix;\n\n            var resolvedPrefix = env.namespaces[typePrefix];\n            term.type = resolvedPrefix+typeSuffix;\n            typeValue = resolvedPrefix+typeSuffix;\n        }\n        // normalization\n        if(typeValue.indexOf('hexBinary') != -1) {\n            indexedValue = '\"' + term.value.toLowerCase() + '\"^^<' + typeValue + '>';\n        } else {\n            indexedValue = '\"' + term.value + '\"^^<' + typeValue + '>';\n        }\n    } else {\n        if(lang == null && type == null) {\n            indexedValue = '\"' + value + '\"';\n        } else if(type == null) {\n            indexedValue = '\"' + value + '\"' + \"@\" + lang;\n        } else {\n            // normalization\n            if(type.indexOf('hexBinary') != -1) {\n                indexedValue = '\"' + term.value.toLowerCase() + '\"^^<'+type+'>';\n            } else {\n                indexedValue = '\"' + term.value + '\"^^<'+type+'>';\n            }\n        }\n    }\n    return indexedValue;\n};\n\nnormalizeUnicodeLiterals = function (string) {\n    var escapedUnicode = string.match(/\\\\u[0-9abcdefABCDEF]{4,4}/g) || [];\n    var dups = {};\n    for (var i = 0; i < escapedUnicode.length; i++) {\n        if (dups[escapedUnicode[i]] == null) {\n            dups[escapedUnicode[i]] = true;\n            string = string.replace(new RegExp(\"\\\\\" + escapedUnicode[i], \"g\"), eval(\"'\" + escapedUnicode[i] + \"'\"));\n        }\n    }\n\n    return string;\n};\n\nregisterIndexedDB = function(that) {\n    if(typeof(window) === 'undefined' && typeof(process) !== \"undefined\" && process.browser === false) {\n        var sqlite3 = _dereq_('sqlite3')\n        var indexeddbjs = _dereq_(\"indexeddb-js\");\n        var engine    = new sqlite3.Database(':memory:');\n        var scope     = indexeddbjs.makeScope('sqlite3', engine);\n        that.indexedDB = scope.indexedDB;\n        that.IDBKeyRange = scope.IDBKeyRange;\n    } else {\n        // In the following line, you should include the prefixes of implementations you want to test.\n        var context\n        if(typeof(window) === \"undefined\") {\n            context = self;\n        } else {\n            context = window;\n        }\n\n        context.indexedDB = context.indexedDB || context.mozIndexedDB || context.webkitIndexedDB || context.msIndexedDB;\n        context.IDBKeyRange = context.IDBKeyRange || context.webkitIDBKeyRange || context.msIDBKeyRange;\n        // DON'T use \"var indexedDB = ...\" if you're not in a function.\n        // Moreover, you may need references to some window.IDB* objects:\n        if (!context.indexedDB) {\n            console.log(\"The browser does not support IndexDB.\");\n        } else {\n            that.indexedDB = context.indexedDB;\n            that.IDBKeyRange = context.IDBKeyRange;\n        }\n    }\n};\n\nguid = function() {\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n        s4() + '-' + s4() + s4() + s4();\n};\n\nhashTerm = function(term) {\n    try {\n        if(term == null) {\n            return \"\";\n        } if(term.token==='uri') {\n            return \"u\"+term.value;\n        } else if(term.token === 'blank') {\n            return \"b\"+term.value;\n        } else if(term.token === 'literal') {\n            var l = \"l\"+term.value;\n            l = l + (term.type || \"\");\n            l = l + (term.lang || \"\");\n\n            return l;\n        }\n    } catch(e) {\n        if(typeof(term) === 'object') {\n            var key = \"\";\n            for(p in term) {\n                key = key + p + term[p];\n            }\n\n            return key;\n        }\n        return term;\n    }\n};\n\nvar reject = function(xs,p) {\n    var acc = [];\n    for(var i=0; i<xs.length; i++) {\n        if(p(xs[i])) {\n            acc.push(xs[i]);\n        }\n    }\n\n    return acc;\n};\n\nvar include = function(xs,p) {\n    for(var i=0; i<xs.length; i++){\n        if(xs[i] === p)\n            return true;\n    }\n\n    return false;\n};\n\nvar each = function(xs,f) {\n    if(xs.forEach) {\n        xs.forEach(f);\n    } else {\n        for (var i = 0; i < xs.length; i++)\n            f(xs[i]);\n    }\n};\n\nvar map = function(xs,f) {\n    if(xs.map) {\n        return xs.map(f);\n    } else {\n        var acc = [];\n        for (var i = 0; i < xs.length; i++)\n            acc[i] = f(xs[i]);\n\n        return acc;\n    }\n};\n\nvar keys = function(xs) {\n    var acc = [];\n    for(var p in xs)\n        acc.push(p);\n    return acc;\n};\n\nvar values = function(xs) {\n    var acc = [];\n    for(var p in xs)\n        acc.push(xs[p]);\n    return acc;\n};\n\nvar size = function(xs) {\n    if(xs.length) {\n        return xs.length;\n    } else {\n        var acc = 0;\n        for(var p in xs)\n            acc++;\n        return acc;\n    }\n};\n\nclone = function(value) {\n    return JSON.parse(JSON.stringify(value));\n};\n\nvar isObject = function(value) {\n    // Avoid a V8 JIT bug in Chrome 19-20.\n    // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n    var type = typeof value;\n    return type == 'function' || (value && type == 'object') || false;\n};\n\n\nvar create = (function() {\n    function Object() {}\n    return function(prototype) {\n        if (isObject(prototype)) {\n            Object.prototype = prototype;\n            var result = new Object;\n            Object.prototype = null;\n        }\n        return result || Object();\n    };\n}());\n\nvar whilst = function (test, iterator, callback) {\n    if (test()) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            whilst(test, iterator, callback);\n        });\n    }\n    else {\n        callback();\n    }\n};\n\n\nvar eachSeries = function (arr, iterator, callback) {\n    callback = callback || function () {};\n    if (!arr.length) {\n        return callback();\n    }\n    var completed = 0;\n    var iterate = function () {\n        iterator(arr[completed], function (err) {\n            if (err) {\n                callback(err);\n                callback = function () {};\n            }\n            else {\n                completed += 1;\n                if (completed >= arr.length) {\n                    callback();\n                }\n                else {\n                    nextTick(iterate);\n                }\n            }\n        });\n    };\n    iterate();\n};\n\nvar eachParallel = function (arr, iterator, callback) {\n    callback = callback || function () {};\n    if (!arr.length) {\n        return callback();\n    }\n    var failed = false;\n    var completed = 0;\n\n    var innerCallback = function(err) {\n        if(err) {\n            failed = true;\n            throw(new Error(err));\n        }\n\n        if(!failed) {\n            completed++;\n            if(completed === arr.length)\n                callback();\n        }\n    };\n\n\n    for(var i=0; i<arr.length; i++) {\n        (function(arr,i,callback,iterator) {\n            nextTick(function(){\n                try {\n                    iterator(arr[i], function () {\n                        callback();\n                    })\n                } catch (e) {\n                    callback(e);\n                }\n            });\n        })(arr,i,innerCallback,iterator)\n    }\n};\n\n\nvar reduce = function (arr, memo, iterator, callback) {\n    eachSeries(arr, function (x, callback) {\n        iterator(memo, x, function (err, v) {\n            memo = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, memo);\n    });\n};\n\nvar seq = function (/* functions... */) {\n    var fns = arguments;\n    return function () {\n        var that = this;\n        var args = Array.prototype.slice.call(arguments);\n        var callback = args.pop();\n        reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]));\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n    };\n};\n\n\nvar isWorker = function() {\n    if(typeof(process) === \"undefined\" || process.browser === true) {\n        if (typeof(window) === \"undefined\") {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n};\n\n\nmodule.exports = {\n    isWorker: isWorker,\n    nextTick: nextTick,\n    hasTerm: hashTerm,\n    lexicalFormBaseUri: lexicalFormBaseUri,\n    parseISO8601: parseISO8601,\n    compareDateComponents: compareDateComponents,\n    iso8601: iso8601,\n    normalizeUnicodeLiterals: normalizeUnicodeLiterals,\n    lexicalFormLiteral: lexicalFormLiteral,\n    registerIndexedDB: registerIndexedDB,\n    guid: guid,\n    hashTerm: hashTerm,\n    keys: keys,\n    values: values,\n    size: size,\n    map: map,\n    each: each,\n    forEach: each,\n    include: include,\n    reject: reject,\n    remove: reject,\n    clone: clone,\n    create: create,\n    whilst: whilst,\n    eachSeries: eachSeries,\n    eachParallel: eachParallel,\n    seq: seq,\n    yieldFrequency: function(value){\n        yieldFrequency = value;\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/utils.js\n// module id = 8\n// module chunks = 2","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 9\n// module chunks = 2","var core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_core.js\n// module id = 11\n// module chunks = 2","module.exports = { \"default\": require(\"core-js/library/fn/object/get-prototype-of\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/get-prototype-of.js\n// module id = 14\n// module chunks = 2","\"use strict\";\n\nexports.__esModule = true;\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/possibleConstructorReturn.js\n// module id = 15\n// module chunks = 2","\"use strict\";\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = require(\"../core-js/object/create\");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/inherits.js\n// module id = 16\n// module chunks = 2","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_export.js\n// module id = 17\n// module chunks = 2","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inherits/inherits_browser.js\n// module id = 18\n// module chunks = 2","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_wks.js\n// module id = 21\n// module chunks = 2","'use strict';\nexport class FMap {\n    constructor() {\n        this.s = {};\n        this.__className = 'FMap';\n    }\n    goc(key, create) {\n        if (!this.has(key))\n            this.set(key, create(key));\n        return this.get(key);\n    }\n    has(key) {\n        return this.s[key] !== undefined;\n    }\n    set(key, value) {\n        this.s[key] = value;\n        return this;\n    }\n    get(key) {\n        return this.s[key];\n    }\n    goe(key, orElse) {\n        return this.has(key) ? this.get(key) : orElse(key);\n    }\n    remove(key) {\n        let contained = this.has(key);\n        delete this.s[key];\n        return contained;\n    }\n    sets(obj) {\n        for (let key in obj)\n            this.set(key, obj[key]);\n        return this;\n    }\n    setm(obj) {\n        for (let key in obj)\n            this.set(key, obj[key]);\n        return this;\n    }\n    clear() {\n        this.s = {};\n        return this;\n    }\n    keys() {\n        let ret = [];\n        for (let key in this.s)\n            ret.push(key);\n        return ret;\n    }\n    values() {\n        let ret = [];\n        for (let key in this.s)\n            ret.push(this.s[key]);\n        return ret;\n    }\n    entries() {\n        let ret = [];\n        for (let key in this.s)\n            ret.push({ key, value: this.s[key] });\n        return ret;\n    }\n    map(f) {\n        let ret = new FMap();\n        this.each((value, key) => {\n            let mapped = f(value, key, this);\n            ret.set(mapped.key, mapped.value);\n        });\n        return ret;\n    }\n    mapValues(f) {\n        let ret = new FMap();\n        this.each((value, key) => {\n            ret.set(key, f(value, key, this));\n        });\n        return ret;\n    }\n    each(func) {\n        for (let key in this.s)\n            func(this.s[key], key, this);\n        return undefined;\n    }\n    some(func) {\n        for (let key in this.s)\n            if (func(this.s[key], key, this))\n                return true;\n        return false;\n    }\n    find(func) {\n        for (let key in this.s)\n            if (func(this.s[key], key, this))\n                return { value: this.s[key], key: key };\n        return null;\n    }\n    clone() {\n        let ret = new FMap();\n        this.each((value, key) => {\n            ret.set(key, value);\n        });\n        return ret;\n    }\n    size() {\n        let size = 0;\n        /*tslint:disable no-unused-variable*/\n        for (let key in this.s)\n            size++;\n        /*tslint:enable no-unused-variable*/\n        return size;\n    }\n    empty() {\n        for (let key in this.s)\n            return false;\n        return true;\n    }\n}\nexport class EMap extends FMap {\n    constructor(create = () => { return {}; }) {\n        super();\n        this.create = create;\n    }\n    goc(key, create) {\n        if (!this.has(key))\n            this.set(key, create ? create(key) : this.create(key));\n        return this.get(key);\n    }\n}\nexport class IdentitySet {\n    constructor() {\n        this.a = [];\n    }\n    clear() {\n        this.a = [];\n        return this;\n    }\n    has(key) {\n        return this.a.indexOf(key) !== -1;\n    }\n    add(key) {\n        if (this.has(key))\n            return this;\n        this.a.push(key);\n        return this;\n    }\n    adda(arr) {\n        arr.forEach(v => this.add(v));\n        return this;\n    }\n    adds(oset) {\n        oset.each(v => this.add(v));\n        return this;\n    }\n    remove(key) {\n        let index = this.a.indexOf(key);\n        if (index === -1)\n            return false;\n        this.a.splice(index, 1);\n        return true;\n    }\n    each(func) {\n        for (let value of this.a)\n            func(value, value, this);\n        return undefined;\n    }\n    size() {\n        return this.a.length;\n    }\n    empty() {\n        return this.size() === 0;\n    }\n    values() {\n        return this.a;\n    }\n    map(f) {\n        let ret = new IdentitySet();\n        this.each(value => ret.add(f(value, value, this)));\n        return ret;\n    }\n    some(f) {\n        for (let value of this.a)\n            if (f(value, value, this))\n                return true;\n        return false;\n    }\n    find(f) {\n        for (let value of this.a)\n            if (f(value, value, this))\n                return value;\n        return null;\n    }\n}\nexport class StringSet {\n    constructor() {\n        this.s = {};\n        this.__className = 'StringSet';\n    }\n    clear() {\n        this.s = {};\n        return this;\n    }\n    has(key) {\n        return this.s[key] !== undefined;\n    }\n    add(key) {\n        this.s[key] = '';\n        return this;\n    }\n    adda(arr) {\n        arr.forEach(str => this.add(str));\n        return this;\n    }\n    adds(oset) {\n        oset.each(str => this.add(str));\n        return this;\n    }\n    remove(key) {\n        let contained = this.has(key);\n        delete this.s[key];\n        return contained;\n    }\n    each(func) {\n        for (let key in this.s)\n            func(key, key, this);\n        return undefined;\n    }\n    size() {\n        let size = 0;\n        /*tslint:disable no-unused-variable*/\n        for (let key in this.s)\n            size++;\n        /*tslint:enable no-unused-variable*/\n        return size;\n    }\n    values() {\n        let ret = [];\n        for (let key in this.s)\n            ret.push(key);\n        return ret;\n    }\n    map(f) {\n        let ret = new StringSet();\n        this.each(value => ret.add(f(value, value, this)));\n        return ret;\n    }\n    some(f) {\n        for (let value in this.s)\n            if (f(value, value, this))\n                return true;\n        return false;\n    }\n    find(f) {\n        for (let value in this.s)\n            if (f(value, value, this))\n                return value;\n        return null;\n    }\n    clone() {\n        let ret = new StringSet();\n        this.each(value => ret.add(value));\n        return ret;\n    }\n    empty() {\n        for (let value in this.s)\n            return false;\n        return true;\n    }\n}\nexport class OMap extends FMap {\n    constructor() {\n        super(...arguments);\n        this.__className = 'OMap';\n        this.ka = [];\n        this.va = [];\n    }\n    set(key, value) {\n        if (!this.has(key)) {\n            super.set(key, value);\n            this.ka.push(key);\n            this.va.push(value);\n        }\n        return this;\n    }\n    remove(key) {\n        let value = this.get(key);\n        if (value !== undefined) {\n            super.remove(key);\n            let index = this.ka.indexOf(key);\n            this.ka.splice(index, 1);\n            this.va.splice(index, 1);\n        }\n        return value !== undefined;\n    }\n    removei(index) {\n        super.remove(this.ka[index]);\n        this.ka.splice(index, 1);\n        this.va.splice(index, 1);\n    }\n    firstKey() {\n        return this.ka[0];\n    }\n    lastKey() {\n        return this.ka[this.ka.length - 1];\n    }\n    firstValue() {\n        return this.va[0];\n    }\n    lastValue() {\n        return this.va[this.va.length - 1];\n    }\n    size() {\n        return this.ka.length;\n    }\n    empty() {\n        return this.ka.length !== 0;\n    }\n    keys() {\n        return this.ka;\n    }\n    values() {\n        return this.va;\n    }\n    clear() {\n        super.clear();\n        this.ka = [];\n        this.va = [];\n        return this;\n    }\n}\nexport class EOMap extends OMap {\n    constructor(create) {\n        super();\n        this.create = create;\n    }\n    goc(key, create) {\n        if (!this.has(key))\n            this.set(key, create ? create(key) : this.create(key));\n        return this.get(key);\n    }\n}\nexport class OStringSet extends StringSet {\n    constructor() {\n        super(...arguments);\n        this.a = [];\n    }\n    add(key) {\n        if (!this.has(key)) {\n            super.add(key);\n            this.a.push(key);\n        }\n        return this;\n    }\n    remove(key) {\n        let contained = super.remove(key);\n        if (contained)\n            this.a.splice(this.a.indexOf(key), 1);\n        return contained;\n    }\n    size() {\n        return this.a.length;\n    }\n    empty() {\n        return this.a.length !== 0;\n    }\n    values() {\n        return this.a;\n    }\n    first() {\n        return this.a[0];\n    }\n    last() {\n        return this.a[this.a.length - 1];\n    }\n    clear() {\n        super.clear();\n        this.a = [];\n        return this;\n    }\n}\nexport function goc(obj, key, create) {\n    if (obj[key] === undefined)\n        obj[key] = create ? create(key) : {};\n    return obj[key];\n}\nexport function ogoc(obj, key, arr, create) {\n    if (obj[key] === undefined) {\n        obj[key] = create ? create(key) : {};\n        arr.push(obj[key]);\n    }\n    return obj[key];\n}\nexport function cpush(arr, obj, key, value) {\n    if (obj[key] === undefined) {\n        obj[key] = value;\n        arr.push(value);\n    }\n}\nexport function cpushs(arr, obj, obj2) {\n    for (let key in obj2)\n        cpush(arr, obj, key, obj2[key]);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/collection-utils.ts","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 23\n// module chunks = 2","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dp.js\n// module id = 25\n// module chunks = 2","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_global.js\n// module id = 26\n// module chunks = 2","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_descriptors.js\n// module id = 27\n// module chunks = 2","'use strict';\nimport { ONodeSet } from '../../models/rdf';\nimport { FullRichNodeFromNode } from '../../models/richnode';\nimport { FMap } from '../../components/collection-utils';\nexport class Class extends FullRichNodeFromNode {\n    constructor(id) {\n        super(id);\n        this.superClasses = new ONodeSet();\n        this.subClasses = new ONodeSet();\n        this.properties = new ONodeSet();\n        this.inverseProperties = new ONodeSet();\n    }\n}\nexport class Property extends FullRichNodeFromNode {\n    constructor(id) {\n        super(id);\n        this.domains = new ONodeSet();\n        this.ranges = new ONodeSet();\n        this.superProperties = new ONodeSet();\n        this.subProperties = new ONodeSet();\n    }\n}\nexport class DataModel {\n    constructor() {\n        this.classMap = new FMap();\n        this.propertyMap = new FMap();\n        this.rootClasses = [];\n        this.rootProperties = [];\n    }\n    static getFilter(types) {\n        if (types.length === 0)\n            return '';\n        else\n            return 'FILTER (?groupId IN (' + types.map(id => id.toCanonical()).join(', ') + '))';\n    }\n}\nDataModel.propertyQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX sf: <http://ldf.fi/functions#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nSELECT ?id ?domains ?ranges ?labels ?descriptions ?types ?inverseProperty ?superProperties ?subProperties {\n# STARTGRAPH\n  {\n    ?types rdfs:subClassOf* rdf:Property .\n    ?id a ?types .\n  }\n    {\n    ?id skos:prefLabel|rdfs:label ?labels .\n  } UNION {\n    ?id rdfs:comment|dcterms:description ?descriptions .\n  } UNION {\n    ?id owl:inverseOf ?inverseProperty .\n  } UNION {\n    ?id rdfs:domain ?domains .\n  } UNION {\n    ?id rdfs:range ?ranges .\n  } UNION {\n    ?id rdfs:subPropertyOf ?superProperties .\n  } UNION {\n    ?subProperties rdfs:subPropertyOf ?id .\n  }\n# ENDGRAPH\n}`;\nDataModel.classQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX sf: <http://ldf.fi/functions#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nSELECT ?id ?types ?labels ?descriptions ?superClasses ?subClasses {\n# STARTGRAPH\n  {\n    ?types rdfs:subClassOf* rdfs:Class .\n    ?id a ?types .\n  }\n  {\n    ?id skos:prefLabel|rdfs:label ?labels .\n  } UNION {\n    ?id rdfs:comment|dcterms:description ?descriptions .\n  } UNION {\n    ?id rdfs:subClassOf ?superClasses .\n  } UNION {\n    ?subClasses rdfs:subClassOf ?id .\n  }\n# ENDGRAPH\n}`;\n\n\n\n// WEBPACK FOOTER //\n// ./app/services/project-service/data-model.ts","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-util-is/lib/util.js\n// module id = 29\n// module chunks = 2","'use strict';\nimport * as angular from 'angular';\nimport { PrunedRichNodeFromNode, FullRichNodeFromNode } from 'models/richnode';\nimport { DataFactory, DefaultGraph, ENodeMap, OWL, Triple, Graph, NamedNode, SKOS, RDFS } from 'models/rdf';\nimport { EMap, StringSet } from 'components/collection-utils';\nimport { UUID, flatten } from 'components/misc-utils';\nimport { Property } from 'services/project-service/data-model';\nimport { SerializationService } from 'services/worker-service/serialization-service';\nexport class PropertyAndValue {\n    constructor(property, object, properties = []) {\n        this.property = property;\n        this.object = object;\n        this.properties = properties;\n        this.__className = 'PropertyAndValue';\n    }\n    pruned() {\n        return new PropertyAndValue(new PrunedRichNodeFromNode(this.property), new PrunedRichNodeFromNode(this.object), this.properties.map(p => p.pruned()));\n    }\n}\nexport class RichPropertyValue {\n    constructor(value, properties = []) {\n        this.value = value;\n        this.properties = properties;\n    }\n}\nexport class PropertyToValues {\n    constructor(property) {\n        this.property = property;\n        this.values = [];\n        this.__className = 'PropertyToValues';\n    }\n    static toPropertyAndValues(pv, includePropertiesOfProperties) {\n        return pv.values.map(v => new PropertyAndValue(pv.property, v.value, flatten(v.properties.map(pv2 => pv2.values.map(v2 => new PropertyAndValue(pv2.property, v2.value))))));\n    }\n    toPropertyAndValues(includePropertiesOfProperties) {\n        return PropertyToValues.toPropertyAndValues(this, includePropertiesOfProperties);\n    }\n}\nexport class Item extends FullRichNodeFromNode {\n    constructor() {\n        super(...arguments);\n        this.localProperties = [];\n        this.remoteProperties = [];\n        this.localInverseProperties = [];\n        this.remoteInverseProperties = [];\n    }\n}\nexport class SimpleConstraint {\n    constructor(constraintString, priority = 0) {\n        this.constraintString = constraintString;\n        this.priority = priority;\n    }\n}\nexport class SparqlItemService {\n    /* @ngInject */\n    constructor(workerService) {\n        this.workerService = workerService;\n    }\n    /**\n     * Get a single item from the local store\n     * @param ids item ids of the item\n     * @param queryRemote whether to query remote endpoints for properties\n     * @param canceller promise that can be resolved to cancel a remote fetch\n     */\n    getItem(ids, queryRemote = false, canceller) {\n        return this.getItems([ids], queryRemote, canceller).then((items) => items[0], null, (info) => { return { endpointType: info.endpointType, endpoint: info.endpoint, item: info.items[0] }; });\n    }\n    /**\n     * Get multiple items from the local store\n     * @param ids grouped item ids of the items\n     * @param queryRemote whether to query remote endpoints for properties\n     * @param canceller promise that can be resolved to cancel a remote fetch\n     */\n    getItems(idGroups, queryRemote = false, canceller) {\n        return this.workerService.call('sparqlItemWorkerService', 'getItems', [idGroups.map(ids => ids.map(id => id.toCanonical())), queryRemote], canceller);\n    }\n    getAllItems(queryRemote = false, canceller) {\n        return this.workerService.call('sparqlItemWorkerService', 'getItems', [false, queryRemote], canceller);\n    }\n    createNewItem(properties = []) {\n        return this.createNewItems([properties]).then(r => r[0], null, r => r[0]);\n    }\n    createNewItems(propertiess = []) {\n        return this.workerService.call('sparqlItemWorkerService', 'createNewItems', [propertiess.map(props => props.map(pv => pv.pruned()))]);\n    }\n    alterItem(id, propertiesToAdd, propertiesToRemove = []) {\n        return this.workerService.call('sparqlItemWorkerService', 'alterItem', [(id), propertiesToAdd.map(pv => pv.pruned()), propertiesToRemove.map(pv => pv.pruned())]);\n    }\n    deleteItem(id) {\n        return this.workerService.call('sparqlItemWorkerService', 'deleteItem', [id]);\n    }\n}\nSparqlItemService.getItemPropertiesQuery = `PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX mads: <http://www.loc.gov/mads/rdf/v1#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX sf: <http://ldf.fi/functions#>\nSELECT ?id ?itemLabel ?property ?propertyLabel ?object ?objectLabel {\n# STARTGRAPH\n  VALUES (?id ?oid) { <IDPAIRS> }\n  ?oid ?property ?object .\n  OPTIONAL {\n    ?oid sf:preferredLanguageLiteral (skos:prefLabel mads:authoritativeLabel rdfs:label skos:altLabel mads:variantLabel '<PREFLANG>' '' ?itemLabel) .\n  }\n  OPTIONAL {\n    ?property sf:preferredLanguageLiteral (skos:prefLabel mads:authoritativeLabel rdfs:label skos:altLabel mads:variantLabel '<PREFLANG>' '' ?propertyLabelP)\n  }\n  BIND(COALESCE(?propertyLabelP,REPLACE(REPLACE(REPLACE(REPLACE(STR(?property),\".*/\",\"\"),\".*#\",\"\"),\"_\",\" \"),\"([A-ZÅÄÖ])\",\" $1\")) AS ?propertyLabel)\n  OPTIONAL {\n    ?object sf:preferredLanguageLiteral (skos:prefLabel mads:authoritativeLabel rdfs:label skos:altLabel mads:variantLabel '<PREFLANG>' '' ?objectLabelP) .\n  }\n  BIND (IF(ISIRI(?object),COALESCE(?objectLabelP,REPLACE(REPLACE(REPLACE(REPLACE(STR(?object),\".*/\",\"\"),\".*#\",\"\"),\"_\",\" \"),\"([A-ZÅÄÖ])\",\" $1\")),?object) AS ?objectLabel)\n# ENDGRAPH\n}`;\nSparqlItemService.coalesceIdsQuery = `PREFIX owl: <http://www.w3.org/2002/07/owl#>\nSELECT ?id ?id2 {\n# STARTGRAPH\n  VALUES (?id ?oid) { <IDPAIRS> }\n  ?oid owl:sameAs ?id2\n# ENDGRAPH\n}\n`;\nSparqlItemService.deleteItemQuery = `DELETE {\n# STARTGRAPH\n  <ID> ?p ?o .\n  ?s ?p <ID> .\n# ENDGRAPH\n}\nWHERE {\n# STARTGRAPH\n  { <ID> ?p ?o } UNION { ?s ?p <ID> }\n# ENDGRAPH\n}\n`;\nexport class SparqlItemWorkerService {\n    /* @ngInject */\n    constructor(fibraSparqlService, $q, sparqlUpdateWorkerService, stateWorkerService) {\n        this.fibraSparqlService = fibraSparqlService;\n        this.$q = $q;\n        this.sparqlUpdateWorkerService = sparqlUpdateWorkerService;\n        this.stateWorkerService = stateWorkerService;\n    }\n    static processItemResult(item, properties, dataModel, propertyMap, propertyValueMap, sameAses, endpoint, b) {\n        if (b['property']) {\n            let propertyToValues = propertyMap.goc(b['property'].value, () => {\n                let ret = new PropertyToValues(dataModel.propertyMap.goe(b['property'].value, () => new Property(DataFactory.instance.nodeFromBinding(b['property']))));\n                if (b['propertyLabel'])\n                    ret.property.labels.add(DataFactory.instance.literalFromBinding(b['propertyLabel']));\n                properties.push(ret);\n                return ret;\n            });\n            let n = propertyValueMap.goc(b['property'].value).goc(b['object'].value + ':' + b['object']['xml:lang'] + ':' + b['object'].datatype, () => {\n                let oNode = new FullRichNodeFromNode(DataFactory.instance.nodeFromBinding(b['object']));\n                oNode.sourceEndpoints = new StringSet();\n                propertyToValues.values.push(new RichPropertyValue(oNode));\n                if (b['objectLabel'])\n                    oNode.labels.add(DataFactory.instance.literalFromBinding(b['objectLabel']));\n                return oNode;\n            });\n            if (OWL.sameAs.equals(propertyToValues.property))\n                sameAses.push(n);\n            if (SKOS.prefLabel.equals(propertyToValues.property) || RDFS.label.equals(propertyToValues.property))\n                item.labels.add(n);\n            n.sourceEndpoints.add(endpoint);\n        }\n    }\n    getItems(idGroups, queryRemote = false, canceller) {\n        let queryTemplate = this.stateWorkerService.state.project.itemQuery;\n        if (!idGroups)\n            queryTemplate = queryTemplate.replace(/VALUES \\(\\?id \\?oid\\) { <IDPAIRS> }/g, '');\n        else\n            queryTemplate = queryTemplate.replace(/<IDPAIRS>/g, idGroups.map(idGroup => idGroup.map(id => '(' + idGroup[0] + ' ' + id + ')').join('')).join(''));\n        queryTemplate = queryTemplate.replace(/<PREFLANG>/g, this.stateWorkerService.state.language);\n        let items = new EMap((id) => new Item(DataFactory.instance.namedNode(id)));\n        let ret = this.$q.defer();\n        this.fibraSparqlService.query(this.stateWorkerService.state.project.endpoint, queryTemplate, { timeout: canceller }).then(response => {\n            let idPropertyMap = new EMap(() => new EMap());\n            let idPropertyValueMap = new EMap(() => new EMap(() => new EMap()));\n            let idSameAses = new ENodeMap(() => []);\n            for (let b of response.results.bindings) {\n                let item = items.goc(b['id'].value);\n                SparqlItemWorkerService.processItemResult(item, item.localProperties, this.stateWorkerService.state.project.dataModel, idPropertyMap.goc(b['id'].value), idPropertyValueMap.goc(b['id'].value), idSameAses.goc(item), this.stateWorkerService.state.project.endpoint, b);\n            }\n            if (queryRemote) {\n                ret.notify({ endpointType: 'primary', endpoint: this.stateWorkerService.state.project.endpoint, items: items.values() });\n                let itemIdQuery = '';\n                let seenIds = new StringSet();\n                for (let item of items.values()) {\n                    itemIdQuery += '(' + item.toCanonical() + item.toCanonical() + ')';\n                    seenIds.add(item.toCanonical());\n                    for (let item2 of idSameAses.get(item)) {\n                        itemIdQuery += '(' + item.toCanonical() + item2.toCanonical() + ')';\n                        seenIds.add(item2.toCanonical());\n                    }\n                }\n                if (idGroups)\n                    idGroups.forEach(ids => {\n                        for (let id of ids)\n                            if (!seenIds.has(id))\n                                itemIdQuery += '(' + ids[0] + ' ' + id + ')';\n                    });\n                this.$q.all(this.stateWorkerService.state.project.remoteEndpoints().map(endpoint => {\n                    let queryTemplate2 = endpoint.itemQuery;\n                    queryTemplate2 = queryTemplate2.replace(/<IDPAIRS>/g, itemIdQuery);\n                    queryTemplate2 = queryTemplate2.replace(/<PREFLANG>/g, this.stateWorkerService.state.language);\n                    return this.fibraSparqlService.query(endpoint.endpoint, queryTemplate2, { timeout: canceller }).then(response2 => {\n                        if (response2.results.bindings.length !== 0) {\n                            for (let b of response2.results.bindings) {\n                                let item = items.goc(b['id'].value);\n                                SparqlItemWorkerService.processItemResult(item, item.remoteProperties, this.stateWorkerService.state.project.dataModel, idPropertyMap.goc(b['id'].value), idPropertyValueMap.goc(b['id'].value), idSameAses.goc(item), endpoint.id, b);\n                            }\n                            ret.notify({ endpointType: 'remote', endpoint: endpoint.id, items: items.values() });\n                        }\n                    }, (error) => ret.notify({ endpointType: 'remote', endpoint: endpoint.id, error: SerializationService.stripFunctions(error) }));\n                })).then(() => ret.resolve(items.values()));\n            }\n            else\n                ret.resolve(items.values());\n        });\n        return ret.promise;\n    }\n    deleteItem(id) {\n        return this.fibraSparqlService.update(this.stateWorkerService.state.project.updateEndpoint, this.stateWorkerService.state.project.deleteItemQuery.replace(/<ID>/g, id.toCanonical())).then((r) => true, (r) => false);\n    }\n    alterItem(id, propertiesToAdd, propertiesToRemove = []) {\n        let triplesToAdd = [];\n        let triplesToRemove = [];\n        propertiesToAdd.forEach(property => triplesToAdd.push(new Triple(id, property.property, property.object)));\n        propertiesToRemove.forEach(property => triplesToRemove.push(new Triple(id, property.property, property.object)));\n        return this.sparqlUpdateWorkerService.updateGraphs(this.stateWorkerService.state.project.updateEndpoint, [new Graph(this.stateWorkerService.state.project.graph ? DataFactory.namedNode(this.stateWorkerService.state.project.graph) : DefaultGraph.instance, triplesToAdd)], [new Graph(this.stateWorkerService.state.project.graph ? DataFactory.namedNode(this.stateWorkerService.state.project.graph) : DefaultGraph.instance, triplesToRemove)]);\n    }\n    createNewItems(propertiess = []) {\n        let deferred = this.$q.defer();\n        let i = 0;\n        let triplesToAdd = [];\n        let subjects = [];\n        propertiess.forEach(properties => {\n            let subject = new NamedNode(this.stateWorkerService.state.project.instanceNS + UUID());\n            subjects.push(subject);\n            properties.forEach(property => triplesToAdd.push(new Triple(subject, property.property, property.object)));\n        });\n        deferred.notify(subjects);\n        this.sparqlUpdateWorkerService.updateGraphs(this.stateWorkerService.state.project.updateEndpoint, [new Graph(this.stateWorkerService.state.project.graph ? DataFactory.namedNode(this.stateWorkerService.state.project.graph) : DefaultGraph.instance, triplesToAdd)]).then(() => deferred.resolve(subjects), deferred.reject, deferred.notify);\n        return deferred.promise;\n    }\n}\nangular.module('fibra.services.sparql-item-service', [])\n    .config(($provide) => {\n    $provide.service('sparqlItemService', SparqlItemService);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/services/sparql-item-service.ts","'use strict';\nimport { SKOS, DCTerms, FOAF, FIBRA, RDF, XMLSchema, ONodeSet } from 'models/rdf';\nexport class CitableSource {\n    constructor(sparqlEndpoint, graph) {\n        this.sparqlEndpoint = sparqlEndpoint;\n        this.graph = graph;\n    }\n}\nexport class Citable {\n    constructor(id, source = new CitableSource(null), labels = new ONodeSet(), url, descriptions = new ONodeSet(), rightsHolders = [], dateCreated = new Date()) {\n        this.source = source;\n        this.labels = labels;\n        this.url = url;\n        this.descriptions = descriptions;\n        this.rightsHolders = rightsHolders;\n        this.dateCreated = dateCreated;\n        this.__className = 'Citable';\n        this.id = id;\n        this.source = source;\n    }\n    static toTurtle(c, tb) {\n        tb.prefixes['skos'] = SKOS.ns;\n        tb.prefixes['dcterms'] = DCTerms.ns;\n        tb.prefixes['foaf'] = FOAF.ns;\n        tb.prefixes['fibra'] = FIBRA.ns;\n        tb.prefixes['rdf'] = RDF.ns;\n        tb.prefixes['xsd'] = XMLSchema.ns;\n        let f = tb.fragmentsById.get(c.id);\n        c.labels.each(label => {\n            if (label.value)\n                f = f + `\nskos:prefLabel ${label.toCanonical()} ;`;\n        });\n        f = f + `\ndcterms:created \"${c.dateCreated.toISOString()}\"^^xsd:dateTime ;`;\n        c.descriptions.each(descr => {\n            if (descr.value)\n                f = f + `\ndcterms:description ${descr.toCanonical()} ;`;\n        });\n        if (c.url)\n            f = f + `\nfoaf:homepage <${c.url}> ;`;\n        if (c.rightsHolders.length > 0) {\n            f = f + `\ndcterms:rightsHolder `;\n            c.rightsHolders.forEach(rh => {\n                f = f + `<${rh.id}>, `;\n                if (!tb.fragmentsById.has(rh.id)) {\n                    tb.fragmentsById.set(rh.id, `<${rh.id}> a foaf:Agent ;`);\n                    rh.toTurtle(tb);\n                }\n            });\n            f = f.substring(0, f.length - 2) + ' ;';\n            if (c.rightsHolders.length > 1)\n                c.rightsHolders.forEach((rh, index) => {\n                    f = f + `\nfibra:qualifiedAssertion [\n  rdf:predicate dcterms:rightsHolder ;\n  rdf:object <${rh.id}> ;\n  fibra:order ${index} ;\n] ;`;\n                });\n        }\n        tb.fragmentsById.set(c.id, f);\n    }\n    toTurtle(tb) { Citable.toTurtle(this, tb); }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/models/citable.ts","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_hide.js\n// module id = 34\n// module chunks = 2","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_an-object.js\n// module id = 35\n// module chunks = 2","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-object.js\n// module id = 36\n// module chunks = 2","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sparql-service\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"sparql-service\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar angular = __webpack_require__(0);\nvar UniqueObjectTracker = (function () {\n    function UniqueObjectTracker() {\n        this.objectsById = {};\n        this.assignmentsById = {};\n    }\n    return UniqueObjectTracker;\n}());\nexports.UniqueObjectTracker = UniqueObjectTracker;\nvar SparqlService = (function () {\n    /* @ngInject */\n    SparqlService.$inject = [\"$http\", \"$q\"];\n    function SparqlService($http, $q) {\n        this.$http = $http;\n        this.$q = $q;\n    }\n    SparqlService.stringToSPARQLString = function (string) {\n        return '\"' + string\n            .replace(/\\\\/g, '\\\\\\\\')\n            .replace(/\"/g, '\\\\\"')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\t/g, '\\\\t')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\f/g, '\\\\f')\n            + '\"';\n    };\n    SparqlService.bindingsToObject = function (bindings, ret, config, trackId, tracker) {\n        if (ret === void 0) { ret = {}; }\n        for (var bkey in bindings) {\n            var okey = bkey;\n            var obj = ret;\n            var subObjectPrefixIndex = okey.indexOf('_');\n            var lastSubObjectPrefixIndex = -1;\n            var assignmentsById = void 0;\n            if (tracker) {\n                if (!tracker.assignmentsById[trackId])\n                    tracker.assignmentsById[trackId] = {};\n                assignmentsById = tracker.assignmentsById[trackId];\n            }\n            while (subObjectPrefixIndex !== -1) {\n                okey = bkey.substring(lastSubObjectPrefixIndex + 1, subObjectPrefixIndex);\n                var sbkey = bkey.substring(0, subObjectPrefixIndex);\n                if (config && config.bindingTypes && config.bindingTypes[sbkey] && config.bindingTypes[sbkey] === 'uniqueArray') {\n                    if (!obj[okey])\n                        obj[okey] = [];\n                    if (!tracker.objectsById[sbkey])\n                        tracker.objectsById[sbkey] = {};\n                    var tmp = void 0;\n                    if (!tracker.objectsById[sbkey][bindings[sbkey].value]) {\n                        tmp = config.bindingConverters[sbkey](bindings[sbkey], bindings);\n                        tracker.objectsById[sbkey][bindings[sbkey].value] = tmp;\n                    }\n                    else\n                        tmp = tracker.objectsById[sbkey][bindings[sbkey].value];\n                    if (!assignmentsById[sbkey])\n                        assignmentsById[sbkey] = {};\n                    if (!assignmentsById[sbkey][bindings[sbkey].value]) {\n                        obj[sbkey].push(tmp);\n                        assignmentsById[sbkey][bindings[sbkey].value] = {};\n                    }\n                    assignmentsById = assignmentsById[sbkey][bindings[sbkey].value];\n                    obj = tmp;\n                }\n                else {\n                    if (config && config.bindingTypes && config.bindingTypes[sbkey] && config.bindingTypes[sbkey] === 'single') {\n                        if (!tracker.objectsById[sbkey])\n                            tracker.objectsById[sbkey] = {};\n                        if (!tracker.objectsById[sbkey][bindings[sbkey].value]) {\n                            obj[okey] = config.bindingConverters[sbkey](bindings[sbkey], bindings);\n                            tracker.objectsById[sbkey][bindings[sbkey].value] = obj[okey];\n                        }\n                    }\n                    else if (!obj[okey])\n                        obj[okey] = config.bindingConverters[sbkey](bindings[sbkey], bindings);\n                    obj = obj[okey];\n                }\n                lastSubObjectPrefixIndex = subObjectPrefixIndex;\n                subObjectPrefixIndex = bkey.indexOf('_', subObjectPrefixIndex + 1);\n            }\n            okey = bkey.substring(lastSubObjectPrefixIndex + 1);\n            var val = void 0;\n            if (tracker && config && config.bindingTypes && (config.bindingTypes[bkey] === 'single' || config.bindingTypes[bkey] === 'uniqueArray')) {\n                if (!tracker.objectsById[bkey])\n                    tracker.objectsById[bkey] = {};\n                if (!tracker.objectsById[bkey][bindings[bkey].value]) {\n                    if (config && config.bindingConverters && config.bindingConverters[bkey])\n                        val = config.bindingConverters[bkey](bindings[bkey], bindings);\n                    else\n                        val = SparqlService.bindingToValue(bindings[bkey]);\n                    tracker.objectsById[bkey][bindings[bkey].value] = val;\n                }\n                else\n                    val = tracker.objectsById[bkey][bindings[bkey].value];\n            }\n            else if (config && config.bindingConverters && config.bindingConverters[bkey])\n                val = config.bindingConverters[bkey](bindings[bkey], bindings);\n            else if (!config || !config.bindingTypes || !config.bindingTypes[bkey] || (config.bindingTypes[bkey] !== 'hash' && config.bindingTypes[bkey] !== 'ignore'))\n                val = SparqlService.bindingToValue(bindings[bkey]);\n            if (config && config.bindingHandlers && config.bindingHandlers[bkey])\n                config.bindingHandlers[bkey](obj, okey, val, bkey, bindings[bkey], bindings);\n            else if (config && config.bindingTypes && config.bindingTypes[bkey]) {\n                switch (config.bindingTypes[bkey]) {\n                    case 'ignore': break;\n                    case 'single':\n                        obj[okey] = val;\n                        break;\n                    case 'array':\n                        if (!Array.isArray(obj[okey]))\n                            obj[okey] = [];\n                        obj[okey].push(val);\n                        break;\n                    case 'hash':\n                        if (!obj[okey])\n                            obj[okey] = {};\n                        if (val)\n                            obj[okey][bindings[bkey].value] = val;\n                        else if (bindings[bkey].type === 'literal') {\n                            var key2 = bindings[bkey].datatype;\n                            if (!key2) {\n                                key2 = bindings[bkey]['xml:lang'];\n                                if (!key2)\n                                    key2 = '';\n                            }\n                            obj[okey][key2] = bindings[bkey].value;\n                        }\n                        else\n                            obj[okey][bindings[bkey].value] = bindings[bkey].value;\n                        break;\n                    default:\n                        if (!obj[okey])\n                            obj[okey] = [];\n                        if (!assignmentsById[bkey])\n                            assignmentsById[bkey] = {};\n                        if (!assignmentsById[bkey][bindings[bkey].value]) {\n                            assignmentsById[bkey][bindings[bkey].value] = val;\n                            obj[okey].push(val);\n                        }\n                }\n            }\n            else if (Array.isArray(obj[okey]))\n                obj[okey].push(val);\n            else if (obj[okey] !== null && typeof (obj[okey]) === 'object' && bindings[bkey]) {\n                if (bindings[bkey].type === 'literal') {\n                    var key2 = bindings[bkey].datatype;\n                    if (!key2) {\n                        key2 = bindings[bkey]['xml:lang'];\n                        if (!key2)\n                            key2 = '';\n                    }\n                    if (config && config.bindingConverters && config.bindingConverters[bkey])\n                        obj[okey][key2] = config.bindingConverters[bkey](bindings[bkey], bindings);\n                    else\n                        obj[okey][key2] = bindings[bkey].value;\n                }\n                else if (config && config.bindingConverters && config.bindingConverters[bkey])\n                    obj[okey][bindings[bkey].value] = config.bindingConverters[bkey](bindings[bkey], bindings);\n                else\n                    obj[okey][bindings[bkey].value] = bindings[bkey].value;\n            }\n            else\n                obj[okey] = val;\n        }\n        return ret;\n    };\n    SparqlService.bindingToValue = function (binding) {\n        if (!binding)\n            return undefined;\n        if (binding.type === 'uri')\n            return binding.value;\n        else if (binding.type === 'bnode')\n            return binding.value;\n        else if (binding.datatype)\n            switch (binding.datatype) {\n                case 'http://www.w3.org/2001/XMLSchema#integer':\n                case 'http://www.w3.org/2001/XMLSchema#decimal': return parseInt(binding.value, 10);\n                case 'http://www.w3.org/2001/XMLSchema#float':\n                case 'http://www.w3.org/2001/XMLSchema#double': return parseFloat(binding.value);\n                case 'http://www.w3.org/2001/XMLSchema#boolean': return binding.value ? true : false;\n                default:\n            }\n        return binding.value;\n    };\n    SparqlService.bindingToString = function (binding) {\n        if (!binding)\n            return 'UNDEF';\n        else {\n            var value = binding.value.replace(/\\\\/g, '\\\\\\\\').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\b]/g, '\\\\b').replace(/\\f/g, '\\\\f').replace(/\\\"/g, '\\\\\"').replace(/\\'/g, '\\\\\\'');\n            if (binding.type === 'uri')\n                return '<' + value + '>';\n            else if (binding.type === 'bnode')\n                return '_:' + value;\n            else if (binding.datatype)\n                switch (binding.datatype) {\n                    case 'http://www.w3.org/2001/XMLSchema#integer':\n                    case 'http://www.w3.org/2001/XMLSchema#decimal':\n                    case 'http://www.w3.org/2001/XMLSchema#double':\n                    case 'http://www.w3.org/2001/XMLSchema#boolean': return value;\n                    case 'http://www.w3.org/2001/XMLSchema#string': return '\"' + value + '\"';\n                    default: return '\"' + value + '\"^^<' + binding.datatype + '>';\n                }\n            else if (binding['xml:lang'])\n                return '\"' + value + '\"@' + binding['xml:lang'];\n            else\n                return '\"' + value + '\"';\n        }\n    };\n    SparqlService.prototype.check = function (endpoint, params) {\n        var deferred = this.$q.defer();\n        this.$http(angular.extend({\n            method: 'GET',\n            url: endpoint,\n            params: { query: 'ASK {}' },\n            headers: { 'Accept': 'application/sparql-results+json' }\n        }, params)).then(function (response) { return deferred.resolve(response.data.boolean === true); }, function (response) { return deferred.resolve(false); });\n        return deferred.promise;\n    };\n    SparqlService.prototype.checkUpdate = function (endpoint, params) {\n        var deferred = this.$q.defer();\n        this.$http(angular.extend({\n            method: 'POST',\n            url: endpoint,\n            headers: { 'Content-Type': 'application/sparql-update' },\n            data: 'INSERT DATA {}'\n        }, params)).then(function (response) { return deferred.resolve(response.status === 204); }, function (response) { return deferred.resolve(false); });\n        return deferred.promise;\n    };\n    SparqlService.prototype.checkRest = function (endpoint, params) {\n        var deferred = this.$q.defer();\n        this.$http(angular.extend({\n            method: 'POST',\n            url: endpoint + '?default',\n            data: '',\n            headers: { 'Content-Type': 'text/turtle' }\n        }, params)).then(function (response) { return deferred.resolve(response.status === 204); }, function (response) { return deferred.resolve(false); });\n        return deferred.promise;\n    };\n    SparqlService.prototype.get = function (endpoint, graphIRI, params) {\n        return this.$http(angular.extend({\n            method: 'GET',\n            url: endpoint,\n            params: graphIRI ? { graph: graphIRI } : { 'default': '' },\n            headers: { 'Accept': 'text/turtle' }\n        }, params));\n    };\n    SparqlService.prototype.post = function (endpoint, graph, graphIRI, params) {\n        return this.$http(angular.extend({\n            method: 'POST',\n            url: endpoint,\n            params: graphIRI ? { graph: graphIRI } : { 'default': '' },\n            data: graph,\n            headers: { 'Content-Type': 'text/turtle' }\n        }, params));\n    };\n    SparqlService.prototype.put = function (endpoint, graph, graphIRI, params) {\n        return this.$http(angular.extend({\n            method: 'PUT',\n            url: endpoint,\n            params: graphIRI ? { graph: graphIRI } : { 'default': '' },\n            data: graph,\n            headers: { 'Content-Type': 'text/turtle' }\n        }, params));\n    };\n    SparqlService.prototype.delete = function (endpoint, graphIRI, params) {\n        return this.$http(angular.extend({\n            method: 'DELETE',\n            url: endpoint,\n            params: graphIRI ? { graph: graphIRI } : { 'default': '' }\n        }, params));\n    };\n    SparqlService.prototype.query = function (endpoint, query, params) {\n        if (query.length <= 2048)\n            return this.$http(angular.extend({\n                method: 'GET',\n                url: endpoint,\n                params: { query: query },\n                headers: { 'Accept': 'application/sparql-results+json' }\n            }, params));\n        else\n            return this.$http(angular.extend({\n                method: 'POST',\n                url: endpoint,\n                data: 'query=' + encodeURIComponent(query),\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    'Accept': 'application/sparql-results+json'\n                }\n            }, params));\n    };\n    SparqlService.prototype.construct = function (endpoint, query, params) {\n        if (query.length <= 2048)\n            return this.$http(angular.extend({\n                method: 'GET',\n                url: endpoint,\n                params: { query: query },\n                headers: { 'Accept': 'text/turtle' }\n            }, params));\n        else\n            return this.$http(angular.extend({\n                method: 'POST',\n                url: endpoint,\n                data: query,\n                headers: {\n                    'Content-Type': 'application/sparql-query',\n                    'Accept': 'text/turtle'\n                }\n            }, params));\n    };\n    SparqlService.prototype.update = function (endpoint, query, params) {\n        return this.$http(angular.extend({\n            method: 'POST',\n            url: endpoint,\n            headers: { 'Content-Type': 'application/sparql-update' },\n            data: query\n        }, params));\n    };\n    return SparqlService;\n}());\nexports.SparqlService = SparqlService;\nangular.module('fi.seco.sparql', []).service('sparqlService', SparqlService);\n\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=sparql-service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-sparql-service/dist/sparql-service.js\n// module id = 37\n// module chunks = 2","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = nextTick;\n} else {\n  module.exports = process.nextTick;\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process-nextick-args/index.js\n// module id = 38\n// module chunks = 2","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ctx.js\n// module id = 42\n// module chunks = 2","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_fails.js\n// module id = 43\n// module chunks = 2","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_has.js\n// module id = 44\n// module chunks = 2","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-iobject.js\n// module id = 45\n// module chunks = 2","'use strict';\nimport * as angular from 'angular';\nlet uriCache = new Map();\nexport function getPrefLangString(literals, prefLang, uri) {\n    if (uri && uriCache.has(uri)) {\n        // console.log('hit')\n        return uriCache.get(uri);\n    }\n    if (!literals) {\n        if (uri) {\n            let lname = uri.replace(/.*\\//, '').replace(/.*\\#/, '').replace('_', ' ').replace(/[A-ZÅÄÖ]/g, (match) => ' ' + match.toLocaleLowerCase());\n            if (lname !== '')\n                return lname;\n            return uri;\n        }\n        return '?';\n    }\n    let dl = null;\n    let pl = null;\n    let al = null;\n    let plParts = prefLang.split('-');\n    let p = l => {\n        if (l.language === '')\n            dl = l.value;\n        else\n            al = l.value;\n        if (l.language === prefLang)\n            return true;\n        let lparts = l.language.split('-');\n        if (lparts.length >= plParts.length && plParts.every((value, index) => value === lparts[index]))\n            pl = l.value;\n        return false;\n    };\n    let cl = literals instanceof Array ? literals.find(p) : literals.find(p);\n    if (cl) {\n        if (uri)\n            uriCache.set(uri, cl.value);\n        return cl.value;\n    }\n    if (pl)\n        return pl;\n    if (dl)\n        return dl;\n    if (al)\n        return al;\n    if (uri) {\n        let lname = uri.replace(/.*\\//, '').replace(/.*\\#/, '').replace('_', ' ');\n        lname = lname[0] + lname.substring(1).replace(/[A-ZÅÄÖ]/g, (match) => ' ' + match.toLocaleLowerCase());\n        if (lname !== '')\n            return lname;\n        return uri;\n    }\n    return '?';\n}\nangular.module('fibra.filters.pref-lang-label', [])\n    .filter('prefLangLabel', /* @ngInject */ ($ngRedux) => (node) => {\n    if (!node)\n        return '?';\n    return getPrefLangString(node.labels, $ngRedux.getState().general.language, node.value);\n});\nangular.module('fibra.filters.pref-lang', [])\n    .filter('prefLang', /* @ngInject */ ($ngRedux) => (literals, uri) => {\n    return getPrefLangString(literals, $ngRedux.getState().general.language, uri);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/filters/preferred-language-filter.ts","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-buffer/index.js\n// module id = 48\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  processNextTick(cb, err);\n};\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_duplex.js\n// module id = 49\n// module chunks = 2","// Ignore module for browserify (see package.json)\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsonld/browser/ignore.js\n// module id = 50\n// module chunks = 2","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-object.js\n// module id = 55\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  processNextTick(cb, err);\n};\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js\n// module id = 59\n// module chunks = 2","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_property-desc.js\n// module id = 65\n// module chunks = 2","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.string.iterator.js\n// module id = 66\n// module chunks = 2","module.exports = {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iterators.js\n// module id = 67\n// module chunks = 2","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-keys.js\n// module id = 68\n// module chunks = 2","\"use strict\";\n\nexports.__esModule = true;\n\nvar _getPrototypeOf = require(\"../core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _getOwnPropertyDescriptor = require(\"../core-js/object/get-own-property-descriptor\");\n\nvar _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);\n\n  if (desc === undefined) {\n    var parent = (0, _getPrototypeOf2.default)(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/get.js\n// module id = 69\n// module chunks = 2","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/get-iterator.js\n// module id = 70\n// module chunks = 2","'use strict';\nimport * as angular from 'angular';\nimport { Project } from 'services/project-service/project';\nimport { PrimaryEndpointConfiguration } from 'services/project-service/primary-endpoint-configuration';\nimport { RemoteEndpointConfiguration } from 'services/project-service/remote-endpoint-configuration';\nimport { Schema } from 'services/project-service/schema';\nimport { CNode, ONodeSet, NodeMap } from 'models/rdf';\nimport { NamedNode } from 'models/rdf';\nimport { Citable } from 'models/citable';\nimport { FMap, StringSet, OMap } from 'components/collection-utils';\nimport { PropertyAndValue, PropertyToValues } from 'services/sparql-item-service';\nimport { SparqlService } from 'angular-sparql-service/dist/sparql-service';\nimport * as cjson from 'circular-json';\nexport class SerializationService {\n    /* @ngInject */\n    constructor() {\n        this.prototypeMappings = {};\n        let mappings = {\n            'Project': Project,\n            'CNode': CNode,\n            'NamedNode': NamedNode,\n            'Citable': Citable,\n            'FMap': FMap,\n            'PrimaryEndpointConfiguration': PrimaryEndpointConfiguration,\n            'RemoteEndpointConfiguration': RemoteEndpointConfiguration,\n            'Schema': Schema,\n            'ONodeSet': ONodeSet,\n            'OMap': OMap,\n            'StringSet': StringSet,\n            'NodeMap': NodeMap,\n            'PropertyAndValue': PropertyAndValue,\n            'PropertyToValues': PropertyToValues\n        };\n        for (let className in mappings)\n            this.prototypeMappings[className] = mappings[className].prototype;\n    }\n    static stripFunctions(obj) {\n        let ret = {};\n        for (let key in obj)\n            if (typeof obj[key] === 'object')\n                ret[key] = SerializationService.stripFunctions(obj[key]);\n            else if (typeof obj[key] !== 'function')\n                ret[key] = obj[key];\n        return ret;\n    }\n    static toJson(obj) {\n        return cjson.stringify(obj);\n    }\n    fromJson(json) {\n        let obj = cjson.parse(json);\n        this.restorePrototypes(obj);\n        return obj;\n    }\n    objectToTurtle(obj, tb, conf) {\n        if (conf.prefixes)\n            for (let key in conf.prefixes)\n                tb.prefixes[key] = conf.prefixes[key];\n        let ttl = '';\n        let id = conf.idGenerator(obj);\n        for (let key in obj)\n            if (obj[key] !== undefined && obj[key] !== null && !(obj[key] instanceof Array && obj[key].length === 0) && (!conf.ignoredProperties || !conf.ignoredProperties[key])) {\n                let val = obj[key];\n                if (conf.propertyHandlers && conf.propertyHandlers[key])\n                    conf.propertyHandlers[key](val, tb, key, obj);\n                else if (conf.propertyHandlers && conf.propertyHandlers[''])\n                    conf.propertyHandlers[''](val, tb, key, obj);\n                else {\n                    let prop = (conf.propertyMapping && conf.propertyMapping[key]) ? conf.propertyMapping[key] : conf.defaultPrefix + ':' + encodeURIComponent(key);\n                    let values = null;\n                    if (conf.valueConverters && conf.valueConverters[key]) {\n                        let v = conf.valueConverters[key](obj[key], key, obj, tb);\n                        values = (v instanceof Array) ? v : [v];\n                    }\n                    else if (conf.valueConverters && conf.valueConverters['']) {\n                        let v = conf.valueConverters[''](obj[key], key, obj, tb);\n                        values = (v instanceof Array) ? v : [v];\n                    }\n                    if (values === null) {\n                        if (obj[key] instanceof Array)\n                            values = obj[key].filter(v => v !== undefined).map(v => SparqlService.stringToSPARQLString(typeof v === 'string' ? v : cjson.stringify(v)));\n                        else\n                            values = [SparqlService.stringToSPARQLString(typeof obj[key] === 'string' ? obj[key] : cjson.stringify(obj[key]))];\n                    }\n                    if (values && values.length > 0) {\n                        ttl += prop + ' ';\n                        for (let value of values)\n                            ttl += value + ' ,';\n                        ttl = ttl.substring(0, ttl.length - 2) + ' ;\\n';\n                    }\n                }\n            }\n        if (ttl.length > 0)\n            ttl = id + ' ' + ttl;\n        tb.fragmentsById.set(id, ttl);\n    }\n    restorePrototypes(args) {\n        let seen = new Set();\n        this.restorePrototypesInternal(args, seen);\n        return args;\n    }\n    restorePrototypesInternal(args, seen) {\n        if (!args || typeof args !== 'object' || seen.has(args))\n            return;\n        if (args instanceof Array)\n            args.forEach(arg => this.restorePrototypesInternal(arg, seen));\n        else {\n            seen.add(args);\n            if (args.__className) {\n                let prototype = this.prototypeMappings[args.__className];\n                if (!prototype)\n                    throw 'Unknown prototype ' + args.__className;\n                args.__proto__ = prototype;\n            }\n            for (let key in args)\n                if (args.hasOwnProperty(key))\n                    this.restorePrototypesInternal(args[key], seen);\n        }\n    }\n}\nangular.module('fibra.services.serialization-service', [])\n    .config(($provide) => $provide.service('serializationService', SerializationService));\n\n\n\n// WEBPACK FOOTER //\n// ./app/services/worker-service/serialization-service.ts","'use strict';\nimport { Citable } from 'models/citable';\nimport { DataModel } from 'services/project-service/data-model';\nimport { SparqlService } from 'angular-sparql-service';\nimport { SparqlAutocompleteService } from 'services/sparql-autocomplete-service';\nimport { SparqlItemService } from 'services/sparql-item-service';\nimport { PrimaryEndpointConfiguration } from 'services/project-service/primary-endpoint-configuration';\nimport { FIBRA, VOID } from 'models/rdf';\nimport { SparqlStatisticsService } from 'services/sparql-statistics-service';\nimport { SerializationService } from 'services/worker-service/serialization-service';\nexport var Mark;\n(function (Mark) {\n    Mark[Mark[\"Red\"] = 0] = \"Red\";\n    Mark[Mark[\"Yellow\"] = 1] = \"Yellow\";\n    Mark[Mark[\"Green\"] = 2] = \"Green\";\n    Mark[Mark[\"Blue\"] = 3] = \"Blue\";\n    Mark[Mark[\"White\"] = 4] = \"White\";\n})(Mark || (Mark = {}));\nexport class Project extends Citable {\n    constructor() {\n        super(...arguments);\n        this.instanceNS = 'http://ldf.fi/fibra/';\n        this.schemaNS = 'http://ldf.fi/fibra/schema#';\n        this.dataModel = new DataModel();\n        this.autocompletionQuery = SparqlAutocompleteService.defaultMatchQuery;\n        this.classStatisticsQuery = SparqlStatisticsService.getClassStatisticsQuery;\n        this.propertyStatisticsQuery = SparqlStatisticsService.getPropertyStatisticsQuery;\n        this.itemQuery = SparqlItemService.getItemPropertiesQuery;\n        this.coalesceIdsQuery = SparqlItemService.coalesceIdsQuery;\n        this.deleteItemQuery = SparqlItemService.deleteItemQuery;\n        this.classQuery = DataModel.classQuery;\n        this.propertyQuery = DataModel.propertyQuery;\n        this.authorityEndpoints = [];\n        this.archiveEndpoints = [];\n        this.schemas = [];\n        this.sourceClassSettings = {\n            'http://ldf.fi/fibra/viafCidocLiteEndpointConfiguration': {\n                'http://www.cidoc-crm.org/cidoc-crm/E21_Person': true,\n                'http://www.cidoc-crm.org/cidoc-crm/E53_Place': true\n            },\n            'http://ldf.fi/fibra/geonamesCidocLiteEndpointConfiguration': {\n                'http://www.cidoc-crm.org/cidoc-crm/E53_Place': true\n            }\n        };\n        this.layouts = [];\n        this.dateBoundaryStart = '';\n        this.dateBoundaryEnd = '';\n        this.__className = 'Project';\n    }\n    init() {\n        if (this.dateBoundaryStart !== '')\n            this.authorityEndpoints.filter(ae => ae.endpoint.endsWith('/viaf/sparql')).forEach(ve => ve.constraints = `\n      FILTER (NOT EXISTS { ?id a crm:E21_Person } || EXISTS {\n        OPTIONAL {\n          ?id viaf:dateOfBirth ?dob .\n          ?dob crm:P82a_begin_of_the_begin ?bdob .\n          ?dob crm:P82b_end_of_the_end ?edob .\n        }\n        OPTIONAL {\n          ?id viaf:dateOfDeath ?dod .\n          ?dod crm:P82a_begin_of_the_begin ?bdod .\n          ?dod crm:P82b_end_of_the_end ?edod .\n        }\n        OPTIONAL {\n          ?id viaf:flourished ?dof .\n          ?dof crm:P82a_begin_of_the_begin ?bdof .\n          ?dof crm:P82b_end_of_the_end ?edof .\n        }\n        BIND(COALESCE(?bdob,?bdof,?bdod) AS ?ed)\n        BIND(COALESCE(?edod,?edof,?edob) AS ?ld)\n        FILTER (?ld >= \"${this.dateBoundaryStart}-01-01T00:00:00Z\"^^xsd:dateTime)\n        FILTER (?ed <= \"${this.dateBoundaryEnd}-12-31T23:59:59Z\"^^xsd:dateTime)\n      })`);\n    }\n    remoteEndpoints() {\n        return this.archiveEndpoints.concat(this.authorityEndpoints);\n    }\n    asTemplate() {\n        let p = new PrimaryEndpointConfiguration();\n        p.autocompletionQuery = this.autocompletionQuery;\n        p.itemQuery = this.itemQuery;\n        p.deleteItemQuery = this.deleteItemQuery;\n        p.classStatisticsQuery = this.classStatisticsQuery;\n        p.propertyStatisticsQuery = this.propertyStatisticsQuery;\n        p.coalesceIdsQuery = this.coalesceIdsQuery;\n        p.propertyQuery = this.propertyQuery;\n        p.classQuery = this.classQuery;\n        return p;\n    }\n    toTurtle(tb) {\n        if (!tb.fragmentsById.has(this.id)) {\n            tb.prefixes['fibra'] = FIBRA.ns;\n            tb.prefixes['void'] = VOID.ns;\n            tb.fragmentsById.set(this.id, `<${this.id}> a fibra:Project ;`);\n            super.toTurtle(tb);\n            let f = tb.fragmentsById.get(this.id);\n            if (this.schemas.length > 0) {\n                f = f + `\nfibra:schema `;\n                this.schemas.forEach(ae => {\n                    f = f + `<${ae.id}>, `;\n                });\n                f = f.substring(0, f.length - 2) + ' ;';\n                this.schemas\n                    .filter(ae => ae.source.sparqlEndpoint !== this.source.sparqlEndpoint || this.source.graph !== ae.source.graph)\n                    .forEach(ae => {\n                    f = f + `\nfibra:schemaReference [\n  rdf:value <${ae.id}> ;\n  void:sparqlEndpoint <${ae.source.sparqlEndpoint}> ;`;\n                    if (ae.source.graph)\n                        f = f + `\n  fibra:graph <${ae.source.graph}>`;\n                    f = f + `\n] ;`;\n                });\n            }\n            if (this.authorityEndpoints.length > 0) {\n                f = f + `\nfibra:authorityEndpoint `;\n                this.authorityEndpoints.forEach(ae => {\n                    f = f + `<${ae.id}>, `;\n                });\n                f = f.substring(0, f.length - 2) + ' ;';\n                this.authorityEndpoints\n                    .filter(ae => ae.source.sparqlEndpoint !== this.source.sparqlEndpoint || this.source.graph !== ae.source.graph)\n                    .forEach(ae => {\n                    f = f + `\nfibra:authorityEndpointReference [\n  rdf:value <${ae.id}> ;\n  void:sparqlEndpoint <${ae.source.sparqlEndpoint}> ;`;\n                    if (ae.source.graph)\n                        f = f + `\n  fibra:graph <${ae.source.graph}>`;\n                    f = f + `\n] ;`;\n                });\n            }\n            if (this.archiveEndpoints.length > 0) {\n                f = f + `\nfibra:archiveEndpoint `;\n                this.archiveEndpoints.forEach(ae => {\n                    f = f + `<${ae.id}>, `;\n                });\n                f = f.substring(0, f.length - 2) + ' ;';\n                this.archiveEndpoints\n                    .filter(ae => ae.source.sparqlEndpoint !== this.source.sparqlEndpoint || this.source.graph !== ae.source.graph)\n                    .forEach(ae => {\n                    f = f + `\nfibra:archiveEndpointReference [\n  rdf:value <${ae.id}> ;\n  void:sparqlEndpoint <${ae.source.sparqlEndpoint}> ;`;\n                    if (ae.source.graph)\n                        f = f + `\n  fibra:graph <${ae.source.graph}>`;\n                    f = f + `\n] ;`;\n                });\n            }\n            if (this.graph)\n                f = f + `\nfibra:graph <${this.graph}> ;`;\n            f = f + `\nfibra:autocompletionQuery ${SparqlService.stringToSPARQLString(this.autocompletionQuery)} ;\nfibra:classStatisticsQuery ${SparqlService.stringToSPARQLString(this.classStatisticsQuery)} ;\nfibra:propertyStatisticsQuery ${SparqlService.stringToSPARQLString(this.propertyStatisticsQuery)} ;\nfibra:itemQuery ${SparqlService.stringToSPARQLString(this.itemQuery)} ;\nfibra:coalesceIdsQuery ${SparqlService.stringToSPARQLString(this.coalesceIdsQuery)} ;\nfibra:deleteItemQuery ${SparqlService.stringToSPARQLString(this.deleteItemQuery)} ;\nfibra:classQuery ${SparqlService.stringToSPARQLString(this.classQuery)} ;\nfibra:propertyQuery ${SparqlService.stringToSPARQLString(this.propertyQuery)} ;\nvoid:sparqlEndpoint <${this.endpoint}> ;\nfibra:updateEndpoint <${this.updateEndpoint}> ;\nfibra:graphStoreEndpoint <${this.graphStoreEndpoint}> ;\nfibra:schemaNS ${SparqlService.stringToSPARQLString(this.schemaNS)} ;\nfibra:sourceClassSettings ${SparqlService.stringToSPARQLString(SerializationService.toJson(this.sourceClassSettings))} ;\nfibra:layouts ${SparqlService.stringToSPARQLString(SerializationService.toJson(this.layouts))} ;\nfibra:dateBoundaryStart ${SparqlService.stringToSPARQLString(SerializationService.toJson(this.dateBoundaryStart))} ;\nfibra:dateBoundaryEnd ${SparqlService.stringToSPARQLString(SerializationService.toJson(this.dateBoundaryEnd))} ;\nfibra:instanceNS ${SparqlService.stringToSPARQLString(this.instanceNS)} .`;\n            tb.fragmentsById.set(this.id, f);\n        }\n    }\n}\nProject.listProjectsQuery = `PREFIX fibra: <http://hdlab.stanford.edu/fibra/ontology#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX void: <http://rdfs.org/ns/void#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nSELECT * {\n# STARTGRAPH\n# VALUE\n  ?id a fibra:Project .\n  {\n    ?id skos:prefLabel ?labels\n  } UNION {\n    ?id fibra:instanceNS ?instanceNS .\n    ?id fibra:schemaNS ?schemaNS .\n    ?id void:sparqlEndpoint ?endpoint .\n    ?id fibra:updateEndpoint ?updateEndpoint .\n    ?id fibra:graphStoreEndpoint ?graphStoreEndpoint .\n    ?id fibra:autocompletionQuery ?autocompletionQuery .\n    ?id fibra:classStatisticsQuery ?classStatisticsQuery .\n    OPTIONAL { ?id fibra:sourceClassSettings ?sourceClassSettings }\n    OPTIONAL { ?id fibra:layouts ?layouts }\n    OPTIONAL { ?id fibra:dateBoundaryStart ?dateBoundaryStart }\n    OPTIONAL { ?id fibra:dateBoundaryEnd ?dateBoundaryEnd }\n    OPTIONAL { ?id fibra:propertyStatisticsQuery ?propertyStatisticsQuery }\n    ?id fibra:itemQuery ?itemQuery .\n    ?id fibra:deleteItemQuery ?deleteItemQuery .\n    OPTIONAL { ?id fibra:graph ?graph }\n    OPTIONAL { ?id dcterms:created ?dateCreated }\n    OPTIONAL { ?id foaf:homepage ?url }\n    OPTIONAL { ?id fibra:coalesceIdsQuery ?coalesceIdsQuery }\n  } UNION {\n    ?id fibra:schema ?schemas\n  } UNION {\n    ?id fibra:schemaReference ?ar .\n    ?ar rdf:value ?schemas .\n    ?ar void:sparqlEndpoint ?schemas_source_sparqlEndpoint .\n    OPTIONAL { ?ar fibra:graph ?schemas_source_graph }\n  } UNION {\n    ?id fibra:authorityEndpoint ?authorityEndpoints\n  } UNION {\n    ?id fibra:authorityEndpointReference ?ar .\n    ?ar rdf:value ?authorityEndpoints .\n    ?ar void:sparqlEndpoint ?authorityEndpoints_source_sparqlEndpoint .\n    OPTIONAL { ?ar fibra:graph ?authorityEndpoints_source_graph }\n  } UNION {\n    ?id fibra:archiveEndpoint ?archiveEndpoints\n  } UNION {\n    ?id fibra:archiveEndpointReference ?ar .\n    ?ar rdf:value ?archiveEndpoints .\n    ?ar void:sparqlEndpoint ?archiveEndpoints_source_sparqlEndpoint .\n    OPTIONAL { ?ar fibra:graph ?archiveEndpoints_source_graph }\n  } UNION {\n    ?id dcterms:description ?descriptions\n  } UNION {\n    {\n      ?id dcterms:rightsHolder ?rightsHolders\n    } UNION {\n      ?id fibra:qualifiedAssertion ?qa .\n      ?qa rdf:predicate dcterms:rightsHolder .\n      ?qa rdf:object ?rightsHolders .\n      OPTIONAL { ?qa fibra:order ?rightsHolders_order }\n    }\n    {\n      ?rightsHolders skos:prefLabel ?rightsHolders_labels\n    } UNION {\n      ?rightsHolders foaf:homepage ?rightsHolders_url\n    } UNION {\n      ?rightsHolders dcterms:description ?rightsHolders_descriptions\n    }\n  }\n# ENDGRAPH\n}`;\n\n\n\n// WEBPACK FOOTER //\n// ./app/services/project-service/project.ts","'use strict';\nimport { SerializationService } from './worker-service/serialization-service';\nimport { getPrefLangString } from '../filters/preferred-language-filter';\nimport { ONodeSet, DataFactory } from '../models/rdf';\nimport { FMap, EMap, StringSet } from 'components/collection-utils';\nimport { SparqlService } from 'angular-sparql-service';\nimport * as angular from 'angular';\nimport { UnifyMap } from 'services/id-consolidation-utils';\nexport class AutocompletionResults {\n    constructor() {\n        this.localMatchingResults = [];\n        this.localNonMatchingResults = [];\n        this.remoteResults = [];\n    }\n}\nexport class ResultGroup {\n    constructor(label) {\n        this.label = label;\n        this.results = [];\n    }\n}\nexport class Result {\n    constructor(ids, datasources, matchedLabel, prefLabel) {\n        this.ids = ids;\n        this.datasources = datasources;\n        this.matchedLabel = matchedLabel;\n        this.prefLabel = prefLabel;\n        this.additionalInformation = {};\n    }\n}\nexport class SparqlAutocompleteService {\n    constructor(workerService) {\n        this.workerService = workerService;\n    }\n    autocomplete(query, limit, queryRemote = false, canceller) {\n        return this.workerService.call('sparqlAutocompleteWorkerService', 'autocomplete', [query, limit, queryRemote], canceller);\n    }\n}\nSparqlAutocompleteService.defaultMatchQuery = `\nPREFIX text: <http://jena.apache.org/text#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX mads: <http://www.loc.gov/mads/rdf/v1#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX sf: <http://ldf.fi/functions#>\nPREFIX fibra: <http://ldf.fi/fibra/schema#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nSELECT ?groupId ?id ?prefLabel ?matchedLabel ?sameAs ?altLabel { # ADDITIONALVARIABLES\n# STARTGRAPH\n  {\n    SELECT ?groupId ?id (SUM(?sc) AS ?score) {\n      {\n        SELECT ?groupId ?id ?sc {\n          BIND(CONCAT(\"\\\\\"\",REPLACE(<QUERY>,\"([\\\\\\\\+\\\\\\\\-\\\\\\\\&\\\\\\\\|\\\\\\\\!\\\\\\\\(\\\\\\\\)\\\\\\\\{\\\\\\\\}\\\\\\\\[\\\\\\\\]\\\\\\\\^\\\\\\\\\\\\\"\\\\\\\\~\\\\\\\\*\\\\\\\\?\\\\\\\\:\\\\\\\\/\\\\\\\\\\\\\\\\])\",\"\\\\\\\\$1\"),\"\\\\\"\") AS ?query)\n          (?id ?sc) text:query ?query .\n          ?id skos:prefLabel|rdfs:label|skos:altLabel|mads:authoritativeLabel|mads:variantLabel ?matchedLabel\n          FILTER (LCASE(?matchedLabel)=LCASE(<QUERY>))\n          ?id a ?groupIdLocal .\n          BIND(?groupIdLocal AS ?groupId)\n          # CONSTRAINTS\n        }\n        GROUP BY ?groupId ?id ?sc\n        LIMIT <LIMIT>\n      } UNION {\n        SELECT ?groupId ?id ?sc {\n          BIND(CONCAT(REPLACE(<QUERY>,\"([\\\\\\\\+\\\\\\\\-\\\\\\\\&\\\\\\\\|\\\\\\\\!\\\\\\\\(\\\\\\\\)\\\\\\\\{\\\\\\\\}\\\\\\\\[\\\\\\\\]\\\\\\\\^\\\\\\\\\\\\\"\\\\\\\\~\\\\\\\\*\\\\\\\\?\\\\\\\\:\\\\\\\\/\\\\\\\\\\\\\\\\])\",\"\\\\\\\\$1\"),\"*\") AS ?query)\n          (?id ?sc) text:query ?query .\n          ?id a ?groupIdLocal .\n          BIND(?groupIdLocal AS ?groupId)\n          # CONSTRAINTS\n        }\n        GROUP BY ?groupId ?id ?sc\n        LIMIT <LIMIT>\n      }\n    }\n    GROUP BY ?groupId ?id\n    HAVING(BOUND(?id))\n    LIMIT <LIMIT>\n  }\n  ?id skos:prefLabel|rdfs:label|skos:altLabel|mads:authoritativeLabel|mads:variantLabel ?matchedLabel\n  FILTER (REGEX(LCASE(?matchedLabel),CONCAT(\"\\\\\\\\b\",LCASE(<QUERY>))))\n  {\n    ?id sf:preferredLanguageLiteral (skos:prefLabel mads:authoritativeLabel rdfs:label skos:altLabel mads:variantLabel '<PREFLANG>' '' ?prefLabel) .\n  } UNION {\n    ?id owl:sameAs ?sameAs .\n  } UNION {\n    ?id skos:altLabel|mads:variantLabel ?altLabel .\n  }\n  # ADDITIONALSELECT\n# ENDGRAPH\n}\n`;\nclass ProcessingData {\n    constructor() {\n        this.unifyMap = new UnifyMap();\n        this.idToGroupIdSet = new EMap(() => new StringSet());\n        this.idToPrefLabelSet = new EMap(() => new ONodeSet());\n        this.idToMatchedLabelSet = new EMap(() => new ONodeSet());\n        this.idToAltLabelSet = new EMap(() => new ONodeSet());\n        this.idToDatasourceSet = new EMap(() => new StringSet());\n    }\n    processAndConsolidate(result, endpoint) {\n        result.results.bindings.forEach(binding => {\n            let id = binding['id'].value;\n            this.idToDatasourceSet.goc(id).add(endpoint);\n            if (binding['prefLabel'])\n                this.idToPrefLabelSet.goc(id).add(DataFactory.instance.nodeFromBinding(binding['prefLabel']));\n            if (binding['altLabel'])\n                this.idToAltLabelSet.goc(id).add(DataFactory.instance.nodeFromBinding(binding['altLabel']));\n            if (binding['matchedLabel'])\n                this.idToMatchedLabelSet.goc(id).add(DataFactory.instance.nodeFromBinding(binding['matchedLabel']));\n            if (binding['groupId']) {\n                this.idToGroupIdSet.goc(id).add(binding['groupId'].value);\n                if (binding['groupLabel'])\n                    this.idToPrefLabelSet.goc(binding['groupId'].value).add(DataFactory.instance.nodeFromBinding(binding['groupLabel']));\n            }\n        });\n        this.unifyMap.consolidate(result);\n        this.unifyMap.idToIdSet.each((idSet, id) => {\n            let datasourceSet = this.idToDatasourceSet.get(id);\n            let groupIdSet = this.idToGroupIdSet.get(id);\n            let prefLabelSet = this.idToPrefLabelSet.get(id);\n            let matchedLabelSet = this.idToMatchedLabelSet.get(id);\n            let altLabelSet = this.idToAltLabelSet.get(id);\n            idSet.each(oid => {\n                let oDatasourceSet = this.idToDatasourceSet.get(oid);\n                if (datasourceSet !== oDatasourceSet) {\n                    if (datasourceSet) {\n                        if (oDatasourceSet)\n                            datasourceSet.adds(oDatasourceSet);\n                        this.idToDatasourceSet.set(oid, datasourceSet);\n                    }\n                    else if (oDatasourceSet)\n                        this.idToDatasourceSet.set(id, oDatasourceSet);\n                }\n                let oGroupIdSet = this.idToGroupIdSet.get(oid);\n                if (groupIdSet !== oGroupIdSet) {\n                    if (groupIdSet) {\n                        if (oGroupIdSet)\n                            groupIdSet.adds(oGroupIdSet);\n                        this.idToGroupIdSet.set(oid, groupIdSet);\n                    }\n                    else if (oGroupIdSet)\n                        this.idToGroupIdSet.set(id, oGroupIdSet);\n                }\n                let oPrefLabelSet = this.idToPrefLabelSet.get(oid);\n                if (prefLabelSet !== oPrefLabelSet) {\n                    if (prefLabelSet) {\n                        if (oPrefLabelSet)\n                            prefLabelSet.adds(oPrefLabelSet);\n                        this.idToPrefLabelSet.set(oid, prefLabelSet);\n                    }\n                    else if (oPrefLabelSet)\n                        this.idToPrefLabelSet.set(id, oPrefLabelSet);\n                }\n                let oMatchedLabelSet = this.idToMatchedLabelSet.get(oid);\n                if (matchedLabelSet !== oMatchedLabelSet) {\n                    if (matchedLabelSet) {\n                        if (oMatchedLabelSet)\n                            matchedLabelSet.adds(oMatchedLabelSet);\n                        this.idToMatchedLabelSet.set(oid, matchedLabelSet);\n                    }\n                    else if (oMatchedLabelSet)\n                        this.idToMatchedLabelSet.set(id, oMatchedLabelSet);\n                }\n                let oAltLabelSet = this.idToAltLabelSet.get(oid);\n                if (altLabelSet !== oAltLabelSet) {\n                    if (altLabelSet) {\n                        if (oAltLabelSet)\n                            altLabelSet.adds(oAltLabelSet);\n                        this.idToAltLabelSet.set(oid, altLabelSet);\n                    }\n                    else if (oAltLabelSet)\n                        this.idToAltLabelSet.set(id, oAltLabelSet);\n                }\n            });\n        });\n    }\n}\nexport class SparqlAutocompleteWorkerService {\n    /* @ngInject */\n    constructor($q, fibraSparqlService, stateWorkerService) {\n        this.$q = $q;\n        this.fibraSparqlService = fibraSparqlService;\n        this.stateWorkerService = stateWorkerService;\n    }\n    static buildResults(pd, filteredIds, dataModel, prefLang) {\n        let res = [];\n        let idToResult = new FMap();\n        let groupIdToGroup = new EMap();\n        pd.unifyMap.idToIdSet.each((idSet, id) => {\n            if (!idSet.values().some(v => filteredIds.has(v))) {\n                let resultId = idSet.values().find(id2 => idToResult.has(id2));\n                if (!resultId) {\n                    let result = new Result(idSet.values().map(oid => DataFactory.instance.namedNode(oid)), pd.idToDatasourceSet.get(id).values(), pd.idToMatchedLabelSet.get(id).values()[0], pd.idToPrefLabelSet.has(id) ? pd.idToPrefLabelSet.get(id).values()[0] : null);\n                    let altLabels = pd.idToAltLabelSet.has(id) ? pd.idToAltLabelSet.get(id).values() : [];\n                    if (pd.idToPrefLabelSet.has(id)) {\n                        let prefLabels = pd.idToPrefLabelSet.get(id).values();\n                        altLabels = altLabels.concat(prefLabels.slice(1));\n                    }\n                    result.additionalInformation['altLabel'] = altLabels.length > 0 ? altLabels : null;\n                    result.additionalInformation['type'] = pd.idToGroupIdSet.get(id).values().map(v => DataFactory.instance.namedNode(v));\n                    result.additionalInformation['typeLabel'] = pd.idToGroupIdSet.get(id).values().map(v => {\n                        return pd.idToPrefLabelSet.has(id) ? pd.idToPrefLabelSet.get(id).values()[0] : null;\n                    });\n                    idSet.each(id2 => idToResult.set(id2, result));\n                    pd.idToGroupIdSet.get(id).each(gid => groupIdToGroup.goc(gid, () => {\n                        let glabel = dataModel.classMap.has(gid) ? getPrefLangString(dataModel.classMap.get(gid).labels, prefLang) :\n                            (pd.idToPrefLabelSet.has(gid) ? pd.idToPrefLabelSet.get(gid).values()[0].value : gid);\n                        let resultGroup = new ResultGroup(glabel);\n                        res.push(resultGroup);\n                        return resultGroup;\n                    }).results.push(result));\n                }\n            }\n        });\n        return res;\n    }\n    autocomplete(query, limit, queryRemote = false, canceller) {\n        let d = this.$q.defer();\n        let results = new AutocompletionResults();\n        let queryTemplate = this.stateWorkerService.state.project.autocompletionQuery;\n        queryTemplate = queryTemplate.replace(/<QUERY>/g, SparqlService.stringToSPARQLString(query));\n        queryTemplate = queryTemplate.replace(/<LIMIT>/g, '' + limit);\n        queryTemplate = queryTemplate.replace(/# CONSTRAINTS/g, this.stateWorkerService.state.project.constraints ? this.stateWorkerService.state.project.constraints : '');\n        queryTemplate = queryTemplate.replace(/<PREFLANG>/g, this.stateWorkerService.state.language);\n        let pd = new ProcessingData();\n        let localResults = new StringSet();\n        let primaryProcessed = this.fibraSparqlService.query(this.stateWorkerService.state.project.endpoint, queryTemplate, { timeout: canceller }).then((response) => {\n            pd.processAndConsolidate(response, this.stateWorkerService.state.project.endpoint);\n            results.localMatchingResults = SparqlAutocompleteWorkerService.buildResults(pd, localResults, this.stateWorkerService.state.project.dataModel, this.stateWorkerService.state.language);\n            if (!queryRemote)\n                d.resolve(results);\n            else\n                d.notify({ endpointType: 'primary', endpoint: this.stateWorkerService.state.project.id, results: results });\n        });\n        if (queryRemote) {\n            results.localMatchingResults.forEach(rg => rg.results.forEach(r => r.ids.forEach(id => localResults.add(id.value))));\n            // FIXME: It is currently possible that we miss equivalencies because equivalent data from one source doesn't fit the limit while it does for another. Add further query to make sure all equivalencies are fetched (either in autocompletion or latest in import)\n            let remoteGroupIdToGroup = new EMap();\n            this.$q.all(this.stateWorkerService.state.project.remoteEndpoints().map(endpointConfiguration => {\n                queryTemplate = endpointConfiguration.autocompletionQuery;\n                queryTemplate = queryTemplate.replace(/<QUERY>/g, SparqlService.stringToSPARQLString(query));\n                queryTemplate = queryTemplate.replace(/<LIMIT>/g, '' + limit);\n                queryTemplate = queryTemplate.replace(/# CONSTRAINTS/g, endpointConfiguration.constraints ? endpointConfiguration.constraints : '');\n                queryTemplate = queryTemplate.replace(/<PREFLANG>/g, this.stateWorkerService.state.language);\n                return this.fibraSparqlService.query(endpointConfiguration.endpoint, queryTemplate, { timeout: canceller }).then((response) => {\n                    if (response.results.bindings.length !== 0) {\n                        return primaryProcessed.then(() => {\n                            pd.processAndConsolidate(response, endpointConfiguration.id);\n                            results.remoteResults = SparqlAutocompleteWorkerService.buildResults(pd, localResults, this.stateWorkerService.state.project.dataModel, this.stateWorkerService.state.language);\n                            d.notify({ endpointType: 'remote', endpoint: endpointConfiguration.id, results: results });\n                        });\n                    }\n                }, (error) => d.notify({ endpointType: 'remote', endpoint: endpointConfiguration.id, error: SerializationService.stripFunctions(error) }));\n            })).then(() => {\n                console.log(results);\n                d.resolve(results);\n            });\n        }\n        return d.promise;\n    }\n}\nangular.module('fibra.services.sparql-autocomplete-service', [])\n    .config(($provide) => {\n    $provide.service('sparqlAutocompleteService', SparqlAutocompleteService);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/services/sparql-autocomplete-service.ts","'use strict';\nimport * as angular from 'angular';\nimport { FMap } from 'components/collection-utils';\nexport class PropertyStatistics {\n    constructor(subjects, values, min, max) {\n        this.subjects = subjects;\n        this.values = values;\n        this.min = min;\n        this.max = max;\n    }\n}\nexport class SparqlStatisticsService {\n    /* @ngInject */\n    constructor(workerService) {\n        this.workerService = workerService;\n    }\n    getClassStatistics(endpointConfiguration, canceller) {\n        return this.workerService.call('sparqlStatisticsWorkerService', 'getClassStatistics', [endpointConfiguration.endpoint, endpointConfiguration.classStatisticsQuery], canceller);\n    }\n    getPropertyStatistics(endpointConfiguration, canceller) {\n        return this.workerService.call('sparqlStatisticsWorkerService', 'getPropertyStatistics', [endpointConfiguration.endpoint, endpointConfiguration.propertyStatisticsQuery], canceller);\n    }\n}\nSparqlStatisticsService.getClassStatisticsQuery = `SELECT ?id ?instances {\n# STARTGRAPH\n  {\n    SELECT ?id (COUNT(*) AS ?instances) {\n      ?s a ?id .\n      # CONSTRAINTS\n    }\n    GROUP BY ?id\n  }\n# ENDGRAPH\n}`;\nSparqlStatisticsService.getPropertyStatisticsQuery = `SELECT ?classId ?propertyId ?subjects ?values ?min ?max {\n  # STARTGRAPH\n    {\n      SELECT ?classId ?propertyId (COUNT(*) AS ?values) (COUNT(DISTINCT ?s) AS ?subjects) (MIN(?value) AS ?min) (MAX(?value) AS ?max) {\n        ?s ?propertyId ?value .\n        # CONSTRAINTS\n        OPTIONAL {\n          ?s a ?classId .\n        }\n      }\n      GROUP BY ?classId ?propertyId\n    }\n  # ENDGRAPH\n}`;\nexport class SparqlStatisticsWorkerService {\n    /* @ngInject */\n    constructor(fibraSparqlService) {\n        this.fibraSparqlService = fibraSparqlService;\n    }\n    getClassStatistics(endpoint, query, canceller) {\n        return this.fibraSparqlService.query(endpoint, query, canceller).then(response => {\n            let ret = new FMap();\n            for (let b of response.results.bindings)\n                ret.set(b['id'].value, b['instances'].value);\n            return ret;\n        });\n    }\n    getPropertyStatistics(endpoint, query, canceller) {\n        return this.fibraSparqlService.query(endpoint, query, canceller).then(response => {\n            let ret = new FMap();\n            for (let b of response.results.bindings)\n                ret.goc(b['classId'] ? b['classId'].value : '', () => new FMap()).set(b['propertyId'].value, new PropertyStatistics(b['subjects'].value, b['values'].value, b['min'].value, b['max'].value));\n            return ret;\n        });\n    }\n}\nangular.module('fibra.services.sparql-statistics-service', [])\n    .config(($provide) => {\n    $provide.service('sparqlStatisticsService', SparqlStatisticsService);\n    $provide.service('sparqlStatisticsWorkerService', SparqlStatisticsWorkerService);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/services/sparql-statistics-service.ts","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = 76\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 77\n// module chunks = 2","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmeidate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = self && self.setImmediate || global && global.setImmediate || this && this.setImmediate;\nexports.clearImmediate = self && self.clearImmediate || global && global.clearImmediate || this && this.clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timers-browserify/main.js\n// module id = 78\n// module chunks = 2","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_uid.js\n// module id = 88\n// module chunks = 2","\"use strict\";\n\nexports.__esModule = true;\n\nvar _iterator = require(\"../core-js/symbol/iterator\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = require(\"../core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/typeof.js\n// module id = 89\n// module chunks = 2","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-create.js\n// module id = 90\n// module chunks = 2","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-length.js\n// module id = 91\n// module chunks = 2","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-to-string-tag.js\n// module id = 92\n// module chunks = 2","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/web.dom.iterable.js\n// module id = 93\n// module chunks = 2","exports.f = {}.propertyIsEnumerable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-pie.js\n// module id = 94\n// module chunks = 2","'use strict';\nimport { FMap } from './collection-utils';\nexport function toTurtle(tb) {\n    let s = '';\n    for (let key in tb.prefixes)\n        s = s + '@prefix ' + key + ': <' + tb.prefixes[key] + '> .\\n';\n    tb.fragmentsById.values().forEach(str => s = s + str.substring(0, str.length - 2) + ' .\\n\\n');\n    return s;\n}\nexport class TurtleBuilder {\n    constructor() {\n        this.prefixes = {};\n        this.fragmentsById = new FMap();\n    }\n}\nexport function citableToTurtle(c) {\n    let tb = new TurtleBuilder();\n    c.toTurtle(tb);\n    return toTurtle(tb);\n}\nlet lut = [];\nfor (let i = 0; i < 256; i++)\n    lut[i] = (i < 16 ? '0' : '') + i.toString(16);\nexport function UUID() {\n    /* tslint:disable:no-bitwise */\n    let d0 = Math.random() * 0xffffffff | 0;\n    let d1 = Math.random() * 0xffffffff | 0;\n    let d2 = Math.random() * 0xffffffff | 0;\n    let d3 = Math.random() * 0xffffffff | 0;\n    return lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + '-' +\n        lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + '-' +\n        lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] +\n        lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff];\n    /* tslint:enable:no-bitwise */\n}\nexport function flatten(arr, initial = []) {\n    return arr.reduce((flat, toFlatten) => flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten), initial);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/misc-utils.ts","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_for-of.js\n// module id = 96\n// module chunks = 2","'use strict';\nimport { Citable } from '../../models/citable';\nimport { SparqlAutocompleteService } from '../sparql-autocomplete-service';\nimport { SparqlItemService } from '../sparql-item-service';\nimport { DataModel } from './data-model';\nimport { FIBRA } from '../../models/rdf';\nimport { SparqlService } from 'angular-sparql-service';\nimport { SparqlStatisticsService } from 'services/sparql-statistics-service';\nexport class PrimaryEndpointConfiguration extends Citable {\n    constructor() {\n        super(...arguments);\n        this.compatibleEndpoints = [];\n        this.autocompletionQuery = SparqlAutocompleteService.defaultMatchQuery;\n        this.itemQuery = SparqlItemService.getItemPropertiesQuery;\n        this.coalesceIdsQuery = SparqlItemService.coalesceIdsQuery;\n        this.deleteItemQuery = SparqlItemService.deleteItemQuery;\n        this.classStatisticsQuery = SparqlStatisticsService.getClassStatisticsQuery;\n        this.propertyStatisticsQuery = SparqlStatisticsService.getPropertyStatisticsQuery;\n        this.classQuery = DataModel.classQuery;\n        this.propertyQuery = DataModel.propertyQuery;\n        this.__className = 'PrimaryEndpointConfiguration';\n    }\n    toTurtle(tb) {\n        if (!tb.fragmentsById.has(this.id)) {\n            tb.prefixes['fibra'] = FIBRA.ns;\n            tb.fragmentsById.set(this.id, `<${this.id}> a fibra:PrimaryEndpointConfiguration ;`);\n            super.toTurtle(tb);\n            let f = tb.fragmentsById.get(this.id);\n            let nece = this.compatibleEndpoints.filter(e => e);\n            if (nece.length !== 0) {\n                f = f + `\nfibra:compatibleEndpoint `;\n                nece.forEach(e => f = f + `<${e}>, `);\n                f = f.substring(0, f.length - 2) + ' ;';\n            }\n            f = f + `\nfibra:autocompletionQuery ${SparqlService.stringToSPARQLString(this.autocompletionQuery)} ;\nfibra:classStatisticsQuery ${SparqlService.stringToSPARQLString(this.classStatisticsQuery)} ;\nfibra:propertyStatisticsQuery ${SparqlService.stringToSPARQLString(this.propertyStatisticsQuery)} ;\nfibra:propertyQuery ${SparqlService.stringToSPARQLString(this.propertyQuery)} ;\nfibra:classQuery ${SparqlService.stringToSPARQLString(this.classQuery)} ;\nfibra:itemQuery ${SparqlService.stringToSPARQLString(this.itemQuery)} ;\nfibra:coalesceIdsQuery ${SparqlService.stringToSPARQLString(this.coalesceIdsQuery)} ;\nfibra:deleteItemQuery ${SparqlService.stringToSPARQLString(this.deleteItemQuery)} .`;\n            tb.fragmentsById.set(this.id, f);\n        }\n    }\n    copyToProject(p) {\n        let aq = this.autocompletionQuery;\n        aq = p.graph ? aq.replace(/# STARTGRAPH/g, 'GRAPH <' + p.graph + '> {').replace(/# ENDGRAPH/g, '}') : aq.replace(/.*# STARTGRAPH\\n/g, '').replace(/.*# ENDGRAPH\\n/g, '');\n        p.autocompletionQuery = aq;\n        aq = this.itemQuery;\n        aq = p.graph ? aq.replace(/# STARTGRAPH/g, 'GRAPH <' + p.graph + '> {').replace(/# ENDGRAPH/g, '}') : aq.replace(/.*# STARTGRAPH\\n/g, '').replace(/.*# ENDGRAPH\\n/g, '');\n        p.itemQuery = aq;\n        aq = this.coalesceIdsQuery;\n        aq = p.graph ? aq.replace(/# STARTGRAPH/g, 'GRAPH <' + p.graph + '> {').replace(/# ENDGRAPH/g, '}') : aq.replace(/.*# STARTGRAPH\\n/g, '').replace(/.*# ENDGRAPH\\n/g, '');\n        p.coalesceIdsQuery = aq;\n        aq = this.deleteItemQuery;\n        aq = p.graph ? aq.replace(/# STARTGRAPH/g, 'GRAPH <' + p.graph + '> {').replace(/# ENDGRAPH/g, '}') : aq.replace(/.*# STARTGRAPH\\n/g, '').replace(/.*# ENDGRAPH\\n/g, '');\n        p.deleteItemQuery = aq;\n        aq = this.classStatisticsQuery;\n        aq = p.graph ? aq.replace(/# STARTGRAPH/g, 'GRAPH <' + p.graph + '> {').replace(/# ENDGRAPH/g, '}') : aq.replace(/.*# STARTGRAPH\\n/g, '').replace(/.*# ENDGRAPH\\n/g, '');\n        p.classStatisticsQuery = aq;\n        aq = this.propertyStatisticsQuery;\n        aq = p.graph ? aq.replace(/# STARTGRAPH/g, 'GRAPH <' + p.graph + '> {').replace(/# ENDGRAPH/g, '}') : aq.replace(/.*# STARTGRAPH\\n/g, '').replace(/.*# ENDGRAPH\\n/g, '');\n        p.propertyStatisticsQuery = aq;\n        aq = this.propertyQuery;\n        aq = p.graph ? aq.replace(/# STARTGRAPH/g, 'GRAPH <' + p.graph + '> {').replace(/# ENDGRAPH/g, '}') : aq.replace(/.*# STARTGRAPH\\n/g, '').replace(/.*# ENDGRAPH\\n/g, '');\n        p.propertyQuery = aq;\n        aq = this.classQuery;\n        aq = p.graph ? aq.replace(/# STARTGRAPH/g, 'GRAPH <' + p.graph + '> {').replace(/# ENDGRAPH/g, '}') : aq.replace(/.*# STARTGRAPH\\n/g, '').replace(/.*# ENDGRAPH\\n/g, '');\n        p.classQuery = aq;\n    }\n}\nPrimaryEndpointConfiguration.listPrimaryEndpointConfigurationsQuery = `PREFIX fibra: <http://hdlab.stanford.edu/fibra/ontology#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nSELECT * {\n# STARTGRAPH\n  # VALUE\n  ?id a fibra:PrimaryEndpointConfiguration .\n  { ?id skos:prefLabel ?labels }\n  UNION\n  { ?id dcterms:description ?descriptions }\n  UNION\n  { ?id fibra:compatibleEndpoint ?compatibleEndpoints }\n  UNION\n  { ?d fibra:coalesceIdsQuery ?coalesceIdsQuery }\n  UNION\n  {\n    ?id fibra:autocompletionQuery ?autocompletionQuery .\n    ?id fibra:itemQuery ?itemQuery .\n    ?id fibra:deleteItemQuery ?deleteItemQuery .\n    ?id fibra:classStatisticsQuery ?classStatisticsQuery .\n    OPTIONAL { ?id fibra:propertyStatisticsQuery ?propertyStatisticsQuery }\n    ?id fibra:propertyQuery ?propertyQuery .\n    ?id fibra:classQuery ?classQuery .\n    OPTIONAL { ?id foaf:homepage ?url }\n  } UNION {\n    {\n      ?id dcterms:rightsHolder ?rightsHolders\n    } UNION {\n      ?id fibra:qualifiedAssertion ?qa .\n      ?qa rdf:predicate dcterms:rightsHolder .\n      ?qa rdf:object ?rightsHolders .\n      OPTIONAL { ?qa fibra:order ?rightsHolders_order }\n    }\n    {\n      ?rightsHolders skos:prefLabel ?rightsHolders_labels\n    } UNION {\n      ?rightsHolders foaf:homepage ?rightsHolders_url\n    } UNION {\n      ?rightsHolders dcterms:description ?rightsHolders_descriptions\n    }\n  }\n# ENDGRAPH\n}`;\n\n\n\n// WEBPACK FOOTER //\n// ./app/services/project-service/primary-endpoint-configuration.ts","var BaseTree = require(\"./btree\").Tree;\nvar _ = require('./utils');\nvar async = require('./utils');\n\n/**\n * NodeKey\n *\n * Implements the interface of BinarySearchTree.Node\n *\n * A Tree node augmented with BPlusTree\n * node structures\n */\nNodeKey = function(components, order) {\n    this.subject = components.subject;\n    this.predicate = components.predicate;\n    this.object = components.object;\n    this.graph = components.graph;\n    this.order = order;\n};\n\n/**\n * Makes it possible to compare two keys, returning -1,0,1\n * depending on the relative position of the keys.\n * @param keyPattern\n * @returns {number}\n */\nNodeKey.prototype.comparator = function(keyPattern) {\n    for(var i=0; i<this.order.length; i++) {\n        var component = this.order[i];\n        if(keyPattern[component] == null) {\n            return 0;\n        } else {\n            if(this[component] < keyPattern[component] ) {\n                return -1\n            } else if(this[component] > keyPattern[component]) {\n                return 1\n            }\n        }\n    }\n\n    return 0;\n};\n\n/**\n * Pattern\n *\n * A pattern with some variable components\n */\nPattern = function (components) {\n    this.subject = components.subject;\n    this.predicate = components.predicate;\n    this.object = components.object;\n    this.graph = components.graph;\n    this.indexKey = [];\n\n    this.keyComponents = {};\n\n    var order = [];\n    var indiferent = [];\n    var that = this;\n\n    // components must have been already normalized and\n    // inserted in the lexicon.\n    // OIDs retrieved from the lexicon *are* numbers so\n    // they can be told apart from variables (strings)\n    _.forEach(['subject', 'predicate', 'object', 'graph'], function(component){\n        if (typeof(that[component]) === 'string') {\n            indiferent.push(component);\n            that.keyComponents[component] = null;\n        } else {\n            order.push(component);\n            that.keyComponents[component] = that[component];\n            that.indexKey.push(component);\n        }\n\n    });\n\n    this.order = order.concat(indiferent);\n    this.key = new NodeKey(this.keyComponents, this.order);\n};\n\n\n/**\n * An index for quads built on top of a BTree implementation.\n *\n * @param params\n * @param callback\n * @constructor\n */\nQuadIndex = function (params, callback) {\n    if (arguments != 0) {\n        this.componentOrder = params.componentOrder;\n\n        BaseTree.call(this, params.order, function (tree) {\n\n            // For exact matches. Used by search.\n            tree.comparator = function (a, b) {\n                for (var i = 0; i < tree.componentOrder.length; i++) {\n                    var component = tree.componentOrder[i];\n\n                    var vala = a[component];\n                    var valb = b[component];\n\n                    if (vala < valb) {\n                        return -1;\n                    } else if (vala > valb) {\n                        return 1;\n                    }\n                }\n\n                return 0;\n            };\n\n            // For range matches.\n            tree.rangeComparator = function (a, b) {\n                for (var i = 0; i < tree.componentOrder.length; i++) {\n                    var component = tree.componentOrder[i];\n                    if (b[component] == null || a[component] == null) {\n                        return 0;\n                    } else {\n                        if (a[component] < b[component]) {\n                            return -1\n                        } else if (a[component] > b[component]) {\n                            return 1\n                        }\n                    }\n                }\n\n                return 0;\n            };\n\n            callback(tree);\n        });\n    }\n};\n\nQuadIndex.prototype = _.create(BaseTree.prototype, {'constructor':BaseTree});\n\n\n/**\n * Insert a quad with subject,predicate,object,graph values into the index.\n * @param quad\n * @param callback\n */\nQuadIndex.prototype.insert = function(quad, callback) {\n    BaseTree.prototype.insert.call(this, quad, null, function(result){\n        callback(result);\n    });\n};\n\n/**\n * Searches for a quad value in the index returning true if it matches a key.\n * @param quad\n * @param callback\n */\nQuadIndex.prototype.search = function(quad, callback) {\n    BaseTree.prototype.search.call(this, quad, function(result){\n        callback(result);\n    }, true); // true -> check exists : hack only present in the inMemoryAsyncBTree implementation\n};\n\n/**\n * Traverse the inde accumulating the keys matching a provided pattern.\n *\n * @param pattern A subject,predicate,object,graph pattern, containing values and variables.\n * @param callback\n */\nQuadIndex.prototype.range = function (pattern, callback) {\n    this._rangeTraverse(this, this.root, pattern, callback);\n};\n\nQuadIndex.prototype._rangeTraverse = function(tree,node, pattern, callback) {\n    var patternKey  = pattern.key;\n    var acum = [];\n    var pendingNodes = [node];\n\n    async.whilst(function(){\n        return pendingNodes.length > 0;\n    }, function(k){\n        // next node to process\n        var node = pendingNodes.shift();\n        var idxMin = 0;\n\n        // move forward in the lower keys not matching the pattern.\n        while(idxMin < node.numberActives && tree.rangeComparator(node.keys[idxMin].key,patternKey) === -1) {\n            idxMin++;\n        }\n\n        // we found a matching or bigger key\n\n        if(node.isLeaf === true) { // the node is a leaf node -> has no nodes to push, only keys to accumulate\n\n            var idxMax = idxMin;\n\n            // we keep on accumulating matching keys in this leaf\n            while(idxMax < node.numberActives && tree.rangeComparator(node.keys[idxMax].key,patternKey) === 0) {\n                acum.push(node.keys[idxMax].key);\n                idxMax++;\n            }\n\n            // next iteration\n            k();\n\n        } else { // the node is not a leaf, push potentially matching nodes requiring processing.\n            tree._diskRead(node.children[idxMin], function(childNode){\n\n                // pushing the found node\n                pendingNodes.push(childNode);\n                var idxMax = idxMin;\n\n                async.whilst(function(){\n                    // keep pushing nodes while the key for that nod ematches the pattern\n                    return (idxMax < node.numberActives && tree.rangeComparator(node.keys[idxMax].key,patternKey) === 0);\n\n                },function(kk){\n\n                    acum.push(node.keys[idxMax].key);\n                    idxMax++;\n                    tree._diskRead(node.children[idxMax], function(childNode){\n                        pendingNodes.push(childNode);\n                        kk();\n                    })\n\n                },function(){\n                    k();\n                });\n            });\n        }\n    }, function(){\n        callback(acum);\n    });\n};\n\nmodule.exports = {\n    QuadIndex: QuadIndex,\n    Pattern: Pattern,\n    NodeKey: NodeKey\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/quad_index.js\n// module id = 100\n// module chunks = 2","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return -1;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// UTF-8 replacement characters ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd'.repeat(p);\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd'.repeat(p + 1);\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd'.repeat(p + 2);\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character for each buffered byte of a (partial)\n// character needs to be added to the output.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd'.repeat(this.lastTotal - this.lastNeed);\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string_decoder/lib/string_decoder.js\n// module id = 101\n// module chunks = 2","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-primitive.js\n// module id = 115\n// module chunks = 2","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_defined.js\n// module id = 117\n// module chunks = 2","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_shared-key.js\n// module id = 118\n// module chunks = 2","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_shared.js\n// module id = 119\n// module chunks = 2","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-sap.js\n// module id = 120\n// module chunks = 2","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-integer.js\n// module id = 121\n// module chunks = 2","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-define.js\n// module id = 122\n// module chunks = 2","module.exports = true;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_library.js\n// module id = 123\n// module chunks = 2","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iobject.js\n// module id = 124\n// module chunks = 2","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_cof.js\n// module id = 125\n// module chunks = 2","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_enum-bug-keys.js\n// module id = 126\n// module chunks = 2","exports.f = require('./_wks');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_wks-ext.js\n// module id = 127\n// module chunks = 2","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_meta.js\n// module id = 128\n// module chunks = 2","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_wks-define.js\n// module id = 129\n// module chunks = 2","exports.f = Object.getOwnPropertySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gops.js\n// module id = 130\n// module chunks = 2","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopd.js\n// module id = 131\n// module chunks = 2","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator-method.js\n// module id = 133\n// module chunks = 2","'use strict';\nimport { StringSet } from 'components/collection-utils';\nimport { ONodeSet, NodeFromNode } from 'models/rdf';\nexport class FullRichNodeFromNode extends NodeFromNode {\n    constructor(node, labels = new ONodeSet(), descriptions = new ONodeSet(), types = new ONodeSet(), sourceEndpoints = new StringSet()) {\n        super(node);\n        this.labels = labels;\n        this.descriptions = descriptions;\n        this.types = types;\n        this.sourceEndpoints = sourceEndpoints;\n    }\n}\nexport class RichNodeFromRichNode extends NodeFromNode {\n    constructor(node) {\n        super(node);\n        this.labels = node.labels;\n        this.descriptions = node.descriptions;\n        this.types = node.types;\n        this.sourceEndpoints = node.sourceEndpoints;\n    }\n}\nexport class PrunedRichNodeFromNode extends NodeFromNode {\n    constructor(node) {\n        super(node);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/models/richnode.ts","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_validate-collection.js\n// module id = 135\n// module chunks = 2","'use strict';\nimport { Citable } from 'models/citable';\nimport { FIBRA, VOID, RDF, ONodeSet } from 'models/rdf';\nimport { SparqlAutocompleteService } from 'services/sparql-autocomplete-service';\nimport { DataModel } from 'services/project-service/data-model';\nimport { SparqlItemService } from 'services/sparql-item-service';\nimport { SparqlStatisticsService } from 'services/sparql-statistics-service';\nimport { SparqlService } from 'angular-sparql-service';\nexport class RemoteEndpointConfiguration extends Citable {\n    constructor() {\n        super(...arguments);\n        this.types = new ONodeSet();\n        this.autocompletionQuery = SparqlAutocompleteService.defaultMatchQuery;\n        this.propertyQuery = DataModel.propertyQuery;\n        this.classQuery = DataModel.classQuery;\n        this.itemQuery = SparqlItemService.getItemPropertiesQuery;\n        this.classStatisticsQuery = SparqlStatisticsService.getClassStatisticsQuery;\n        this.propertyStatisticsQuery = SparqlStatisticsService.getPropertyStatisticsQuery;\n        this.__className = 'RemoteEndpointConfiguration';\n    }\n    toTurtle(tb) {\n        if (!tb.fragmentsById.has(this.id)) {\n            tb.prefixes['fibra'] = FIBRA.ns;\n            tb.prefixes['void'] = VOID.ns;\n            tb.prefixes['rdf'] = RDF.ns;\n            let f = `<${this.id}> a `;\n            this.types.each(type => f = f + `${type.toCanonical()}, `);\n            f = f.substring(0, f.length - 2) + ' ;';\n            tb.fragmentsById.set(this.id, f);\n            super.toTurtle(tb);\n            f = tb.fragmentsById.get(this.id);\n            f = f + `\nfibra:schemaEndpoint <${this.schemaEndpoint}> ;\nvoid:sparqlEndpoint <${this.endpoint}> ;\nfibra:autocompletionQuery ${SparqlService.stringToSPARQLString(this.autocompletionQuery)} ;\nfibra:itemQuery ${SparqlService.stringToSPARQLString(this.itemQuery)} ;\nfibra:classStatisticsQuery ${SparqlService.stringToSPARQLString(this.classStatisticsQuery)} ;\nfibra:propertyStatisticsQuery ${SparqlService.stringToSPARQLString(this.propertyStatisticsQuery)} ;\nfibra:propertyQuery ${SparqlService.stringToSPARQLString(this.propertyQuery)} ;\nfibra:classQuery ${SparqlService.stringToSPARQLString(this.classQuery)} .`;\n            tb.fragmentsById.set(this.id, f);\n        }\n    }\n}\nRemoteEndpointConfiguration.listRemoteEndpointConfigurationsQuery = `PREFIX fibra: <http://hdlab.stanford.edu/fibra/ontology#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX void: <http://rdfs.org/ns/void#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nSELECT * {\n# STARTGRAPH\n  # VALUE\n  # TYPELIMIT\n  { ?id a ?types }\n  UNION\n  { ?id skos:prefLabel ?labels }\n  UNION\n  { ?id dcterms:description ?descriptions }\n  UNION\n  {\n    ?id void:sparqlEndpoint ?endpoint .\n    ?id fibra:autocompletionQuery ?autocompletionQuery .\n    ?id fibra:itemQuery ?itemQuery .\n    ?id fibra:classStatisticsQuery ?classStatisticsQuery .\n    OPTIONAL {\n      ?id fibra:propertyStatisticsQuery ?propertyStatisticsQuery .\n    }\n    ?id fibra:propertyQuery ?propertyQuery .\n    ?id fibra:classQuery ?classQuery .\n    OPTIONAL { ?id fibra:schemaEndpoint ?schemaEndpoint }\n    OPTIONAL { ?id foaf:homepage ?url }\n  } UNION {\n    {\n      ?id dcterms:rightsHolder ?rightsHolders\n    } UNION {\n      ?id fibra:qualifiedAssertion ?qa .\n      ?qa rdf:predicate dcterms:rightsHolder .\n      ?qa rdf:object ?rightsHolders .\n      OPTIONAL { ?qa fibra:order ?rightsHolders_order }\n    }\n    {\n      ?rightsHolders skos:prefLabel ?rightsHolders_labels\n    } UNION {\n      ?rightsHolders foaf:homepage ?rightsHolders_url\n    } UNION {\n      ?rightsHolders dcterms:description ?rightsHolders_descriptions\n    }\n  }\n# ENDGRAPH\n}`;\n\n\n\n// WEBPACK FOOTER //\n// ./app/services/project-service/remote-endpoint-configuration.ts","'use strict';\nimport { Citable } from '../../models/citable';\nimport { DataModel } from './data-model';\nimport { FIBRA, VOID } from '../../models/rdf';\nimport { SparqlService } from 'angular-sparql-service';\nexport class Schema extends Citable {\n    constructor() {\n        super(...arguments);\n        this.classQuery = DataModel.classQuery;\n        this.propertyQuery = DataModel.propertyQuery;\n        this.__className = 'Schema';\n    }\n    toTurtle(tb) {\n        if (!tb.fragmentsById.has(this.id)) {\n            tb.prefixes['fibra'] = FIBRA.ns;\n            tb.prefixes['void'] = VOID.ns;\n            tb.fragmentsById.set(this.id, `<${this.id}> a fibra:Schema ;`);\n            super.toTurtle(tb);\n            let f = tb.fragmentsById.get(this.id);\n            f = f + `\nvoid:sparqlEndpoint <${this.endpoint}> ;\nfibra:classQuery ${SparqlService.stringToSPARQLString(this.classQuery)} ;\nfibra:propertyQuery ${SparqlService.stringToSPARQLString(this.propertyQuery)} .`;\n            tb.fragmentsById.set(this.id, f);\n        }\n    }\n}\nSchema.listSchemasQuery = `PREFIX fibra: <http://hdlab.stanford.edu/fibra/ontology#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX void: <http://rdfs.org/ns/void#>\nSELECT ?id ?labels ?descriptions ?rightsHolders ?rightsHolders_labels ?rightsHolders_descriptions ?rightsHolders_url ?rightsHolders_order ?url ?endpoint ?classQuery ?propertyQuery {\n# STARTGRAPH\n# VALUE\n  ?id a fibra:Schema .\n  { ?id skos:prefLabel ?labels }\n  UNION\n  { ?id dcterms:description ?descriptions }\n  UNION\n  { ?id foaf:homepage ?url }\n  UNION\n  {\n    ?id void:sparqlEndpoint ?endpoint .\n    ?id fibra:classQuery ?classQuery .\n    ?id fibra:propertyQuery ?propertyQuery .\n  } UNION {\n    {\n      ?id dcterms:rightsHolder ?rightsHolders\n    } UNION {\n      ?id fibra:qualifiedAssertion ?qa .\n      ?qa rdf:predicate dcterms:rightsHolder .\n      ?qa rdf:object ?rightsHolders .\n      OPTIONAL { ?qa fibra:order ?rightsHolders_order }\n    }\n    {\n      ?rightsHolders skos:prefLabel ?rightsHolders_labels\n    } UNION {\n      ?rightsHolders foaf:homepage ?rightsHolders_url\n    } UNION {\n      ?rightsHolders dcterms:description ?rightsHolders_descriptions\n    }\n  }\n# ENDGRAPH\n}`;\n\n\n\n// WEBPACK FOOTER //\n// ./app/services/project-service/schema.ts","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 140\n// module chunks = 2","// imports\nvar SparqlParser = require(\"./parser\");\nvar Utils = require(\"./utils\");\nvar _ = Utils;\n\nfunction NonSupportedSparqlFeatureError(feature, message) {\n    this.name = \"NonSupportedSparqlFeatureError\";\n    this.feature = feature;\n    this.message = message || \"SPARQL feature \"+feature+\" non supported\";\n}\nNonSupportedSparqlFeatureError.prototype = new Error();\nNonSupportedSparqlFeatureError.constructor = NonSupportedSparqlFeatureError;\n\nfunction SparqlParserError(message) {\n    this.name = ParserError;\n    this.message = message || \"Error parsing SPARQL query\";\n}\nSparqlParserError.prototype = new Error();\nSparqlParserError.constructor = SparqlParserError;\n\n\n/**\n * @doc\n *\n * Based on <http://www.w3.org/2001/sw/DataAccess/rq23/rq24-algebra.html>\n * W3C's note\n */\nAbstractQueryTree = function() {\n};\n\nAbstractQueryTree.prototype.parseQueryString = function(query_string) {\n        return SparqlParser.parse(query_string);\n};\n\nAbstractQueryTree.prototype.parseExecutableUnit = function(executableUnit) {\n    if(executableUnit.kind === 'select') {\n        return this.parseSelect(executableUnit);\n    } else if(executableUnit.kind === 'ask') {\n        return this.parseSelect(executableUnit);\n    } else if(executableUnit.kind === 'modify') {\n        return this.parseSelect(executableUnit);\n    } else if(executableUnit.kind === 'construct') {\n        return this.parseSelect(executableUnit);\n    } else if(executableUnit.kind === 'insertdata') {\n        return this.parseInsertData(executableUnit);\n    } else if(executableUnit.kind === 'deletedata') {\n        return this.parseInsertData(executableUnit);\n    } else if(executableUnit.kind === 'load') {\n        return executableUnit;\n    } else if(executableUnit.kind === 'clear') {\n        return executableUnit;\n    } else if(executableUnit.kind === 'drop') {\n        return executableUnit;\n    } else if(executableUnit.kind === 'create') {\n        return executableUnit;\n    } else {\n        throw new Error('unknown executable unit: ' + executableUnit.kind);\n    }\n};\n\nAbstractQueryTree.prototype.parseSelect = function(syntaxTree){\n\n    if(syntaxTree == null) {\n        console.log(\"error parsing query\");\n        return null;\n    } else {\n        var env = { freshCounter: 0 };\n        syntaxTree.pattern = this.build(syntaxTree.pattern, env);\n        return syntaxTree;\n    }\n};\n\nAbstractQueryTree.prototype.parseInsertData = function(syntaxTree){\n    if(syntaxTree == null) {\n        console.log(\"error parsing query\");\n        return null;\n    } else {\n        return syntaxTree;\n    }\n};\n\nAbstractQueryTree.prototype.build = function(node, env) {\n    if(node.token === 'groupgraphpattern') {\n        return this._buildGroupGraphPattern(node, env);\n    } else if (node.token === 'basicgraphpattern') {\n        var bgp = {\n            kind: 'BGP',\n            value: node.triplesContext\n        };\n        bgp = AbstractQueryTree.translatePathExpressionsInBGP(bgp, env);\n        return bgp;\n    } else if (node.token === 'graphunionpattern') {\n        var a = this.build(node.value[0],env);\n        var b = this.build(node.value[1],env);\n\n        return {\n            kind: 'UNION',\n            value: [a,b]\n        };\n    } else if(node.token === 'graphgraphpattern') {\n        var c = this.build(node.value, env);\n        return {\n            kind: 'GRAPH',\n            value: c,\n            graph: node.graph\n        };\n    } else {\n        if(node.token != null) {\n            throw new NonSupportedSparqlFeatureError(node.token, \"Non implemented SPARQL graph pattern: '\" + node.token+\"'\");\n        } else {\n            throw new SparqlParserError(\"Error parsing graph pattern: '\"+JSON.stringify(node)+\"'\");\n        }\n    }\n};\n\nAbstractQueryTree.translatePathExpressionsInBGP = function(bgp, env) {\n    var pathExpression;\n    var before = [], rest, bottomJoin;\n    for(var i=0; i<bgp.value.length; i++) {\n        if(bgp.value[i].predicate && bgp.value[i].predicate.token === 'path') {\n            //console.log(\"FOUND A PATH\");\n            pathExpression = bgp.value[i];\n            rest = bgp.value.slice(i+1);\n            var bgpTransformed = AbstractQueryTree.translatePathExpression(pathExpression, env);\n            var optionalPattern = null;\n            //console.log(\"BACK FROM TRANSFORMED\");\n            if(bgpTransformed.kind === 'BGP') {\n                before = before.concat(bgpTransformed.value);\n            } else if(bgpTransformed.kind === 'ZERO_OR_MORE_PATH' || bgpTransformed.kind === 'ONE_OR_MORE_PATH'){\n                //console.log(\"BEFORE\");\n                //console.log(bgpTransformed);\n\n\n                if(before.length > 0) {\n                    bottomJoin =  {kind: 'JOIN',\n                        lvalue: {kind: 'BGP', value:before},\n                        rvalue: bgpTransformed};\n                } else {\n                    bottomJoin = bgpTransformed;\n                }\n\n\n                if(bgpTransformed.kind === 'ZERO_OR_MORE_PATH') {\n                    if(bgpTransformed.y.token === 'var' && bgpTransformed.y.value.indexOf(\"fresh:\")===0 &&\n                        bgpTransformed.x.token === 'var' && bgpTransformed.x.value.indexOf(\"fresh:\")===0) {\n                        //console.log(\"ADDING EXTRA PATTERN 1)\");\n                        for(var j=0; j<bgp.value.length; j++) {\n                            //console.log(bgp.value[j]);\n                            if(bgp.value[j].object && bgp.value[j].object.token === 'var' && bgp.value[j].object.value === bgpTransformed.x.value) {\n                                //console.log(\" YES 1)\");\n                                optionalPattern = _.clone(bgp.value[j], true);\n                                optionalPattern.object = bgpTransformed.y;\n                            }\n                        }\n                    } else if(bgpTransformed.y.token === 'var' && bgpTransformed.y.value.indexOf(\"fresh:\")===0) {\n                        //console.log(\"ADDING EXTRA PATTERN 2)\");\n                        for(var j=0; j<bgp.value.length; j++) {\n                            //console.log(bgp.value[j]);\n                            if(bgp.value[j].subject && bgp.value[j].subject.token === 'var' && bgp.value[j].subject.value === bgpTransformed.y.value) {\n                                //console.log(\" YES 2)\");\n                                optionalPattern = _.clone(bgp.value[j],true);\n                                optionalPattern.subject = bgpTransformed.x;\n                            }\n                        }\n                    }\n                }\n\n                if(rest.length >0) {\n                    //console.log(\"(2a)\")\n                    var rvalueJoin = AbstractQueryTree.translatePathExpressionsInBGP({kind: 'BGP', value: rest}, env);\n                    //console.log(\"got rvalue\");\n                    if(optionalPattern != null) {\n                        var optionals = before.concat([optionalPattern]).concat(rest);\n                        return { kind: 'UNION',\n                            value: [{ kind: 'JOIN',\n                                lvalue: bottomJoin,\n                                rvalue: rvalueJoin },\n                                {kind: 'BGP',\n                                    value: optionals}] };\n                    } else {\n                        return { kind: 'JOIN',\n                            lvalue: bottomJoin,\n                            rvalue: rvalueJoin };\n                    }\n                } else {\n                    //console.log(\"(2b)\")\n                    return bottomJoin;\n                }\n\n            } else {\n                // @todo ????\n                return bgpTransformed;\n            }\n        } else {\n            before.push(bgp.value[i]);\n        }\n    }\n\n    //console.log(\"returning\");\n    bgp.value = before;\n    return bgp;\n};\n\n\nAbstractQueryTree.translatePathExpression  = function(pathExpression, env) {\n    // add support for different path patterns\n    if(pathExpression.predicate.kind === 'element') {\n        // simple paths, maybe modified\n        if(pathExpression.predicate.modifier === '+') {\n            pathExpression.predicate.modifier = null;\n            var expandedPath = AbstractQueryTree.translatePathExpression(pathExpression, env);\n            return {kind: 'ONE_OR_MORE_PATH',\n                path: expandedPath,\n                x: pathExpression.subject,\n                y: pathExpression.object};\n        } else if(pathExpression.predicate.modifier === '*') {\n            pathExpression.predicate.modifier = null;\n            var expandedPath = AbstractQueryTree.translatePathExpression(pathExpression, env);\n            return {kind: 'ZERO_OR_MORE_PATH',\n                path: expandedPath,\n                x: pathExpression.subject,\n                y: pathExpression.object};\n        } else {\n            pathExpression.predicate = pathExpression.predicate.value;\n            return {kind: 'BGP', value: [pathExpression]};\n        }\n    } else if(pathExpression.predicate.kind === 'sequence') {\n        var currentSubject = pathExpression.subject;\n        var lastObject = pathExpression.object;\n        var currentGraph = pathExpression.graph;\n        var nextObject, chain;\n        var restTriples = [];\n        for(var i=0; i< pathExpression.predicate.value.length; i++) {\n            if(i!=pathExpression.predicate.value.length-1) {\n                nextObject = {\n                    token: \"var\",\n                    value: \"fresh:\"+env.freshCounter\n                };\n                env.freshCounter++;\n            } else {\n                nextObject = lastObject;\n            }\n\n            // @todo\n            // what if the predicate is a path with\n            // '*'? same fresh va in subject and object??\n            chain = {\n                subject: currentSubject,\n                predicate: pathExpression.predicate.value[i],\n                object: nextObject\n            };\n\n            if(currentGraph != null)\n                chain.graph =_.clone(currentGraph,true);\n\n            restTriples.push(chain);\n\n            if(i!=pathExpression.predicate.value.length-1)\n                currentSubject = _.clone(nextObject,true);\n        }\n        var bgp = {kind: 'BGP', value: restTriples};\n        //console.log(\"BEFORE (1):\");\n        //console.log(bgp);\n        //console.log(\"--------------\");\n        return AbstractQueryTree.translatePathExpressionsInBGP(bgp, env);\n    } else {\n        throw new NonSupportedSparqlFeatureError(\"Non supported path expression \"+pathExpression.predicate.kind);\n    }\n};\n\nAbstractQueryTree.prototype._buildGroupGraphPattern = function(node, env) {\n    var f = (node.filters || []);\n    var b = (node.binds || []);\n    var g = {kind: \"EMPTY_PATTERN\"};\n\n    for(var i=0; i<node.patterns.length; i++) {\n        var pattern = node.patterns[i];\n        if(pattern.token === 'optionalgraphpattern') {\n            var parsedPattern = this.build(pattern.value,env);\n            if(parsedPattern.kind === 'FILTER') {\n                g =  { kind:'LEFT_JOIN',\n                    lvalue: g,\n                    rvalue: parsedPattern.value,\n                    filter: parsedPattern.filter };\n            } else {\n                g = { kind:'LEFT_JOIN',\n                    lvalue: g,\n                    rvalue: parsedPattern,\n                    filter: true };\n            }\n        } else {\n            var parsedPattern = this.build(pattern,env);\n            if(g.kind == \"EMPTY_PATTERN\") {\n                g = parsedPattern;\n            } else {\n                g = { kind: 'JOIN',\n                    lvalue: g,\n                    rvalue: parsedPattern };\n            }\n        }\n    }\n\n    // set the binds back\n    g.binds = b;\n\n    if(f.length != 0) {\n        if(g.kind === 'EMPTY_PATTERN') {\n            return { kind: 'FILTER',\n                filter: f,\n                value: g};\n        } else if(g.kind === 'LEFT_JOIN' && g.filter === true) {\n            return { kind: 'FILTER',\n                filter: f,\n                value: g};\n\n//            g.filter = f;\n//            return g;\n        } else if(g.kind === 'LEFT_JOIN') {\n            return { kind: 'FILTER',\n                filter: f,\n                value: g};\n        } else if(g.kind === 'JOIN') {\n            return { kind: 'FILTER',\n                filter: f,\n                value: g};\n        } else if(g.kind === 'UNION') {\n            return { kind: 'FILTER',\n                filter: f,\n                value: g};\n        } else if(g.kind === 'GRAPH') {\n            return { kind: 'FILTER',\n                filter: f,\n                value: g};\n        } else if(g.kind === 'BGP') {\n            return { kind: 'FILTER',\n                filter: f,\n                value: g};\n        } else {\n            throw new Error(\"Unknow kind of algebra expression: \"+ g.kind);\n        }\n    } else {\n        return g;\n    }\n};\n\n/**\n * Collects basic triple pattern in a complex SPARQL AQT\n */\nAbstractQueryTree.prototype.collectBasicTriples = function(aqt, acum) {\n    if(acum == null) {\n        acum = [];\n    }\n\n    if(aqt.kind === 'select') {\n        acum = this.collectBasicTriples(aqt.pattern,acum);\n    } else if(aqt.kind === 'BGP') {\n        acum = acum.concat(aqt.value);\n    } else if(aqt.kind === 'ZERO_OR_MORE_PATH') {\n        acum = this.collectBasicTriples(aqt.path);\n    } else if(aqt.kind === 'UNION') {\n        acum = this.collectBasicTriples(aqt.value[0],acum);\n        acum = this.collectBasicTriples(aqt.value[1],acum);\n    } else if(aqt.kind === 'GRAPH') {\n        acum = this.collectBasicTriples(aqt.value,acum);\n    } else if(aqt.kind === 'LEFT_JOIN' || aqt.kind === 'JOIN') {\n        acum = this.collectBasicTriples(aqt.lvalue, acum);\n        acum = this.collectBasicTriples(aqt.rvalue, acum);\n    } else if(aqt.kind === 'FILTER') {\n        acum = this.collectBasicTriples(aqt.value, acum);\n    } else if(aqt.kind === 'construct') {\n        acum = this.collectBasicTriples(aqt.pattern,acum);\n    } else if(aqt.kind === 'EMPTY_PATTERN') {\n        // nothing\n    } else {\n        throw \"Unknown pattern: \"+aqt.kind;\n    }\n\n    return acum;\n};\n\n/**\n * Replaces bindings in an AQT\n */\nAbstractQueryTree.prototype.bind = function(aqt, bindings) {\n    if(aqt.graph != null && aqt.graph.token && aqt.graph.token === 'var' &&\n        bindings[aqt.graph.value] != null) {\n        aqt.graph = bindings[aqt.graph.value];\n    }\n    if(aqt.filter != null) {\n        var acum = [];\n        for(var i=0; i< aqt.filter.length; i++) {\n            aqt.filter[i].value = this._bindFilter(aqt.filter[i].value, bindings);\n            acum.push(aqt.filter[i]);\n        }\n        aqt.filter = acum;\n    }\n    if(aqt.kind === 'select') {\n        aqt.pattern = this.bind(aqt.pattern, bindings);\n        //acum = this.collectBasicTriples(aqt.pattern,acum);\n    } else if(aqt.kind === 'BGP') {\n        aqt.value = this._bindTripleContext(aqt.value, bindings);\n        //acum = acum.concat(aqt.value);\n    } else if(aqt.kind === 'ZERO_OR_MORE_PATH') {\n        aqt.path = this._bindTripleContext(aqt.path, bindings);\n        if(aqt.x && aqt.x.token === 'var' && bindings[aqt.x.value] != null) {\n            aqt.x = bindings[aqt.x.value];\n        }\n        if(aqt.y && aqt.y.token === 'var' && bindings[aqt.y.value] != null) {\n            aqt.y = bindings[aqt.y.value];\n        }\n    } else if(aqt.kind === 'UNION') {\n        aqt.value[0] = this.bind(aqt.value[0],bindings);\n        aqt.value[1] = this.bind(aqt.value[1],bindings);\n    } else if(aqt.kind === 'GRAPH') {\n        aqt.value = this.bind(aqt.value,bindings);\n    } else if(aqt.kind === 'LEFT_JOIN' || aqt.kind === 'JOIN') {\n        aqt.lvalue = this.bind(aqt.lvalue, bindings);\n        aqt.rvalue = this.bind(aqt.rvalue, bindings);\n    } else if(aqt.kind === 'FILTER') {\n        var that = this;\n        aqt.value = this.bind(aqt.value, bindings);\n        aqt.filter = aqt.filter.map(function(f) { return { token: 'filter', value: that._bindFilter(f.value, bindings) }; });\n    } else if(aqt.kind === 'EMPTY_PATTERN') {\n        // nothing\n    } else {\n        throw \"Unknown pattern: \"+aqt.kind;\n    }\n\n    return aqt;\n};\n\nAbstractQueryTree.prototype._bindTripleContext = function(triples, bindings) {\n    for(var i=0; i<triples.length; i++) {\n        delete triples[i]['graph'];\n        delete triples[i]['variables'];\n        for(var p in triples[i]) {\n            var comp = triples[i][p];\n            if(comp.token === 'var' && bindings[comp.value] != null) {\n                triples[i][p] = bindings[comp.value];\n            }\n        }\n    }\n\n    return triples;\n};\n\n\nAbstractQueryTree.prototype._bindFilter = function(filterExpr, bindings) {\n    if(filterExpr.expressionType != null) {\n        var expressionType = filterExpr.expressionType;\n        if(expressionType == 'relationalexpression') {\n            filterExpr.op1 = this._bindFilter(filterExpr.op1, bindings);\n            filterExpr.op2 = this._bindFilter(filterExpr.op2, bindings);\n        } else if(expressionType == 'conditionalor' || expressionType == 'conditionaland') {\n            for(var i=0; i< filterExpr.operands.length; i++) {\n                filterExpr.operands[i] = this._bindFilter(filterExpr.operands[i], bindings);\n            }\n        } else if(expressionType == 'additiveexpression') {\n            filterExpr.summand = this._bindFilter(filterExpr.summand, bindings);\n            for(var i=0; i<filterExpr.summands.length; i++) {\n                filterExpr.summands[i].expression = this._bindFilter(filterExpr.summands[i].expression, bindings);\n            }\n        } else if(expressionType == 'builtincall') {\n            for(var i=0; i<filterExpr.args.length; i++) {\n                filterExpr.args[i] = this._bindFilter(filterExpr.args[i], bindings);\n            }\n        } else if(expressionType == 'multiplicativeexpression') {\n            filterExpr.factor = this._bindFilter(filterExpr.factor, bindings);\n            for(var i=0; i<filterExpr.factors.length; i++) {\n                filterExpr.factors[i].expression = this._bindFilter(filterExpr.factors[i].expression, bindings);\n            }\n        } else if(expressionType == 'unaryexpression') {\n            filterExpr.expression = this._bindFilter(filterExpr.expression, bindings);\n        } else if(expressionType == 'irireforfunction') {\n            for(var i=0; i<filterExpr.factors.args; i++) {\n                filterExpr.args[i] = this._bindFilter(filterExpr.args[i], bindings);\n            }\n        } else if(expressionType == 'atomic') {\n            if(filterExpr.primaryexpression == 'var') {\n                // lookup the var in the bindings\n                if(bindings[filterExpr.value.value] != null) {\n                    var val = bindings[filterExpr.value.value];\n                    if(val.token === 'uri') {\n                        filterExpr.primaryexpression = 'iri';\n                    } else {\n                        filterExpr.primaryexpression = 'literal';\n                    }\n                    filterExpr.value = val;\n                }\n            }\n        }\n    }\n\n    return filterExpr;\n};\n\n/**\n * Replaces terms in an AQT\n */\nAbstractQueryTree.prototype.replace = function(aqt, from, to, ns) {\n    if(aqt.graph != null && aqt.graph.token && aqt.graph.token === from.token &&\n        aqt.graph.value == from.value) {\n        aqt.graph = _.clone(to,true);\n    }\n    if(aqt.filter != null) {\n        var acum = [];\n        for(var i=0; i< aqt.filter.length; i++) {\n            aqt.filter[i].value = this._replaceFilter(aqt.filter[i].value, from, to, ns);\n            acum.push(aqt.filter[i]);\n        }\n        aqt.filter = acum;\n    }\n    if(aqt.kind === 'select') {\n        aqt.pattern = this.replace(aqt.pattern, from, to, ns);\n    } else if(aqt.kind === 'BGP') {\n        aqt.value = this._replaceTripleContext(aqt.value, from, to, ns);\n    } else if(aqt.kind === 'ZERO_OR_MORE_PATH') {\n        aqt.path = this._replaceTripleContext(aqt.path, from,to, ns);\n        if(aqt.x && aqt.x.token === from.token && aqt.value === from.value) {\n            aqt.x = _.clone(to,true);\n        }\n        if(aqt.y && aqt.y.token === from.token && aqt.value === from.value) {\n            aqt.y = _.clone(to,true);\n        }\n    } else if(aqt.kind === 'UNION') {\n        aqt.value[0] = this.replace(aqt.value[0],from,to, ns);\n        aqt.value[1] = this.replace(aqt.value[1],from,to, ns);\n    } else if(aqt.kind === 'GRAPH') {\n        aqt.value = this.replace(aqt.value,from,to);\n    } else if(aqt.kind === 'LEFT_JOIN' || aqt.kind === 'JOIN') {\n        aqt.lvalue = this.replace(aqt.lvalue, from, to, ns);\n        aqt.rvalue = this.replace(aqt.rvalue, from, to, ns);\n    } else if(aqt.kind === 'FILTER') {\n        aqt.value = this._replaceFilter(aqt.value, from,to, ns);\n    } else if(aqt.kind === 'EMPTY_PATTERN') {\n        // nothing\n    } else {\n        throw \"Unknown pattern: \"+aqt.kind;\n    }\n\n    return aqt;\n};\n\nAbstractQueryTree.prototype._replaceTripleContext = function(triples, from, to, ns) {\n    for(var i=0; i<triples.length; i++) {\n        for(var p in triples[i]) {\n            var comp = triples[i][p];\n            if(comp.token === 'var' && from.token === 'var' && comp.value === from.value) {\n                triples[i][p] = to;\n            } else if(comp.token === 'blank' && from.token === 'blank' && comp.value === from.value) {\n                triples[i][p] = to;\n            } else {\n                if((comp.token === 'literal' || comp.token ==='uri') &&\n                    (from.token === 'literal' || from.token ==='uri') &&\n                    comp.token === from.token && Utils.lexicalFormTerm(comp,ns)[comp.token] === Utils.lexicalFormTerm(from,ns)[comp.token]) {\n                    triples[i][p] = to;\n                }\n            }\n        }\n    }\n\n    return triples;\n};\n\n\nAbstractQueryTree.prototype._replaceFilter = function(filterExpr, from, to, ns) {\n    if(filterExpr.expressionType != null) {\n        var expressionType = filterExpr.expressionType;\n        if(expressionType == 'relationalexpression') {\n            filterExpr.op1 = this._replaceFilter(filterExpr.op1, from, to, ns);\n            filterExpr.op2 = this._replaceFilter(filterExpr.op2, from, to, ns);\n        } else if(expressionType == 'conditionalor' || expressionType == 'conditionaland') {\n            for(var i=0; i< filterExpr.operands.length; i++) {\n                filterExpr.operands[i] = this._replaceFilter(filterExpr.operands[i], from, to, ns);\n            }\n        } else if(expressionType == 'additiveexpression') {\n            filterExpr.summand = this._replaceFilter(filterExpr.summand, from, to, ns);\n            for(var i=0; i<filterExpr.summands.length; i++) {\n                filterExpr.summands[i].expression = this._replaceFilter(filterExpr.summands[i].expression, from, to, ns);\n            }\n        } else if(expressionType == 'builtincall') {\n            for(var i=0; i<filterExpr.args.length; i++) {\n                filterExpr.args[i] = this._replaceFilter(filterExpr.args[i], from, to, ns);\n            }\n        } else if(expressionType == 'multiplicativeexpression') {\n            filterExpr.factor = this._replaceFilter(filterExpr.factor, from, to, ns);\n            for(var i=0; i<filterExpr.factors.length; i++) {\n                filterExpr.factors[i].expression = this._replaceFilter(filterExpr.factors[i].expression, from, to, ns);\n            }\n        } else if(expressionType == 'unaryexpression') {\n            filterExpr.expression = this._replaceFilter(filterExpr.expression, from, to, ns);\n        } else if(expressionType == 'irireforfunction') {\n            for(var i=0; i<filterExpr.factors.args; i++) {\n                filterExpr.args[i] = this._replaceFilter(filterExpr.args[i], from, to, ns);\n            }\n        } else if(expressionType == 'atomic') {\n            var val = null;\n            if(filterExpr.primaryexpression == from.token && filterExpr.value == from.value) {\n                val = to.value;\n            } else if(filterExpr.primaryexpression == 'iri' && from.token == 'uri' && filterExpr.value == from.value) {\n                val = to.value;\n            }\n\n\n            if(val != null) {\n                if(to.token === 'uri') {\n                    filterExpr.primaryexpression = 'iri';\n                } else {\n                    filterExpr.primaryexpression = to.token;\n                }\n                filterExpr.value = val;\n            }\n        }\n    }\n\n    return filterExpr;\n};\n\nAbstractQueryTree.prototype.treeWithUnion = function(aqt) {\n    if(aqt == null)\n        return false;\n    if(aqt.kind == null)\n        return false;\n    if(aqt.kind === 'select') {\n        return this.treeWithUnion(aqt.pattern);\n    } else if(aqt.kind === 'BGP') {\n        return this.treeWithUnion(aqt.value);\n    } else if(aqt.kind === 'ZERO_OR_MORE_PATH') {\n        return false;\n    } else if(aqt.kind === 'UNION') {\n        if(aqt.value[0].value != null && aqt.value[0].value.variables != null &&\n            aqt.value[1].value != null && aqt.value[1].value.variables != null) {\n            if(aqt.value[0].variables.join(\"/\") === aqt.values[1].variables.join(\"/\")) {\n                if(this.treeWithUnion(aqt.value[0]))\n                    return true;\n                else\n                    return this.treeWithUnion(aqt.value[1]);\n            }\n        } else {\n            return true;\n        }\n    } else if(aqt.kind === 'GRAPH') {\n        return false;\n    } else if(aqt.kind === 'LEFT_JOIN' || aqt.kind === 'JOIN') {\n        var leftUnion  = this.treeWithUnion(aqt.lvalue);\n        if(leftUnion)\n            return true;\n        else\n            this.treeWithUnion(aqt.rvalue);\n    } else if(aqt.kind === 'FILTER') {\n        return false;\n    } else if(aqt.kind === 'EMPTY_PATTERN') {\n        return false;\n    } else {\n        return false;\n    }\n};\n\nmodule.exports = {\n    AbstractQueryTree: AbstractQueryTree,\n    NonSupportedSparqlFeatureError: NonSupportedSparqlFeatureError,\n    SparqlParserError: SparqlParserError\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/abstract_query_tree.js\n// module id = 142\n// module chunks = 2","\"use strict\";\n\nvar utils = require('./utils');\nvar async = utils;\nvar nextTick = utils.nextTick;\n\nvar left = -1;\nvar right = 1;\n\n/**\n * @doc\n * Implementation based on <http://www.gossamer-threads.com/lists/linux/kernel/667935>\n *\n */\n\n/**\n * Tree\n *\n * Implements the interface of BinarySearchTree.Tree\n *\n * An implementation of an in memory B-Tree.\n */\nvar Tree = function(order,f) {\n    if(arguments.length != 0) {\n        this.order = order;\n        this.root = this._allocateNode();\n        this.root.isLeaf = true;\n        this.root.level = 0;\n        var that = this;\n        this._diskWrite(this.root, function(root){\n            that.root = root;\n            that._updateRootNode(that.root, function(n){\n                that.comparator = function(a,b) {\n                    if(a < b) {\n                        return -1;\n                    } else if(a > b){\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                };\n                that.merger = null;\n                // we notify we are ready\n                if(f!=null) {\n                    f(that);\n                }\n            })});\n    }\n};\n\n/**\n * Creates the new node.\n *\n * This class can be overwritten by different versions of\n * the tree t select the right kind of node to be used\n *\n * @returns the new alloacted node\n */\nTree.prototype._allocateNode = function() {\n    return new Node();\n};\n\n/**\n * _diskWrite\n *\n * Persists the node to secondary memory.\n */\nTree.prototype._diskWrite= function(node, f) {\n    // dummy implementation;\n    // no-op\n    nextTick(function(){\n        f(node);\n    });\n};\n\n\n/**\n * _diskRead\n *\n * Retrieves a node from secondary memory using the provided\n * pointer\n */\nTree.prototype._diskRead = function(pointer, f) {\n    // dummy implementation;\n    // no-op\n    nextTick(function() {\n        f(pointer);\n    });\n};\n\nTree.prototype._diskDelete= function(node,f) {\n    // dummy implementation\n    // no-op\n    nextTick(function() {\n        f();\n    });\n};\n\n\n/**\n * _updateRootNode\n *\n * Updates the pointer to the root node stored in disk.\n */\nTree.prototype._updateRootNode = function(node,f) {\n    // dummy implementation;\n    // no-op\n    f(node)\n};\n\n\n/**\n * search\n *\n * Retrieves the node matching the given value.\n * If no node is found, null is returned.\n */\nTree.prototype.search = function(key,f, checkExists) {\n    var node = this.root;\n    var tree = this;\n    tree.__search(tree,key,node,f, checkExists);\n};\nTree.prototype.__search = function (tree, key, node, f, checkExists) {\n    var idx = 0;\n    while (idx < node.numberActives && tree.comparator(key, node.keys[idx].key) === 1) {\n        idx++;\n    }\n\n    if (idx < node.numberActives && tree.comparator(node.keys[idx].key, key) === 0) {\n        if (checkExists != null && checkExists == true) {\n            f(true);\n        } else {\n            f(node.keys[idx].data);\n        }\n    } else {\n        if (node.isLeaf === true) {\n            f(null)\n        } else {\n            tree._diskRead(node.children[idx], function (node) {\n                tree.__search(tree, key, node, f, checkExists)\n            });\n        }\n    }\n};\n\n\n/**\n * walk\n * Applies a function to all the nodes key and data in the the\n * tree in key order.\n */\nTree.prototype.walk = function(f,e) {\n    this.__walk(this,this.root,f,e);\n};\nTree.prototype.__walk = function(tree,node,f,callback) {\n    var max = node.numberActives;\n    var i = 0;\n    if(node.isLeaf) {\n        for(i=0; i<node.numberActives; i++) {\n            f(node.keys[i]);\n        }\n        return callback();\n    } else {\n        async.whilst(function(){\n            return i < max;\n        },function(c){\n            tree._diskRead(node.children[i], function(n){\n                tree.__walk(tree,n,f,function(){\n                    tree._diskRead(node.keys[i], function(n){\n                        f(n);\n                        i++;\n                        c();\n                    })\n                });\n            });\n        },function(){\n            tree._diskRead(node.children[max],function(node){\n                tree.__walk(tree,node,f,function(){callback();});\n            });\n        });\n    }\n};\n\n\n/**\n * walkNodes\n * Applies a function to all the nodes in the the\n * tree in key order.\n */\nTree.prototype.walkNodes = function(f) {\n    this.__walkNodes(this,root,f,function(){});\n};\nTree.prototype.__walkNodes = function(tree,node,f,callback) {\n    if(node.isLeaf) {\n        f(node);\n        return callback();\n    } else {\n        f(node);\n        var max = node.numberActives;\n        var i = 0;\n        async.whilst(function(){\n            return i<max;\n        }, function(c){\n            tree._diskRead(node.children[i], function(n){\n                tree.__walkNodes(tree,n,f,function(){\n                    i++;\n                    c();\n                });\n            });\n        },function(){\n            tree._diskRead(node.children[max],function(n){\n                tree.__walkNodes(tree,n,f,function(){});\n            });\n        });\n    }\n};\n\n/**\n * _splitChild\n *\n * Split the child node and adjusts the parent.\n */\nTree.prototype._splitChild = function(parent, index, child, callback) {\n    var newChild = this._allocateNode();\n    newChild.isLeaf = child.isLeaf;\n    newChild.level = child.level;\n    newChild.numberActives = this.order - 1;\n\n    // Copy the higher order keys to the new child\n    var newParentChild = child.keys[this.order-1];\n    child.keys[this.order-1] = null;\n\n    for(var i=0; i< this.order-1; i++) {\n        newChild.keys[i]=child.keys[i+this.order];\n        child.keys[i+this.order] = null;\n        if(!child.isLeaf) {\n            newChild.children[i] = child.children[i+this.order];\n            child.children[i+this.order] = null;\n        }\n    }\n\n    // Copy the last child pointer\n    if(!child.isLeaf) {\n        newChild.children[i] = child.children[i+this.order];\n        child.children[i+this.order] = null;\n    }\n\n    child.numberActives = this.order - 1;\n\n\n    for(i = parent.numberActives + 1; i>index+1; i--) {\n        parent.children[i] = parent.children[i-1];\n    }\n\n    parent.children[index+1] = newChild;\n\n    for(i = parent.numberActives; i>index; i--) {\n        parent.keys[i] = parent.keys[i-1];\n    }\n\n    parent.keys[index] = newParentChild;\n    parent.numberActives++;\n\n    var that = this;\n    this._diskWrite(newChild,function(newChild){\n        that._diskWrite(parent,function(parent){\n            parent.children[index+1] = newChild;\n            that._diskWrite(child,function(child){\n                return callback(parent);\n            });\n        });\n    });\n};\n\n/**\n * insert\n *\n * Creates a new node with value key and data and inserts it\n * into the tree.\n */\nTree.prototype.insert = function(key,data,callback) {\n\n    if(this.root.numberActives === (2 * this.order - 1)) {\n        var newRoot = this._allocateNode();\n        newRoot.isLeaf = false;\n        newRoot.level = this.root.level + 1;\n        newRoot.numberActives = 0;\n        newRoot.children[0] = this.root;\n\n        var that = this;\n        this._splitChild(newRoot, 0, this.root, function(updatedParent){\n            newRoot = updatedParent; // @warning tricky!\n            that.root = newRoot;\n            that._updateRootNode(newRoot, function(newRoot){\n                that._insertNonFull(newRoot, key, data, callback);\n            });\n        });\n    } else {\n        this._insertNonFull(this.root, key, data,callback);\n    }\n};\n\n/**\n * _insertNonFull\n *\n * Recursive function that tries to insert the new key in\n * in the provided node, or splits it and go deeper\n * in the BTree hierarchy.\n */\nTree.prototype._insertNonFull = function (node, key, data, callback) {\n    var idx = node.numberActives - 1;\n    this.__insertNonFull(this, node, idx, key, data, callback);\n};\nTree.prototype.__insertNonFull = function(tree,node,idx,key,data,callback) {\n    if(!node.isLeaf) {\n        while(idx>=0 && tree.comparator(key,node.keys[idx].key) === -1) {\n            idx--;\n        }\n        idx++;\n        var that = tree;\n        tree._diskRead(node.children[idx],function(child) {\n            if(child.numberActives === 2*that.order -1) {\n                that._splitChild(node,idx,child,function(){\n                    if(that.comparator(key, node.keys[idx].key)===1) {\n                        idx++;\n                    }\n                    that._diskRead(node.children[idx], function(node){\n                        idx = node.numberActives -1;\n                        that.__insertNonFull(tree,node,idx,key,data,callback);\n                    });\n                });\n            } else {\n                that._diskRead(node.children[idx], function(node){\n                    idx = node.numberActives -1;\n                    that.__insertNonFull(tree,node,idx,key,data,callback);\n                });\n            }\n        });\n\n    } else {\n        while(idx>=0 && tree.comparator(key,node.keys[idx].key) === -1) {\n            node.keys[idx+1] = node.keys[idx];\n            idx--;\n        }\n\n        if(idx>=0 && tree.comparator(key,node.keys[idx].key) === 0){\n            node.keys[idx] = {key:key, data:data};\n        } else {\n            node.keys[idx + 1] = {key:key, data:data};\n            node.numberActives++;\n        }\n        tree._diskWrite(node, function(node){\n            return callback(node);\n        });\n    }\n};\n\n/**\n * delete\n *\n * Deletes the key from the\n * If the key is not found, an exception is thrown.\n *\n * @param key the key to be deleted\n * @returns true if the key is deleted false otherwise\n */\nTree.prototype.delete = function(key,callback) {\n    var node = this.root;\n    Tree.prototype.__deleteSearchNode(this,key,node,callback);\n};\nTree.prototype.__deleteSearchNode = function(tree,key,node,callback) {\n    var i = 0;\n\n    if(node.numberActives === 0) {\n        return callback(false);\n    }\n\n    while(i<node.numberActives && tree.comparator(key, node.keys[i].key) === 1) {\n        i++;\n    }\n\n    var idx = i;\n\n    if(i<node.numberActives && tree.comparator(key, node.keys[i].key) === 0) {\n        return tree.__deleteNodeFound(tree,idx,key,node,callback);\n    }\n\n    if(node.isLeaf === true) {\n        return callback(false);\n    }\n\n    var parent = node;\n    tree._diskRead(node.children[i], function(node){\n        if(node===null) {\n            return callback(false);\n        }\n\n        var isLsiblingNull = false;\n        var isRsiblingNull = false;\n        var rsiblingIndex = null;\n        var lsiblingIndex = null;\n\n        if(idx === parent.numberActives) {\n            isRsiblingNull = true;\n            lsiblingIndex = parent.children[idx - 1];\n            rsiblingIndex = parent.children[idx-1]\n        } else if(idx === 0) {\n            isLsiblingNull = true;\n            rsiblingIndex = parent.children[1];\n            lsiblingIndex = parent.children[1];\n        } else {\n            lsiblingIndex = parent.children[idx-1];\n            rsiblingIndex = parent.children[idx+1];\n        }\n\n        tree._diskRead(lsiblingIndex, function(lsibling){\n            tree._diskRead(rsiblingIndex, function(rsibling){\n                if(isRsiblingNull===true) {\n                    rsibling = null;\n                }\n                if(isLsiblingNull===true) {\n                    lsibling = null;\n                }\n\n                if(node.numberActives === (tree.order-1) && parent != null) {\n                    if(rsibling != null && rsibling.numberActives > (tree.order-1)) {\n                        // The current node has (t - 1) keys but the right sibling has > (t - 1) keys\n                        tree._moveKey(parent,i,left, function(parent){\n                            tree.__deleteSearchNode(tree,key,node,callback);\n                        });\n                    } else if(lsibling != null && lsibling.numberActives > (tree.order-1)) {\n                        // The current node has (t - 1) keys but the left sibling has > (t - 1) keys\n                        tree._moveKey(parent,i,right, function(parent){\n                            tree.__deleteSearchNode(tree,key,node,callback);\n                        });\n                    } else if(lsibling != null && lsibling.numberActives === (tree.order-1)) {\n                        // The current node has (t - 1) keys but the left sibling has (t - 1) keys\n                        tree._mergeSiblings(parent,i,left,function(node) {\n                            tree.__deleteSearchNode(tree,key,node,callback);\n                        });\n                    } else if(rsibling != null && rsibling.numberActives === (tree.order-1)){\n                        // The current node has (t - 1) keys but the left sibling has (t - 1) keys\n                        tree._mergeSiblings(parent,i,right,function(node) {\n                            tree.__deleteSearchNode(tree,key,node,callback);\n                        });\n                    }\n                } else {\n                    tree.__deleteSearchNode(tree,key,node,callback);\n                }\n            });\n        })\n    });\n};\nTree.prototype.__deleteNodeFound = function (tree, idx, key, node, callback) {\n    //Case 1 : The node containing the key is found and is the leaf node.\n    //Also the leaf node has keys greater than the minimum required.\n    //Simply remove the key\n    if (node.isLeaf && (node.numberActives > (tree.order - 1))) {\n        tree._deleteKeyFromNode(node, idx, function () {\n            callback(true);\n        });\n        return true;\n    }\n\n\n    //If the leaf node is the root permit deletion even if the number of keys is\n    //less than (t - 1)\n    if (node.isLeaf && (node === tree.root)) {\n        tree._deleteKeyFromNode(node, idx, function () {\n            callback(true);\n        });\n        return true;\n    }\n\n\n    //Case 2: The node containing the key is found and is an internal node\n    if (node.isLeaf === false) {\n        tree._diskRead(node.children[idx], function (tmpNode) {\n            if (tmpNode.numberActives > (tree.order - 1)) {\n                tree._getMaxKeyPos(tree, tmpNode, function (subNodeIdx) {\n                    key = subNodeIdx.node.keys[subNodeIdx.index];\n\n                    node.keys[idx] = key;\n\n                    tree._diskWrite(node, function (node) {\n                        node = tmpNode;\n                        key = key.key;\n                        tree.__deleteSearchNode(tree, key, node, callback);\n                    });\n                });\n            } else {\n                tree._diskRead(node.children[idx + 1], function (tmpNode2) {\n                    if (tmpNode2.numberActives > (tree.order - 1)) {\n                        tree._getMinKeyPos(tree, tmpNode2, function (subNodeIdx) {\n                            key = subNodeIdx.node.keys[subNodeIdx.index];\n\n                            node.keys[idx] = key;\n\n                            tree._diskWrite(node, function (node) {\n                                node = tmpNode2;\n                                key = key.key;\n                                tree.__deleteSearchNode(tree, key, node, callback);\n                            });\n                        });\n                    } else if (tmpNode.numberActives === (tree.order - 1) && tmpNode2.numberActives === (tree.order - 1)) {\n\n                        tree._mergeNodes(tmpNode, node.keys[idx], tmpNode2, function (combNode) {\n\n                            node.children[idx] = combNode;\n\n                            idx++;\n                            for (var i = idx; i < node.numberActives; i++) {\n                                node.children[i] = node.children[i + 1];\n                                node.keys[i - 1] = node.keys[i];\n                            }\n                            // freeing unused references\n                            node.children[i] = null;\n                            node.keys[i - 1] = null;\n\n                            node.numberActives--;\n                            if (node.numberActives === 0 && tree.root === node) {\n                                tree.root = combNode;\n                            }\n\n                            tree._diskWrite(node, function (node) {\n                                tree.__deleteSearchNode(tree, key, combNode, callback);\n                            });\n                        });\n                    }\n                });\n            }\n        });\n    } // end case 2\n\n    // Case 3:\n    // In this case start from the top of the tree and continue\n    // moving to the leaf node making sure that each node that\n    // we encounter on the way has atleast 't' (order of the tree)\n    // keys\n    if (node.isLeaf && (node.numberActives > tree.order - 1)) {\n        tree._deleteKeyFromNode(node, idx, function (node) {\n            tree.__deleteSearchNode(tree, key, node, callback);\n        });\n    }\n};\n\n/**\n * _moveKey\n *\n * Move key situated at position i of the parent node\n * to the left or right child at positions i-1 and i+1\n * according to the provided position\n *\n * @param parent the node whose is going to be moved to a child\n * @param i Index of the key in the parent\n * @param position left, or right\n */\nTree.prototype._moveKey = function (parent, i, position, callback) {\n\n    if (position === right) {\n        i--;\n    }\n\n    var that = this;\n    //var lchild = parent.children[i-1];\n    that._diskRead(parent.children[i], function (lchild) {\n        that._diskRead(parent.children[i + 1], function (rchild) {\n\n            if (position == left) {\n                lchild.keys[lchild.numberActives] = parent.keys[i];\n                lchild.children[lchild.numberActives + 1] = rchild.children[0];\n                rchild.children[0] = null;\n                lchild.numberActives++;\n\n                parent.keys[i] = rchild.keys[0];\n\n                for (var _i = 1; _i < rchild.numberActives; _i++) {\n                    rchild.keys[_i - 1] = rchild.keys[_i];\n                    rchild.children[_i - 1] = rchild.children[_i];\n                }\n                rchild.children[rchild.numberActives - 1] = rchild.children[rchild.numberActives];\n                rchild.numberActives--;\n            } else {\n                rchild.children[rchild.numberActives + 1] = rchild.children[rchild.numberActives];\n                for (var _i = rchild.numberActives; _i > 0; _i--) {\n                    rchild.children[_i] = rchild.children[_i - 1];\n                    rchild.keys[_i] = rchild.keys[_i - 1];\n                }\n                rchild.keys[0] = null;\n                rchild.children[0] = null;\n\n                rchild.children[0] = lchild.children[lchild.numberActives];\n                rchild.keys[0] = parent.keys[i];\n                rchild.numberActives++;\n\n                lchild.children[lchild.numberActives] = null;\n                parent.keys[i] = lchild.keys[lchild.numberActives - 1];\n                lchild.keys[lchild.numberActives - 1] = null;\n                lchild.numberActives--;\n            }\n\n            that._diskWrite(lchild, function (lchild) {\n                that._diskWrite(rchild, function (rchild) {\n                    that._diskWrite(parent, function (parent) {\n                        return callback(parent);\n                    });\n                });\n            });\n        });\n    });\n};\n\n/**\n * _mergeSiblings\n *\n * Merges two nodes at the left and right of the provided\n * index in the parent node.\n *\n * @param parent the node whose children will be merged\n * @param i Index of the key in the parent pointing to the nodes to merge\n */\nTree.prototype._mergeSiblings = function(parent,index,pos,callback) {\n    var i,j;\n    var n1, n2;\n    var tolookn1, tolookn2;\n\n    if (index === (parent.numberActives)) {\n        index--;\n        tolookn1 = parent.children[parent.numberActives - 1];\n        tolookn2 = parent.children[parent.numberActives]\n    } else {\n        tolookn1 = parent.children[index];\n        tolookn2 = parent.children[index + 1];\n    }\n\n    var that = this;\n    that._diskRead(tolookn1, function(n1){\n        that._diskRead(tolookn2, function(n2){\n\n            //Merge the current node with the left node\n            var newNode = that._allocateNode();\n            newNode.isLeaf = n1.isLeaf;\n            newNode.level = n1.level;\n\n            for(j=0; j<that.order-1; j++) {\n                newNode.keys[j] = n1.keys[j];\n                newNode.children[j] = n1.children[j];\n            }\n\n            newNode.keys[that.order-1] = parent.keys[index];\n            newNode.children[that.order-1] = n1.children[that.order-1];\n\n            for(j=0; j<that.order-1; j++) {\n                newNode.keys[j+that.order] = n2.keys[j];\n                newNode.children[j+that.order] = n2.children[j];\n            }\n            newNode.children[2*that.order-1] = n2.children[that.order-1];\n\n            parent.children[index] = newNode;\n\n            for(j=index; j<parent.numberActives;j++) {\n                parent.keys[j] = parent.keys[j+1];\n                parent.children[j+1] = parent.children[j+2];\n            }\n\n            newNode.numberActives = n1.numberActives + n2.numberActives+1;\n            parent.numberActives--;\n\n            for(i=parent.numberActives; i<2*that.order-1; i++) {\n                parent.keys[i] = null;\n            }\n\n            if (parent.numberActives === 0 && that.root === parent) {\n                that.root = newNode;\n                if(newNode.level) {\n                    newNode.isLeaf = false;\n                } else {\n                    newNode.isLeaf = true;\n                }\n            }\n\n            that._diskWrite(newNode, function(newNode){\n                that._diskWrite(parent,function(parent){\n                    that._diskDelete(n1,function(){\n                        that._diskDelete(n2,function(){\n                            if(that.root === newNode) {\n                                that._updateRootNode(that.root,function(){\n                                    return callback(newNode);\n                                });\n                            } else {\n                                return callback(newNode);\n                            }\n                        });\n                    });\n                });\n            });\n        });\n    });\n};\n\n/**\n * _deleteKeyFromNode\n *\n * Deletes the key at position index from the provided node.\n *\n * @param node The node where the key will be deleted.\n * @param index The index of the key that will be deletd.\n * @return true if the key can be deleted, false otherwise\n */\nTree.prototype._deleteKeyFromNode = function (node, index, callback) {\n    var keysMax = (2 * this.order) - 1;\n    if (node.numberActives < keysMax) {\n        keysMax = node.numberActives;\n    }\n    ;\n\n    var i;\n\n    if (node.isLeaf === false) {\n        return false;\n    }\n\n    var key = node.keys[index];\n\n    for (i = index; i < keysMax - 1; i++) {\n        node.keys[i] = node.keys[i + 1];\n    }\n\n    // cleaning invalid reference\n    node.keys.pop();\n\n    node.numberActives--;\n\n    this._diskWrite(node, function (node) {\n        return callback(node);\n    });\n};\n\nTree.prototype._mergeNodes = function(n1, key, n2, callback) {\n    var newNode;\n    var i;\n\n    newNode = this._allocateNode();\n    newNode.isLeaf = true;\n\n    for(i=0; i<n1.numberActives; i++) {\n        newNode.keys[i]   = n1.keys[i];\n        newNode.children[i]   = n1.children[i];\n    }\n    newNode.children[n1.numberActives] = n1.children[n1.numberActives];\n    newNode.keys[n1.numberActives] = key;\n\n    for(i=0; i<n2.numberActives; i++) {\n        newNode.keys[i+n1.numberActives+1] = n2.keys[i];\n        newNode.children[i+n1.numberActives+1] = n2.children[i];\n    }\n    newNode.children[(2*this.order)-1] = n2.children[n2.numberActives];\n\n    newNode.numberActives = n1.numberActives + n2.numberActives + 1;\n    newNode.isLeaf = n1.isLeaf;\n    newNode.level = n1.level;\n\n\n    var that = this;\n    this._diskWrite(newNode, function(newNode){\n        that._diskDelete(n1, function(){\n            that._diskDelete(n2, function(){\n                return callback(newNode);\n            });\n        })\n    });\n};\n\n/**\n * audit\n *\n * Checks that the tree data structure is\n * valid.\n */\nTree.prototype.audit = function (showOutput) {\n    var errors = [];\n    var alreadySeen = [];\n    var that = this;\n\n    var foundInArray = function (data) {\n        for (var i = 0; i < alreadySeen.length; i++) {\n            if (that.comparator(alreadySeen[i], data) === 0) {\n                var error = \" !!! duplicated key \" + data;\n                if (showOutput === true) {\n                    console.log(error);\n                }\n                errors.push(error);\n            }\n        }\n    };\n\n    var length = null;\n    var that = this;\n    this.walkNodes(function (n) {\n        if (showOutput === true) {\n            console.log(\"--- Node at \" + n.level + \" level\");\n            console.log(\" - leaf? \" + n.isLeaf);\n            console.log(\" - num actives? \" + n.numberActives);\n            console.log(\" - keys: \");\n        }\n        for (var i = n.numberActives; i < n.keys.length; i++) {\n            if (n.keys[i] != null) {\n                if (showOutput === true) {\n                    console.log(\" * warning : redundant key data\");\n                    errors.push(\" * warning : redundant key data\");\n                }\n            }\n        }\n\n        for (var i = n.numberActives + 1; i < n.children.length; i++) {\n            if (n.children[i] != null) {\n                if (showOutput === true) {\n                    console.log(\" * warning : redundant children data\");\n                    errors.push(\" * warning : redundant key data\");\n                }\n            }\n        }\n\n\n        if (n.isLeaf === false) {\n            for (var i = 0; i < n.numberActives; i++) {\n                var maxLeft = this._diskRead(n.children[i]).keys[this._diskRead(n.children[i]).numberActives - 1 ].key;\n                var minRight = this._diskRead(n.children[i + 1]).keys[0].key;\n                if (showOutput === true) {\n                    console.log(\"   \" + n.keys[i].key + \"(\" + maxLeft + \",\" + minRight + \")\");\n                }\n                if (that.comparator(n.keys[i].key, maxLeft) === -1) {\n                    var error = \" !!! value max left \" + maxLeft + \" > key \" + n.keys[i].key;\n                    if (showOutput === true) {\n                        console.log(error);\n                    }\n                    errors.push(error);\n                }\n                if (that.comparator(n.keys[i].key, minRight) === 1) {\n                    var error = \" !!! value min right \" + minRight + \" < key \" + n.keys[i].key;\n                    if (showOutput === true) {\n                        console.log(error);\n                    }\n                    errors.push(error);\n                }\n\n                foundInArray(n.keys[i].key);\n                alreadySeen.push(n.keys[i].key);\n            }\n        } else {\n            if (length === null) {\n                length = n.level;\n            } else {\n                if (length != n.level) {\n                    var error = \" !!! Leaf node with wrong level value\";\n                    if (showOutput === true) {\n                        console.log(error);\n                    }\n                    errors.push(error);\n                }\n            }\n            for (var i = 0; i < n.numberActives; i++) {\n                if (showOutput === true) {\n                    console.log(\" \" + n.keys[i].key);\n                }\n                foundInArray(n.keys[i].key);\n                alreadySeen.push(n.keys[i].key);\n\n            }\n        }\n\n        if (n != that.root) {\n            if (n.numberActives > ((2 * that.order) - 1)) {\n                if (showOutput === true) {\n                    var error = \" !!!! MAX num keys restriction violated \";\n                }\n                console.log(error);\n                errors.push(error);\n            }\n            if (n.numberActives < (that.order - 1)) {\n                if (showOutput === true) {\n                    var error = \" !!!! MIN num keys restriction violated \";\n                }\n                console.log(error);\n                errors.push(error);\n            }\n\n        }\n    });\n\n    return errors;\n};\n\n/**\n *  _getMaxKeyPos\n *\n *  Used to get the position of the MAX key within the subtree\n *  @return An object containing the key and position of the key\n */\nTree.prototype._getMaxKeyPos = function (tree, node, callback) {\n    var node_pos = {};\n\n    if (node === null) {\n        return callback(null);\n    }\n\n    if (node.isLeaf === true) {\n        node_pos.node = node;\n        node_pos.index = node.numberActives - 1;\n        return callback(node_pos);\n    } else {\n        node_pos.node = node;\n        node_pos.index = node.numberActives - 1;\n        tree._diskRead(node.children[node.numberActives], function (node) {\n            return tree._getMaxKeyPos(tree, node, callback);\n        });\n    }\n};\n\n/**\n *  _getMinKeyPos\n *\n *  Used to get the position of the MAX key within the subtree\n *  @return An object containing the key and position of the key\n */\nTree.prototype._getMinKeyPos = function (tree, node, callback) {\n    var node_pos = {};\n\n    if (node === null) {\n        callback(null);\n    }\n\n    if (node.isLeaf === true) {\n        node_pos.node = node;\n        node_pos.index = 0;\n        return callback(node_pos);\n    } else {\n        node_pos.node = node;\n        node_pos.index = 0;\n        tree._diskRead(node.children[0], function (node) {\n            return tree._getMinKeyPos(tree, node, callback);\n        });\n    }\n};\n\n\n/**\n * Node\n *\n * Implements the interface of BinarySearchTree.Node\n *\n * A Tree node augmented with BTree\n * node structures\n */\nvar Node = function() {\n    this.numberActives = 0;\n    this.isLeaf = null;\n    this.keys = [];\n    this.children = [];\n    this.level = 0;\n};\n\nmodule.exports = {\n    Tree: Tree,\n    Node: Node\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/btree.js\n// module id = 143\n// module chunks = 2","// imports\nvar _ = require(\"./utils\");\nvar QueryFilters = require(\"./query_filters\").QueryFilters;\n\nRDFModel = {};\n\n/**\n * Implementation of <http://www.w3.org/TR/rdf-interfaces/>\n */\n\n// Uris map\n\nRDFModel.defaultContext = {\n    \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"owl\": \"http://www.w3.org/2002/07/owl#\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n    \"dcterms\": \"http://purl.org/dc/terms/\",\n    \"foaf\": \"http://xmlns.com/foaf/0.1/\",\n    \"cal\": \"http://www.w3.org/2002/12/cal/ical#\",\n    \"vcard\": \"http://www.w3.org/2006/vcard/ns# \",\n    \"geo\": \"http://www.w3.org/2003/01/geo/wgs84_pos#\",\n    \"cc\": \"http://creativecommons.org/ns#\",\n    \"sioc\": \"http://rdfs.org/sioc/ns#\",\n    \"doap\": \"http://usefulinc.com/ns/doap#\",\n    \"com\": \"http://purl.org/commerce#\",\n    \"ps\": \"http://purl.org/payswarm#\",\n    \"gr\": \"http://purl.org/goodrelations/v1#\",\n    \"sig\": \"http://purl.org/signature#\",\n    \"ccard\": \"http://purl.org/commerce/creditcard#\",\n    \"ldp\": \"http://www.w3.org/ns/ldp#\"\n};\n\nRDFModel.UrisMap = function() {\n    this.defaultNs = \"\";\n    this.interfaceProperties = ['get', 'remove', 'set', 'setDefault', 'addAll', 'resolve', 'shrink'];\n};\n\nRDFModel.UrisMap.prototype.values = function() {\n    var collected = {};\n    for(var p in this) {\n\tif(!_.include(this.interfaceProperties,p) &&\n\t    typeof(this[p])!=='function' &&\n\t    p!=='defaultNs' &&\n\t    p!=='interfaceProperties') {\n\t    collected[p] = this[p];\n\t}\n    }\n\n    return collected;\n};\n\nRDFModel.UrisMap.prototype.get = function(prefix) {\n    if(prefix.indexOf(\" \") != -1) {\n\tthrow \"Prefix must not contain any whitespaces\";\n    }\n    return this[prefix];\n};\n\nRDFModel.UrisMap.prototype.remove = function(prefix) {\n    if(prefix.indexOf(\" \") != -1) {\n\tthrow \"Prefix must not contain any whitespaces\";\n    }\n\n    delete this[prefix];\n\n    return null;\n};\n\nRDFModel.UrisMap.prototype.set = function(prefix, iri) {\n    if(prefix.indexOf(\" \") != -1) {\n\tthrow \"Prefix must not contain any whitespaces\";\n    }\n\n    this[prefix] = iri;\n};\n\n\nRDFModel.UrisMap.prototype.setDefault = function(iri) {\n    this.defaultNs =iri;\n};\n\nRDFModel.UrisMap.prototype.addAll = function(prefixMap, override) {\n    for(var prefix in prefixMap) {\n\tif(!_.include(this.interfaceProperties, prefix)) {\n\t    if(this[prefix] != null) {\n\t\tif(override === true) {\n\t\t    this[prefix] = prefixMap[prefix];\n\t\t}\n\t    } else {\n\t\tthis[prefix] = prefixMap[prefix];\n\t    }\n\t}\n    }\n\n    return this;\n};\n\nRDFModel.UrisMap.prototype.resolve = function(curie) {\n    var parts = curie.split(\":\");\n    var ns = parts[0];\n    var suffix = parts[1];\n    if(ns === '') {\n\tif(this.defaultNs == null) {\n\t    return null;\n\t} else {\n\t    return this.defaultNs + suffix;\n\t}\n    } else if(this[ns] != null) {\n\treturn this[ns] + suffix;\n    } else {\n\treturn null;\n    }\n};\n\nRDFModel.UrisMap.prototype.shrink = function(iri) {\n    for(var ns in this) {\n\tvar prefix = this[ns];\n\tif(iri.indexOf(prefix) === 0) {\n\t    if(prefix !== '' && ns != 'defaultNs') {\n\t\tvar suffix = iri.split(prefix)[1];\n\t\treturn ns + \":\" + suffix;\n\t    }\n\t}\n    }\n\n    return iri;\n};\n\n// Profile\n\nRDFModel.Profile = function() {\n    this.prefixes = new RDFModel.UrisMap();\n    this.terms = new RDFModel.UrisMap();\n};\n\nRDFModel.Profile.prototype.importProfile = function(profile, override) {\n    this.prefixes.addAll(profile.prefixes, override);\n    this.terms.addAll(profile.terms, override);\n};\n\n\nRDFModel.Profile.prototype.resolve = function(toResolve) {\n    if(toResolve.indexOf(\":\") != -1) {\n\treturn this.prefixes.resolve(toResolve);\n    } else if(this.terms[toResolve] != null) {\n\treturn this.terms.resolve(toResolve);\n    } else {\n\treturn null;\n    }\n};\n\nRDFModel.Profile.prototype.setDefaultPrefix = function(iri) {\n    this.prefixes.setDefault(iri);\n};\n\nRDFModel.Profile.prototype.setDefaultVocabulary = function(iri) {\n    this.terms.setDefault(iri);\n};\n\nRDFModel.Profile.prototype.setPrefix = function(prefix, iri) {\n    this.prefixes.set(prefix, iri);\n};\n\nRDFModel.Profile.prototype.setTerm = function(term, iri) {\n    this.terms.set(term, iri);\n};\n\n// RDF environemnt\nRDFModel.RDFEnvironment = function () {\n    RDFModel.Profile.call(this);\n    this.blankNodeCounter = 0;\n    var that = this;\n    this.filters = {\n\ts:function (s) {\n\t    return function (t) {\n\t\treturn t.subject.equals(s);\n\t    };\n\t},\n\tp:function (p) {\n\t    return function (t) {\n\t\treturn t.predicate.equals(p);\n\t    };\n\t},\n\to:function (o) {\n\t    return function (t) {\n\t\treturn t.object.equals(o);\n\t    };\n\t},\n\tsp:function (s, p) {\n\t    return function (t) {\n\t\treturn t.subject.equals(s) && t.predicate.equals(p);\n\t    };\n\t},\n\tso:function (s, o) {\n\t    return function (t) {\n\t\treturn t.subject.equals(s) && t.object.equals(o);\n\t    };\n\t},\n\tpo:function (p, o) {\n\t    return function (t) {\n\t\treturn t.predicate.equals(p) && t.object.equals(o);\n\t    };\n\t},\n\tspo:function (s, p, o) {\n\t    return function (t) {\n\t\treturn t.subject.equals(s) && t.predicate.equals(p) && t.object.equals(o);\n\t    };\n\t},\n\tdescribes:function (v) {\n\t    return function (t) {\n\t\treturn t.subject.equals(v) || t.object.equals(v);\n\t    };\n\t},\n\ttype:function (o) {\n\t    var type = that.resolve(\"rdf:type\");\n\t    return function (t) {\n\t\treturn t.predicate.equals(type) && t.object.equals(o);\n\t    };\n\t}\n    };\n\n    for (var p in RDFModel.defaultContext) {\n\tthis.prefixes.set(p, RDFModel.defaultContext[p]);\n    }\n};\nRDFModel.RDFEnvironment.prototype = _.create(RDFModel.Profile.prototype,{'constructor': RDFModel.RDFEnvironment});\n\nRDFModel.RDFEnvironment.prototype.createBlankNode = function() {\n    var bnode =  new RDFModel.BlankNode(this.blankNodeCounter);\n    this.blankNodeCounter++;\n    return bnode;\n};\n\nRDFModel.RDFEnvironment.prototype.createNamedNode = function(value) {\n    var resolvedValue = this.resolve(value);\n    if(resolvedValue != null) {\n\treturn new RDFModel.NamedNode(resolvedValue);\n    } else {\n\treturn new RDFModel.NamedNode(value);\n    }\n};\n\nRDFModel.RDFEnvironment.prototype.createLiteral = function(value, language, datatype) {\n    if(datatype != null) {\n\treturn new RDFModel.Literal(value, language, datatype.toString());\n    } else {\n\treturn new RDFModel.Literal(value, language, datatype);\n    }\n};\n\nRDFModel.RDFEnvironment.prototype.createTriple = function(subject, predicate, object) {\n    return new RDFModel.Triple(subject, predicate, object);\n};\n\nRDFModel.RDFEnvironment.prototype.createGraph = function(triples) {\n    var graph = new RDFModel.Graph();\n    if(triples != null) {\n\tfor(var i=0; i<triples.length; i++) {\n\t    graph.add(triples[i]);\n\t}\n    }\n    return graph;\n};\n\nRDFModel.RDFEnvironment.prototype.createAction = function(test, action) {\n    return function(triple) {\n\tif(test(triple)) {\n\t    return action(triple);\n\t} else {\n\t    return triple;\n\t}\n    }\n};\n\nRDFModel.RDFEnvironment.prototype.createProfile = function(empty) {\n    // empty (opt);\n    if(empty === true) {\n\treturn new RDFModel.RDFEnvironment.Profile();\n    } else {\n\tvar profile = new RDFModel.RDFEnvironment.Profile();\n\tprofile.importProfile(this);\n\n\treturn profile;\n    }\n};\n\nRDFModel.RDFEnvironment.prototype.createTermMap = function(empty) {\n    if(empty === true) {\n\treturn new RDFModel.UrisMap();\n    } else {\n\tvar cloned = this.terms.values();\n\tvar termMap = new RDFModel.UrisMap();\n\n\tfor(var p in cloned) {\n\t    termMap[p] = cloned[p];\n\t}\n\n\treturn termMap;\n    }\n};\n\nRDFModel.RDFEnvironment.prototype.createPrefixMap = function(empty) {\n    if(empty === true) {\n\treturn new RDFModel.UrisMap();\n    } else {\n\tvar cloned = this.prefixes.values();\n\tvar prefixMap = new RDFModel.UrisMap();\n\n\tfor(var p in cloned) {\n\t    prefixMap[p] = cloned[p];\n\t}\n\n\treturn prefixMap;\n    }\n};\n\n// Common RDFNode interface\n\nRDFModel.RDFNode = function(interfaceName){\n    this.interfaceName = interfaceName;\n    this.attributes  = [\"interfaceName\", \"nominalValue\"]\n};\n\nRDFModel.RDFNode.prototype.equals = function(otherNode) {\n    if(otherNode.interfaceName == null) {\n\treturn this.valueOf() == otherNode;\n\n    } else {\n\tfor(var i in this.attributes) {\n\t    var attribute = this.attributes[i];\n\t    if(this[attribute] != otherNode[attribute]) {\n\t\treturn false;\n\t    }\n\t}\n\n\treturn true;\n    }\n};\n\n\n// Blank node\n\nRDFModel.BlankNode = function(bnodeId) {\n    RDFModel.RDFNode.call(this, \"BlankNode\");\n    this.nominalValue = \"_:\"+bnodeId;\n    this.bnodeId = bnodeId;\n};\n\nRDFModel.BlankNode.prototype = _.create(RDFModel.RDFNode.prototype, {'constructor':RDFModel.BlankNode});\n\nRDFModel.BlankNode.prototype.toString = function(){\n    return this.nominalValue;\n};\n\nRDFModel.BlankNode.prototype.toNT = function() {\n    return this.nominalValue;\n};\n\nRDFModel.BlankNode.prototype.valueOf = function() {\n    return this.nominalValue;\n};\n\n// Literal node\n\nRDFModel.Literal = function(value, language, datatype) {\n    RDFModel.RDFNode.call(this, \"Literal\");\n    this.nominalValue = value;\n    if(language != null) {\n\tthis.language = language;\n    } else if(datatype != null) {\n\tthis.datatype = datatype;\n    }\n};\n\nRDFModel.Literal.prototype = _.create(RDFModel.RDFNode.prototype,{'constructor':RDFModel.Literal});\n\nRDFModel.Literal.prototype.toString = function(){\n    var tmp = '\"'+this.nominalValue+'\"';\n    if(this.language != null) {\n\ttmp = tmp + \"@\" + this.language;\n    } else if(this.datatype != null || this.type) {\n\ttmp = tmp + \"^^<\" + (this.datatype||this.type) + \">\";\n    }\n\n    return tmp;\n};\n\nRDFModel.Literal.prototype.toNT = function() {\n    return this.toString();\n};\n\nRDFModel.Literal.prototype.valueOf = function() {\n    return QueryFilters.effectiveTypeValue({\n\ttoken: 'literal',\n\ttype: (this.type || this.datatype),\n\tvalue: this.nominalValue,\n\tlanguage: this.language\n    });\n};\n\n// NamedNode node\n\nRDFModel.NamedNode = function(val) {\n    RDFModel.RDFNode.call(this, \"NamedNode\");\n    if(val.value != null) {\n\tthis.nominalValue = val.value;\n    } else {\n\tthis.nominalValue = val;\n    }\n};\n\nRDFModel.NamedNode.prototype = _.create(RDFModel.RDFNode.prototype, {'constructor':RDFModel.NamedNode});\n\nRDFModel.NamedNode.prototype.toString = function(){\n    return this.nominalValue;\n};\n\nRDFModel.NamedNode.prototype.toNT = function() {\n    return \"<\"+this.toString()+\">\";\n};\n\nRDFModel.NamedNode.prototype.valueOf = function() {\n    return this.nominalValue;\n};\n\n// Triple interface\nRDFModel.Triple = function(subject, predicate, object){\n    this.subject = subject;\n    this.predicate = predicate;\n    this.object = object;\n};\n\nRDFModel.Triple.prototype.equals = function(otherTriple) {\n    return this.subject.equals(otherTriple.subject) &&\n\tthis.predicate.equals(otherTriple.predicate) &&\n\tthis.object.equals(otherTriple.object);\n};\n\nRDFModel.Triple.prototype.toString = function() {\n    return this.subject.toNT()+\" \"+this.predicate.toNT()+\" \"+this.object.toNT()+\" . \\r\\n\";\n};\n\n// Graph interface\n\nRDFModel.Graph = function() {\n    this.triples = [];\n    this.duplicates = {};\n    this.actions = [];\n    this.length = 0;\n};\n\nRDFModel.Graph.prototype.add = function(triple) {\n    for(var i=0; i<this.actions.length; i++) {\n\ttriple = this.actions[i](triple);\n    }\n\n    var id = triple.subject.toString()+triple.predicate.toString()+triple.object.toString();\n    if(!this.duplicates[id]) {\n\tthis.duplicates[id] = true;\n\tthis.triples.push(triple);\n    }\n\n    this.length = this.triples.length;\n    return this;\n};\n\nRDFModel.Graph.prototype.addAction = function (tripleAction, run) {\n    this.actions.push(tripleAction);\n    if (run == true) {\n\tfor (var i = 0; i < this.triples.length; i++) {\n\t    this.triples[i] = tripleAction(this.triples[i]);\n\t}\n    }\n\n    return this;\n};\n\nRDFModel.Graph.prototype.addAll = function (graph) {\n    var newTriples = graph.toArray();\n    for (var i = 0; i < newTriples.length; i++) {\n\tthis.add(newTriples[i]);\n    }\n\n    this.length = this.triples.length;\n    return this;\n};\n\nRDFModel.Graph.prototype.remove = function(triple) {\n    var toRemove = null;\n    for(var i=0; i<this.triples.length; i++) {\n\tif(this.triples[i].equals(triple)) {\n\t    var id = triple.subject.toString()+triple.predicate.toString()+triple.object.toString();\n\t    delete this.duplicates[id];\n\t    toRemove = i;\n\t    break;\n\t}\n    }\n\n    if(toRemove!=null) {\n\tthis.triples.splice(toRemove,1);\n    }\n\n    this.length = this.triples.length;\n    return this;\n};\n\nRDFModel.Graph.prototype.toArray = function() {\n    return this.triples;\n};\n\nRDFModel.Graph.prototype.some = function(p) {\n    for(var i=0; i<this.triples.length; i++) {\n\tif(p(this.triples[i],this) === true) {\n\t    return true;\n\t}\n    }\n\n    return false;\n};\n\nRDFModel.Graph.prototype.every = function(p) {\n    for(var i=0; i<this.triples.length; i++) {\n\tif(p(this.triples[i],this) === false) {\n\t    return false;\n\t}\n    }\n\n    return true;\n};\n\nRDFModel.Graph.prototype.filter = function(f) {\n    var tmp = new RDFModel.Graph();\n\n    for(var i=0; i<this.triples.length; i++) {\n\tif(f(this.triples[i],this) === true) {\n\t    tmp.add(this.triples[i]);\n\t}\n    }\n\n    return tmp;\n};\n\nRDFModel.Graph.prototype.forEach = function(f) {\n    for(var i=0; i<this.triples.length; i++) {\n\tf(this.triples[i],this);\n    }\n};\n\nRDFModel.Graph.prototype.merge = function(g) {\n    var newGraph = new RDFModel.Graph();\n    for(var i=0; i<this.triples.length; i++)\n\tnewGraph.add(this.triples[i]);\n\n    return newGraph;\n};\n\nRDFModel.Graph.prototype.match = function(subject, predicate, object, limit) {\n    var graph = new RDFModel.Graph();\n\n    var matched = 0;\n    for(var i=0; i<this.triples.length; i++) {\n\tvar triple = this.triples[i];\n\tif(subject == null || (triple.subject.equals(subject))) {\n\t    if(predicate == null || (triple.predicate.equals(predicate))) {\n\t\tif(object == null || (triple.object.equals(object))) {\n\t\t    if(limit==null || matched < limit) {\n\t\t\tmatched++;\n\t\t\tgraph.add(triple);\n\t\t    } else {\n\t\t\treturn graph;\n\t\t    }\n\t\t}\n\t    }\n\t}\n    }\n\n    return graph;\n};\n\nRDFModel.Graph.prototype.removeMatches = function(subject, predicate, object) {\n    var toRemove = [];\n    for(var i=0; i<this.triples.length; i++) {\n\tvar triple = this.triples[i];\n\tif(subject == null || (triple.subject.equals(subject))) {\n\t    if(predicate == null || (triple.predicate.equals(predicate))) {\n\t\tif(object == null || (triple.object.equals(object))) {\n\t\t    toRemove.push(triple);\n\t\t}\n\t    }\n\t}\n    }\n\n    for(var i=0; i<toRemove.length; i++) {\n\tthis.remove(toRemove[i]);\n    }\n\n    return this;\n};\n\nRDFModel.Graph.prototype.toNT = function() {\n    var n3 = \"\";\n\n    this.forEach(function(triple) {\n\tn3 = n3 + triple.toString();\n    });\n\n    return n3;\n};\n\n// Builders for the query engine\n\nRDFModel.buildRDFResource = function(value, bindings, engine, env) {\n    if(value.token === 'blank') {\n\treturn RDFModel.buildBlankNode(value, bindings, engine, env);\n    } else if(value.token === 'literal') {\n\treturn RDFModel.buildLiteral(value, bindings, engine, env);\n    } else if(value.token === 'uri') {\n\treturn RDFModel.buildNamedNode(value, bindings, engine, env);\n    } else if(value.token === 'var') {\n\tvar result = bindings[value.value];\n\tif(result != null) {\n\t    return RDFModel.buildRDFResource(result, bindings, engine, env);\n\t} else {\n\t    return null;\n\t}\n    } else {\n\treturn null;\n    }\n};\n\nRDFModel.buildBlankNode = function(value, bindings, engine, env) {\n    if(value.valuetmp != null) {\n\tvalue.value = value.valuetmp;\n    }\n    if(value.value.indexOf(\"_:\") === 0) {\n\tvalue.value = value.value.split(\"_:\")[1];\n    }\n    return new RDFModel.BlankNode(value.value);\n};\n\nRDFModel.buildLiteral = function(value, bindings, engine, env) {\n    return new RDFModel.Literal(value.value, value.lang, value.type);\n};\n\nRDFModel.buildNamedNode = function(value, bindings, engine, env) {\n    if(value.value != null) {\n\treturn new RDFModel.NamedNode(value);\n    } else {\n\tif(value.prefix != null) {\n\t    var prefix = engine.resolveNsInEnvironment(value.prefix, env);\n\t    value.value = prefix+value.suffix;\n\t    return new RDFModel.NamedNode(value);\n\t} else {\n\t    return new RDFModel.NamedNode(value);\n\t}\n    }\n};\n\nRDFModel.rdf = new RDFModel.RDFEnvironment();\n\nmodule.exports = RDFModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/rdf_model.js\n// module id = 144\n// module chunks = 2","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = 145\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url/url.js\n// module id = 146\n// module chunks = 2","// **N3Lexer** tokenizes N3 documents.\nvar fromCharCode = String.fromCharCode;\nvar immediately = typeof setImmediate === 'function' ? setImmediate :\n                  function setImmediate(func) { setTimeout(func, 0); };\n\n// Regular expression and replacement string to escape N3 strings.\n// Note how we catch invalid unicode sequences separately (they will trigger an error).\nvar escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\[uU]|\\\\(.)/g;\nvar escapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                           'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n                           '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n                           '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n                           '/': '/', '?': '?', '#': '#', '@': '@', '%': '%' };\nvar illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\n// ## Constructor\nfunction N3Lexer(options) {\n  if (!(this instanceof N3Lexer))\n    return new N3Lexer(options);\n\n  // In line mode (N-Triples or N-Quads), only simple features may be parsed\n  if (options && options.lineMode) {\n    // Don't tokenize special literals\n    this._tripleQuotedString = this._number = this._boolean = /$0^/;\n    // Swap the tokenize method for a restricted version\n    var self = this;\n    this._tokenize = this.tokenize;\n    this.tokenize = function (input, callback) {\n      this._tokenize(input, function (error, token) {\n        if (!error && /^(?:IRI|prefixed|literal|langcode|type|\\.|eof)$/.test(token.type))\n          callback && callback(error, token);\n        else\n          callback && callback(error || self._syntaxError(token.type, callback = null));\n      });\n    };\n  }\n}\n\nN3Lexer.prototype = {\n  // ## Regular expressions\n  // It's slightly faster to have these as properties than as in-scope variables.\n\n  _iri: /^<((?:[^>\\\\]|\\\\[uU])+)>/, // IRI with escape sequences; needs sanity check after unescaping\n  _unescapedIri: /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>/, // IRI without escape sequences; no unescaping\n  _unescapedString: /^\"[^\"\\\\]+\"(?=[^\"\\\\])/, // non-empty string without escape sequences\n  _singleQuotedString: /^\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"(?=[^\"\\\\])|^'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'(?=[^'\\\\])/,\n  _tripleQuotedString: /^\"\"(\"[^\"\\\\]*(?:(?:\\\\.|\"(?!\"\"))[^\"\\\\]*)*\")\"\"|^''('[^'\\\\]*(?:(?:\\\\.|'(?!''))[^'\\\\]*)*')''/,\n  _langcode: /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i,\n  _prefix: /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/,\n  _prefixed: /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?=\\.?[,;\\s#()\\[\\]\\{\\}\"'<])/,\n  _blank: /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<])/,\n  _number: /^[\\-+]?(?:\\d+\\.?\\d*([eE](?:[\\-\\+])?\\d+)|\\d*\\.?\\d+)(?=[.,;:\\s#()\\[\\]\\{\\}\"'<])/,\n  _boolean: /^(?:true|false)(?=[.,;:\\s#()\\[\\]\\{\\}\"'<])/,\n  _keyword: /^@[a-z]+(?=[\\s#<:])/,\n  _sparqlKeyword: /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<:])/i,\n  _shortPredicates: /^a(?=\\s+|<)/,\n  _newline: /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/,\n  _whitespace: /^[ \\t]+/,\n  _endOfFile: /^(?:#[^\\n\\r]*)?$/,\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback.\n  _tokenizeToEnd: function (callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually.\n    var input = this._input;\n    while (true) {\n      // Count and skip whitespace lines.\n      var whiteSpaceMatch;\n      while (whiteSpaceMatch = this._newline.exec(input))\n        input = input.substr(whiteSpaceMatch[0].length, input.length), this._line++;\n      // Skip whitespace on current line.\n      if (whiteSpaceMatch = this._whitespace.exec(input))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end.\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF.\n        if (inputFinished)\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character.\n      var line = this._line, type = '', value = '', prefix = '',\n          firstChar = input[0], match = null, matchLength = 0, unescaped, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // Try to match a type.\n        if (input.length === 1) break;\n        else if (input[1] !== '^') return reportSyntaxError(this);\n        this._prevTokenType = '^';\n        // Move to type IRI or prefixed name.\n        input = input.substr(2);\n        if (input[0] !== '<') {\n          inconclusive = true;\n          break;\n        }\n        // Fall through in case the type is an IRI.\n\n      case '<':\n        // Try to find a full IRI without escape sequences.\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences.\n        else if (match = this._iri.exec(input)) {\n          unescaped = this._unescape(match[1]);\n          if (unescaped === null || illegalIriChars.test(unescaped))\n            return reportSyntaxError(this);\n          type = 'IRI', value = unescaped;\n        }\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(input + ' ')))\n          type = 'prefixed', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n      case \"'\":\n        // Try to find a non-empty double-quoted literal without escape sequences.\n        if (match = this._unescapedString.exec(input))\n          type = 'literal', value = match[0];\n        // Try to find any other literal wrapped in a pair of single or double quotes.\n        else if (match = this._singleQuotedString.exec(input)) {\n          unescaped = this._unescape(match[0]);\n          if (unescaped === null)\n            return reportSyntaxError(this);\n          type = 'literal', value = unescaped.replace(/^'|'$/g, '\"');\n        }\n        // Try to find a literal wrapped in three pairs of single or double quotes.\n        else if (match = this._tripleQuotedString.exec(input)) {\n          unescaped = match[1] || match[2];\n          // Count the newlines and advance line counter.\n          this._line += unescaped.split(/\\r\\n|\\r|\\n/).length - 1;\n          unescaped = this._unescape(unescaped);\n          if (unescaped === null)\n            return reportSyntaxError(this);\n          type = 'literal', value = unescaped.replace(/^'|'$/g, '\"');\n        }\n        break;\n\n      case '@':\n        // Try to find a language code.\n        if (this._prevTokenType === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword.\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation.\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot).\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number.\n        if (match = this._number.exec(input)) {\n          type = 'literal';\n          value = '\"' + match[0] + '\"^^http://www.w3.org/2001/XMLSchema#' +\n                  (match[1] ? 'double' : (/^[+\\-]?\\d+$/.test(match[0]) ? 'integer' : 'decimal'));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword.\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean.\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = '\"' + match[0] + '\"^^http://www.w3.org/2001/XMLSchema#boolean';\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate.\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';\n        else\n          inconclusive = true;\n        break;\n\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        // The next token is punctuation\n        matchLength = 1;\n        type = firstChar;\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more.\n      if (inconclusive) {\n        // Try to find a prefix.\n        if ((this._prevTokenType === '@prefix' || this._prevTokenType === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(input + ' ')))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read.\n      if (this._prevTokenType === '^')\n        type = (type === 'IRI' || type === 'prefixed') ? 'type' : '';\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token.\n      callback(null, { line: line, type: type, value: value, prefix: prefix });\n      this._prevTokenType = type;\n\n      // Advance to next part to tokenize.\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  },\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters.\n  _unescape: function (item) {\n    try {\n      return item.replace(escapeSequence, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode <= 0xFFFF) return fromCharCode(charCode);\n          return fromCharCode(0xD800 + ((charCode -= 0x10000) / 0x400), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = escapeReplacements[escapedChar];\n          if (!replacement)\n            throw new Error();\n          return replacement;\n        }\n      });\n    }\n    catch (error) { return null; }\n  },\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError: function (issue) {\n    this._input = null;\n    return new Error('Syntax error: unexpected \"' + issue + '\" on line ' + this._line + '.');\n  },\n\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize: function (input, callback) {\n    var self = this;\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end.\n    if (typeof input === 'string') {\n      this._input = input;\n      immediately(function () { self._tokenizeToEnd(callback, true); });\n    }\n    // Otherwise, the input will be streamed.\n    else {\n      this._input = '';\n\n      // If no input was given, it will be streamed through `addChunk` and ended with `end`\n      if (!input || typeof input === 'function') {\n        this.addChunk = addChunk;\n        this.end = end;\n        if (!callback)\n          callback = input;\n      }\n      // Otherwise, the input itself must be a stream\n      else {\n        if (typeof input.setEncoding === 'function')\n          input.setEncoding('utf8');\n        input.on('data', addChunk);\n        input.on('end', end);\n      }\n    }\n\n    // Adds the data chunk to the buffer and parses as far as possible\n    function addChunk(data) {\n      if (self._input !== null) {\n        self._input += data;\n        self._tokenizeToEnd(callback, false);\n      }\n    }\n\n    // Parses until the end\n    function end() {\n      if (self._input !== null)\n        self._tokenizeToEnd(callback, true);\n    }\n  },\n};\n\n// ## Exports\n\n// Export the `N3Lexer` class as a whole.\nmodule.exports = N3Lexer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/n3/lib/N3Lexer.js\n// module id = 147\n// module chunks = 2","// **N3Parser** parses N3 documents.\nvar N3Lexer = require('./N3Lexer');\n\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_NIL    = RDF_PREFIX + 'nil',\n    RDF_FIRST  = RDF_PREFIX + 'first',\n    RDF_REST   = RDF_PREFIX + 'rest';\n\nvar absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n// The next ID for new blank nodes\nvar blankNodePrefix = 0, blankNodeCount = 0;\n\n// ## Constructor\nfunction N3Parser(options) {\n  if (!(this instanceof N3Parser))\n    return new N3Parser(options);\n  this._tripleStack = [];\n  this._graph = null;\n\n  // Set the document IRI.\n  options = options || {};\n  this._setBase(options.documentIRI);\n\n  // Set supported features depending on the format.\n  var format = (typeof options.format === 'string') && options.format.match(/\\w*$/)[0].toLowerCase(),\n      isTurtle = format === 'turtle', isTriG = format === 'trig',\n      isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n      isLineMode = isNTriples || isNQuads;\n  if (!(this._supportsNamedGraphs = !isTurtle))\n    this._readPredicateOrNamedGraph = this._readPredicate;\n  this._supportsQuads = !(isTurtle || isTriG || isNTriples);\n  // Disable relative IRIs in N-Triples or N-Quads mode\n  if (isLineMode) {\n    this._base = '';\n    this._resolveIRI = function (token) {\n      this._error('Disallowed relative IRI', token);\n      return this._callback = noop, this._subject = null;\n    };\n  }\n  this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                            '_:' + options.blankNodePrefix.replace(/^_:/, '');\n  this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode });\n}\n\n// ## Private class methods\n\n// ### `_resetBlankNodeIds` restarts blank node identification.\nN3Parser._resetBlankNodeIds = function () {\n  blankNodePrefix = blankNodeCount = 0;\n};\n\nN3Parser.prototype = {\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs.\n  _setBase: function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n    else if (baseIRI.indexOf('#') >= 0)\n      throw new Error('Invalid base IRI ' + baseIRI);\n    // Set base IRI and its components\n    if (this._base = baseIRI) {\n      this._basePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  },\n\n  // ### `_readInTopContext` reads a token when in the top context.\n  _readInTopContext: function (token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done.\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration.\n    case '@prefix':\n      this._sparqlStyle = false;\n      return this._readPrefix;\n    case 'PREFIX':\n      this._sparqlStyle = true;\n      return this._readPrefix;\n    // It could be a base declaration.\n    case '@base':\n      this._sparqlStyle = false;\n      return this._readBaseIRI;\n    case 'BASE':\n      this._sparqlStyle = true;\n      return this._readBaseIRI;\n    // It could be a graph.\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject.\n    default:\n      return this._readSubject(token);\n    }\n  },\n\n  // ### `_readSubject` reads a triple's subject.\n  _readSubject: function (token) {\n    this._predicate = null;\n    switch (token.type) {\n    case 'IRI':\n      if (this._base === null || absoluteIRI.test(token.value))\n        this._subject = token.value;\n      else\n        this._subject = this._resolveIRI(token);\n      break;\n    case 'prefixed':\n      var prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n      this._subject = prefix + token.value;\n      break;\n    case '[':\n      // Start a new triple with a new blank node as subject.\n      this._subject = '_:b' + blankNodeCount++;\n      this._tripleStack.push({ subject: this._subject, predicate: null, object: null, type: 'blank' });\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._tripleStack.push({ subject: RDF_NIL, predicate: null, object: null, type: 'list' });\n      this._subject = null;\n      return this._readListItem;\n    case '}':\n      return this._readPunctuation(token);\n    default:\n      return this._error('Expected subject but got ' + token.type, token);\n    }\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph.\n    return this._readPredicateOrNamedGraph;\n  },\n\n  // ### `_readPredicate` reads a triple's predicate.\n  _readPredicate: function (token) {\n    var type = token.type;\n    switch (type) {\n    case 'IRI':\n    case 'abbreviation':\n      if (this._base === null || absoluteIRI.test(token.value))\n        this._predicate = token.value;\n      else\n        this._predicate = this._resolveIRI(token);\n      break;\n    case 'prefixed':\n      if (token.prefix === '_')\n        return this._error('Disallowed blank node as predicate', token);\n      var prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n      this._predicate = prefix + token.value;\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon.\n      if (this._predicate === null)\n        return this._error('Unexpected ' + type, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Extra semicolons can be safely ignored\n      return this._readPredicate;\n    default:\n      return this._error('Expected predicate to follow \"' + this._subject + '\"', token);\n    }\n    // The next token must be an object.\n    return this._readObject;\n  },\n\n  // ### `_readObject` reads a triple's object.\n  _readObject: function (token) {\n    switch (token.type) {\n    case 'IRI':\n      if (this._base === null || absoluteIRI.test(token.value))\n        this._object = token.value;\n      else\n        this._object = this._resolveIRI(token);\n      break;\n    case 'prefixed':\n      var prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n      this._object = prefix + token.value;\n      break;\n    case 'literal':\n      this._object = token.value;\n      return this._readDataTypeOrLang;\n    case '[':\n      // Start a new triple with a new blank node as subject.\n      var blank = '_:b' + blankNodeCount++;\n      this._tripleStack.push({ subject: this._subject, predicate: this._predicate, object: blank, type: 'blank' });\n      this._subject = blank;\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._tripleStack.push({ subject: this._subject, predicate: this._predicate, object: RDF_NIL, type: 'list' });\n      this._subject = null;\n      return this._readListItem;\n    default:\n      return this._error('Expected object to follow \"' + this._predicate + '\"', token);\n    }\n    return this._getTripleEndReader();\n  },\n\n  // ### `_readPredicateOrNamedGraph` reads a triple's predicate, or a named graph.\n  _readPredicateOrNamedGraph: function (token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  },\n\n  // ### `_readGraph` reads a graph.\n  _readGraph: function (token) {\n    if (token.type !== '{')\n      return this._error('Expected graph but got ' + token.type, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  },\n\n  // ### `_readBlankNodeHead` reads the head of a blank node.\n  _readBlankNodeHead: function (token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  },\n\n  // ### `_readBlankNodeTail` reads the end of a blank node.\n  _readBlankNodeTail: function (token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node triple.\n    if (this._subject !== null)\n      this._callback(null, { subject:   this._subject,\n                             predicate: this._predicate,\n                             object:    this._object,\n                             graph:     this._graph || '' });\n\n    // Restore parent triple that contains the blank node.\n    var triple = this._tripleStack.pop();\n    this._subject = triple.subject;\n    // Was the blank node the object?\n    if (triple.object !== null) {\n      // Restore predicate and object as well, and continue by reading punctuation.\n      this._predicate = triple.predicate;\n      this._object = triple.object;\n      return this._getTripleEndReader();\n    }\n    // The blank node was the subject, so continue reading the predicate.\n    // If the blank node didn't contain any predicates, it could also be the label of a named graph.\n    return this._predicate !== null ? this._readPredicate : this._readPredicateOrNamedGraph;\n  },\n\n  // ### `_readDataTypeOrLang` reads an _optional_ data type or language.\n  _readDataTypeOrLang: function (token) {\n    switch (token.type) {\n    case 'type':\n      var value;\n      if (token.prefix === '') {\n        if (this._base === null || absoluteIRI.test(token.value))\n          value = token.value;\n        else\n          value = this._resolveIRI(token);\n      }\n      else {\n        var prefix = this._prefixes[token.prefix];\n        if (prefix === undefined)\n          return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n        value = prefix + token.value;\n      }\n      this._object += '^^' + value;\n      return this._getTripleEndReader();\n    case 'langcode':\n      this._object += '@' + token.value.toLowerCase();\n      return this._getTripleEndReader();\n    default:\n      return this._getTripleEndReader().call(this, token);\n    }\n  },\n\n  // ### `_readListItem` reads items from a list.\n  _readListItem: function (token) {\n    var item = null,                  // The actual list item.\n        itemHead = null,              // The head of the rdf:first predicate.\n        prevItemHead = this._subject, // The head of the previous rdf:first predicate.\n        stack = this._tripleStack,    // The stack of triples part of recursion (lists, blanks, etc.).\n        parentTriple = stack[stack.length - 1], // The triple containing the current list.\n        next = this._readListItem;    // The next function to execute.\n\n    switch (token.type) {\n    case 'IRI':\n      if (this._base === null || absoluteIRI.test(token.value))\n        item = token.value;\n      else\n        item = this._resolveIRI(token);\n      break;\n    case 'prefixed':\n      var prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n      item = prefix + token.value;\n      break;\n    case 'literal':\n      item = token.value;\n      next = this._readDataTypeOrLang;\n      break;\n    case '[':\n      // Stack the current list triple and start a new triple with a blank node as subject.\n      itemHead = '_:b' + blankNodeCount++;\n      item     = '_:b' + blankNodeCount++;\n      stack.push({ subject: itemHead, predicate: RDF_FIRST, object: item, type: 'blank' });\n      this._subject = item;\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list triple and start a new list\n      itemHead = '_:b' + blankNodeCount++;\n      stack.push({ subject: itemHead, predicate: RDF_FIRST, object: RDF_NIL, type: 'list' });\n      this._subject = null;\n      next = this._readListItem;\n      break;\n    case ')':\n      // Restore the parent triple.\n      stack.pop();\n      // If this list is contained within a parent list, return the membership triple here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._callback(null, { subject:   parentTriple.subject,\n                               predicate: parentTriple.predicate,\n                               object:    parentTriple.object,\n                               graph:     this._graph || '' });\n      // Restore the parent triple's subject.\n      this._subject = parentTriple.subject;\n      // Was this list in the parent triple's subject?\n      if (parentTriple.predicate === null) {\n        // The next token is the predicate.\n        next = this._readPredicate;\n        // Skip writing the list tail if this was an empty list.\n        if (parentTriple.subject === RDF_NIL)\n          return next;\n      }\n      // The list was in the parent triple's object.\n      else {\n        // Restore the parent triple's predicate and object as well.\n        this._predicate = parentTriple.predicate;\n        this._object = parentTriple.object;\n        next = this._getTripleEndReader();\n        // Skip writing the list tail if this was an empty list.\n        if (parentTriple.object === RDF_NIL)\n          return next;\n      }\n      // Close the list by making the item head nil.\n      itemHead = RDF_NIL;\n      break;\n    default:\n      return this._error('Expected list item instead of \"' + token.type + '\"', token);\n    }\n\n     // Create a new blank node if no item head was assigned yet.\n    if (itemHead === null)\n      this._subject = itemHead = '_:b' + blankNodeCount++;\n\n    // Is this the first element of the list?\n    if (prevItemHead === null) {\n      // This list is either the object or the subject.\n      if (parentTriple.object === RDF_NIL)\n        parentTriple.object = itemHead;\n      else\n        parentTriple.subject = itemHead;\n    }\n    else {\n      // The rest of the list is in the current head.\n      this._callback(null, { subject:   prevItemHead,\n                             predicate: RDF_REST,\n                             object:    itemHead,\n                             graph:     this._graph || '' });\n    }\n    // Add the item's value.\n    if (item !== null)\n      this._callback(null, { subject:   itemHead,\n                             predicate: RDF_FIRST,\n                             object:    item,\n                             graph:     this._graph || '' });\n    return next;\n  },\n\n  // ### `_readPunctuation` reads punctuation between triples or triple parts.\n  _readPunctuation: function (token) {\n    var next, subject = this._subject, graph = this._graph;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next.\n    case '.':\n      this._subject = null;\n      next = this._readInTopContext;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different.\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different.\n    case ',':\n      next = this._readObject;\n      break;\n    // An IRI means this is a quad (only allowed if not already inside a graph).\n    case 'IRI':\n      if (this._supportsQuads && this._graph === null) {\n        if (this._base === null || absoluteIRI.test(token.value))\n          graph = token.value;\n        else\n          graph = this._resolveIRI(token);\n        subject = this._subject;\n        next = this._readQuadPunctuation;\n        break;\n      }\n    // An prefixed name means this is a quad (only allowed if not already inside a graph).\n    case 'prefixed':\n      if (this._supportsQuads && this._graph === null) {\n        var prefix = this._prefixes[token.prefix];\n        if (prefix === undefined)\n          return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n        graph = prefix + token.value;\n        next = this._readQuadPunctuation;\n        break;\n      }\n    default:\n      return this._error('Expected punctuation to follow \"' + this._object + '\"', token);\n    }\n    // A triple has been completed now, so return it.\n    if (subject !== null)\n      this._callback(null, { subject:   subject,\n                             predicate: this._predicate,\n                             object:    this._object,\n                             graph:     graph || '' });\n    return next;\n  },\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation: function (token) {\n    var next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different.\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different.\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error('Expected punctuation to follow \"' + this._object + '\"', token);\n    }\n    // A triple has been completed now, so return it.\n    this._callback(null, { subject:   this._subject,\n                           predicate: this._predicate,\n                           object:    this._object,\n                           graph:     this._graph || '' });\n    return next;\n  },\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad.\n  _readQuadPunctuation: function (token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  },\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration.\n  _readPrefix: function (token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  },\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration.\n  _readPrefixIRI: function (token) {\n    if (token.type !== 'IRI')\n      return this._error('Expected IRI to follow prefix \"' + this._prefix + ':\"', token);\n    var prefixIRI;\n    if (this._base === null || absoluteIRI.test(token.value))\n      prefixIRI = token.value;\n    else\n      prefixIRI = this._resolveIRI(token);\n    this._prefixes[this._prefix] = prefixIRI;\n    this._prefixCallback(this._prefix, prefixIRI);\n    return this._readDeclarationPunctuation;\n  },\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration.\n  _readBaseIRI: function (token) {\n    if (token.type !== 'IRI')\n      return this._error('Expected IRI to follow base declaration', token);\n    try {\n      this._setBase(this._base === null ||\n                    absoluteIRI.test(token.value) ? token.value : this._resolveIRI(token));\n    }\n    catch (error) { this._error(error.message, token); }\n    return this._readDeclarationPunctuation;\n  },\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph.\n  _readNamedGraphLabel: function (token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  },\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph.\n  _readNamedGraphBlankLabel: function (token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = '_:b' + blankNodeCount++;\n    return this._readGraph;\n  },\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration.\n  _readDeclarationPunctuation: function (token) {\n    // SPARQL-style declarations don't have punctuation.\n    if (this._sparqlStyle)\n      return this._readInTopContext(token);\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  },\n\n  // ### `_getTripleEndReader` gets the next reader function at the end of a triple.\n  _getTripleEndReader: function () {\n    var stack = this._tripleStack;\n    if (stack.length === 0)\n      return this._readPunctuation;\n\n    switch (stack[stack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    }\n  },\n\n  // ### `_error` emits an error message through the callback.\n  _error: function (message, token) {\n    this._callback(new Error(message + ' at line ' + token.line + '.'));\n  },\n\n  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  _resolveIRI: function (token) {\n    var iri = token.value;\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return this._base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      return this._removeDotSegments(this._basePath + iri);\n    }\n  },\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  _removeDotSegments: function (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  },\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed triple through the callback.\n  parse: function (input, tripleCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix || '_:b' + blankNodePrefix++ + '_';\n\n    // If the input argument is not given, shift parameters\n    if (typeof input === 'function')\n      prefixCallback = tripleCallback, tripleCallback = input, input = null;\n\n    // Set the triple and prefix callbacks.\n    this._callback = tripleCallback || noop;\n    this._prefixCallback = prefixCallback || noop;\n\n    // Execute the read callback when a token arrives.\n    var self = this;\n    this._lexer.tokenize(input, function (error, token) {\n      if (error !== null)\n        self._callback(error), self._callback = noop;\n      else if (self._readCallback !== undefined)\n        self._readCallback = self._readCallback(token);\n    });\n\n    // If no input was given, it can be added with `addChunk` and ended with `end`\n    if (!input) {\n      this.addChunk = this._lexer.addChunk;\n      this.end = this._lexer.end;\n    }\n  },\n};\n\n// The empty function\nfunction noop() {}\n\n// ## Exports\n\n// Export the `N3Parser` class as a whole.\nmodule.exports = N3Parser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/n3/lib/N3Parser.js\n// module id = 148\n// module chunks = 2","// **N3Util** provides N3 utility functions\n\nvar Xsd = 'http://www.w3.org/2001/XMLSchema#';\nvar XsdString  = Xsd + 'string';\nvar XsdInteger = Xsd + 'integer';\nvar XsdDecimal = Xsd + 'decimal';\nvar XsdBoolean = Xsd + 'boolean';\nvar RdfLangString = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#langString';\n\nvar N3Util = {\n  // Tests whether the given entity (triple object) represents an IRI in the N3 library\n  isIRI: function (entity) {\n    if (!entity)\n      return entity;\n    var firstChar = entity[0];\n    return firstChar !== '\"' && firstChar !== '_';\n  },\n\n  // Tests whether the given entity (triple object) represents a literal in the N3 library\n  isLiteral: function (entity) {\n    return entity && entity[0] === '\"';\n  },\n\n  // Tests whether the given entity (triple object) represents a blank node in the N3 library\n  isBlank: function (entity) {\n    return entity && entity.substr(0, 2) === '_:';\n  },\n\n  // Gets the string value of a literal in the N3 library\n  getLiteralValue: function (literal) {\n    var match = /^\"([^]*)\"/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1];\n  },\n\n  // Gets the type of a literal in the N3 library\n  getLiteralType: function (literal) {\n    var match = /^\"[^]*\"(?:\\^\\^([^\"]+)|(@)[^@\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] || (match[2] ? RdfLangString : XsdString);\n  },\n\n  // Gets the language of a literal in the N3 library\n  getLiteralLanguage: function (literal) {\n    var match = /^\"[^]*\"(?:@([^@\"]+)|\\^\\^[^\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] ? match[1].toLowerCase() : '';\n  },\n\n  // Tests whether the given entity (triple object) represents a prefixed name\n  isPrefixedName: function (entity) {\n    return entity && /^[^:\\/\"']*:[^:\\/\"']+$/.test(entity);\n  },\n\n  // Expands the prefixed name to a full IRI (also when it occurs as a literal's type)\n  expandPrefixedName: function (prefixedName, prefixes) {\n    var match = /(?:^|\"\\^\\^)([^:\\/#\"'\\^_]*):[^\\/]*$/.exec(prefixedName), prefix, base, index;\n    if (match)\n      prefix = match[1], base = prefixes[prefix], index = match.index;\n    if (base === undefined)\n      return prefixedName;\n\n    // The match index is non-zero when expanding a literal's type.\n    return index === 0 ? base + prefixedName.substr(prefix.length + 1)\n                       : prefixedName.substr(0, index + 3) +\n                         base + prefixedName.substr(index + prefix.length + 4);\n  },\n\n  // Creates an IRI in N3.js representation\n  createIRI: function (iri) {\n    return iri && iri[0] === '\"' ? N3Util.getLiteralValue(iri) : iri;\n  },\n\n  // Creates a literal in N3.js representation\n  createLiteral: function (value, modifier) {\n    if (!modifier) {\n      switch (typeof value) {\n      case 'boolean':\n        modifier = XsdBoolean;\n        break;\n      case 'number':\n        if (isFinite(value)) {\n          modifier = value % 1 === 0 ? XsdInteger : XsdDecimal;\n          break;\n        }\n      default:\n        return '\"' + value + '\"';\n      }\n    }\n    return '\"' + value +\n           (/^[a-z]+(-[a-z0-9]+)*$/i.test(modifier) ? '\"@'  + modifier.toLowerCase()\n                                                    : '\"^^' + modifier);\n  },\n\n  // Creates a function that prepends the given IRI to a local name\n  prefix: function (iri) {\n    return N3Util.prefixes({ '': iri })('');\n  },\n\n  // Creates a function that allows registering and expanding prefixes\n  prefixes: function (defaultPrefixes) {\n    // Add all of the default prefixes\n    var prefixes = Object.create(null);\n    for (var prefix in defaultPrefixes)\n      processPrefix(prefix, defaultPrefixes[prefix]);\n\n    // Registers a new prefix (if an IRI was specified)\n    // or retrieves a function that expands an existing prefix (if no IRI was specified)\n    function processPrefix(prefix, iri) {\n      // Create a new prefix if an IRI is specified or the prefix doesn't exist\n      if (iri || !(prefix in prefixes)) {\n        var cache = Object.create(null);\n        iri = iri || '';\n        // Create a function that expands the prefix\n        prefixes[prefix] = function (localName) {\n          return cache[localName] || (cache[localName] = iri + localName);\n        };\n      }\n      return prefixes[prefix];\n    }\n    return processPrefix;\n  },\n};\n\n// Add the N3Util functions to the given object or its prototype\nfunction addN3Util(parent, toPrototype) {\n  for (var name in N3Util)\n    if (!toPrototype)\n      parent[name] = N3Util[name];\n    else\n      parent.prototype[name] = applyToThis(N3Util[name]);\n\n  return parent;\n}\n\n// Returns a function that applies `f` to the `this` object\nfunction applyToThis(f) {\n  return function (a) { return f(this, a); };\n}\n\n// Expose N3Util, attaching all functions to it\nmodule.exports = addN3Util(addN3Util);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/n3/lib/N3Util.js\n// module id = 149\n// module chunks = 2","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/readable-browser.js\n// module id = 150\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Buffer = require('safe-buffer').Buffer;\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Object.prototype.toString.call(obj) === '[object Uint8Array]' || Buffer.isBuffer(obj);\n}\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = _isUint8Array(chunk) && !state.objectMode;\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    processNextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    processNextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      processNextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) processNextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_writable.js\n// module id = 151\n// module chunks = 2","// **N3Writer** writes N3 documents.\n\n// Matches a literal as represented in memory by the N3 library\nvar N3LiteralMatcher = /^\"([^]*)\"(?:\\^\\^(.+)|@([\\-a-z]+))?$/i;\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapeReplacements = { '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n                           '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f' };\n\n// ## Constructor\nfunction N3Writer(outputStream, options) {\n  if (!(this instanceof N3Writer))\n    return new N3Writer(outputStream, options);\n\n  // Shift arguments if the first argument is not a stream\n  if (outputStream && typeof outputStream.write !== 'function')\n    options = outputStream, outputStream = null;\n  options = options || {};\n\n  // If no output stream given, send the output as string through the end callback\n  if (!outputStream) {\n    var output = '';\n    this._outputStream = {\n      write: function (chunk, encoding, done) { output += chunk; done && done(); },\n      end:   function (done) { done && done(null, output); },\n    };\n    this._endStream = true;\n  }\n  else {\n    this._outputStream = outputStream;\n    this._endStream = options.end === undefined ? true : !!options.end;\n  }\n\n  // Initialize writer, depending on the format\n  this._subject = null;\n  if (!(/triple|quad/i).test(options.format)) {\n    this._graph = '';\n    this._prefixIRIs = Object.create(null);\n    options.prefixes && this.addPrefixes(options.prefixes);\n  }\n  else {\n    this._writeTriple = this._writeTripleLine;\n  }\n}\n\nN3Writer.prototype = {\n  // ## Private methods\n\n  // ### `_write` writes the argument to the output stream\n  _write: function (string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  },\n\n    // ### `_writeTriple` writes the triple to the output stream\n  _writeTriple: function (subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (this._graph !== graph) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._graph ? '\\n}\\n' : '.\\n')) +\n                    (graph ? this._encodeIriOrBlankNode(graph) + ' {\\n' : ''));\n        this._subject = null;\n        // Don't treat identical blank nodes as repeating graphs\n        this._graph = graph[0] !== '[' ? graph : ']';\n      }\n      // Don't repeat the subject if it's the same\n      if (this._subject === subject) {\n        // Don't repeat the predicate if it's the same\n        if (this._predicate === predicate)\n          this._write(', ' + this._encodeObject(object), done);\n        // Same subject, different predicate\n        else\n          this._write(';\\n    ' +\n                      this._encodePredicate(this._predicate = predicate) + ' ' +\n                      this._encodeObject(object), done);\n      }\n      // Different subject; write the whole triple\n      else\n        this._write((this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject) + ' ' +\n                    this._encodePredicate(this._predicate = predicate) + ' ' +\n                    this._encodeObject(object), done);\n    }\n    catch (error) { done && done(error); }\n  },\n\n  // ### `_writeTripleLine` writes the triple or quad to the output stream as a single line\n  _writeTripleLine: function (subject, predicate, object, graph, done) {\n    // Don't use prefixes\n    delete this._prefixMatch;\n    // Write the triple\n    try {\n      this._write(this._encodeIriOrBlankNode(subject) + ' ' +\n                  this._encodeIriOrBlankNode(predicate) + ' ' +\n                  this._encodeObject(object) +\n                  (graph ? ' ' + this._encodeIriOrBlankNode(graph) + '.\\n' : '.\\n'), done);\n    }\n    catch (error) { done && done(error); }\n  },\n\n  // ### `_encodeIriOrBlankNode` represents an IRI or blank node\n  _encodeIriOrBlankNode: function (entity) {\n    // A blank node or list is represented as-is\n    var firstChar = entity[0];\n    if (firstChar === '[' || firstChar === '(' || firstChar === '_' && entity[1] === ':')\n      return entity;\n    // Escape special characters\n    if (escape.test(entity))\n      entity = entity.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    var prefixMatch = this._prefixRegex.exec(entity);\n    return !prefixMatch ? '<' + entity + '>' :\n           (!prefixMatch[1] ? entity : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  },\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral: function (value, type, language) {\n    // Escape special characters\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n    // Write the literal, possibly with type or language\n    if (language)\n      return '\"' + value + '\"@' + language;\n    else if (type)\n      return '\"' + value + '\"^^' + this._encodeIriOrBlankNode(type);\n    else\n      return '\"' + value + '\"';\n  },\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject: function (subject) {\n    if (subject[0] === '\"')\n      throw new Error('A literal as subject is not allowed: ' + subject);\n    // Don't treat identical blank nodes as repeating subjects\n    if (subject[0] === '[')\n      this._subject = ']';\n    return this._encodeIriOrBlankNode(subject);\n  },\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate: function (predicate) {\n    if (predicate[0] === '\"')\n      throw new Error('A literal as predicate is not allowed: ' + predicate);\n    return predicate === RDF_TYPE ? 'a' : this._encodeIriOrBlankNode(predicate);\n  },\n\n  // ### `_encodeObject` represents an object\n  _encodeObject: function (object) {\n    // Represent an IRI or blank node\n    if (object[0] !== '\"')\n      return this._encodeIriOrBlankNode(object);\n    // Represent a literal\n    var match = N3LiteralMatcher.exec(object);\n    if (!match) throw new Error('Invalid literal: ' + object);\n    return this._encodeLiteral(match[1], match[2], match[3]);\n  },\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite: function () {\n    throw new Error('Cannot write because the writer has been closed.');\n  },\n\n  // ### `addTriple` adds the triple to the output stream\n  addTriple: function (subject, predicate, object, graph, done) {\n    // The triple was given as a triple object, so shift parameters\n    if (object === undefined)\n      this._writeTriple(subject.subject, subject.predicate, subject.object,\n                        subject.graph || '', predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph !== 'string')\n      this._writeTriple(subject, predicate, object, '', graph);\n    // The `graph` parameter was provided\n    else\n      this._writeTriple(subject, predicate, object, graph, done);\n  },\n\n  // ### `addTriples` adds the triples to the output stream\n  addTriples: function (triples) {\n    for (var i = 0; i < triples.length; i++)\n      this.addTriple(triples[i]);\n  },\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix: function (prefix, iri, done) {\n    var prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  },\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes: function (prefixes, done) {\n    // Add all useful prefixes\n    var prefixIRIs = this._prefixIRIs, hasPrefixes = false;\n    for (var prefix in prefixes) {\n      // Verify whether the prefix can be used and does not exist yet\n      var iri = prefixes[prefix];\n      if (/[#\\/]$/.test(iri) && prefixIRIs[iri] !== (prefix += ':')) {\n        hasPrefixes = true;\n        prefixIRIs[iri] = prefix;\n        // Finish a possible pending triple\n        if (this._subject !== null) {\n          this._write(this._graph ? '\\n}\\n' : '.\\n');\n          this._subject = null, this._graph = '';\n        }\n        // Write prefix\n        this._write('@prefix ' + prefix + ' <' + iri + '>.\\n');\n      }\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      var IRIlist = '', prefixList = '';\n      for (var prefixIRI in prefixIRIs) {\n        IRIlist += IRIlist ? '|' + prefixIRI : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp('^(?:' + prefixList + ')[^\\/]*$|' +\n                                     '^(' + IRIlist + ')([a-zA-Z][\\\\-_a-zA-Z0-9]*)$');\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  },\n\n  // ### `blank` creates a blank node with the given content\n  blank: function (predicate, object) {\n    var children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(\"predicate\", \"object\")\n    else if (typeof predicate === 'string')\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return '[]';\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (child.object[0] !== '[')\n        return '[ ' + this._encodePredicate(child.predicate) + ' ' +\n                      this._encodeObject(child.object) + ' ]';\n    // Generate a multi-triple or nested blank node\n    default:\n      var contents = '[';\n      // Write all triples in order\n      for (var i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate === predicate)\n          contents += ', ' + this._encodeObject(child.object);\n        // Otherwise, write the predicate and the object\n        else {\n          contents += (i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate) + ' ' +\n                      this._encodeObject(child.object);\n          predicate = child.predicate;\n        }\n      }\n      return contents + '\\n]';\n    }\n  },\n\n  // ### `list` creates a list node with the given content\n  list: function (elements) {\n    var length = elements && elements.length || 0, contents = new Array(length);\n    for (var i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return '(' + contents.join(' ') + ')';\n  },\n\n  // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n  _prefixRegex: /$0^/,\n\n  // ### `end` signals the end of the output stream\n  end: function (done) {\n    // Finish a possible pending triple\n    if (this._subject !== null) {\n      this._write(this._graph ? '\\n}\\n' : '.\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    var singleDone = done && function (error, result) { singleDone = null, done(error, result); };\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  },\n};\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  var result = escapeReplacements[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\n// ## Exports\n\n// Export the `N3Writer` class as a whole.\nmodule.exports = N3Writer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/n3/lib/N3Writer.js\n// module id = 152\n// module chunks = 2","/*global angular:true, browser:true */\n\n/**\n * @license HTTP Auth Interceptor Module for AngularJS\n * (c) 2012 Witold Szczerba\n * License: MIT\n */\n\n(function () {\n  'use strict';\n\n  angular.module('http-auth-interceptor', ['http-auth-interceptor-buffer'])\n\n  .factory('authService', ['$rootScope','httpBuffer', function($rootScope, httpBuffer) {\n    return {\n      /**\n       * Call this function to indicate that authentication was successfull and trigger a\n       * retry of all deferred requests.\n       * @param data an optional argument to pass on to $broadcast which may be useful for\n       * example if you need to pass through details of the user that was logged in\n       * @param configUpdater an optional transformation function that can modify the\n       * requests that are retried after having logged in.  This can be used for example\n       * to add an authentication token.  It must return the request.\n       */\n      loginConfirmed: function(data, configUpdater) {\n        var updater = configUpdater || function(config) {return config;};\n        $rootScope.$broadcast('event:auth-loginConfirmed', data);\n        httpBuffer.retryAll(updater);\n      },\n\n      /**\n       * Call this function to indicate that authentication should not proceed.\n       * All deferred requests will be abandoned or rejected (if reason is provided).\n       * @param data an optional argument to pass on to $broadcast.\n       * @param reason if provided, the requests are rejected; abandoned otherwise.\n       */\n      loginCancelled: function(data, reason) {\n        httpBuffer.rejectAll(reason);\n        $rootScope.$broadcast('event:auth-loginCancelled', data);\n      }\n    };\n  }])\n\n  /**\n   * $http interceptor.\n   * On 401 response (without 'ignoreAuthModule' option) stores the request\n   * and broadcasts 'event:auth-loginRequired'.\n   * On 403 response (without 'ignoreAuthModule' option) discards the request\n   * and broadcasts 'event:auth-forbidden'.\n   */\n  .config(['$httpProvider', function($httpProvider) {\n    $httpProvider.interceptors.push(['$rootScope', '$q', 'httpBuffer', function($rootScope, $q, httpBuffer) {\n      return {\n        responseError: function(rejection) {\n          var config = rejection.config || {};\n          if (!config.ignoreAuthModule) {\n            switch (rejection.status) {\n              case 401:\n                var deferred = $q.defer();\n                var bufferLength = httpBuffer.append(config, deferred);\n                if (bufferLength === 1)\n                  $rootScope.$broadcast('event:auth-loginRequired', rejection);\n                return deferred.promise;\n              case 403:\n                $rootScope.$broadcast('event:auth-forbidden', rejection);\n                break;\n            }\n          }\n          // otherwise, default behaviour\n          return $q.reject(rejection);\n        }\n      };\n    }]);\n  }]);\n\n  /**\n   * Private module, a utility, required internally by 'http-auth-interceptor'.\n   */\n  angular.module('http-auth-interceptor-buffer', [])\n\n  .factory('httpBuffer', ['$injector', function($injector) {\n    /** Holds all the requests, so they can be re-requested in future. */\n    var buffer = [];\n\n    /** Service initialized later because of circular dependency problem. */\n    var $http;\n\n    function retryHttpRequest(config, deferred) {\n      function successCallback(response) {\n        deferred.resolve(response);\n      }\n      function errorCallback(response) {\n        deferred.reject(response);\n      }\n      $http = $http || $injector.get('$http');\n      $http(config).then(successCallback, errorCallback);\n    }\n\n    return {\n      /**\n       * Appends HTTP request configuration object with deferred response attached to buffer.\n       * @return {Number} The new length of the buffer.\n       */\n      append: function(config, deferred) {\n        return buffer.push({\n          config: config,\n          deferred: deferred\n        });\n      },\n\n      /**\n       * Abandon or reject (if reason provided) all the buffered requests.\n       */\n      rejectAll: function(reason) {\n        if (reason) {\n          for (var i = 0; i < buffer.length; ++i) {\n            buffer[i].deferred.reject(reason);\n          }\n        }\n        buffer = [];\n      },\n\n      /**\n       * Retries all the buffered requests clears the buffer.\n       */\n      retryAll: function(updater) {\n        for (var i = 0; i < buffer.length; ++i) {\n          var _cfg = updater(buffer[i].config);\n          if (_cfg !== false)\n            retryHttpRequest(_cfg, buffer[i].deferred);\n        }\n        buffer = [];\n      }\n    };\n  }]);\n})();\n\n/* commonjs package manager support (eg componentjs) */\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\" && module.exports === exports){\n  module.exports = 'http-auth-interceptor';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-http-auth/src/http-auth-interceptor.js\n// module id = 155\n// module chunks = 2","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/define-property.js\n// module id = 184\n// module chunks = 2","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_a-function.js\n// module id = 185\n// module chunks = 2","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ie8-dom-define.js\n// module id = 186\n// module chunks = 2","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_dom-create.js\n// module id = 187\n// module chunks = 2","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gpo.js\n// module id = 188\n// module chunks = 2","module.exports = require('./_hide');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_redefine.js\n// module id = 189\n// module chunks = 2","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-keys-internal.js\n// module id = 190\n// module chunks = 2","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-step.js\n// module id = 191\n// module chunks = 2","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-array.js\n// module id = 192\n// module chunks = 2","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn.js\n// module id = 193\n// module chunks = 2","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_classof.js\n// module id = 194\n// module chunks = 2","module.exports = { \"default\": require(\"core-js/library/fn/set\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/set.js\n// module id = 195\n// module chunks = 2","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_collection-strong.js\n// module id = 196\n// module chunks = 2","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_redefine-all.js\n// module id = 197\n// module chunks = 2","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_an-instance.js\n// module id = 198\n// module chunks = 2","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-call.js\n// module id = 199\n// module chunks = 2","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-array-iter.js\n// module id = 200\n// module chunks = 2","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar meta = require('./_meta');\nvar fails = require('./_fails');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar setToStringTag = require('./_set-to-string-tag');\nvar dP = require('./_object-dp').f;\nvar each = require('./_array-methods')(0);\nvar DESCRIPTORS = require('./_descriptors');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function (target, iterable) {\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base();\n      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {\n        anInstance(this, C, KEY);\n        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    IS_WEAK || dP(C.prototype, 'size', {\n      get: function () {\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_collection.js\n// module id = 201\n// module chunks = 2","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof');\nvar from = require('./_array-from-iterable');\nmodule.exports = function (NAME) {\n  return function toJSON() {\n    if (classof(this) != NAME) throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_collection-to-json.js\n// module id = 202\n// module chunks = 2","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { of: function of() {\n    var length = arguments.length;\n    var A = Array(length);\n    while (length--) A[length] = arguments[length];\n    return new this(A);\n  } });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-collection-of.js\n// module id = 203\n// module chunks = 2","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar ctx = require('./_ctx');\nvar forOf = require('./_for-of');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {\n    var mapFn = arguments[1];\n    var mapping, A, n, cb;\n    aFunction(this);\n    mapping = mapFn !== undefined;\n    if (mapping) aFunction(mapFn);\n    if (source == undefined) return new this();\n    A = [];\n    if (mapping) {\n      n = 0;\n      cb = ctx(mapFn, arguments[2], 2);\n      forOf(source, false, function (nextItem) {\n        A.push(cb(nextItem, n++));\n      });\n    } else {\n      forOf(source, false, A.push, A);\n    }\n    return new this(A);\n  } });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-collection-from.js\n// module id = 204\n// module chunks = 2","module.exports = { \"default\": require(\"core-js/library/fn/map\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/map.js\n// module id = 205\n// module chunks = 2","'use strict';\nimport * as angular from 'angular';\nimport { Store } from 'rdfstore';\nimport { EMap, StringSet } from '../components/collection-utils';\nexport class SparqlServiceDefinition {\n    constructor(type, id) {\n        this.type = type;\n        this.id = id;\n    }\n}\nexport class FibraSparqlService {\n    /* @ngInject */\n    constructor(sparqlService, $q) {\n        this.sparqlService = sparqlService;\n        this.$q = $q;\n        this.services = new EMap((id) => {\n            if (id.indexOf('local:') === 0) {\n                let r = this.$q.defer();\n                new Store({ name: id, persistent: true }, (err, rdfStore) => {\n                    if (err)\n                        r.reject(err);\n                    else\n                        r.resolve(new RDFStoreInternalSparqlService(rdfStore, this.$q));\n                });\n                return r.promise;\n            }\n            else\n                return this.$q.resolve(new RemoteInternalSparqlService(this.sparqlService, id));\n        });\n    }\n    query(id, query, params) {\n        return this.services.goc(id).then(s => s.query(query, params));\n    }\n    update(id, query, params) {\n        return this.services.goc(id).then(s => s.update(query, params));\n    }\n    get(id, graphIRI, params) {\n        return this.services.goc(id).then(s => s.get(graphIRI, params));\n    }\n    put(id, data, graphIRI, params) {\n        return this.services.goc(id).then(s => s.put(data, graphIRI, params));\n    }\n    post(id, data, graphIRI, params) {\n        return this.services.goc(id).then(s => s.post(data, graphIRI, params));\n    }\n}\nclass RemoteInternalSparqlService {\n    constructor(s, endpoint) {\n        this.s = s;\n        this.endpoint = endpoint;\n    }\n    query(query, params) {\n        return this.s.query(this.endpoint, query, params).then(s => s.data);\n    }\n    update(query, params) {\n        return this.s.update(this.endpoint, query, params).then(s => s.data);\n    }\n    get(graphIRI, params) {\n        return this.s.get(this.endpoint, graphIRI, params).then(s => s.data);\n    }\n    post(data, graphIRI, params) {\n        return this.s.post(this.endpoint, data, graphIRI, params).then(s => s.data);\n    }\n    put(data, graphIRI, params) {\n        return this.s.put(this.endpoint, data, graphIRI, params).then(s => s.data);\n    }\n}\nexport class RDFStoreInternalSparqlService {\n    constructor(s, $q) {\n        this.s = s;\n        this.$q = $q;\n    }\n    static convertBinding(binding) {\n        switch (binding.token) {\n            case 'uri': return {\n                type: 'uri',\n                value: binding.value\n            };\n            case 'blank': return {\n                type: 'bnode',\n                value: binding.value\n            };\n            case 'literal': return {\n                type: 'literal',\n                value: binding.value,\n                'xml:lang': binding.lang,\n                datatype: binding.type\n            };\n            default: throw 'Unknown binding type ' + binding.token;\n        }\n    }\n    query(query, params) {\n        let deferred = this.$q.defer();\n        try {\n            this.s.execute(query, (err, results) => {\n                if (err) {\n                    console.log('Error executing', this.s, query, err);\n                    deferred.reject(err);\n                }\n                else {\n                    let ret = {\n                        head: {\n                            vars: []\n                        },\n                        results: {\n                            bindings: []\n                        }\n                    };\n                    let vars = new StringSet();\n                    ret.results.bindings = results.map(binding => {\n                        let tb = {};\n                        for (let v in binding) {\n                            vars.add(v);\n                            if (binding[v] !== null)\n                                tb[v] = RDFStoreInternalSparqlService.convertBinding(binding[v]);\n                        }\n                        return tb;\n                    });\n                    ret.head.vars = vars.values();\n                    deferred.resolve(ret);\n                }\n            });\n        }\n        catch (err) {\n            console.log('Exception executing', this.s, query, err);\n            throw err;\n        }\n        return deferred.promise;\n    }\n    update(query, params) {\n        let deferred = this.$q.defer();\n        this.s.execute(query, (err, results) => {\n            if (err)\n                deferred.reject(err);\n            else\n                deferred.resolve(results);\n        });\n        return deferred.promise;\n    }\n    get(graphIRI, params) {\n        let deferred = this.$q.defer();\n        this.s.graph(graphIRI, (err, graph) => {\n            if (err)\n                deferred.reject(err);\n            else\n                deferred.resolve(graph.toNT());\n        });\n        return deferred.promise;\n    }\n    post(data, graphIRI, params) {\n        let deferred = this.$q.defer();\n        let handler = (err, graph) => {\n            if (err)\n                deferred.reject(err);\n            else\n                deferred.resolve();\n        };\n        if (graphIRI)\n            this.s.load('text/turtle', data, graphIRI, handler);\n        else\n            this.s.load('text/turtle', data, handler);\n        return deferred.promise;\n    }\n    put(data, graphIRI, params) {\n        let deferred = this.$q.defer();\n        let handler = (err) => {\n            if (err)\n                deferred.reject(err);\n            let handler2 = (err2, graph) => {\n                if (err2)\n                    deferred.reject(err2);\n                else\n                    deferred.resolve();\n            };\n            if (graphIRI)\n                this.s.load('text/turtle', data, graphIRI, handler2);\n            else\n                this.s.load('text/turtle', data, handler2);\n        };\n        if (graphIRI)\n            this.s.clear(graphIRI, handler);\n        else\n            this.s.clear(handler);\n        return deferred.promise;\n    }\n}\nangular.module('fibra.services.fibra-sparql-service', [])\n    .config(($provide) => {\n    $provide.service('fibraSparqlService', FibraSparqlService);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/services/fibra-sparql-service.ts","// imports\nvar QueryEngine = require(\"./query_engine\").QueryEngine;\nvar InMemoryQuadBackend = require(\"./quad_backend\").QuadBackend;\nvar PersistentBackend = require(\"./persistent_quad_backend\").PersistentQuadBackend;\nvar InMemoryLexicon = require(\"./lexicon\").Lexicon;\nvar PersistentLexicon = require(\"./persistent_lexicon\").PersistentLexicon;\nvar RDFModel = require(\"./rdf_model\");\nvar _ = require(\"./utils\");\n\n\n/**\n * Creates a new store.<br/>\n * <br/>\n * It accepts two optional arguments, a map of configuration\n * options for the store and a callback function.<br/>\n *\n * @constructor\n * @param {Function} [callback] Callback that will be invoked when the store has been created\n * @param {Object} [params]\n * <ul>\n *  <li> persistent:  should the store use persistence? </li>\n *  <li> treeOrder: in versions of the store backed by the native indexing system, the order of the BTree indices</li>\n *  <li> name: when using persistence, the name for this store. In the MongoDB backed version, name of the DB used by the store. By default <code>'rdfstore_js'</code> is used</li>\n *  <li> overwrite: clears the persistent storage </li>\n *  <li> maxCacheSize: if using persistence, maximum size of the index cache </li>\n * </ul>\n */\nStore = function(arg1, arg2) {\n    var callback = null;\n    var params   = null;\n\n    if(arguments.length == 0) {\n\t\tparams ={};\n    } else if(arguments.length == 1) {\n\t\tparams   = {};\n\t\tcallback = arg1;\n    } else if(arguments.length > 1) {\n\t\tparams   = arg1;\n\t\tcallback = arg2;\n    } else {\n\tthrow(\"An optional argument map and a callback must be provided\");\n    }\n\n    if(params['treeOrder'] == null) {\n\t\tparams['treeOrder'] = 15;\n    }\n\n    var Lexicon = InMemoryLexicon;\n    var QuadBackend = InMemoryQuadBackend;\n    if(params['persistent'] === true){\n\t\tLexicon = PersistentLexicon;\n\t\tQuadBackend = PersistentBackend;\n    }\n    this.functionMap = {};\n\n    var that = this;\n    this.customFns = {};\n    new Lexicon(function(lexicon){\n\tvar createQuadBackend = function() {\n\t    new QuadBackend(params, function (backend) {\n\t\tvar createEngine = function() {\n\t\t    params.backend = backend;\n\t\t    params.lexicon = lexicon;\n\t\t    that.engine = new QueryEngine(params);\n\n\t\t    callback(null, that);\n\t\t};\n\t\tif(params['overwrite']) {\n\t\t    backend.clear(createEngine)\n\t\t} else {\n\t\t    createEngine();\n\t\t}\n\t    });\n\t};\n\tif(params['overwrite'] === true) {\n\t    // delete lexicon values\n\t    lexicon.clear(createQuadBackend);\n\t} else {\n\t    createQuadBackend();\n\t}\n\n    },params['name']);\n};\n\n\n/**\n * An instance of RDF JS Interface <code>RDFEnvironment</code>\n * associated to this graph instance.\n */\nStore.prototype.rdf = RDFModel.rdf;\nStore.prototype.rdf.api = RDFModel;\n\n/**\n * Registers a new function with an associated name that can\n * be invoked as 'custom:fn_name(arg1,arg2,...,argn)' inside\n * a SPARQL query.\n * <br/>\n * The registered function will receive two arguments, an\n * instance of the store's query filters engine and a list\n * with the arguments received by the function in the SPARQL query.\n * <br/>\n * The function must return a single token value that can\n * consist in a literal value or an URI.\n * <br/>\n * The following is an example literal value:\n * {token: 'literal', type:\"http://www.w3.org/2001/XMLSchema#integer\", value:'3'}\n * This is an example URI value:\n * {token: 'uri', value:'http://test.com/my_uri'}\n * <br/>\n * The query filters engine can be used to perform common operations\n * on the input values.\n * An error can be returne dusing the 'ebvError' function of the engine.\n * True and false values can be built directly using the 'ebvTrue' and\n * 'ebvFalse' functions.\n *\n * A complete reference of the available functions can be found in the\n * documentation or source code of the QueryFilters module.\n *\n * @arguments:\n * @param {String} [name]: name of the custom function, it will be accesible as custom:name in the query\n * @param {Function} [function]: lambda function with the code for the query custom function.\n */\nStore.prototype.registerCustomFunction = function(name, fn) {\n    this.customFns[name] = fn;\n    this.engine.setCustomFunctions(this.customFns);\n};\n\n/**\n * Executes a query in the store.<br/>\n * <br/>\n * There are two possible ways of invoking this function,\n * providing a pair of arrays of namespaces that will be\n * used to compute the union of the default and named\n * dataset, or without them.\n * <br/>\n * <br/>\n * Both invocations receive as an optional last parameter\n * a callback function that will receive the return status\n * of the query and the results.\n * <br/>\n * <br/>\n * Results can have different formats:\n * <ul>\n *  <li> SELECT queries: array of binding maps </li>\n *  <li> CONSTRUCT queries: RDF JS Interface Graph object </li>\n *  <li> ASK queries: JS boolean value </li>\n *  <li> LOAD/INSERT... queries: Number of triples modified/inserted </li>\n * </ul>\n *\n * @arguments:\n * @param {String} query\n * @param {String} [defaultURIs] default namespaces\n * @param {String} [namespacesURIs] named namespaces\n * @param {Function} [callback]\n */\nStore.prototype.execute = function() {\n    if(arguments.length === 3) {\n\tthis.executeWithEnvironment(arguments[0],\n\t    arguments[1],\n\t    arguments[2]);\n    } else if(arguments.length === 4) {\n\tthis.executeWithEnvironment(arguments[0],\n\t    arguments[1],\n\t    arguments[2],\n\t    arguments[3]);\n    } else {\n\n\tvar queryString;\n\tvar callback;\n\n\tif(arguments.length === 1) {\n\t    queryString = arguments[0];\n\t    var callback = function(){};\n\t} else if(arguments.length === 2) {\n\t    queryString = arguments[0];\n\t    callback = arguments [1];\n\t}\n\tthis.engine.execute(queryString, callback);\n    }\n};\n\n/**\n * A variation of the execute function that expects\n * arguments containing values for the default and named\n * graphs that will be used in the query.\n *\n *\n * @arguments:\n * @param {String} query\n * @param {String} URIs default namespaces\n * @param {String} URIs named namespaces\n * @param {Function} [callback]\n */\nStore.prototype.executeWithEnvironment = function() {\n    var queryString, defaultGraphs, namedGraphs;\n\n    if(arguments.length === 3) {\n\tqueryString   = arguments[0];\n\t// JSDoc fails if this is pushed outside\n\tvar callback  = function(){};\n\tdefaultGraphs = arguments[1];\n\tnamedGraphs   = arguments[2];\n    } else if(arguments.length === 4) {\n\tqueryString   = arguments[0];\n\tvar callback      = arguments [3];\n\tdefaultGraphs = arguments[1];\n\tnamedGraphs   = arguments[2];\n    }\n\n    defaultGraphs = _.map(defaultGraphs, function(graph){\n\treturn {'token':'uri','value':graph};\n    });\n    namedGraphs = _.map(namedGraphs, function(graph){\n\treturn {'token':'uri','value':graph};\n    });\n\n    this.engine.execute(queryString, callback, defaultGraphs, namedGraphs);\n};\n\n/**\n * Retrieves all the quads belonging to a certain graph\n * in the store as a RDF JS Interface Graph object.<br/>\n * <br/>\n * The function accepts as mandatory parameter a callback\n * function that will receive the a success notification and the returned graph.<br/>\n * <br/>\n * Optionally, the URI of the graph can also be passed as\n * the first argument. If no graph is specified, the\n * default graph will be returned.<br/>\n *\n * @arguments\n * @param {String} [graphURI] If this parameter is missing, the default graph will be returned\n * @param {Functon} callback\n */\nStore.prototype.graph = function() {\n    var graphUri = null;\n    var callback = null;\n    if(arguments.length === 1) {\n\tcallback = arguments[0] || function(){};\n\tgraphUri = this.engine.lexicon.defaultGraphUri;\n    } else if(arguments.length === 2) {\n\tcallback = arguments[1] || function(){};\n\tgraphUri = arguments[0];\n    } else {\n\tthrow(\"An optional graph URI and a callback function must be provided\");\n    }\n\n    if(this.rdf.resolve(graphUri) != null) {\n\tgraphUri = this.rdf.resolve(graphUri);\n    }\n\n    this.engine.execute(\"CONSTRUCT { ?s ?p ?o } WHERE { GRAPH <\" + graphUri + \"> { ?s ?p ?o } }\", callback);\n};\n\n/**\n * Retrieves all the quads belonging to a certain node\n * in the store as a RDF JS Interface Graph object containing\n * the collection of triples whose subject is the provided\n * node URI.<br/>\n * <br/>\n * The function accepts as mandatory parameters the node URI and\n * a callback unction that will receive a success notification and the returned node.<br/>\n * <br/>\n * Optionally, the URI of the graph where the node is contained\n * can also be passed as the first argument. <br/>\n * <br/>\n * If no graph is specified, the node will be looked into the\n * default graph.<br/>\n *\n * @arguments\n * @param {String} nodeURI URI of the node to look for\n * @param {String} [graphURI] If this parameter is missing, the node will be looked into the default graph\n * @param {Functon} callback\n */\nStore.prototype.node = function() {\n    var graphUri = null;\n    var callback = null;\n    var nodeUri  = null;\n    if(arguments.length === 2) {\n\tnodeUri = arguments[0];\n\tcallback = arguments[1] || function(){};\n\tgraphUri = this.engine.lexicon.defaultGraphUri;\n    } else if(arguments.length === 3) {\n\tnodeUri = arguments[0];\n\tgraphUri = arguments[1];\n\tcallback = arguments[2] || function(){};\n    } else {\n\tthrow(\"An optional graph URI, node URI and a callback function must be provided\");\n    }\n\n    if(this.rdf.resolve(graphUri) != null) {\n\tgraphUri = this.rdf.resolve(graphUri);\n    }\n\n    if(this.rdf.resolve(nodeUri) != null) {\n\tnodeUri = this.rdf.resolve(nodeUri);\n    }\n\n    this.engine.execute(\"CONSTRUCT { <\" + nodeUri + \"> ?p ?o } WHERE { GRAPH <\" + graphUri + \"> { <\" + nodeUri + \"> ?p ?o } }\", callback);\n};\n\n/**\n * Associates an event listener function to a node URI. Every time the collection\n * of triples whose subject is the specified node URI changes, because an\n * insertion or deletion, the provided callback function will be invoked\n * receiving as a parameter a RDF JS Interface Graph object with the new\n * collection of triples.<br/>\n * <br/>\n * The function accepts two mandatory arguments, the URI of the node to observe\n * and the function that will receive the event notifications. An optional\n * third parameter, consisting of a callback function, can be passed and will be invoked\n * once the store had correctly configured the event listener.<br/>\n *<br/>\n * LOAD queries, batch loading data into the store, do not\n * trigger events by default. If you wish to be notified\n * by changes triggered by this kind of queries, invoke\n * the *setBatchLoadEvents* function with a true argument.<br/>\n *<br/>\n * The event listener function can be removed using the stopObservingNode function.\n *\n * @arguments\n * @param {String} nodeURI URI of the node to observe\n * @param {Function} eventListener Function that will be notified with the events\n * @param {Function} [callback] Function that will be invoked, once the event listener had been correctly set up.\n */\nStore.prototype.startObservingNode = function() {\n    var uri, graphUri, callback;\n\n    if(arguments.length === 2) {\n\turi = arguments[0];\n\tcallback = arguments[1];\n\tthis.engine.callbacksBackend.observeNode(uri, callback, function(){});\n    } else if(arguments.length === 3) {\n\turi = arguments[0];\n\tgraphUri = arguments[1];\n\tcallback = arguments[2];\n\tthis.engine.callbacksBackend.observeNode(uri, graphUri, callback, function(){});\n    }\n};\n\n/**\n * Removes a callback function associated to a node.<br/>\n * The event listener function object must be passed as an argument.<br/>\n *\n * @arguments\n * @param {Function} eventListener The event listener function to remove, the same passed as an argument to startObservingNode\n */\nStore.prototype.stopObservingNode = function(callback) {\n    this.engine.callbacksBackend.stopObservingNode(callback);\n};\n\n/**\n * Associates an event listener function to a SPARQL SELECT or\n * CONSTRUCT query.<br/>\n * Every time an update (insert, delete...) query modified the\n * triples in the store in a way that modifies the output of the\n * query, the event listener will be invoked with an updated\n * result.<br/>\n *<br/>\n * LOAD queries, batch loading data into the store, do not\n * trigger events by default. If you wish to be notified\n * by changes triggered by this kind of queries, invoke\n * the <code>setBatchLoadEvents</code> function with a true argument.<br/>\n *<br/>\n * The event listener function can be removed invoking the\n * <code>stopObservingQuery</code> function.\n *\n * @arguments\n * @param {String} query SELECT or CONSTRUCT SPARQL query\n * @param {Function} eventListener the function that will receive the notifications\n * @param {Function} [callback] optional function that will be invoked when the stored had set up the event listener function.\n */\nStore.prototype.startObservingQuery = function() {\n    var query = arguments[0];\n    var callback = arguments[1];\n    var endCallback = arguments[2];\n    if(endCallback!=null) {\n\tthis.engine.callbacksBackend.observeQuery(query, callback, endCallback);\n    } else {\n\tthis.engine.callbacksBackend.observeQuery(query, callback, function(){});\n    }\n};\n\n/**\n * Removes a callback function associated to a SPARQL query.<br/>\n * The event listener function object must be passed as an argument.\n *\n * @arguments\n * @param {Function} eventListener The event listener function to remove, the same passed as an argument to startObservingQuery\n */\nStore.prototype.stopObservingQuery = function(query) {\n    this.engine.callbacksBackend.stopObservingQuery(query);\n};\n\n/**\n * Associates an event listener to a pattern expressed as the\n * subject, predicate, object and graph string parameters passed\n * to the function. To match any value in that position, a <code>null</code>\n * value can be passed as an argument. e.g. <code>subscribe(null, null, null, g, cb)</code>,\n * will be notified with any change in the g graph.<br/>\n * The graph component of the pattern does not support a <code>null</code> value.<br/>\n *<br/>\n * Results will be notified as an Array of RDF JS Interface\n * <code>Triple</code> objects.<br/>\n *<br/>\n * LOAD queries, batch loading data into the store, do not\n * trigger events by default. If you wish to be notified\n * by changes triggered by this kind of queries, invoke\n * the <code>setBatchLoadEvents</code> function with a true argument.\n *\n * @arguments\n * @param {String} s subject or null for any subject\n * @param {String} p predicate or null for any predicate\n * @param {String} o object or null for any object\n * @param {String} g graph or null for any graph\n * @param {Function} event listener function that will be notified when a change occurs\n */\nStore.prototype.subscribe = function(s, p, o, g, callback) {\n    var that = this;\n    var adapterCb = function(event,triples){\n\tvar acum = [];\n\tvar queryEnv = {blanks:{}, outCache:{}};\n\tvar bindings = [];\n\n\t_.each(triples, function(triple){\n\t    var s = RDFModel.buildRDFResource(triple.subject,bindings,that.engine,queryEnv);\n\t    var p = RDFModel.buildRDFResource(triple.predicate,bindings,that.engine,queryEnv);\n\t    var o = RDFModel.buildRDFResource(triple.object,bindings,that.engine,queryEnv);\n\t    if(s!=null && p!=null && o!=null) {\n\t\ttriple = new RDFModel.Triple(s,p,o);\n\t\tacum.push(triple);\n\t    }\n\t});\n\n\tcallback(event,acum);\n    };\n\n    this.functionMap[callback] = adapterCb;\n    this.engine.callbacksBackend.subscribe(s,p,o,g,adapterCb,function(){});\n};\n\n/**\n * Removes an event listener associated to a certain pattern.\n * The function passed as an argument to <code>subscribe</code> must be\n * passed as an argument.\n *\n * @arguments\n * @param {Function} callback The event listener to be removed\n */\nStore.prototype.unsubscribe = function(callback) {\n    var adapterCb = this.functionMap[callback];\n    this.engine.callbacksBackend.unsubscribe(adapterCb);\n    delete this.functionMap[callback];\n};\n\n/**\n * Register a combination of prefix and URI fragment in the default instance\n * of the RDF JS Interface API <code>RDFEnvironment</code> object associated\n * to the store and available through the <code>storeInstance.rdf</code> property.\n *\n * @arguments\n * @param {String} prefix The prefix to be associated\n * @param {String} URIFragment URI fragment the provided prefix will be resolved\n */\nStore.prototype.setPrefix = function(prefix, uri) {\n    this.rdf.setPrefix(prefix, uri);\n};\n\n/**\n * Defines the URI that will be used by default by the RDF JS Interface\n * API <code>RDFEnvironment</code> object associated to the store and available\n * through the <code>storeInstance.rdf</code> property.\n *\n * @arguments\n * @param {String} URIFragment The URI fragment will be used by default\n */\nStore.prototype.setDefaultPrefix = function(uri) {\n    this.rdf.setDefaultPrefix(uri);\n};\n\n/**\n * Inserts a RDF JS Interface API <code>Graph</code> object into the store.\n * The function receives a mandatory <code>Graph</code> object whose triples\n * will be inserted. Optionally, a URI string for a graph and a\n * callback function can be passed as arguments.<br/>\n * <br/>\n * If no graph URI is specified, triples will be inserted into the\n * default graph.<br/>\n * <br/>\n * If the callback function is specified, it will be invoked when all the\n * triples had been inserted into the store.<br/>\n *\n * @arguments\n * @param {RDFModel.Graph} triples a RDF JS Interface <code>Graph</code> object\n * @param {String} [graphURI] URI of the graph where the triples will be inserted. If it is missing, triples will be inserted in the default graph\n * @param {String} [callback] A callback function that will be invoked with a success notification and the number of triples inserted\n */\nStore.prototype.insert = function() {\n    var graph;\n    var triples;\n    var callback;\n    if(arguments.length === 1) {\n\ttriples = arguments[0];\n\tcallback= function(){};\n    } else if(arguments.length === 2) {\n\ttriples = arguments[0];\n\tcallback= arguments[1] || function(){};\n    } else if(arguments.length === 3) {\n\ttriples = arguments[0];\n\tgraph = this.rdf.createNamedNode(arguments[1]);\n\tcallback= arguments[2] || function(){};\n    } else {\n\tthrow(\"The triples to insert, an optional graph and callback must be provided\");\n    }\n\n    var query = \"\";\n    var that = this;\n    triples.forEach(function(triple) {\n\tquery = query + that._nodeToQuery(triple.subject) + that._nodeToQuery(triple.predicate) + that._nodeToQuery(triple.object) + \".\";\n    });\n\n    if(graph != null) {\n\tquery = \"INSERT DATA { GRAPH \" + this._nodeToQuery(graph) +\" { \"+ query + \" } }\";\n    } else {\n\tquery = \"INSERT DATA { \"+ query + \" }\";\n    }\n\n    this.engine.execute(query, callback);\n};\n\nStore.prototype._nodeToQuery = function(term) {\n    if(term.interfaceName === 'NamedNode') {\n\tvar resolvedUri = this.rdf.resolve(term.valueOf());\n\tif(resolvedUri != null) {\n\t    return \"<\" + resolvedUri + \">\";\n\t} else {\n\t    return \"<\" + term.valueOf() + \">\";\n\t}\n    } else {\n\treturn term.toString();\n    }\n};\n\n/**\n * Removes the triples in a RDF JS Interface API <code>Graph</code> object from the store.\n * The function receives a mandatory <code>Graph</code> object whose triples\n * will be removed. Optionally, a URI string for a graph and a\n * callback function can be passed as arguments.<br/>\n * <br/>\n * If no graph URI is specified, triples will be removed from the\n * default graph.<br/>\n * <br/>\n * If the callback function is specified, it will be invoked when all the\n * triples had been removed from the store.\n *\n * @arguments\n * @param {RDFModel.Graph} triples a RDF JS Interface <code>Graph</code> object\n * @param {String} [graphURI] URI of the graph where the triples will be removed from. If it is missing, triples will be removed from the default graph\n * @param {String} [callback] A callback function that will be invoked with a success notification\n */\nStore.prototype.delete = function() {\n\n    var graph;\n    var triples;\n    var callback;\n    if(arguments.length === 1) {\n\ttriples = arguments[0];\n\tcallback= function(){};\n    } else if(arguments.length === 2) {\n\ttriples = arguments[0];\n\tcallback= arguments[1] || function(){};\n    } else if(arguments.length === 3) {\n\ttriples = arguments[0];\n\tgraph = this.rdf.createNamedNode(arguments[1]);\n\tcallback= arguments[2] || function(){};\n    } else {\n\tthrow(\"The triples to delete, an optional graph and callback must be provided\");\n    }\n\n    var query = \"\";\n    var that = this;\n    triples.forEach(function(triple) {\n\tquery = query + that._nodeToQuery(triple.subject) + that._nodeToQuery(triple.predicate) + that._nodeToQuery(triple.object) + \".\";\n    });\n\n    if(graph != null) {\n\tquery = \"DELETE DATA { GRAPH \" + this._nodeToQuery(graph) +\" { \"+ query + \" } }\";\n    } else {\n\tquery = \"DELETE DATA { \"+ query + \" }\";\n    }\n\n    this.engine.execute(query, callback);\n};\n\n/**\n * Removes all the triples stored in a graph.\n *\n * The URI of the graph and a callback function can be\n * optinally passed as parameters.<br/>\n * <br/>\n * If no graph URI is specified, all triples in the\n * default graph will be removed.\n *\n * @arguments\n * @param {String} [graph] the URI of the graph the triples must be removed from\n * @param {Function} [callback] a function that will be invoked with a success notification\n */\nStore.prototype.clear = function() {\n    var graph;\n    var callback;\n\n    if(arguments.length === 0) {\n\tgraph = this.rdf.createNamedNode(this.engine.lexicon.defaultGraphUri);\n\tvar callback= function(){};\n    } else if(arguments.length === 1) {\n\tgraph = this.rdf.createNamedNode(this.engine.lexicon.defaultGraphUri);\n\tcallback= arguments[0] || function(){};\n    } else if(arguments.length === 2) {\n\tgraph = this.rdf.createNamedNode(arguments[0]);\n\tcallback= arguments[1] || function(){};\n    } else {\n\tthrow(\"The optional graph and a callback must be provided\");\n    }\n\n    var query = \"CLEAR GRAPH \" + this._nodeToQuery(graph);\n    this.engine.execute(query, callback);\n};\n\n/**\n * Boolean value determining if loading RDF must produce\n * triple add events and fire callbacks.<br/>\n * Default value is false.\n *\n * @arguments\n * @param {boolean} mustFireEvents true/false value.\n */\nStore.prototype.setBatchLoadEvents = function(mustFireEvents){\n    this.engine.eventsOnBatchLoad = mustFireEvents;\n};\n\n/**\n * Registers a namespace prefix that will be automatically declared\n * in all the queries.<br/>\n * <br/>\n * The prefix will also be inserte in the default <code>RDFEnvironment</code> object\n * associated to the <code>rdf</code> property of the store instance.\n *\n * @arguments\n * @param {String} ns the name space to be regsitered\n * @param {String} prefix the URI fragment associated to the name space\n */\nStore.prototype.registerDefaultNamespace = function(ns, prefix) {\n    this.rdf.prefixes.set(ns,prefix);\n    this.engine.registerDefaultNamespace(ns,prefix);\n};\n\n/**\n * Registers the default namespaces declared in the RDF JS Interfaces\n * specification in the default Profile.\n */\nStore.prototype.registerDefaultProfileNamespaces = function() {\n    var defaultNsMap = this.rdf.prefixes.values();\n    for (var p in defaultNsMap) {\n\tthis.registerDefaultNamespace(p,defaultNsMap[p]);\n    }\n};\n\n/**\n * Load triples into a graph in the store. Data can be passed directly to the method\n * or a remote URI speifying where the data is located can be used.<br/>\n *<br/>\n * If the data is passed directly to the load function, the media type stating the format\n * of the data must also be passed to the function.<br/>\n *<br/>\n * If an URI is passed as a parameter, the store will attempt to perform content negotiation\n * with the remote server and get a representation for the RDF data matching one of the\n * the RDF parsers registered in the store. In this case, the media type parameter must be\n * set to the <code>'remote'</code> value.<br/>\n *<br/>\n * An additional URI for the graph where the parsed data will be loaded and a callback function\n * can be also passed as parameters. If no graph is specified, triples will be loaded in the\n * default graph.<br/>\n *<br/>\n * By default loading data will not trigger notification through the events API. If events needs to\n * be trigger, the functio <code>setBatchLoadEvents</code> must be invoked with a true parameter.\n *\n * @arguments\n * @param {String} mediaType Media type (application/json, text/n3...) of the data to be parsed or the value <code>'remote'</code> if a URI for the data is passed instead\n * @param {String} data RDF data to be parsed and loaded or an URI where the data will be retrieved after performing content negotiation\n * @param {String} [graph] Graph where the parsed triples will be inserted. If it is not specified, triples will be loaded in the default graph\n * @param {Function} callback that will be invoked with a success notification and the number of triples loaded.\n */\nStore.prototype.load = function(){\n    var mediaType;\n    var data;\n    var graph;\n    var callback;\n    var options = {};\n\n    if(arguments.length === 3) {\n\tgraph = this.rdf.createNamedNode(this.engine.lexicon.defaultGraphUri);\n\tmediaType = arguments[0];\n\tdata = arguments[1];\n\tcallback= arguments[2] || function(){};\n    } else if(arguments.length === 4) {\n\tmediaType = arguments[0];\n\tdata = arguments[1];\n\toptions = arguments[2];\n\tif(typeof(options) === 'string') {\n\t    graph = this.rdf.createNamedNode(options);\n\t    options = {};\n\t} else {\n\t    graph = this.rdf.createNamedNode(options.graph || this.engine.lexicon.defaultGraphUri);\n\t    delete options['graph'];\n\t}\n\tcallback= arguments[3] || function(){};\n    } else if(arguments.length === 2) {\n\tthrow(\"The mediaType of the parser, the data a callback and an optional graph must be provided\");\n    }\n\n    if(mediaType === 'remote') {\n\tdata = this.rdf.createNamedNode(data);\n\tvar query = \"LOAD <\"+data.valueOf()+\"> INTO GRAPH <\"+graph.valueOf()+\">\";\n\tthis.engine.execute(query, callback);\n    } else {\n\n\tvar that = this;\n\n\tvar parser = this.engine.rdfLoader.parsers[mediaType];\n\n\tif (!parser) return callback(new Error(\"Cannot find parser for the provided media type:\"+mediaType));\n\n\tvar cb = function(err, quads) {\n\t    if(err) {\n\t\tcallback(err, quads);\n\t    } else {\n\t\tthat.engine.batchLoad(quads,function(success){\n\t\t    if(success != null){\n\t\t\tcallback(null,success);\n\t\t    } else {\n\t\t\tcallback(new Error(\"Erro batch-loading triples.\"));\n\t\t    }\n\t\t});\n\t    }\n\t};\n\n\tvar args = [parser, {'token':'uri', 'value':graph.valueOf()}, data, options, cb];\n\n\tif(data && typeof(data)==='string' && data.indexOf('file://')=== 0) {\n\t    this.engine.rdfLoader.loadFromFile.apply(null, args);\n\t} else {\n\t    this.engine.rdfLoader.tryToParse.apply(null, args);\n\t}\n    }\n};\n\n/**\n * Registers a new parser associated to the provided media type. If there is a parser already registered for\n * that media type, the new parser will replace the old one.<br/>\n *<br/>\n * Parsers must implement a function *parse* accepting the data to be parsed as the\n * first parameter and the destination graph URI as the second one.\n * They must return an array of objects with properties: 'subject', 'predicate', 'object'\n * and 'graph' containing lexical representations for these values:\n *<br/>\n *<ul>\n * <li><code>{literal: '\"literal\"'}</code></li>\n * <li><code>{literal: ''\"literal\"^^<datatype>'}</code></li>\n * <li><code>{literal: '\"literal\"@lang'}</code></li>\n * <li><code>{uri: 'uri'}</code></li>\n * <li><code>{blank: '_:label'}</code></li>\n *</ul>\n *<br/>\n * The provided media type will be used to perform content negotiation when dealing with remote\n * resources, or to select the parser in the <code>load</code> function.\n *\n * @arguments\n * @param {String} mediaType the media type for this parser\n * @param {String} parser an object containing the *parse* function with the parser logic\n */\nStore.prototype.registerParser = function(mediaType, parser) {\n    this.engine.rdfLoader.registerParser(mediaType,parser);\n};\n\n/**\n * Returns the URI of all the graphs currently contained\n * in the store\n *\n * @arguments:\n * @param {Function} callback function that will receive a success notification and the array of graph URIs\n */\nStore.prototype.registeredGraphs = function(callback) {\n    this.engine.lexicon.registeredGraphs(true, function(graphs){\n\tvar graphNodes = _.map(graphs, function(graph){\n\t    return new RDFModel.NamedNode(graph);\n\t});\n\n\tcallback(null, graphNodes);\n    });\n};\n\n/**\n * Returns the current network transport being used by the\n * the store.\n *\n * The default transport uses TCP sockets in the Node.js version\n * and relies on jQuery in the browser version. This can be overriden\n * using the <code>setNetworkTransport</code> function.\n */\nStore.prototype.getNetworkTransport = function() {\n    return NetworkTransport;\n};\n\n/**\n * Sets the network transport used by the store.<br/>\n * <br/>\n * Network transport consist of an object implementing the <code>load</code>\n * function, receiving the URI to load, a string with the value\n * of the HTTP 'Accept' header for the store registered parsers,\n * a callback function where the retrieved data and the success notification\n * must be returned.<br/>\n *<br/>\n * Different examples with implementations of different transports can be found\n * in the source code of the store:\n *<ul>\n * <li>src/js-communication/src/tcp_transport.js</li>\n * <li>src/js-communication/src/ajax_transport.js</li>\n *</ul>\n * @arguments\n * @param networkTransportImpl object implementing the transport *load* function.\n */\nStore.prototype.setNetworkTransport = function(networkTransportImpl) {\n    NetworkTransport = networkTransportImpl;\n};\n\n\n/**\n * Clean-up function releasing all temporary resources held by the\n * store instance.\n */\nStore.prototype.close = function(cb) {\n    if(cb == null)\n\tcb = function(){};\n    if(this.engine.close)\n\tthis.engine.close(cb);\n    else\n\tcb();\n};\n\n/**\n * Version of the store\n */\nStore.VERSION = \"0.9.17\";\n\n/**\n * Create a new RDFStore instance that will be\n * executed in a web worker in the browser or a new process\n * in Node.js.\n * <br/>\n * <br/>\n * The first argument to this function is the URL/FS location\n * of the store script.\n * <br/>\n * <br/>\n * This parameter is mandatory in the browser. It is safe to\n * ignore this parameter in Node.js.\n * <br/>\n * <br/>\n * If support for web workers is not present, a regular\n * store object will be initialized and returned.\n * <br/>\n * <br/>\n *\n * @param {String} [scriptPath] URL of the RDFStore script\n * @param {Object[]} [args] Arguments to be passed to the store that will be created\n * @param {Function} callback Callback function that will be invoked with an error flag and the connection/store object.\n */\nvar connect = function() {\n    var callback;\n    if(arguments.length == 1) {\n\t\tcallback = arguments[0];\n    } else if(arguments.length == 2) {\n\t\tcallback = arguments[1];\n\t} else {\n\tcallback = arguments[2];\n    }\n    callback(new Error(\"Store#connect is not supported in the 0.9.X series of the library\"));\n};\n\n/**\n * Creates a new instance of the store.\n *\n * The function accepts two optional arguments.\n * <br/>\n * If only one argument is passed it must be a\n * callback function that will be invoked when the\n * store had been created.<br/>\n * <br/>\n * If two arguments are passed the first one must\n * be a map of configuration parameters for the\n * store, and the second one the callback function.<br/>\n * <br/>\n * Take a look at the Store constructor function for\n * a detailed list of possible configuration parameters.<br/>\n *\n * @param {Object[]} [args] Arguments to be passed to the store that will be created\n * @param {Function} [callback] Callback function that will be invoked with an error flag and the connection/store object.\n */\nvar create = function(){\n    if(arguments.length == 1) {\n\treturn new Store(arguments[0]);\n    } else if(arguments.length == 2) {\n\treturn new Store(arguments[0], arguments[1]);\n    } else {\n\treturn new Store();\n    };\n};\n\nStore.yieldFrequency = function(val) {\n    _.yieldFrequency(val);\n};\n\nmodule.exports.Store = Store;\nmodule.exports.create = create;\nmodule.exports.connect = connect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/store.js\n// module id = 216\n// module chunks = 2","var Utils = require('./utils');\nvar     _ = Utils;\nvar async = require('./utils');\n\nQueryFilters = {};\n\nvar xmlSchema = \"http://www.w3.org/2001/XMLSchema#\";\n\nQueryFilters.checkFilters = function(pattern, bindings, nullifyErrors, dataset, queryEnv, queryEngine, callback) {\n    var filters = [];\n    if (pattern.filter && typeof(pattern.filter) !== 'function')\n        filters = pattern.filter;\n    var nullified = [];\n    if(filters==null || filters.length === 0 || pattern.length != null) {\n        return callback(bindings);\n    }\n    QueryFilters.preprocessExistentialFilters(filters, bindings, queryEngine, dataset, queryEnv, function(preProcessedFilters){\n        async.eachSeries(preProcessedFilters, function(filter,k){\n            QueryFilters.run(filter.value, bindings, nullifyErrors, dataset, queryEnv, queryEngine, function(filteredBindings){\n                var acum = [];\n                for(var i=0; i<filteredBindings.length; i++) {\n                    var filteredBinding = filteredBindings[i];\n                    if(filteredBinding[\"__nullify__\"]!=null) {\n                        nullified.push(filteredBinding);\n                    } else {\n                        acum.push(filteredBinding);\n                    }\n                }\n                bindings = acum;\n                k();\n            });\n        },function(){\n            callback(bindings.concat(nullified));\n        });\n    });\n};\n\nQueryFilters.preprocessExistentialFilters = function(filters, bindings, queryEngine, dataset, env ,cb) {\n    var preProcessedFilters = [];\n    async.eachSeries(filters, function(filter, k){\n        if(filter.value.expressionType === 'builtincall' &&\n           (filter.value.builtincall === 'exists' ||\n            filter.value.builtincall === 'notexists')) {\n            var builtincall = filter.value.builtincall;\n            var args = filter.value.args;\n\n            var bindingsResults = {};\n            queryEngine.copyDenormalizedBindings(bindings, env.outCache, function(denormBindings){\n                async.eachSeries(denormBindings, function(bindings, kk) {\n                    var cloned = _.clone(args[0],true);\n                    var ast = queryEngine.abstractQueryTree.parseSelect({pattern:cloned}, bindings);\n                    ast = queryEngine.abstractQueryTree.bind(ast.pattern, bindings);\n                    queryEngine.executeSelectUnit([ {kind:'*'} ], dataset, ast, env, function(result){\n                        var success = null;\n                        if(builtincall === 'exists') {\n                            success = QueryFilters.ebvBoolean(result.length!==0);\n                        } else {\n                            success = QueryFilters.ebvBoolean(result.length===0);\n                        }\n                        var bindingsKey = [];\n                        for(var p in bindings) { bindingsKey.push(JSON.stringify(bindings[p]));}\n                        bindingsKey = bindingsKey.sort().join(\"\");\n                        bindingsResults[bindingsKey] = success;\n                        kk();\n                    });\n                }, function(){\n                    filter.value.origArgs = filter.value.args;\n                    filter.value.args = bindingsResults;\n                    preProcessedFilters.push(filter);\n                    k();\n                });\n            });\n        } else if (filter.value.expressionType === \"conditionalor\" || filter.value.expressionType === \"conditionaland\") {\n            var operands = _.map(filter.value.operands, function(operand){ return {\"value\": operand}; });\n            QueryFilters.preprocessExistentialFilters(operands, bindings, queryEngine, dataset, env, function(preprocessedOperands){\n                filter.value.operands = preprocessedOperands.map(function(operand){ return operand.value; });\n                preProcessedFilters.push(filter);\n                k();\n            });\n        } else if (filter.value.expressionType === \"multiplicativeexpression\") {\n            var operands = _.map(filter.value.factors, function(operand){ return {\"value\": operand}; });\n            QueryFilters.preprocessExistentialFilters(operands, bindings, queryEngine, dataset, env, function(preprocessedOperands){\n                filter.value.factors = preprocessedOperands.map(function(operand){ return operand.value; });\n                preProcessedFilters.push(filter);\n                k();\n            });\n        } else if (filter.value.expressionType === \"additiveexpression\") {\n            var operands = _.map(filter.value.summands, function(operand){ return {\"value\": operand}; });\n            QueryFilters.preprocessExistentialFilters(operands, bindings, queryEngine, dataset, env, function(preprocessedOperands){\n                filter.value.summands = preprocessedOperands.map(function(operand){ return operand.value; });\n                preProcessedFilters.push(filter);\n                k();\n            });\n        } else if(filter.value.expressionType === \"relationalexpression\") {\n            var operands = [ {\"value\": filter.value.op1}, {\"value\": filter.value.op2}];\n            QueryFilters.preprocessExistentialFilters(operands, bindings, queryEngine, dataset, env, function(preprocessedOperands){\n                filter.value.op1 = preprocessedOperands[0].value;\n                filter.value.op2 = preprocessedOperands[1].value;\n                preProcessedFilters.push(filter);\n                k();\n            });\n        } else if(filter.value.expressionType === \"irireforfunction\" || filter.value.expressionType === \"custom\") {\n            if(filter.value.args != null) {\n                var operands = _.map(filter.value.args, function (operand) {\n                    return {\"value\": operand};\n                });\n                QueryFilters.preprocessExistentialFilters(operands, bindings, queryEngine, dataset, env, function (preprocessedOperands) {\n                    filter.value.args = preprocessedOperands.map(function (operand) {\n                        return operand.value;\n                    });\n                    preProcessedFilters.push(filter);\n                    k();\n                });\n            } else {\n                preProcessedFilters.push(filter);\n                k();\n            }\n        } else {\n            preProcessedFilters.push(filter);\n            k();\n        }\n    }, function(){\n        cb(preProcessedFilters);\n    });\n};\n\nQueryFilters.boundVars = function(filterExpr) {\n    if(filterExpr.expressionType != null) {\n        var expressionType = filterExpr.expressionType;\n        if(expressionType == 'relationalexpression') {\n            var op1 = filterExpr.op1;\n            var op2 = filterExpr.op2;\n            return QueryFilters.boundVars(op1)+QueryFilters.boundVars(op2);\n        } else if(expressionType == 'conditionalor' || expressionType == 'conditionaland') {\n            var vars = [];\n            for(var i=0; i< filterExpr.operands; i++) {\n                vars = vars.concat(QueryFilters.boundVars(filterExpr.operands[i]));\n            }\n            return vars;\n        } else if(expressionType == 'builtincall') {\n            if(filterExpr.args == null) {\n                return [];\n            } else {\n                var acum = [];\n                for(var i=0; i< filterExpr.args.length; i++) {\n                    acum = acum.concat(QueryFilters.boundVars(filterExpr.args[i]));\n                }\n                return acum;\n            }\n        } else if(expressionType == 'multiplicativeexpression') {\n            var acum = QueryFilters.boundVars(filterExpr.factor);\n            for(var i=0; i<filterExpr.factors.length; i++) {\n                acum = acum.concat(QueryFilters.boundVars(filterExpr.factors[i].expression));\n            }\n            return acum;\n        } else if(expressionType == 'additiveexpression') {\n            var acum = QueryFilters.boundVars(filterExpr.summand);\n            for(var i=0; i<filterExpr.summands.length; i++) {\n                acum = acum.concat(QueryFilters.boundVars(filterExpr.summands[i].expression));\n            }\n\n            return acum;\n        } else if(expressionType == 'regex') {\n            var acum = QueryFilters.boundVars(filterExpr.expression1);\n            return acum.concat(QueryFilters.boundVars(filterExpr.expression2));\n        } else if(expressionType == 'unaryexpression') {\n            return QueryFilters.boundVars(filterExpr.expression);\n        } else if(expressionType == 'atomic') {\n            if(filterExpr.primaryexpression == 'var') {\n                return [filterExpr.value];\n            } else {\n                // numeric, literal, etc...\n                return [];\n            }\n        }\n    } else {\n        throw(\"Cannot find bound expressions in a no expression token\");\n    }\n};\n\nQueryFilters.run = function(filterExpr, bindings, nullifyFilters, dataset, env, queryEngine, callback) {\n    queryEngine.copyDenormalizedBindings(bindings, env.outCache, function(denormBindings){\n        var filteredBindings = [];\n        for(var i=0; i<bindings.length; i++) {\n            var thisDenormBindings = denormBindings[i];\n            var ebv = QueryFilters.runFilter(filterExpr, thisDenormBindings, queryEngine, dataset, env);\n            // ebv can be directly a RDFTerm (e.g. atomic expression in filter)\n            // this additional call to ebv will return -> true/false/error\n            var ebv = QueryFilters.ebv(ebv);\n            //console.log(\"EBV:\")\n            //console.log(ebv)\n            //console.log(\"FOR:\")\n            //console.log(thisDenormBindings)\n            if(QueryFilters.isEbvError(ebv)) {\n                // error\n                if(nullifyFilters) {\n                    var thisBindings = {\"__nullify__\": true, \"bindings\": bindings[i]};\n                    filteredBindings.push(thisBindings);\n                }\n            } else if(ebv === true) {\n                // true\n                filteredBindings.push(bindings[i]);\n            } else {\n                // false\n                if(nullifyFilters) {\n                    var thisBindings = {\"__nullify__\": true, \"bindings\": bindings[i]};\n                    filteredBindings.push(thisBindings);\n                }\n            }\n        }\n        callback(filteredBindings);\n    });\n};\n\nQueryFilters.collect = function(filterExpr, bindings, dataset, env, queryEngine, callback) {\n    queryEngine.copyDenormalizedBindings(bindings, env.outCache, function(denormBindings) {\n        var filteredBindings = [];\n        for(var i=0; i<denormBindings.length; i++) {\n            var thisDenormBindings = denormBindings[i];\n            var ebv = QueryFilters.runFilter(filterExpr, thisDenormBindings, queryEngine, dataset, env);\n            filteredBindings.push({binding:bindings[i], value:ebv});\n        }\n        return callback(filteredBindings);\n    });\n};\n\nQueryFilters.runDistinct = function(projectedBindings, projectionVariables) {\n};\n\n// @todo add more aggregation functions here\nQueryFilters.runAggregator = function(aggregator, bindingsGroup, queryEngine, dataset, env) {\n    if(bindingsGroup == null || bindingsGroup.length === 0) {\n        return QueryFilters.ebvError();\n    } else if(aggregator.token === 'variable' && aggregator.kind == 'var') {\n        return bindingsGroup[0][aggregator.value.value];\n    } else if(aggregator.token === 'variable' && aggregator.kind === 'aliased') {\n        if(aggregator.expression.expressionType === 'atomic' && aggregator.expression.primaryexpression === 'var') {\n            return bindingsGroup[0][aggregator.expression.value.value];\n        } else if(aggregator.expression.expressionType === 'aggregate') {\n            if(aggregator.expression.aggregateType === 'max') {\n                var max = null;\n                for(var i=0; i< bindingsGroup.length; i++) {\n                    var bindings = bindingsGroup[i];\n                    var ebv = QueryFilters.runFilter(aggregator.expression.expression, bindings, queryEngine, dataset, env);\n                    if(!QueryFilters.isEbvError(ebv)) {\n                        if(max === null) {\n                            max = ebv;\n                        } else {\n                            if(QueryFilters.runLtFunction(max, ebv).value === true) {\n                                max = ebv;\n                            }\n                        }\n                    }\n                }\n\n                if(max===null) {\n                    return QueryFilters.ebvError();\n                } else {\n                    return max;\n                }\n            } else if(aggregator.expression.aggregateType === 'min') {\n                var min = null;\n                for(var i=0; i< bindingsGroup.length; i++) {\n                    var bindings = bindingsGroup[i];\n                    var ebv = QueryFilters.runFilter(aggregator.expression.expression, bindings, queryEngine, dataset, env);\n                    if(!QueryFilters.isEbvError(ebv)) {\n                        if(min === null) {\n                            min = ebv;\n                        } else {\n                            if(QueryFilters.runGtFunction(min, ebv).value === true) {\n                                min = ebv;\n                            }\n                        }\n                    }\n                }\n\n                if(min===null) {\n                    return QueryFilters.ebvError();\n                } else {\n                    return min;\n                }\n            } else if(aggregator.expression.aggregateType === 'count') {\n                var distinct = {};\n                var count = 0;\n                if(aggregator.expression.expression === '*') {\n                    if(aggregator.expression.distinct != null && aggregator.expression.distinct != '') {\n                        for(var i=0; i< bindingsGroup.length; i++) {\n                            var bindings = bindingsGroup[i];\n                            var key = Utils.hashTerm(bindings);\n                            if(distinct[key] == null) {\n                                distinct[key] = true;\n                                count++;\n                            }\n                        }\n                    } else {\n                        count = bindingsGroup.length;\n                    }\n                } else {\n                    for(var i=0; i< bindingsGroup.length; i++) {\n                        var bindings = bindingsGroup[i];\n                        var ebv = QueryFilters.runFilter(aggregator.expression.expression, bindings, queryEngine, dataset, env);\n                        if(!QueryFilters.isEbvError(ebv)) {\n                            if(aggregator.expression.distinct != null && aggregator.expression.distinct != '') {\n                                var key = Utils.hashTerm(ebv);\n                                if(distinct[key] == null) {\n                                    distinct[key] = true;\n                                    count++;\n                                }\n                            } else {\n                                count++;\n                            }\n                        }\n                    }\n                }\n\n                return {token: 'literal', type:xmlSchema+\"integer\", value:''+count};\n            } else if(aggregator.expression.aggregateType === 'avg') {\n                var distinct = {};\n                var aggregated = {token: 'literal', type:xmlSchema+\"integer\", value:'0'};\n                var count = 0;\n                for(var i=0; i< bindingsGroup.length; i++) {\n                    var bindings = bindingsGroup[i];\n                    var ebv = QueryFilters.runFilter(aggregator.expression.expression, bindings, queryEngine, dataset, env);\n                    if(!QueryFilters.isEbvError(ebv)) {\n                        if(aggregator.expression.distinct != null && aggregator.expression.distinct != '') {\n                            var key = Utils.hashTerm(ebv);\n                            if(distinct[key] == null) {\n                                distinct[key] = true;\n                                if(QueryFilters.isNumeric(ebv)) {\n                                    aggregated = QueryFilters.runSumFunction(aggregated, ebv);\n                                    count++;\n                                }\n                            }\n                        } else {\n                            if(QueryFilters.isNumeric(ebv)) {\n                                aggregated = QueryFilters.runSumFunction(aggregated, ebv);\n                                count++;\n                            }\n                        }\n                    }\n                }\n\n                var result = QueryFilters.runDivFunction(aggregated, {token: 'literal', type:xmlSchema+\"integer\", value:''+count});\n                result.value = ''+result.value;\n                return result;\n            } else if(aggregator.expression.aggregateType === 'sum') {\n                var distinct = {};\n                var aggregated = {token: 'literal', type:xmlSchema+\"integer\", value:'0'};\n                for(var i=0; i< bindingsGroup.length; i++) {\n                    var bindings = bindingsGroup[i];\n                    var ebv = QueryFilters.runFilter(aggregator.expression.expression, bindings, queryEngine, dataset, env);\n                    if(!QueryFilters.isEbvError(ebv)) {\n                        if(aggregator.expression.distinct != null && aggregator.expression.distinct != '') {\n                            var key = Utils.hashTerm(ebv);\n                            if(distinct[key] == null) {\n                                distinct[key] = true;\n                                if(QueryFilters.isNumeric(ebv)) {\n                                    aggregated = QueryFilters.runSumFunction(aggregated, ebv);\n                                }\n                            }\n                        } else {\n                            if(QueryFilters.isNumeric(ebv)) {\n                                aggregated = QueryFilters.runSumFunction(aggregated, ebv);\n                            }\n                        }\n                    }\n                }\n\n                aggregated.value =''+aggregated.value;\n                return aggregated;\n            } else {\n                var ebv = QueryFilters.runFilter(aggregate.expression, bindingsGroup[0], dataset, {blanks:{}, outCache:{}});\n                return ebv;\n            }\n        }\n    }\n};\n\nQueryFilters.runFilter = function(filterExpr, bindings, queryEngine, dataset, env) {\n    //console.log(\"RUNNING FILTER\");\n    //console.log(filterExpr);\n    if(filterExpr.expressionType != null) {\n        var expressionType = filterExpr.expressionType;\n        if(expressionType == 'relationalexpression') {\n            var op1 = QueryFilters.runFilter(filterExpr.op1, bindings,queryEngine, dataset, env);\n            var op2 = QueryFilters.runFilter(filterExpr.op2, bindings,queryEngine, dataset, env);\n            return QueryFilters.runRelationalFilter(filterExpr, op1, op2, bindings, queryEngine, dataset, env);\n        } else if(expressionType == 'conditionalor') {\n            return QueryFilters.runOrFunction(filterExpr, bindings, queryEngine, dataset, env);\n        } else if (expressionType == 'conditionaland') {\n            return QueryFilters.runAndFunction(filterExpr, bindings, queryEngine, dataset, env);\n        } else if(expressionType == 'additiveexpression') {\n            return QueryFilters.runAddition(filterExpr.summand, filterExpr.summands, bindings, queryEngine, dataset, env);\n        } else if(expressionType == 'builtincall') {\n            return QueryFilters.runBuiltInCall(filterExpr.builtincall, filterExpr.args, bindings, queryEngine, dataset, env);\n        } else if(expressionType == 'multiplicativeexpression') {\n            return QueryFilters.runMultiplication(filterExpr.factor, filterExpr.factors, bindings, queryEngine, dataset, env);\n        } else if(expressionType == 'unaryexpression') {\n            return QueryFilters.runUnaryExpression(filterExpr.unaryexpression, filterExpr.expression, bindings, queryEngine, dataset, env);\n        } else if(expressionType == 'irireforfunction') {\n            return QueryFilters.runIriRefOrFunction(filterExpr.iriref, filterExpr.args, bindings, queryEngine, dataset, env);\n        } else if(expressionType == 'regex') {\n            return QueryFilters.runRegex(filterExpr.text, filterExpr.pattern, filterExpr.flags, bindings, queryEngine, dataset, env);\n        } else if(expressionType == 'custom') {\n            return QueryFilters.runBuiltInCall(filterExpr.name, filterExpr.args, bindings, queryEngine, dataset, env);\n        } else if(expressionType == 'atomic') {\n            if(filterExpr.primaryexpression == 'var') {\n                // lookup the var in the bindings\n                return bindings[filterExpr.value.value];\n            } else {\n                // numeric, literal, etc...\n                //return queryEngine.filterExpr.value;\n                if(typeof(filterExpr.value) != 'object') {\n                    return filterExpr.value\n                } else {\n                    if(filterExpr.value.type == null || typeof(filterExpr.value.type) != 'object') {\n                        return filterExpr.value\n                    } else {\n                        // type can be parsed as a hash using namespaces\n\n                        filterExpr.value.type =  Utils.lexicalFormBaseUri(filterExpr.value.type, env);\n                        return filterExpr.value\n                    }\n                }\n            }\n        } else {\n            throw(\"Unknown filter expression type\");\n        }\n    } else {\n        throw(\"Cannot find bound expressions in a no expression token\");\n    }\n};\n\nQueryFilters.isRDFTerm = function(val) {\n    if(val==null) {\n        return false;\n    } if((val.token && val.token == 'literal') ||\n        (val.token && val.token == 'uri') ||\n        (val.token && val.token == 'blank')) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\n\n/*\n 17.4.1.7 RDFterm-equal\n\n xsd:boolean   RDF term term1 = RDF term term2\n\n Returns TRUE if term1 and term2 are the same RDF term as defined in Resource Description Framework (RDF):\n Concepts and Abstract Syntax [CONCEPTS]; produces a type error if the arguments are both literal but are not\n the same RDF term *; returns FALSE otherwise. term1 and term2 are the same if any of the following is true:\n\n term1 and term2 are equivalent IRIs as defined in 6.4 RDF URI References of [CONCEPTS].\n term1 and term2 are equivalent literals as defined in 6.5.1 Literal Equality of [CONCEPTS].\n term1 and term2 are the same blank node as described in 6.6 Blank Nodes of [CONCEPTS].\n */\nQueryFilters.RDFTermEquality = function(v1, v2, queryEngine, env) {\n    if(v1.token === 'literal' && v2.token === 'literal') {\n        if(v1.lang == v2.lang && v1.type == v2.type && v1.value == v2.value) {\n\n            return true;\n        } else {\n\n\n            if(v1.type != null && v2.type != null) {\n                return  QueryFilters.ebvError();\n            } else if(QueryFilters.isSimpleLiteral(v1) && v2.type!=null){\n                return QueryFilters.ebvError();\n            } else if(QueryFilters.isSimpleLiteral(v2) && v1.type!=null){\n                return QueryFilters.ebvError();\n            } else {\n                return false;\n            }\n\n//            if(v1.value != v2.value) {\n//                return QueryFilters.ebvError();\n//            } else if(v1.type && v2.type && v1.type!=v2.type) {\n//                return QueryFilters.ebvError();\n//            } else if(QueryFilters.isSimpleLiteral(v1) && v2.type!=null){\n//                return QueryFilters.ebvError();\n//            } else if(QueryFilters.isSimpleLiteral(v2) && v1.type!=null){\n//                return QueryFilters.ebvError();\n//            } else {\n//                return false;\n//            }\n\n        }\n    } else if(v1.token === 'uri' && v2.token === 'uri') {\n        return Utils.lexicalFormBaseUri(v1, env) == Utils.lexicalFormBaseUri(v2, env);\n    } else if(v1.token === 'blank' && v2.token === 'blank') {\n        return v1.value == v2.value;\n    } else {\n        return false;\n    }\n};\n\n\nQueryFilters.isInteger = function(val) {\n    if(val == null) {\n        return false;\n    }\n    if(val.token === 'literal') {\n        if(val.type == xmlSchema+\"integer\" ||\n            val.type == xmlSchema+\"decimal\" ||\n            val.type == xmlSchema+\"double\" ||\n            val.type == xmlSchema+\"nonPositiveInteger\" ||\n            val.type == xmlSchema+\"negativeInteger\" ||\n            val.type == xmlSchema+\"long\" ||\n            val.type == xmlSchema+\"int\" ||\n            val.type == xmlSchema+\"short\" ||\n            val.type == xmlSchema+\"byte\" ||\n            val.type == xmlSchema+\"nonNegativeInteger\" ||\n            val.type == xmlSchema+\"unsignedLong\" ||\n            val.type == xmlSchema+\"unsignedInt\" ||\n            val.type == xmlSchema+\"unsignedShort\" ||\n            val.type == xmlSchema+\"unsignedByte\" ||\n            val.type == xmlSchema+\"positiveInteger\" ) {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n};\n\nQueryFilters.isFloat = function(val) {\n    if(val == null) {\n        return false;\n    }\n    if(val.token === 'literal') {\n        if(val.type == xmlSchema+\"float\") {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n};\n\nQueryFilters.isDecimal = function(val) {\n    if(val == null) {\n        return false;\n    }\n    if(val.token === 'literal') {\n        if(val.type == xmlSchema+\"decimal\") {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n};\n\nQueryFilters.isDouble = function(val) {\n    if(val == null) {\n        return false;\n    }\n    if(val.token === 'literal') {\n        if(val.type == xmlSchema+\"double\") {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n};\n\n\nQueryFilters.isNumeric = function(val) {\n    if(val == null) {\n        return false;\n    }\n    if(val.token === 'literal') {\n        if(val.type == xmlSchema+\"integer\" ||\n            val.type == xmlSchema+\"decimal\" ||\n            val.type == xmlSchema+\"float\" ||\n            val.type == xmlSchema+\"double\" ||\n            val.type == xmlSchema+\"nonPositiveInteger\" ||\n            val.type == xmlSchema+\"negativeInteger\" ||\n            val.type == xmlSchema+\"long\" ||\n            val.type == xmlSchema+\"int\" ||\n            val.type == xmlSchema+\"short\" ||\n            val.type == xmlSchema+\"byte\" ||\n            val.type == xmlSchema+\"nonNegativeInteger\" ||\n            val.type == xmlSchema+\"unsignedLong\" ||\n            val.type == xmlSchema+\"unsignedInt\" ||\n            val.type == xmlSchema+\"unsignedShort\" ||\n            val.type == xmlSchema+\"unsignedByte\" ||\n            val.type == xmlSchema+\"positiveInteger\" ) {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n};\n\nQueryFilters.isSimpleLiteral = function(val) {\n    if(val && val.token == 'literal') {\n        if(val.type == null && val.lang == null) {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n};\n\nQueryFilters.isXsdType = function(type, val) {\n    if(val && val.token == 'literal') {\n        return val.type == xmlSchema+\"\"+type;\n    } else {\n        return false;\n    }\n};\n\nQueryFilters.ebv = function (term) {\n    if (term == null || QueryFilters.isEbvError(term)) {\n        return QueryFilters.ebvError();\n    } else {\n        if (term.token && term.token === 'literal') {\n            if (term.type == xmlSchema+\"integer\" ||\n                term.type == xmlSchema+\"decimal\" ||\n                term.type == xmlSchema+\"double\" ||\n                term.type == xmlSchema+\"nonPositiveInteger\" ||\n                term.type == xmlSchema+\"negativeInteger\" ||\n                term.type == xmlSchema+\"long\" ||\n                term.type == xmlSchema+\"int\" ||\n                term.type == xmlSchema+\"short\" ||\n                term.type == xmlSchema+\"byte\" ||\n                term.type == xmlSchema+\"nonNegativeInteger\" ||\n                term.type == xmlSchema+\"unsignedLong\" ||\n                term.type == xmlSchema+\"unsignedInt\" ||\n                term.type == xmlSchema+\"unsignedShort\" ||\n                term.type == xmlSchema+\"unsignedByte\" ||\n                term.type == xmlSchema+\"positiveInteger\") {\n                var tmp = parseFloat(term.value);\n                if (isNaN(tmp)) {\n                    return false;\n                } else {\n                    return parseFloat(term.value) != 0;\n                }\n            } else if (term.type === xmlSchema+\"boolean\") {\n                return (term.value === 'true' || term.value === true || term.value === 'True');\n            } else if (term.type === xmlSchema+\"string\") {\n                return term.value != \"\";\n            } else if (term.type === xmlSchema+\"dateTime\") {\n                return (new Date(term.value)) != null;\n            } else if (QueryFilters.isEbvError(term)) {\n                return term;\n            } else if (term.type == null) {\n                if (term.value != \"\") {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return QueryFilters.ebvError();\n            }\n        } else {\n            return term.value === true;\n        }\n    }\n};\n\nQueryFilters.effectiveBooleanValue = QueryFilters.ebv;\n\nQueryFilters.ebvTrue = function() {\n    var val = {token: 'literal', type:xmlSchema+\"boolean\", value:true};\n    return val;\n};\n\nQueryFilters.ebvFalse = function() {\n    var val = {token: 'literal', type:xmlSchema+\"boolean\", value:false};\n    return val;\n};\n\nQueryFilters.ebvError = function() {\n    var val = {token: 'literal', type:\"https://github.com/antoniogarrote/js-tools/types#error\", value:null};\n    return val;\n};\n\nQueryFilters.isEbvError = function(term) {\n    if(typeof(term) == 'object' && term != null) {\n        return term.type === \"https://github.com/antoniogarrote/js-tools/types#error\";\n//    } else if(term == null) {\n//        return true;\n    } else {\n        return false;\n    }\n};\n\nQueryFilters.ebvBoolean = function (bool) {\n    if (QueryFilters.isEbvError(bool)) {\n        return bool;\n    } else {\n        if (bool === true) {\n            return QueryFilters.ebvTrue();\n        } else {\n            return QueryFilters.ebvFalse();\n        }\n    }\n};\n\n\nQueryFilters.runRelationalFilter = function(filterExpr, op1, op2, bindings, queryEngine, dataset, env) {\n    var operator = filterExpr.operator;\n    if(operator === '=') {\n        return QueryFilters.runEqualityFunction(op1, op2, bindings, queryEngine, dataset, env);\n    } else if(operator === '!=') {\n        var res = QueryFilters.runEqualityFunction(op1, op2, bindings, queryEngine, dataset, env);\n        if(QueryFilters.isEbvError(res)) {\n            return res;\n        } else {\n            res.value = !res.value;\n            return res;\n        }\n    } else if(operator === '<') {\n        return QueryFilters.runLtFunction(op1, op2, bindings);\n    } else if(operator === '>') {\n        return QueryFilters.runGtFunction(op1, op2, bindings);\n    } else if(operator === '<=') {\n        return QueryFilters.runLtEqFunction(op1, op2, bindings);\n    } else if(operator === '>=') {\n        return QueryFilters.runGtEqFunction(op1, op2, bindings);\n    } else {\n        throw(\"Error applying relational filter, unknown operator\");\n    }\n};\n\n/**\n * Transforms a JS object representing a [typed] literal in a javascript\n * value that can be used in javascript operations and functions\n */\nQueryFilters.effectiveTypeValue = function(val){\n    if(val.token == 'literal') {\n        if(val.type == xmlSchema+\"integer\") {\n            var tmp = parseInt(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if(val.type == xmlSchema+\"decimal\") {\n            var tmp = parseFloat(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"float\") {\n            var tmp = parseFloat(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"double\") {\n            var tmp = parseFloat(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"nonPositiveInteger\") {\n            var tmp = parseFloat(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"negativeInteger\") {\n            var tmp = parseInt(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"long\") {\n            var tmp = parseInt(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"int\") {\n            var tmp = parseInt(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"short\") {\n            var tmp = parseInt(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"byte\") {\n            var tmp = parseInt(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"nonNegativeInteger\") {\n            var tmp = parseInt(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"unsignedLong\") {\n            var tmp = parseInt(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"unsignedInt\") {\n            var tmp = parseInt(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"unsignedShort\") {\n            var tmp = parseInt(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"unsignedByte\") {\n            var tmp = parseInt(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"positiveInteger\" ) {\n            var tmp = parseInt(val.value);\n            //if(isNaN(tmp)) {\n            //    return false;\n            //} else {\n            return tmp;\n            //}\n        } else if (val.type == xmlSchema+\"date\" ||\n            val.type == xmlSchema+\"dateTime\" ) {\n            try {\n                var d = Utils.parseISO8601(val.value);\n                return(d);\n            } catch(e) {\n                return null;\n            }\n        } else if (val.type == xmlSchema+\"boolean\" ) {\n            return val.value === true || val.value === 'true' || val.value === '1' || val.value === 1 || val.value === true ? true :\n                val.value === false || val.value === 'false' || val.value === '0' || val.value === 0 || val.value === false ? false :\n                    undefined;\n        } else if (val.type == xmlSchema+\"string\" ) {\n            return val.value === null || val.value === undefined ? undefined : ''+val.value;\n        } else if (val.type == null) {\n            // plain literal -> just manipulate the string\n            return val.value;\n        } else {\n            return val.value\n        }\n    } else {\n        // @todo\n        console.log(\"not implemented yet\");\n        console.log(val);\n        throw(\"value not supported in operations yet\");\n    }\n};\n\n/*\n A logical-or that encounters an error on only one branch will return TRUE if the other branch is TRUE and an error if the other branch is FALSE.\n A logical-or or logical-and that encounters errors on both branches will produce either of the errors.\n */\nQueryFilters.runOrFunction = function(filterExpr, bindings, queryEngine, dataset, env) {\n\n    var acum = null;\n\n    for(var i=0; i< filterExpr.operands.length; i++) {\n        var ebv = QueryFilters.runFilter(filterExpr.operands[i], bindings, queryEngine, dataset, env);\n        if(QueryFilters.isEbvError(ebv) == false) {\n            ebv = QueryFilters.ebv(ebv);\n        }\n        if(acum == null) {\n            acum = ebv;\n        } else if(QueryFilters.isEbvError(ebv)) {\n            if(QueryFilters.isEbvError(acum)) {\n                acum = QueryFilters.ebvError();\n            } else if(acum === true) {\n                acum = true;\n            } else {\n                acum = QueryFilters.ebvError();\n            }\n        } else if(ebv === true) {\n            acum = true;\n        } else {\n            if(QueryFilters.isEbvError(acum)) {\n                acum = QueryFilters.ebvError();\n            }\n        }\n    }\n\n    return QueryFilters.ebvBoolean(acum);\n};\n\n/*\n A logical-and that encounters an error on only one branch will return an error if the other branch is TRUE and FALSE if the other branch is FALSE.\n A logical-or or logical-and that encounters errors on both branches will produce either of the errors.\n */\nQueryFilters.runAndFunction = function(filterExpr, bindings, queryEngine, dataset, env) {\n\n    var acum = null;\n\n    for(var i=0; i< filterExpr.operands.length; i++) {\n\n        var ebv = QueryFilters.runFilter(filterExpr.operands[i], bindings, queryEngine, dataset, env);\n\n        if(QueryFilters.isEbvError(ebv) == false) {\n            ebv = QueryFilters.ebv(ebv);\n        }\n\n        if(acum == null) {\n            acum = ebv;\n        } else if(QueryFilters.isEbvError(ebv)) {\n            if(QueryFilters.isEbvError(acum)) {\n                acum = QueryFilters.ebvError();\n            } else if(acum === true) {\n                acum = QueryFilters.ebvError();\n            } else {\n                acum = false;\n            }\n        } else if(ebv === true) {\n            if(QueryFilters.isEbvError(acum)) {\n                acum = QueryFilters.ebvError();\n            }\n        } else {\n            acum = false;\n        }\n    }\n\n    return QueryFilters.ebvBoolean(acum);\n};\n\n\nQueryFilters.runEqualityFunction = function(op1, op2, bindings, queryEngine, dataset, env) {\n    if(QueryFilters.isEbvError(op1) || QueryFilters.isEbvError(op2)) {\n        return QueryFilters.ebvError();\n    }\n    if(QueryFilters.isNumeric(op1) && QueryFilters.isNumeric(op2)) {\n        var eop1 = QueryFilters.effectiveTypeValue(op1);\n        var eop2 = QueryFilters.effectiveTypeValue(op2);\n        if(isNaN(eop1) || isNaN(eop2)) {\n            return QueryFilters.ebvBoolean(QueryFilters.RDFTermEquality(op1, op2, queryEngine, env));\n        } else {\n            return QueryFilters.ebvBoolean(eop1 == eop2);\n        }\n    } else if((QueryFilters.isSimpleLiteral(op1) || QueryFilters.isXsdType(\"string\", op1)) &&\n        (QueryFilters.isSimpleLiteral(op2) || QueryFilters.isXsdType(\"string\", op2))) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) == QueryFilters.effectiveTypeValue(op2));\n    } else if(QueryFilters.isXsdType(\"boolean\", op1) && QueryFilters.isXsdType(\"boolean\", op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) == QueryFilters.effectiveTypeValue(op2));\n    } else if((QueryFilters.isXsdType(\"dateTime\", op1)||QueryFilters.isXsdType(\"date\", op1)) && (QueryFilters.isXsdType(\"dateTime\", op2)||QueryFilters.isXsdType(\"date\", op2))) {\n        if(QueryFilters.isXsdType(\"dateTime\", op1) && QueryFilters.isXsdType(\"date\", op2)) {\n            return QueryFilters.ebvFalse();\n        }\n        if(QueryFilters.isXsdType(\"date\", op1) && QueryFilters.isXsdType(\"dateTime\", op2)) {\n            return QueryFilters.ebvFalse();\n        }\n\n        var comp = Utils.compareDateComponents(op1.value, op2.value);\n        if(comp != null) {\n            if(comp == 0) {\n                return QueryFilters.ebvTrue();\n            } else {\n                return QueryFilters.ebvFalse();\n            }\n        } else {\n            return QueryFilters.ebvError();\n        }\n    } else if(QueryFilters.isRDFTerm(op1) && QueryFilters.isRDFTerm(op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.RDFTermEquality(op1, op2, queryEngine, env));\n    } else {\n        return QueryFilters.ebvFalse();\n    }\n};\n\nQueryFilters.runGtFunction = function(op1, op2, bindings) {\n    if(QueryFilters.isEbvError(op1) || QueryFilters.isEbvError(op2)) {\n        return QueryFilters.ebvError();\n    }\n\n    if(QueryFilters.isNumeric(op1) && QueryFilters.isNumeric(op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) > QueryFilters.effectiveTypeValue(op2));\n    } else if(QueryFilters.isSimpleLiteral(op1) && QueryFilters.isSimpleLiteral(op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) > QueryFilters.effectiveTypeValue(op2));\n    } else if(QueryFilters.isXsdType(\"string\", op1) && QueryFilters.isXsdType(\"string\", op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) > QueryFilters.effectiveTypeValue(op2));\n    } else if(QueryFilters.isXsdType(\"boolean\", op1) && QueryFilters.isXsdType(\"boolean\", op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) > QueryFilters.effectiveTypeValue(op2));\n    } else if((QueryFilters.isXsdType(\"dateTime\", op1) || QueryFilters.isXsdType(\"date\", op1)) &&\n        (QueryFilters.isXsdType(\"dateTime\", op2) || QueryFilters.isXsdType(\"date\", op2))) {\n        if(QueryFilters.isXsdType(\"dateTime\", op1) && QueryFilters.isXsdType(\"date\", op2)) {\n            return QueryFilters.ebvFalse();\n        }\n        if(QueryFilters.isXsdType(\"date\", op1) && QueryFilters.isXsdType(\"dateTime\", op2)) {\n            return QueryFilters.ebvFalse();\n        }\n\n        var comp = Utils.compareDateComponents(op1.value, op2.value);\n        if(comp != null) {\n            if(comp == 1) {\n                return QueryFilters.ebvTrue();\n            } else {\n                return QueryFilters.ebvFalse();\n            }\n        } else {\n            return QueryFilters.ebvError();\n        }\n    } else {\n        return QueryFilters.ebvFalse();\n    }\n};\n\n/**\n * Total gt function used when sorting bindings in the SORT BY clause.\n *\n * @todo\n * Some criteria are not clear\n */\nQueryFilters.runTotalGtFunction = function(op1,op2) {\n    if(QueryFilters.isEbvError(op1) || QueryFilters.isEbvError(op2)) {\n        return QueryFilters.ebvError();\n    }\n\n    if((QueryFilters.isNumeric(op1) && QueryFilters.isNumeric(op2)) ||\n        (QueryFilters.isSimpleLiteral(op1) && QueryFilters.isSimpleLiteral(op2)) ||\n        (QueryFilters.isXsdType(\"string\",op1) && QueryFilters.isSimpleLiteral(\"string\",op2)) ||\n        (QueryFilters.isXsdType(\"boolean\",op1) && QueryFilters.isSimpleLiteral(\"boolean\",op2)) ||\n        (QueryFilters.isXsdType(\"dateTime\",op1) && QueryFilters.isSimpleLiteral(\"dateTime\",op2))) {\n        return QueryFilters.runGtFunction(op1, op2, []);\n    } else if(op1.token && op1.token === 'uri' && op2.token && op2.token === 'uri') {\n        return QueryFilters.ebvBoolean(op1.value > op2.value);\n    } else if(op1.token && op1.token === 'literal' && op2.token && op2.token === 'literal') {\n        // one of the literals must have type/lang and the othe may not have them\n        return QueryFilters.ebvBoolean(\"\"+op1.value+op1.type+op1.lang > \"\"+op2.value+op2.type+op2.lang);\n    } else if(op1.token && op1.token === 'blank' && op2.token && op2.token === 'blank') {\n        return QueryFilters.ebvBoolean(op1.value > op2.value);\n    } else if(op1.value && op2.value) {\n        return QueryFilters.ebvBoolean(op1.value > op2.value);\n    } else {\n        return QueryFilters.ebvTrue();\n    }\n};\n\n\nQueryFilters.runLtFunction = function(op1, op2, bindings) {\n    if(QueryFilters.isEbvError(op1) || QueryFilters.isEbvError(op2)) {\n        return QueryFilters.ebvError();\n    }\n\n    if(QueryFilters.isNumeric(op1) && QueryFilters.isNumeric(op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) < QueryFilters.effectiveTypeValue(op2));\n    } else if(QueryFilters.isSimpleLiteral(op1) && QueryFilters.isSimpleLiteral(op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) < QueryFilters.effectiveTypeValue(op2));\n    } else if(QueryFilters.isXsdType(\"string\", op1) && QueryFilters.isXsdType(\"string\", op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) < QueryFilters.effectiveTypeValue(op2));\n    } else if(QueryFilters.isXsdType(\"boolean\", op1) && QueryFilters.isXsdType(\"boolean\", op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) < QueryFilters.effectiveTypeValue(op2));\n    } else if((QueryFilters.isXsdType(\"dateTime\", op1) || QueryFilters.isXsdType(\"date\", op1)) &&\n        (QueryFilters.isXsdType(\"dateTime\", op2) || QueryFilters.isXsdType(\"date\", op2))) {\n        if(QueryFilters.isXsdType(\"dateTime\", op1) && QueryFilters.isXsdType(\"date\", op2)) {\n            return QueryFilters.ebvFalse();\n        }\n        if(QueryFilters.isXsdType(\"date\", op1) && QueryFilters.isXsdType(\"dateTime\", op2)) {\n            return QueryFilters.ebvFalse();\n        }\n\n        var comp = Utils.compareDateComponents(op1.value, op2.value);\n        if(comp != null) {\n            if(comp == -1) {\n                return QueryFilters.ebvTrue();\n            } else {\n                return QueryFilters.ebvFalse();\n            }\n        } else {\n            return QueryFilters.ebvError();\n        }\n    } else {\n        return QueryFilters.ebvFalse();\n    }\n};\n\n\nQueryFilters.runGtEqFunction = function(op1, op2, bindings) {\n    if(QueryFilters.isEbvError(op1) || QueryFilters.isEbvError(op2)) {\n        return QueryFilters.ebvError();\n    }\n\n    if(QueryFilters.isNumeric(op1) && QueryFilters.isNumeric(op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) >= QueryFilters.effectiveTypeValue(op2));\n    } else if(QueryFilters.isSimpleLiteral(op1) && QueryFilters.isSimpleLiteral(op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) >= QueryFilters.effectiveTypeValue(op2));\n    } else if(QueryFilters.isXsdType(\"string\", op1) && QueryFilters.isXsdType(\"string\", op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) >= QueryFilters.effectiveTypeValue(op2));\n    } else if(QueryFilters.isXsdType(\"boolean\", op1) && QueryFilters.isXsdType(\"boolean\", op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) >= QueryFilters.effectiveTypeValue(op2));\n    } else if((QueryFilters.isXsdType(\"dateTime\", op1) || QueryFilters.isXsdType(\"date\", op1)) &&\n        (QueryFilters.isXsdType(\"dateTime\", op2) || QueryFilters.isXsdType(\"date\", op2))) {\n        if(QueryFilters.isXsdType(\"dateTime\", op1) && QueryFilters.isXsdType(\"date\", op2)) {\n            return QueryFilters.ebvFalse();\n        }\n        if(QueryFilters.isXsdType(\"date\", op1) && QueryFilters.isXsdType(\"dateTime\", op2)) {\n            return QueryFilters.ebvFalse();\n        }\n\n        var comp = Utils.compareDateComponents(op1.value, op2.value);\n        if(comp != null) {\n            if(comp != -1) {\n                return QueryFilters.ebvTrue();\n            } else {\n                return QueryFilters.ebvFalse();\n            }\n        } else {\n            return QueryFilters.ebvError();\n        }\n\n    } else {\n        return QueryFilters.ebvFalse();\n    }\n};\n\n\nQueryFilters.runLtEqFunction = function(op1, op2, bindings) {\n    if(QueryFilters.isEbvError(op1) || QueryFilters.isEbvError(op2)) {\n        return QueryFilters.ebvError();\n    }\n\n    if(QueryFilters.isNumeric(op1) && QueryFilters.isNumeric(op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) <= QueryFilters.effectiveTypeValue(op2));\n    } else if(QueryFilters.isSimpleLiteral(op1) && QueryFilters.isSimpleLiteral(op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) <= QueryFilters.effectiveTypeValue(op2));\n    } else if(QueryFilters.isXsdType(\"string\", op1) && QueryFilters.isXsdType(\"string\", op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) <= QueryFilters.effectiveTypeValue(op2));\n    } else if(QueryFilters.isXsdType(\"boolean\", op1) && QueryFilters.isXsdType(\"boolean\", op2)) {\n        return QueryFilters.ebvBoolean(QueryFilters.effectiveTypeValue(op1) <= QueryFilters.effectiveTypeValue(op2));\n    } else if((QueryFilters.isXsdType(\"dateTime\", op1) || QueryFilters.isXsdType(\"date\", op1)) &&\n        (QueryFilters.isXsdType(\"dateTime\", op2) || QueryFilters.isXsdType(\"date\", op2))) {\n        if(QueryFilters.isXsdType(\"dateTime\", op1) && QueryFilters.isXsdType(\"date\", op2)) {\n            return QueryFilters.ebvFalse();\n        }\n        if(QueryFilters.isXsdType(\"date\", op1) && QueryFilters.isXsdType(\"dateTime\", op2)) {\n            return QueryFilters.ebvFalse();\n        }\n\n        var comp = Utils.compareDateComponents(op1.value, op2.value);\n        if(comp != null) {\n            if(comp != 1) {\n                return QueryFilters.ebvTrue();\n            } else {\n                return QueryFilters.ebvFalse();\n            }\n        } else {\n            return QueryFilters.ebvError();\n        }\n    } else {\n        return QueryFilters.ebvFalse();\n    }\n};\n\nQueryFilters.runAddition = function(summand, summands, bindings, queryEngine, dataset, env) {\n    var summandOp = QueryFilters.runFilter(summand,bindings,queryEngine, dataset, env);\n    if(QueryFilters.isEbvError(summandOp)) {\n        return QueryFilters.ebvError();\n    }\n\n    var acum = summandOp;\n    if(QueryFilters.isNumeric(summandOp)) {\n        for(var i=0; i<summands.length; i++) {\n            var nextSummandOp = QueryFilters.runFilter(summands[i].expression, bindings,queryEngine, dataset, env);\n            if(QueryFilters.isNumeric(nextSummandOp)) {\n                if(summands[i].operator === '+') {\n                    acum = QueryFilters.runSumFunction(acum, nextSummandOp);\n                } else if(summands[i].operator === '-') {\n                    acum = QueryFilters.runSubFunction(acum, nextSummandOp);\n                }\n            } else {\n                return QueryFilters.ebvFalse();\n            }\n        }\n        return acum;\n    } else {\n        return QueryFilters.ebvFalse();\n    }\n};\n\nQueryFilters.runSumFunction = function(suma, sumb) {\n    if(QueryFilters.isEbvError(suma) || QueryFilters.isEbvError(sumb)) {\n        return QueryFilters.ebvError();\n    }\n    var val = QueryFilters.effectiveTypeValue(suma) + QueryFilters.effectiveTypeValue(sumb);\n\n    if(QueryFilters.isDouble(suma) || QueryFilters.isDouble(sumb)) {\n        return {token: 'literal', type:xmlSchema+\"double\", value:val};\n    } else if(QueryFilters.isFloat(suma) || QueryFilters.isFloat(sumb)) {\n        return {token: 'literal', type:xmlSchema+\"float\", value:val};\n    } else if(QueryFilters.isDecimal(suma) || QueryFilters.isDecimal(sumb)) {\n        return {token: 'literal', type:xmlSchema+\"decimal\", value:val};\n    } else {\n        return {token: 'literal', type:xmlSchema+\"integer\", value:val};\n    }\n};\n\nQueryFilters.runSubFunction = function(suma, sumb) {\n    if(QueryFilters.isEbvError(suma) || QueryFilters.isEbvError(sumb)) {\n        return QueryFilters.ebvError();\n    }\n    var val = QueryFilters.effectiveTypeValue(suma) - QueryFilters.effectiveTypeValue(sumb);\n\n    if(QueryFilters.isDouble(suma) || QueryFilters.isDouble(sumb)) {\n        return {token: 'literal', type:xmlSchema+\"double\", value:val};\n    } else if(QueryFilters.isFloat(suma) || QueryFilters.isFloat(sumb)) {\n        return {token: 'literal', type:xmlSchema+\"float\", value:val};\n    } else if(QueryFilters.isDecimal(suma) || QueryFilters.isDecimal(sumb)) {\n        return {token: 'literal', type:xmlSchema+\"decimal\", value:val};\n    } else {\n        return {token: 'literal', type:xmlSchema+\"integer\", value:val};\n    }\n};\n\nQueryFilters.runMultiplication = function(factor, factors, bindings, queryEngine, dataset, env) {\n    var factorOp = QueryFilters.runFilter(factor,bindings,queryEngine, dataset, env);\n    if(QueryFilters.isEbvError(factorOp)) {\n        return factorOp;\n    }\n\n    var acum = factorOp;\n    if(QueryFilters.isNumeric(factorOp)) {\n        for(var i=0; i<factors.length; i++) {\n            var nextFactorOp = QueryFilters.runFilter(factors[i].expression, bindings,queryEngine, dataset, env);\n            if(QueryFilters.isEbvError(nextFactorOp)) {\n                return factorOp;\n            }\n            if(QueryFilters.isNumeric(nextFactorOp)) {\n                if(factors[i].operator === '*') {\n                    acum = QueryFilters.runMulFunction(acum, nextFactorOp);\n                } else if(factors[i].operator === '/') {\n                    acum = QueryFilters.runDivFunction(acum, nextFactorOp);\n                }\n            } else {\n                return QueryFilters.ebvFalse();\n            }\n        }\n        return acum;\n    } else {\n        return QueryFilters.ebvFalse();\n    }\n};\n\nQueryFilters.runMulFunction = function(faca, facb) {\n    if(QueryFilters.isEbvError(faca) || QueryFilters.isEbvError(facb)) {\n        return QueryFilters.ebvError();\n    }\n    var val = QueryFilters.effectiveTypeValue(faca) * QueryFilters.effectiveTypeValue(facb);\n\n    if(QueryFilters.isDouble(faca) || QueryFilters.isDouble(facb)) {\n        return {token: 'literal', type:xmlSchema+\"double\", value:val};\n    } else if(QueryFilters.isFloat(faca) || QueryFilters.isFloat(facb)) {\n        return {token: 'literal', type:xmlSchema+\"float\", value:val};\n    } else if(QueryFilters.isDecimal(faca) || QueryFilters.isDecimal(facb)) {\n        return {token: 'literal', type:xmlSchema+\"decimal\", value:val};\n    } else {\n        return {token: 'literal', type:xmlSchema+\"integer\", value:val};\n    }\n};\n\nQueryFilters.runDivFunction = function(faca, facb) {\n    if(QueryFilters.isEbvError(faca) || QueryFilters.isEbvError(facb)) {\n        return QueryFilters.ebvError();\n    }\n    var val = QueryFilters.effectiveTypeValue(faca) / QueryFilters.effectiveTypeValue(facb);\n\n    if(QueryFilters.isDouble(faca) || QueryFilters.isDouble(facb)) {\n        return {token: 'literal', type:xmlSchema+\"double\", value:val};\n    } else if(QueryFilters.isFloat(faca) || QueryFilters.isFloat(facb)) {\n        return {token: 'literal', type:xmlSchema+\"float\", value:val};\n    } else if(QueryFilters.isDecimal(faca) || QueryFilters.isDecimal(facb)) {\n        return {token: 'literal', type:xmlSchema+\"decimal\", value:val};\n    } else {\n        return {token: 'literal', type:xmlSchema+\"integer\", value:val};\n    }\n};\n\nQueryFilters.runBuiltInCall = function(builtincall, args, bindings, queryEngine, dataset, env) {\n    if(builtincall === 'notexists' || builtincall === 'exists') {\n        // args hast to be the boolean value preprocessed already so we can keep this function sync\n        var bindingsKey = [];\n        for(var p in bindings) { bindingsKey.push(JSON.stringify(bindings[p]));}\n        bindingsKey = bindingsKey.sort().join(\"\");\n\n        return args[bindingsKey];\n    }  else {\n\n        var ops = [];\n        for(var i=0; i<args.length; i++) {\n            if(args[i].token === 'var') {\n                ops.push(args[i]);\n            } else {\n                var op = QueryFilters.runFilter(args[i], bindings, queryEngine, dataset, env);\n                if(QueryFilters.isEbvError(op)) {\n                    return op;\n                }\n                ops.push(op);\n            }\n        }\n\n        if(builtincall === 'str') {\n            if(ops[0].token === 'literal') {\n                // lexical form literals\n                return {token: 'literal', type:null, value:\"\"+ops[0].value}; // type null? or xmlSchema+\"string\"\n            } else if(ops[0].token === 'uri'){\n                // codepoint URIs\n                return {token: 'literal', type:null, value:ops[0].value}; // idem\n            } else {\n                return QueryFilters.ebvFalse();\n            }\n        } else if(builtincall === 'lang') {\n            if(ops[0].token === 'literal'){\n                if(ops[0].lang != null) {\n                    return {token: 'literal', value:\"\"+ops[0].lang};\n                } else {\n                    return {token: 'literal', value:\"\"};\n                }\n            } else {\n                return QueryFilters.ebvError();\n            }\n        } else if(builtincall === 'datatype') {\n            if(ops[0].token === 'literal'){\n                var lit = ops[0];\n                if(lit.type != null) {\n                    if(typeof(lit.type) === 'string') {\n                        return {token: 'uri', value:lit.type, prefix:null, suffix:null};\n                    } else {\n                        return lit.type;\n                    }\n                } else if(lit.lang == null) {\n                    return {token: 'uri', value:'http://www.w3.org/2001/XMLSchema#string', prefix:null, suffix:null};\n                } else {\n                    return QueryFilters.ebvError();\n                }\n            } else {\n                return QueryFilters.ebvError();\n            }\n        } else if(builtincall === 'isliteral') {\n            if(ops[0].token === 'literal'){\n                return QueryFilters.ebvTrue();\n            } else {\n                return QueryFilters.ebvFalse();\n            }\n        } else if(builtincall === 'isblank') {\n            if(ops[0].token === 'blank'){\n                return QueryFilters.ebvTrue();\n            } else {\n                return QueryFilters.ebvFalse();\n            }\n        } else if(builtincall === 'isuri' || builtincall === 'isiri') {\n            if(ops[0].token === 'uri'){\n                return QueryFilters.ebvTrue();\n            } else {\n                return QueryFilters.ebvFalse();\n            }\n        } else if(builtincall === 'sameterm') {\n            var op1 = ops[0];\n            var op2 = ops[1];\n            var res = QueryFilters.RDFTermEquality(op1, op2, queryEngine, env);\n            if(QueryFilters.isEbvError(res)) {\n                res = false;\n            }\n            return QueryFilters.ebvBoolean(res);\n        } else if(builtincall === 'langmatches') {\n            var lang = ops[0];\n            var langRange = ops[1];\n\n            if(lang.token === 'literal' && langRange.token === 'literal'){\n                if(langRange.value === '*' && lang.value != '') {\n                    return QueryFilters.ebvTrue();\n                } else {\n                    return QueryFilters.ebvBoolean(lang.value.toLowerCase().indexOf(langRange.value.toLowerCase()) === 0)\n                }\n            } else {\n                return QueryFilters.ebvError();\n            }\n        } else if(builtincall === 'bound') {\n            var boundVar = ops[0].value;\n            var acum = [];\n            if(boundVar == null) {\n                return QueryFilters.ebvError();\n            } else  if(bindings[boundVar] != null) {\n                return QueryFilters.ebvTrue();\n            } else {\n                return QueryFilters.ebvFalse();\n            }\n        } else if(queryEngine.customFns[builtincall] != null) {\n            return queryEngine.customFns[builtincall](QueryFilters, ops);\n        } else {\n            throw (\"Builtin call \"+builtincall+\" not implemented yet\");\n        }\n    }\n};\n\nQueryFilters.runUnaryExpression = function(unaryexpression, expression, bindings, queryEngine, dataset, env) {\n    var op = QueryFilters.runFilter(expression, bindings,queryEngine, dataset, env);\n    if(QueryFilters.isEbvError(op)) {\n        return op;\n    }\n\n    if(unaryexpression === '!') {\n        var res = QueryFilters.ebv(op);\n        //console.log(\"** Unary ! \");\n        //console.log(op)\n        if(QueryFilters.isEbvError(res)) {\n            //console.log(\"--- ERROR\")\n            //console.log(QueryFilters.ebvFalse())\n            //console.log(\"\\r\\n\")\n\n            // ??\n            return QueryFilters.ebvFalse();\n        } else {\n            res = !res;\n            //console.log(\"--- BOOL\")\n            //console.log(QueryFilters.ebvBoolean(res))\n            //console.log(\"\\r\\n\")\n\n            return QueryFilters.ebvBoolean(res);\n        }\n    } else if(unaryexpression === '+') {\n        if(QueryFilters.isNumeric(op)) {\n            return op;\n        } else {\n            return QueryFilters.ebvError();\n        }\n    } else if(unaryexpression === '-') {\n        if(QueryFilters.isNumeric(op)) {\n            var clone = {};\n            for(var p in op) {\n                clone[p] = op[p];\n            }\n            clone.value = -clone.value;\n            return clone;\n        } else {\n            return QueryFilters.ebvError();\n        }\n    }\n};\n\nQueryFilters.runRegex = function(text, pattern, flags, bindings, queryEngine, dataset, env) {\n\n    if(text != null) {\n        text = QueryFilters.runFilter(text, bindings, queryEngine, dataset, env);\n    } else {\n        return QueryFilters.ebvError();\n    }\n\n    if(pattern != null) {\n        pattern = QueryFilters.runFilter(pattern, bindings, queryEngine, dataset, env);\n    } else {\n        return QueryFilters.ebvError();\n    }\n\n    if(flags != null) {\n        flags = QueryFilters.runFilter(flags, bindings, queryEngine, dataset, env);\n    }\n\n\n    if(pattern != null && pattern.token === 'literal' && (flags == null || flags.token === 'literal')) {\n        pattern = pattern.value;\n        flags = (flags == null) ? null : flags.value;\n    } else {\n        return QueryFilters.ebvError();\n    }\n\n    if(text!= null && text.token == 'var') {\n        if(bindings[text.value] != null) {\n            text = bindings[text.value];\n        } else {\n            return QueryFilters.ebvError();\n        }\n    } else if(text!=null && text.token === 'literal') {\n        if(text.type == null || QueryFilters.isXsdType(\"string\",text)) {\n            text = text.value\n        } else {\n            return QueryFilters.ebvError();\n        }\n    } else {\n        return QueryFilters.ebvError();\n    }\n\n    var regex;\n    if(flags == null) {\n        regex = new RegExp(pattern);\n    } else {\n        regex = new RegExp(pattern,flags.toLowerCase());\n    }\n    if(regex.exec(text)) {\n        return QueryFilters.ebvTrue();\n    } else {\n        return QueryFilters.ebvFalse();\n    }\n};\n\nQueryFilters.normalizeLiteralDatatype = function(literal, queryEngine, env) {\n    if(literal.value.type == null || typeof(literal.value.type) != 'object') {\n        return literal;\n    } else {\n        // type can be parsed as a hash using namespaces\n        literal.value.type =  Utils.lexicalFormBaseUri(literal.value.type, env);\n        return literal;\n    }\n};\n\nQueryFilters.runIriRefOrFunction = function(iriref, args, bindings,queryEngine, dataset, env) {\n    if(args == null) {\n        return iriref;\n    } else {\n        var ops = [];\n        for(var i=0; i<args.length; i++) {\n            ops.push(QueryFilters.runFilter(args[i], bindings, queryEngine, dataset, env));\n        }\n\n        var fun = Utils.lexicalFormBaseUri(iriref, env);\n\n        if(fun == xmlSchema+\"integer\" ||\n            fun == xmlSchema+\"decimal\" ||\n            fun == xmlSchema+\"double\" ||\n            fun == xmlSchema+\"nonPositiveInteger\" ||\n            fun == xmlSchema+\"negativeInteger\" ||\n            fun == xmlSchema+\"long\" ||\n            fun == xmlSchema+\"int\" ||\n            fun == xmlSchema+\"short\" ||\n            fun == xmlSchema+\"byte\" ||\n            fun == xmlSchema+\"nonNegativeInteger\" ||\n            fun == xmlSchema+\"unsignedLong\" ||\n            fun == xmlSchema+\"unsignedInt\" ||\n            fun == xmlSchema+\"unsignedShort\" ||\n            fun == xmlSchema+\"unsignedByte\" ||\n            fun == xmlSchema+\"positiveInteger\") {\n            var from = ops[0];\n            if(from.token === 'literal') {\n                from = QueryFilters.normalizeLiteralDatatype(from, queryEngine, env);\n                if(from.type == xmlSchema+\"integer\" ||\n                    from.type == xmlSchema+\"decimal\" ||\n                    from.type == xmlSchema+\"double\" ||\n                    from.type == xmlSchema+\"nonPositiveInteger\" ||\n                    from.type == xmlSchema+\"negativeInteger\" ||\n                    from.type == xmlSchema+\"long\" ||\n                    from.type == xmlSchema+\"int\" ||\n                    from.type == xmlSchema+\"short\" ||\n                    from.type == xmlSchema+\"byte\" ||\n                    from.type == xmlSchema+\"nonNegativeInteger\" ||\n                    from.type == xmlSchema+\"unsignedLong\" ||\n                    from.type == xmlSchema+\"unsignedInt\" ||\n                    from.type == xmlSchema+\"unsignedShort\" ||\n                    from.type == xmlSchema+\"unsignedByte\" ||\n                    from.type == xmlSchema+\"positiveInteger\") {\n                    from.type = fun;\n                    return from;\n                } else if(from.type == 'http://www.w3.org/2001/XMLSchema#boolean') {\n                    if(QueryFilters.ebv(from) == true) {\n                        from.type = fun;\n                        from.value = 1;\n                    } else {\n                        from.type = fun;\n                        from.value = 0;\n                    }\n                    return from;\n                } else if(from.type == 'http://www.w3.org/2001/XMLSchema#float' ||\n                    from.type == 'http://www.w3.org/2001/XMLSchema#double') {\n                    from.type = fun;\n                    from.value = parseInt(from.value);\n                    return from;\n                } else if(from.type == 'http://www.w3.org/2001/XMLSchema#string' || from.type == null) {\n                    if(from.value.split(\".\").length > 2) {\n                        return QueryFilters.ebvError();\n                    } else if (from.value.split(\"-\").length > 2) {\n                        return QueryFilters.ebvError();\n                    } else if (from.value.split(\"/\").length > 2) {\n                        return QueryFilters.ebvError();\n                    } else if (from.value.split(\"+\").length > 2) {\n                        return QueryFilters.ebvError();\n                    }\n\n                    // @todo improve this with regular expressions for each lexical representation\n                    if(fun == xmlSchema+\"decimal\") {\n                        if(from.value.indexOf(\"e\") != -1 || from.value.indexOf(\"E\") != -1) {\n                            return QueryFilters.ebvError();\n                        }\n                    }\n\n                    // @todo improve this with regular expressions for each lexical representation\n                    if(fun == xmlSchema+\"int\" || fun == xmlSchema+\"integer\") {\n                        if(from.value.indexOf(\"e\") != -1 || from.value.indexOf(\"E\") != -1 || from.value.indexOf(\".\") != -1) {\n                            return QueryFilters.ebvError();\n                        }\n                    }\n\n                    try {\n                        from.value = parseInt(parseFloat(from.value));\n                        if(isNaN(from.value)) {\n                            return QueryFilters.ebvError();\n                        } else {\n                            from.type = fun;\n                            return from;\n                        }\n                    } catch(e) {\n                        return QueryFilters.ebvError();\n                    }\n                } else {\n                    return QueryFilters.ebvError();\n                }\n            } else {\n                return QueryFilters.ebvError();\n            }\n        } else if(fun == xmlSchema+\"boolean\") {\n            var from = ops[0];\n            if(from.token === \"literal\" && from.type == null) {\n                if(from.value === \"true\" || from.value === \"1\") {\n                    return QueryFilters.ebvTrue();\n                } else if(from.value === \"false\" || from.value === \"0\" ) {\n                    return QueryFilters.ebvFalse();\n                } else {\n                    return QueryFilters.ebvError();\n                }\n            } else if(from.token === \"literal\") {\n                if(QueryFilters.isEbvError(from)) {\n                    return from;\n                } else {\n                    return QueryFilters.ebvBoolean(from);\n                }\n            } else {\n                return QueryFilters.ebvError();\n            }\n        } else if(fun == xmlSchema+\"string\") {\n            var from = ops[0];\n            if(from.token === 'literal') {\n                from = QueryFilters.normalizeLiteralDatatype(from, queryEngine, env);\n                if(from.type == xmlSchema+\"integer\" ||\n                    from.type == xmlSchema+\"decimal\" ||\n                    from.type == xmlSchema+\"double\" ||\n                    from.type == xmlSchema+\"nonPositiveInteger\" ||\n                    from.type == xmlSchema+\"negativeInteger\" ||\n                    from.type == xmlSchema+\"long\" ||\n                    from.type == xmlSchema+\"int\" ||\n                    from.type == xmlSchema+\"short\" ||\n                    from.type == xmlSchema+\"byte\" ||\n                    from.type == xmlSchema+\"nonNegativeInteger\" ||\n                    from.type == xmlSchema+\"unsignedLong\" ||\n                    from.type == xmlSchema+\"unsignedInt\" ||\n                    from.type == xmlSchema+\"unsignedShort\" ||\n                    from.type == xmlSchema+\"unsignedByte\" ||\n                    from.type == xmlSchema+\"positiveInteger\" ||\n                    from.type == xmlSchema+\"float\") {\n                    from.type = fun;\n                    from.value = \"\"+from.value;\n                    return from;\n                } else if(from.type == xmlSchema+\"string\") {\n                    return from;\n                } else if(from.type == xmlSchema+\"boolean\") {\n                    if(QueryFilters.ebv(from)) {\n                        from.type = fun;\n                        from.value = 'true';\n                    } else {\n                        from.type = fun;\n                        from.value = 'false';\n                    }\n                    return from;\n                } else if(from.type == xmlSchema+\"dateTime\" ||\n                    from.type == xmlSchema+\"date\") {\n                    from.type = fun;\n                    if(typeof(from.value) != 'string') {\n                        from.value = Utils.iso8601(from.value);\n                    }\n                    return from;\n                } else if(from.type == null) {\n                    from.value = \"\"+from.value;\n                    from.type = fun;\n                    return from;\n                } else {\n                    return QueryFilters.ebvError();\n                }\n            } else if(from.token === 'uri') {\n                return {token: 'literal',\n                    value: Utils.lexicalFormBaseUri(from, env),\n                    type: fun,\n                    lang: null};\n            } else {\n                return QueryFilters.ebvError();\n            }\n        } else if(fun == xmlSchema+\"dateTime\" || fun == xmlSchema+\"date\") {\n            from = ops[0];\n            if(from.type == xmlSchema+\"dateTime\" || from.type == xmlSchema+\"date\") {\n                return from;\n            } else if(from.type == xmlSchema+\"string\" || from.type == null) {\n                try {\n                    from.value = Utils.iso8601(Utils.parseISO8601(from.value));\n                    from.type = fun;\n                    return from;\n                } catch(e) {\n                    return QueryFilters.ebvError();\n                }\n            } else {\n                return QueryFilters.ebvError();\n            }\n        } else if(fun == xmlSchema+\"float\") {\n            var from = ops[0];\n            if(from.token === 'literal') {\n                from = QueryFilters.normalizeLiteralDatatype(from, queryEngine, env);\n                if(from.type == 'http://www.w3.org/2001/XMLSchema#decimal' ||\n                    from.type == 'http://www.w3.org/2001/XMLSchema#int') {\n                    from.type = fun;\n                    from.value = parseFloat(from.value);\n                    return from;\n                } else if(from.type == 'http://www.w3.org/2001/XMLSchema#boolean') {\n                    if(QueryFilters.ebv(from) == true) {\n                        from.type = fun;\n                        from.value = 1.0;\n                    } else {\n                        from.type = fun;\n                        from.value = 0.0;\n                    }\n                    return from;\n                } else if(from.type == 'http://www.w3.org/2001/XMLSchema#float' ||\n                    from.type == 'http://www.w3.org/2001/XMLSchema#double') {\n                    from.type = fun;\n                    from.value = parseFloat(from.value);\n                    return from;\n                } else if(from.type == 'http://www.w3.org/2001/XMLSchema#string') {\n                    try {\n                        from.value = parseFloat(from.value);\n                        if(isNaN(from.value)) {\n                            return QueryFilters.ebvError();\n                        } else {\n                            from.type = fun;\n                            return from;\n                        }\n                    } catch(e) {\n                        return QueryFilters.ebvError();\n                    }\n                } else if(from.type == null) {\n                    // checking some exceptions that are parsed as Floats by JS\n                    if(from.value.split(\".\").length > 2) {\n                        return QueryFilters.ebvError();\n                    } else if (from.value.split(\"-\").length > 2) {\n                        return QueryFilters.ebvError();\n                    } else if (from.value.split(\"/\").length > 2) {\n                        return QueryFilters.ebvError();\n                    } else if (from.value.split(\"+\").length > 2) {\n                        return QueryFilters.ebvError();\n                    }\n\n                    try {\n                        from.value = parseFloat(from.value);\n                        if(isNaN(from.value)) {\n                            return QueryFilters.ebvError();\n                        } else {\n                            from.type = fun;\n                            return from;\n                        }\n                    } catch(e) {\n                        return QueryFilters.ebvError();\n                    }\n                } else {\n                    return QueryFilters.ebvError();\n                }\n            } else {\n                return QueryFilters.ebvError();\n            }\n        }  else if(queryEngine.customFns[fun] != null) {\n            return queryEngine.customFns[fun](QueryFilters, ops);\n        } else {\n\n            // unknown function\n            return QueryFilters.ebvError();\n        }\n    }\n};\n\n\nmodule.exports = {\n    QueryFilters: QueryFilters\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/query_filters.js\n// module id = 217\n// module chunks = 2","var ClientRequest = require('./lib/request')\nvar IncomingMessage = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/index.js\n// module id = 218\n// module chunks = 2","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/lib/capability.js\n// module id = 219\n// module chunks = 2","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else if(self.push(new Buffer(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable)\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function(err) {\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/lib/response.js\n// module id = 220\n// module chunks = 2","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/node_modules/readable-stream/readable-browser.js\n// module id = 221\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n// TODO(bmeurer): Change this back to const once hole checks are\n// properly optimized away early in Ignition+TurboFan.\n/*<replacement>*/\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], self.emit.bind(self, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js\n// module id = 222\n// module chunks = 2","module.exports = require('events').EventEmitter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js\n// module id = 223\n// module chunks = 2","'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      processNextTick(emitErrorNT, this, err);\n    }\n    return;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      processNextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js\n// module id = 224\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = _isUint8Array(chunk) && !state.objectMode;\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    processNextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    processNextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      processNextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) processNextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js\n// module id = 225\n// module chunks = 2","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util-deprecate/browser.js\n// module id = 226\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return stream.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er, data) {\n      done(stream, er, data);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js\n// module id = 227\n// module chunks = 2","// **N3Store** objects store N3 triples by graph in memory.\n\nvar expandPrefixedName = require('./N3Util').expandPrefixedName;\n\n// ## Constructor\nfunction N3Store(triples, options) {\n  if (!(this instanceof N3Store))\n    return new N3Store(triples, options);\n\n  // The number of triples is initially zero.\n  this._size = 0;\n  // `_graphs` contains subject, predicate, and object indexes per graph.\n  this._graphs = Object.create(null);\n  // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n  // saving memory by using only numbers as keys in `_graphs`.\n  this._id = 0;\n  this._ids = Object.create(null);\n  this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n  this._entities = Object.create(null); // inverse of `_ids`\n  // `_blankNodeIndex` is the index of the last automatically named blank node\n  this._blankNodeIndex = 0;\n\n  // Shift parameters if `triples` is not given\n  if (!options && triples && !triples[0])\n    options = triples, triples = null;\n  options = options || {};\n\n  // Add triples and prefixes if passed\n  this._prefixes = Object.create(null);\n  if (options.prefixes)\n    this.addPrefixes(options.prefixes);\n  this.defaultGraph = options.defaultGraph || 'http://example.org/#defaultGraph';\n  if (triples)\n    this.addTriples(triples);\n}\n\nN3Store.prototype = {\n  // ## Public properties\n\n  // ### `size` returns the number of triples in the store.\n  get size() {\n    // Return the triple count if if was cached.\n    var size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of triples by counting to the deepest level.\n    var graphs = this._graphs, subjects, subject;\n    for (var graphKey in graphs)\n      for (var subjectKey in (subjects = graphs[graphKey].subjects))\n        for (var predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  },\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a triple to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex: function (index0, key0, key1, key2) {\n    // Create layers as necessary.\n    var index1 = index0[key0] || (index0[key0] = {});\n    var index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the triple.\n    var existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  },\n\n  // ### `_removeFromIndex` removes a triple from a three-layered index.\n  _removeFromIndex: function (index0, key0, key1, key2) {\n    // Remove the triple from the index.\n    var index1 = index0[key0], index2 = index1[key1], key;\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty.\n    for (key in index2) return;\n    delete index1[key1];\n    for (key in index1) return;\n    delete index0[key0];\n  },\n\n  // ### `_findInIndex` finds a set of triples in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be `null`, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting triple\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created triples.\n  _findInIndex: function (index0, key0, key1, key2, name0, name1, name2, graph) {\n    var results = [], tmp, index1, index2, varCount = !key0 + !key1 + !key2,\n        // depending on the number of variables, keys or reverse index are faster\n        entityKeys = varCount > 1 ? Object.keys(this._ids) : this._entities;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (var value0 in index0) {\n      var entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (var value1 in index1) {\n          var entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            var values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create triples for all items found in index 2.\n            for (var l = values.length - 1; l >= 0; l--) {\n              var result = { subject: '', predicate: '', object: '', graph: graph };\n              result[name0] = entity0;\n              result[name1] = entity1;\n              result[name2] = entityKeys[values[l]];\n              results.push(result);\n            }\n          }\n        }\n      }\n    }\n    return results;\n  },\n\n  // ### `_countInIndex` counts matching triples in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be `null`, which is interpreted as a wildcard.\n  _countInIndex: function (index0, key0, key1, key2) {\n    var count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (var value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (var value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the triple if it exists.\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all triples.\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  },\n\n  // ## Public methods\n\n  // ### `addTriple` adds a new N3 triple to the store.\n  // Returns if the triple index has changed, if the triple did not already exist.\n  addTriple: function (subject, predicate, object, graph) {\n    // Shift arguments if a triple object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Find the graph that will contain the triple.\n    graph = graph || this.defaultGraph;\n    var graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet.\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway.\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    var ids = this._ids;\n    var entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    var changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached triple count is now invalid.\n    this._size = null;\n    return changed;\n  },\n\n  // ### `addTriples` adds multiple N3 triples to the store.\n  addTriples: function (triples) {\n    for (var i = triples.length - 1; i >= 0; i--)\n      this.addTriple(triples[i]);\n  },\n\n  // ### `addPrefix` adds support for querying with the given prefix\n  addPrefix: function (prefix, iri) {\n    this._prefixes[prefix] = iri;\n  },\n\n  // ### `addPrefixes` adds support for querying with the given prefixes\n  addPrefixes: function (prefixes) {\n    for (var prefix in prefixes)\n      this.addPrefix(prefix, prefixes[prefix]);\n  },\n\n  // ### `removeTriple` removes an N3 triple from the store if it exists.\n  removeTriple: function (subject, predicate, object, graph) {\n    // Shift arguments if a triple object is given instead of components.\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n    graph = graph || this.defaultGraph;\n\n    // Find internal identifiers for all components.\n    var graphItem, ids = this._ids, graphs = this._graphs;\n    if (!(subject     = ids[subject]))   return false;\n    if (!(predicate   = ids[predicate])) return false;\n    if (!(object      = ids[object]))    return false;\n    if (!(graphItem   = graphs[graph]))       return false;\n\n    // Verify that the triple exists.\n    var subjects, predicates;\n    if (!(subjects   = graphItem.subjects[subject])) return false;\n    if (!(predicates = subjects[predicate])) return false;\n    if (!(object in predicates)) return false;\n\n    // Remove it from all indexes.\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty.\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  },\n\n  // ### `removeTriples` removes multiple N3 triples from the store.\n  removeTriples: function (triples) {\n    for (var i = triples.length - 1; i >= 0; i--)\n      this.removeTriple(triples[i]);\n  },\n\n  // ### `find` finds a set of triples matching a pattern, expanding prefixes as necessary.\n  // Setting `subject`, `predicate`, `object` or `graph` to a falsy value means an _anything_ wildcard.\n  find: function (subject, predicate, object, graph) {\n    var prefixes = this._prefixes;\n    return this.findByIRI(\n      expandPrefixedName(subject,   prefixes),\n      expandPrefixedName(predicate, prefixes),\n      expandPrefixedName(object,    prefixes),\n      expandPrefixedName(graph,     prefixes)\n    );\n  },\n\n  // ### `findByIRI` finds a set of triples matching a pattern.\n  // Setting `subject`, `predicate`, `object` or `graph` to a falsy value means an _anything_ wildcard.\n  findByIRI: function (subject, predicate, object, graph) {\n    var quads = [], graphs = {}, graphContents,\n        ids = this._ids, subjectId, predicateId, objectId;\n    // Either loop over all graphs, or over just one selected graph.\n    if (!graph)\n      graphs = this._graphs;\n    else\n      graphs[graph] = this._graphs[graph];\n\n    for (var graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (graphContents = graphs[graphId]) {\n        // Translate IRIs to internal index keys.\n        // Optimization: if the entity doesn't exist, no triples with it exist.\n        if (subject   && !(subjectId   = ids[subject]))   return quads;\n        if (predicate && !(predicateId = ids[predicate])) return quads;\n        if (object    && !(objectId    = ids[object]))    return quads;\n\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n          // If subject and object are given, the object index will be the fastest.\n            quads.push(this._findInIndex(graphContents.objects, objectId, subjectId, predicateId,\n                                         'object', 'subject', 'predicate', graphId));\n          else\n          // If only subject and possibly predicate are given, the subject index will be the fastest.\n            quads.push(this._findInIndex(graphContents.subjects, subjectId, predicateId, null,\n                                         'subject', 'predicate', 'object', graphId));\n        }\n        else if (predicateId)\n        // If only predicate and possibly object are given, the predicate index will be the fastest.\n          quads.push(this._findInIndex(graphContents.predicates, predicateId, objectId, null,\n                                       'predicate', 'object', 'subject', graphId));\n        else if (objectId)\n        // If only object is given, the object index will be the fastest.\n          quads.push(this._findInIndex(graphContents.objects, objectId, null, null,\n                                       'object', 'subject', 'predicate', graphId));\n        else\n        // If nothing is given, iterate subjects and predicates first\n          quads.push(this._findInIndex(graphContents.subjects, null, null, null,\n                                       'subject', 'predicate', 'object', graphId));\n      }\n    }\n    return quads.length === 1 ? quads[0] : quads.concat.apply([], quads);\n  },\n\n  // ### `count` returns the number of triples matching a pattern, expanding prefixes as necessary.\n  // Setting `subject`, `predicate`, or `object` to `null` means an _anything_ wildcard.\n  // Setting `graph` to `null` means the default graph.\n  count: function (subject, predicate, object, graph) {\n    var prefixes = this._prefixes;\n    return this.countByIRI(\n      expandPrefixedName(subject,   prefixes),\n      expandPrefixedName(predicate, prefixes),\n      expandPrefixedName(object,    prefixes),\n      expandPrefixedName(graph,     prefixes)\n    );\n  },\n\n  // ### `countByIRI` returns the number of triples matching a pattern.\n  // Setting `subject`, `predicate`, or `object` to `null` means an _anything_ wildcard.\n  // Setting `graph` to `null` means the default graph.\n  countByIRI: function (subject, predicate, object, graph) {\n    graph = graph || this.defaultGraph;\n    var graphItem = this._graphs[graph], ids = this._ids;\n\n    // If the specified graph contain no triples, there are no results.\n    if (!graphItem) return 0;\n\n    // Translate IRIs to internal index keys.\n    // Optimization: if the entity doesn't exist, no triples with it exist.\n    if (subject   && !(subject   = ids[subject]))   return 0;\n    if (predicate && !(predicate = ids[predicate])) return 0;\n    if (object    && !(object    = ids[object]))    return 0;\n\n    // Choose the optimal index, based on what fields are present\n    if (subject) {\n      if (object)\n        // If subject and object are given, the object index will be the fastest.\n        return this._countInIndex(graphItem.objects, object, subject, predicate);\n      else\n        // If only subject and possibly predicate are given, the subject index will be the fastest.\n        return this._countInIndex(graphItem.subjects, subject, predicate, object);\n    }\n    else if (predicate) {\n      // If only predicate and possibly object are given, the predicate index will be the fastest.\n      return this._countInIndex(graphItem.predicates, predicate, object, subject);\n    }\n    else {\n      // If only object is possibly given, the object index will be the fastest.\n      return this._countInIndex(graphItem.objects, object, subject, predicate);\n    }\n  },\n\n  // ### `createBlankNode` creates a new blank node, returning its name.\n  createBlankNode: function (suggestedName) {\n    var name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = '_:' + suggestedName, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = '_:b' + this._blankNodeIndex++; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    return name;\n  },\n};\n\n// ## Exports\n\n// Export the `N3Store` class as a whole.\nmodule.exports = N3Store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/n3/lib/N3Store.js\n// module id = 228\n// module chunks = 2","// **N3StreamParser** parses an N3 stream into a triple stream\nvar Transform = require('stream').Transform,\n    util = require('util'),\n    N3Parser = require('./N3Parser.js');\n\n// ## Constructor\nfunction N3StreamParser(options) {\n  if (!(this instanceof N3StreamParser))\n    return new N3StreamParser(options);\n\n  // Initialize Transform base class\n  Transform.call(this, { decodeStrings: true });\n  this._readableState.objectMode = true;\n\n  // Set up parser\n  var self = this, parser = new N3Parser(options);\n  parser.parse(\n    // Handle triples by pushing them down the pipeline\n    function (error, triple) {\n      triple && self.push(triple) ||\n      error  && self.emit('error', error);\n    },\n    // Emit prefixes through the `prefix` event\n    this.emit.bind(this, 'prefix'));\n\n  // Implement Transform methods on top of parser\n  this._transform = function (chunk, encoding, done) { parser.addChunk(chunk); done(); };\n  this._flush = function (done) { parser.end(); done(); };\n}\nutil.inherits(N3StreamParser, Transform);\n\n// ## Exports\n// Export the `N3StreamParser` class as a whole.\nmodule.exports = N3StreamParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/n3/lib/N3StreamParser.js\n// module id = 229\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-browserify/index.js\n// module id = 230\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n// TODO(bmeurer): Change this back to const once hole checks are\n// properly optimized away early in Ignition+TurboFan.\n/*<replacement>*/\nvar Buffer = require('safe-buffer').Buffer;\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Object.prototype.toString.call(obj) === '[object Uint8Array]' || Buffer.isBuffer(obj);\n}\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && Object.getPrototypeOf(chunk) !== Buffer.prototype && !state.objectMode) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], self.emit.bind(self, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_readable.js\n// module id = 231\n// module chunks = 2","module.exports = require('events').EventEmitter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/internal/streams/stream-browser.js\n// module id = 232\n// module chunks = 2","'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      processNextTick(emitErrorNT, this, err);\n    }\n    return;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      processNextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/internal/streams/destroy.js\n// module id = 233\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return stream.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er, data) {\n      done(stream, er, data);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_transform.js\n// module id = 234\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util/util.js\n// module id = 235\n// module chunks = 2","// **N3StreamWriter** serializes a triple stream into an N3 stream\nvar Transform = require('stream').Transform,\n    util = require('util'),\n    N3Writer = require('./N3Writer.js');\n\n// ## Constructor\nfunction N3StreamWriter(options) {\n  if (!(this instanceof N3StreamWriter))\n    return new N3StreamWriter(options);\n\n  // Initialize Transform base class\n  Transform.call(this, { encoding: 'utf8' });\n  this._writableState.objectMode = true;\n\n  // Set up writer with a dummy stream object\n  var self = this;\n  var writer = new N3Writer({\n    write: function (chunk, encoding, callback) { self.push(chunk); callback && callback(); },\n    end: function (callback) { self.push(null); callback && callback(); },\n  }, options);\n\n  // Implement Transform methods on top of writer\n  this._transform = function (triple, encoding, done) { writer.addTriple(triple, done); };\n  this._flush = function (done) { writer.end(done); };\n}\nutil.inherits(N3StreamWriter, Transform);\n\n// ## Exports\n// Export the `N3StreamWriter` class as a whole.\nmodule.exports = N3StreamWriter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/n3/lib/N3StreamWriter.js\n// module id = 236\n// module chunks = 2","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.3.0\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$toString = {}.toString;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    function lib$es6$promise$asap$$setAsap(asapFn) {\n      lib$es6$promise$asap$$asap = asapFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      var nextTick = process.nextTick;\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // setImmediate should be used instead instead\n      var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n        nextTick = setImmediate;\n      }\n      return function() {\n        nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertex() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertex();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$asap(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFullfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      var enumerator = this;\n\n      enumerator._instanceConstructor = Constructor;\n      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (enumerator._validateInput(input)) {\n        enumerator._input     = input;\n        enumerator.length     = input.length;\n        enumerator._remaining = input.length;\n\n        enumerator._init();\n\n        if (enumerator.length === 0) {\n          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n        } else {\n          enumerator.length = enumerator.length || 0;\n          enumerator._enumerate();\n          if (enumerator._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n      }\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$es6$promise$utils$$isArray(input);\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var enumerator = this;\n\n      var length  = enumerator.length;\n      var promise = enumerator.promise;\n      var input   = enumerator._input;\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        enumerator._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var enumerator = this;\n      var c = enumerator._instanceConstructor;\n\n      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n          entry._onerror = null;\n          enumerator._settledAt(entry._state, i, entry._result);\n        } else {\n          enumerator._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        enumerator._remaining--;\n        enumerator._result[i] = entry;\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var enumerator = this;\n      var promise = enumerator.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        enumerator._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          enumerator._result[i] = value;\n        }\n      }\n\n      if (enumerator._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n    var lib$es6$promise$promise$$counter = 0;\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this._id = lib$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        if (!lib$es6$promise$utils$$isFunction(resolver)) {\n          lib$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n          lib$es6$promise$promise$$needsNew();\n        }\n\n        lib$es6$promise$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor(lib$es6$promise$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          lib$es6$promise$asap$$asap(function(){\n            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es6-promise/dist/es6-promise.js\n// module id = 237\n// module chunks = 2","var async = require('./utils');\nvar Tree = require('./btree').Tree;\n\n/**\n * Temporal implementation of the lexicon\n */\n\n\nLexicon = function(callback){\n    var that = this;\n    this.defaultGraphOid = 0;\n    this.defaultGraphUri = \"https://github.com/antoniogarrote/rdfstore-js#default_graph\";\n    this.defaultGraphUriTerm = {\"token\":\"uri\",\"prefix\":null,\"suffix\":null,\"value\":this.defaultGraphUri};\n    this.oidCounter = 1;\n\n    async.seq(function(k){\n        new Tree(2,function(tree){\n            that.uris = tree;\n            k();\n        })\n    }, function(k){\n        new Tree(2, function(tree){\n            that.literals = tree;\n            k();\n        })\n    }, function(k){\n        new Tree(2, function(tree){\n            that.knownGraphs = tree;\n            k();\n        })\n    },function(k){\n        new Tree(2,function(tree){\n            that.oidUris = tree;\n            k();\n        })\n    }, function(k){\n        new Tree(2, function(tree){\n            that.oidLiterals = tree;\n            k();\n        })\n    }, function(k){\n        new Tree(2, function(tree){\n            that.oidBlanks = tree;\n            k();\n        })\n    })(function(){\n        if(callback != null)\n            callback(that);\n\n    });\n};\n\n/**\n * Registers a new graph in the lexicon list of known graphs.\n * @param oid\n * @param uriToken\n * @param callback\n */\nLexicon.prototype.registerGraph = function(oid, uriToken, callback){\n    if(oid != this.defaultGraphOid) {\n        this.knownGraphs.insert(oid, uriToken, function(){\n           callback();\n        });\n    } else {\n        callback();\n    }\n};\n\n/**\n * Returns the list of known graphs OIDs or URIs.\n * @param returnUris\n * @param callback\n */\nLexicon.prototype.registeredGraphs = function(returnUris, callback) {\n    var graphs = [];\n    this.knownGraphs.walk(function(node){\n        if(returnUris === true) {\n            graphs.push(node.data);\n        } else {\n            graphs.push(node.key);\n        }\n    },function(){\n        callback(graphs);\n    });\n};\n\n/**\n * Registers a URI in the lexicon. It returns the allocated OID for the URI.\n * As a side effect it increases the cost counter for that URI if it is already registered.\n * @param uri\n * @param callback\n * @returns URI's OID.\n */\nLexicon.prototype.registerUri = function(uri, callback) {\n    var that = this;\n    if(uri === this.defaultGraphUri) {\n        callback(this.defaultGraphOid);\n    } else{\n        this.uris.search(uri, function(oidData){\n            if(oidData == null){\n                var oid = that.oidCounter;\n                var oidStr = 'u'+oid;\n                that.oidCounter++;\n\n                async.seq(function(k){\n                    that.uris.insert(uri, [oid,0], function(){\n                        k();\n                    })\n                }, function(k){\n                    that.oidUris.insert(oidStr, uri, function(){\n                        k();\n                    })\n                })(function(){\n                    callback(oid);\n                });\n\n            } else {\n                oid = oidData[0];\n                oidData[1] = oidData[1] + 1;\n                callback(oid);\n            }\n        });\n    }\n};\n\n/**\n * Returns the OID associated to the URI.\n * If the URI hasn't been  associated in the lexicon, -1 is returned.\n * @param uri\n * @param callback\n */\nLexicon.prototype.resolveUri = function(uri,callback) {\n    if(uri === this.defaultGraphUri) {\n        callback(this.defaultGraphOid);\n    } else {\n        this.uris.search(uri, function(oidData){\n            if(oidData != null) {\n                callback(oidData[0]);\n            } else {\n                callback(-1);\n            }\n        });\n    }\n};\n\n\n/**\n * Returns the cost associated to the URI.\n * If the URI hasn't been associated in the lexicon, -1 is returned.\n * @param uri\n * @returns {*}\n */\nLexicon.prototype.resolveUriCost = function(uri, callback) {\n    if(uri === this.defaultGraphUri) {\n        callback(0);\n    } else {\n        this.uris.search(uri, function(oidData){\n            if(oidData != null) {\n                callback(oidData[1]);\n            } else {\n                callback(-1);\n            }\n        });\n    }\n};\n\n/**\n * Register a new blank node in the lexicon.\n * @param label\n * @returns {string}\n */\nLexicon.prototype.registerBlank = function(callback) {\n    var oid = this.oidCounter;\n    this.oidCounter++;\n    var oidStr = \"\"+oid;\n    this.oidBlanks.insert(oidStr, oidStr, function(){\n        callback(oid);\n    })\n};\n\n/**\n * @TODO: check this implementation. It shouldn't be possible to\n * use blank nodes by name, but it's not clear what happens when parsing.\n * @param label\n * @param callback\n */\nLexicon.prototype.resolveBlank = function(label,callback) {\n    var that = this;\n    this.oidBlanks.search(label, function(oidData){\n        if(oidData != null) {\n            callback(oidData);\n        } else {\n            // ??\n            var oid = that.oidCounter;\n            this.oidCounter++;\n            callback(\"\"+oid);\n            //\n        }\n    });\n};\n\n/**\n * Blank nodes don't have an associated cost.\n * @param label\n * @param callback\n * @returns {number}\n */\nLexicon.prototype.resolveBlankCost = function(label, callback) {\n    callback(0);\n};\n\n/**\n * Registers a new literal in the index.\n * @param literal\n * @param callback\n * @returns the OID of the newly registered literal\n */\nLexicon.prototype.registerLiteral = function(literal, callback) {\n    var that = this;\n\n        this.literals.search(literal, function(oidData){\n            if(oidData == null){\n                var oid = that.oidCounter;\n                var oidStr = 'l'+oid;\n                that.oidCounter++;\n\n                async.seq(function(k){\n                    that.literals.insert(literal, [oid,0], function(){\n                        k();\n                    })\n                }, function(k){\n                    that.oidLiterals.insert(oidStr, literal, function(){\n                        k();\n                    })\n                })(function(){\n                    callback(oid);\n                });\n\n            } else {\n                var oid = oidData[0];\n                oidData[1] = oidData[1] + 1;\n                callback(oid);\n            }\n        });\n};\n\n/**\n * Returns the OID of the resolved literal or -1 if no literal is found.\n * @param literal\n * @param callback\n */\nLexicon.prototype.resolveLiteral = function (literal,callback) {\n    this.literals.search(literal, function(oidData){\n        if(oidData != null) {\n            callback(oidData[0]);\n        } else {\n            callback(-1);\n        }\n    });\n};\n\n/**\n * Returns the cost associated to the literal or -1 if no literal is found.\n * @param literal\n * @param callback\n */\nLexicon.prototype.resolveLiteralCost = function (literal,callback) {\n    this.literals.search(literal, function(oidData){\n        if(oidData != null) {\n            callback(oidData[1]);\n        } else {\n            callback(-1);\n        }\n    });\n};\n\n\n/**\n * Transforms a literal string into a token object.\n * @param literalString\n * @returns A token object with the parsed literal.\n */\nLexicon.prototype.parseLiteral = function(literalString) {\n    var parts = literalString.lastIndexOf(\"@\");\n    if(parts!=-1 && literalString[parts-1]==='\"' && literalString.substring(parts, literalString.length).match(/^@[a-zA-Z\\-]+$/g)!=null) {\n        var value = literalString.substring(1,parts-1);\n        var lang = literalString.substring(parts+1, literalString.length);\n        return {token: \"literal\", value:value, lang:lang};\n    }\n\n    var parts = literalString.lastIndexOf(\"^^\");\n    if(parts!=-1 && literalString[parts-1]==='\"' && literalString[parts+2] === '<' && literalString[literalString.length-1] === '>') {\n        var value = literalString.substring(1,parts-1);\n        var type = literalString.substring(parts+3, literalString.length-1);\n\n        return {token: \"literal\", value:value, type:type};\n    }\n\n    var value = literalString.substring(1,literalString.length-1);\n    return {token:\"literal\", value:value};\n};\n\n/**\n * Parses a literal URI string into a token object\n * @param uriString\n * @returns A token object with the parsed URI.\n */\nLexicon.prototype.parseUri = function(uriString) {\n    return {token: \"uri\", value:uriString};\n};\n\n/**\n * Retrieves a token containing the URI, literal or blank node associated\n * to the provided OID.\n * If no value is found, null is returned.\n * @param oid\n * @param callback\n * @returns parsed token or null if not found.\n */\nLexicon.prototype.retrieve = function(oid, callback) {\n    var that = this;\n\n    if(oid === this.defaultGraphOid) {\n        callback({\n            token: \"uri\",\n            value:this.defaultGraphUri,\n            prefix: null,\n            suffix: null,\n            defaultGraph: true\n        });\n    } else {\n\n        async.seq(function(found,k){\n            that.oidUris.search('u'+oid, function(maybeUri) {\n                if(maybeUri != null) {\n                    k(null,that.parseUri(maybeUri));\n                } else {\n                    k(null,null);\n                }\n            })\n        }, function(found,k){\n            if(found == null) {\n                that.oidLiterals.search('l'+oid, function(maybeLiteral) {\n                    if (maybeLiteral != null) {\n                        k(null,that.parseLiteral(maybeLiteral));\n                    } else {\n                        k(null,null);\n                    }\n                });\n            } else {\n                k(null,found);\n            }\n        }, function(found,k){\n            if(found == null) {\n                that.oidBlanks.search(''+oid, function(maybeBlank) {\n                    if (maybeBlank != null) {\n                        k(null,{token:\"blank\", value:\"_:\"+oid});\n                    } else {\n                        k(null,null);\n                    }\n                });\n            } else {\n                k(null,found);\n            }\n        })(null,function(_,found){\n            callback(found);\n        });\n    }\n};\n\n/**\n * Empties the lexicon and restarts the counters.\n * @param callback\n */\nLexicon.prototype.clear = function(callback) {\n    var that = this;\n    this.defaultGraphOid = 0;\n    this.defaultGraphUri = \"https://github.com/antoniogarrote/rdfstore-js#default_graph\";\n    this.defaultGraphUriTerm = {\"token\":\"uri\",\"prefix\":null,\"suffix\":null,\"value\":this.defaultGraphUri};\n    this.oidCounter = 1;\n\n    async.seq(function(k){\n        new Tree(2,function(tree){\n            that.uris = tree;\n            k();\n        })\n    }, function(k){\n        new Tree(2, function(tree){\n            that.literals = tree;\n            k();\n        })\n    }, function(k){\n        new Tree(2, function(tree){\n            that.knownGraphs = tree;\n            k();\n        })\n    },function(k){\n        new Tree(2,function(tree){\n            that.oidUris = tree;\n            k();\n        })\n    }, function(k){\n        new Tree(2, function(tree){\n            that.oidLiterals = tree;\n            k();\n        })\n    }, function(k){\n        new Tree(2, function(tree){\n            that.oidBlanks = tree;\n            k();\n        })\n    })(function(){\n        if(callback != null)\n            callback();\n\n    });\n};\n\n/**\n * Removes the values associated to the subject, predicate, object and graph\n * values of the provided quad.\n * @param quad\n * @param key\n * @param callback\n */\nLexicon.prototype.unregister = function (quad, key, callback) {\n    var that = this;\n    async.seq(function(k){\n        that._unregisterTerm(quad.subject.token, key.subject,k);\n    }, function(k){\n        that._unregisterTerm(quad.predicate.token, key.predicate,k);\n    }, function(k){\n        that._unregisterTerm(quad.object.token, key.object, k);\n    }, function(k){\n        if (quad.graph != null) {\n            that._unregisterTerm(quad.graph.token, key.graph, k);\n        } else {\n            k();\n        }\n    })(function(){\n        callback(true);\n    });\n};\n\n/**\n * Unregisters a value, either URI, literal or blank.\n * @param kind\n * @param oid\n * @param callback\n * @private\n */\nLexicon.prototype._unregisterTerm = function (kind, oid, callback) {\n    var that = this;\n    if (kind === 'uri') {\n        if (oid != this.defaultGraphOid) {\n            var oidStr = 'u' + oid;\n            that.oidUris.search(oidStr, function(uri) {\n                that.uris.search(uri, function(oidData){\n                    var counter = oidData[1];\n                    if (\"\" + oidData[0] === \"\" + oid) {\n                        if (counter === 0) {\n                            async.seq(function(k) {\n                                that.oidUris.delete(oidStr, function () {\n                                    k();\n                                });\n                            }, function(k){\n                                that.uris.delete(uri, function(){\n                                    k();\n                                });\n                            }, function(k){\n                                // delete the graph oid from known graphs\n                                // in case this URI is a graph identifier\n                                that.knownGraphs.delete(oid, function(){\n                                   k();\n                                }) ;\n                            })(function(){\n                                callback();\n                            });\n                        } else {\n                            that.uris.insert(uri,[oid, counter - 1], function(){\n                                callback();\n                            });\n                        }\n                    } else {\n                        callback();\n                    }\n                });\n            });\n\n        } else {\n            callback();\n        }\n    } else if (kind === 'literal') {\n        this.oidCounter++;\n        var oidStr = 'l' + oid;\n\n        that.oidLiterals.search(oidStr, function(literal) {\n            that.literals.search(literal, function(oidData){\n                var counter = oidData[1];\n                if (\"\" + oidData[0] === \"\" + oid) {\n                    if (counter === 0) {\n                        async.seq(function(k) {\n                            that.oidLiterals.delete(oidStr, function () {\n                                k();\n                            });\n                        }, function(k){\n                            that.literals.delete(literal, function(){\n                                k();\n                            });\n                        })(function(){\n                            callback();\n                        })\n                    } else {\n                        that.literals.insert(literal,[oid, counter - 1], function(){\n                            callback();\n                        });\n                    }\n                } else {\n                    callback();\n                }\n            });\n        });\n\n    } else if (kind === 'blank') {\n        that.oidBlanks.delete(\"\" + oid, function(){\n            callback();\n        })\n    } else {\n        callback();\n    }\n};\n\nmodule.exports = {\n    Lexicon: Lexicon\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/lexicon.js\n// module id = 238\n// module chunks = 2","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/define-property.js\n// module id = 293\n// module chunks = 2","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.define-property.js\n// module id = 294\n// module chunks = 2","require('../../modules/es6.object.get-prototype-of');\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/get-prototype-of.js\n// module id = 295\n// module chunks = 2","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.get-prototype-of.js\n// module id = 296\n// module chunks = 2","module.exports = { \"default\": require(\"core-js/library/fn/symbol/iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/symbol/iterator.js\n// module id = 297\n// module chunks = 2","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/symbol/iterator.js\n// module id = 298\n// module chunks = 2","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_string-at.js\n// module id = 299\n// module chunks = 2","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-create.js\n// module id = 300\n// module chunks = 2","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dps.js\n// module id = 301\n// module chunks = 2","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-includes.js\n// module id = 302\n// module chunks = 2","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-absolute-index.js\n// module id = 303\n// module chunks = 2","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_html.js\n// module id = 304\n// module chunks = 2","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.array.iterator.js\n// module id = 305\n// module chunks = 2","module.exports = function () { /* empty */ };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_add-to-unscopables.js\n// module id = 306\n// module chunks = 2","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/symbol.js\n// module id = 307\n// module chunks = 2","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/symbol/index.js\n// module id = 308\n// module chunks = 2","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    replacer = args[1];\n    if (typeof replacer == 'function') $replacer = replacer;\n    if ($replacer || !isArray(replacer)) replacer = function (key, value) {\n      if ($replacer) value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.symbol.js\n// module id = 309\n// module chunks = 2","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_enum-keys.js\n// module id = 310\n// module chunks = 2","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn-ext.js\n// module id = 311\n// module chunks = 2","require('./_wks-define')('asyncIterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.symbol.async-iterator.js\n// module id = 312\n// module chunks = 2","require('./_wks-define')('observable');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.symbol.observable.js\n// module id = 313\n// module chunks = 2","module.exports = { \"default\": require(\"core-js/library/fn/object/set-prototype-of\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/set-prototype-of.js\n// module id = 314\n// module chunks = 2","require('../../modules/es6.object.set-prototype-of');\nmodule.exports = require('../../modules/_core').Object.setPrototypeOf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/set-prototype-of.js\n// module id = 315\n// module chunks = 2","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.set-prototype-of.js\n// module id = 316\n// module chunks = 2","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-proto.js\n// module id = 317\n// module chunks = 2","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/create.js\n// module id = 318\n// module chunks = 2","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/create.js\n// module id = 319\n// module chunks = 2","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.create.js\n// module id = 320\n// module chunks = 2","module.exports = { \"default\": require(\"core-js/library/fn/object/get-own-property-descriptor\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/get-own-property-descriptor.js\n// module id = 321\n// module chunks = 2","require('../../modules/es6.object.get-own-property-descriptor');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/get-own-property-descriptor.js\n// module id = 322\n// module chunks = 2","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js\n// module id = 323\n// module chunks = 2","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/get-iterator.js\n// module id = 324\n// module chunks = 2","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator.js\n// module id = 325\n// module chunks = 2","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.set');\nrequire('../modules/es7.set.to-json');\nrequire('../modules/es7.set.of');\nrequire('../modules/es7.set.from');\nmodule.exports = require('../modules/_core').Set;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/set.js\n// module id = 326\n// module chunks = 2","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.set.js\n// module id = 327\n// module chunks = 2","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-species.js\n// module id = 328\n// module chunks = 2","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-methods.js\n// module id = 329\n// module chunks = 2","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-species-create.js\n// module id = 330\n// module chunks = 2","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-species-constructor.js\n// module id = 331\n// module chunks = 2","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Set', { toJSON: require('./_collection-to-json')('Set') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.set.to-json.js\n// module id = 332\n// module chunks = 2","var forOf = require('./_for-of');\n\nmodule.exports = function (iter, ITERATOR) {\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-from-iterable.js\n// module id = 333\n// module chunks = 2","// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of\nrequire('./_set-collection-of')('Set');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.set.of.js\n// module id = 334\n// module chunks = 2","// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from\nrequire('./_set-collection-from')('Set');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.set.from.js\n// module id = 335\n// module chunks = 2","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nrequire('../modules/es7.map.of');\nrequire('../modules/es7.map.from');\nmodule.exports = require('../modules/_core').Map;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/map.js\n// module id = 336\n// module chunks = 2","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.map.js\n// module id = 337\n// module chunks = 2","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Map', { toJSON: require('./_collection-to-json')('Map') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.map.to-json.js\n// module id = 338\n// module chunks = 2","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of\nrequire('./_set-collection-of')('Map');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.map.of.js\n// module id = 339\n// module chunks = 2","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from\nrequire('./_set-collection-from')('Map');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.map.from.js\n// module id = 340\n// module chunks = 2","'use strict';\nimport { EMap, StringSet } from 'components/collection-utils';\nexport class UnifyMap {\n    constructor() {\n        this.idToIdSet = new EMap(() => new StringSet()); // id to sameAs ids\n        this.ifpVarPlusValueToIdSet = new EMap(() => new EMap(() => new StringSet())); // inverse functional properties & values to ids\n    }\n    consolidate(result, idVar = 'id', sameAsVar = 'sameAs', ifpVars = result.head.vars.filter(v => v.indexOf('ifp') === 0)) {\n        result.results.bindings.forEach(binding => {\n            let id = binding[idVar].value;\n            this.idToIdSet.goc(id).add(id);\n            if (binding[sameAsVar]) {\n                this.idToIdSet.get(id).add(binding[sameAsVar].value);\n                this.idToIdSet.goc(binding[sameAsVar].value).add(id);\n            }\n            for (let v of ifpVars)\n                if (binding[v])\n                    this.ifpVarPlusValueToIdSet.goc(v).goc(binding[v].value).add(id);\n        });\n        // create sameAses for all objects sharing the same inverse functional property values\n        this.ifpVarPlusValueToIdSet.each(valueToIdSet => valueToIdSet.each(ids => ids.each(id2 => this.idToIdSet.goc(id2).adds(ids))));\n        // consolidate id sets\n        this.idToIdSet.each((idSet) => idSet.each(id => {\n            let oidSet = this.idToIdSet.get(id);\n            if (idSet !== oidSet) {\n                this.idToIdSet.set(id, idSet);\n                idSet.adds(oidSet);\n            }\n        }));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/services/id-consolidation-utils.ts","/*!\nCopyright (C) 2013-2017 by Andrea Giammarchi - @WebReflection\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\nvar\n  // should be a not so common char\n  // possibly one JSON does not encode\n  // possibly one encodeURIComponent does not encode\n  // right now this char is '~' but this might change in the future\n  specialChar = '~',\n  safeSpecialChar = '\\\\x' + (\n    '0' + specialChar.charCodeAt(0).toString(16)\n  ).slice(-2),\n  escapedSafeSpecialChar = '\\\\' + safeSpecialChar,\n  specialCharRG = new RegExp(safeSpecialChar, 'g'),\n  safeSpecialCharRG = new RegExp(escapedSafeSpecialChar, 'g'),\n\n  safeStartWithSpecialCharRG = new RegExp('(?:^|([^\\\\\\\\]))' + escapedSafeSpecialChar),\n\n  indexOf = [].indexOf || function(v){\n    for(var i=this.length;i--&&this[i]!==v;);\n    return i;\n  },\n  $String = String  // there's no way to drop warnings in JSHint\n                    // about new String ... well, I need that here!\n                    // faked, and happy linter!\n;\n\nfunction generateReplacer(value, replacer, resolve) {\n  var\n    inspect = !!replacer,\n    path = [],\n    all  = [value],\n    seen = [value],\n    mapp = [resolve ? specialChar : '[Circular]'],\n    last = value,\n    lvl  = 1,\n    i, fn\n  ;\n  if (inspect) {\n    fn = typeof replacer === 'object' ?\n      function (key, value) {\n        return key !== '' && replacer.indexOf(key) < 0 ? void 0 : value;\n      } :\n      replacer;\n  }\n  return function(key, value) {\n    // the replacer has rights to decide\n    // if a new object should be returned\n    // or if there's some key to drop\n    // let's call it here rather than \"too late\"\n    if (inspect) value = fn.call(this, key, value);\n\n    // did you know ? Safari passes keys as integers for arrays\n    // which means if (key) when key === 0 won't pass the check\n    if (key !== '') {\n      if (last !== this) {\n        i = lvl - indexOf.call(all, this) - 1;\n        lvl -= i;\n        all.splice(lvl, all.length);\n        path.splice(lvl - 1, path.length);\n        last = this;\n      }\n      // console.log(lvl, key, path);\n      if (typeof value === 'object' && value) {\n    \t// if object isn't referring to parent object, add to the\n        // object path stack. Otherwise it is already there.\n        if (indexOf.call(all, value) < 0) {\n          all.push(last = value);\n        }\n        lvl = all.length;\n        i = indexOf.call(seen, value);\n        if (i < 0) {\n          i = seen.push(value) - 1;\n          if (resolve) {\n            // key cannot contain specialChar but could be not a string\n            path.push(('' + key).replace(specialCharRG, safeSpecialChar));\n            mapp[i] = specialChar + path.join(specialChar);\n          } else {\n            mapp[i] = mapp[0];\n          }\n        } else {\n          value = mapp[i];\n        }\n      } else {\n        if (typeof value === 'string' && resolve) {\n          // ensure no special char involved on deserialization\n          // in this case only first char is important\n          // no need to replace all value (better performance)\n          value = value .replace(safeSpecialChar, escapedSafeSpecialChar)\n                        .replace(specialChar, safeSpecialChar);\n        }\n      }\n    }\n    return value;\n  };\n}\n\nfunction retrieveFromPath(current, keys) {\n  for(var i = 0, length = keys.length; i < length; current = current[\n    // keys should be normalized back here\n    keys[i++].replace(safeSpecialCharRG, specialChar)\n  ]);\n  return current;\n}\n\nfunction generateReviver(reviver) {\n  return function(key, value) {\n    var isString = typeof value === 'string';\n    if (isString && value.charAt(0) === specialChar) {\n      return new $String(value.slice(1));\n    }\n    if (key === '') value = regenerate(value, value, {});\n    // again, only one needed, do not use the RegExp for this replacement\n    // only keys need the RegExp\n    if (isString) value = value .replace(safeStartWithSpecialCharRG, '$1' + specialChar)\n                                .replace(escapedSafeSpecialChar, safeSpecialChar);\n    return reviver ? reviver.call(this, key, value) : value;\n  };\n}\n\nfunction regenerateArray(root, current, retrieve) {\n  for (var i = 0, length = current.length; i < length; i++) {\n    current[i] = regenerate(root, current[i], retrieve);\n  }\n  return current;\n}\n\nfunction regenerateObject(root, current, retrieve) {\n  for (var key in current) {\n    if (current.hasOwnProperty(key)) {\n      current[key] = regenerate(root, current[key], retrieve);\n    }\n  }\n  return current;\n}\n\nfunction regenerate(root, current, retrieve) {\n  return current instanceof Array ?\n    // fast Array reconstruction\n    regenerateArray(root, current, retrieve) :\n    (\n      current instanceof $String ?\n        (\n          // root is an empty string\n          current.length ?\n            (\n              retrieve.hasOwnProperty(current) ?\n                retrieve[current] :\n                retrieve[current] = retrieveFromPath(\n                  root, current.split(specialChar)\n                )\n            ) :\n            root\n        ) :\n        (\n          current instanceof Object ?\n            // dedicated Object parser\n            regenerateObject(root, current, retrieve) :\n            // value as it is\n            current\n        )\n    )\n  ;\n}\n\nfunction stringifyRecursion(value, replacer, space, doNotResolve) {\n  return JSON.stringify(value, generateReplacer(value, replacer, !doNotResolve), space);\n}\n\nfunction parseRecursion(text, reviver) {\n  return JSON.parse(text, generateReviver(reviver));\n}\nthis.stringify = stringifyRecursion;\nthis.parse = parseRecursion;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/circular-json/build/circular-json.node.js\n// module id = 342\n// module chunks = 2","//imports\nvar AbstractQueryTree = require(\"./abstract_query_tree\").AbstractQueryTree;\nvar NonSupportedSparqlFeatureError = require(\"./abstract_query_tree\").NonSupportedSparqlFeatureError;\nvar Utils = require(\"./utils\");\nvar QuadIndex = require(\"./quad_index\");\nvar QueryPlan = require(\"./query_plan\").QueryPlan;\nvar QueryFilters = require(\"./query_filters\").QueryFilters;\nvar RDFModel = require(\"./rdf_model\");\nvar RDFLoader = require(\"./rdf_loader\").RDFLoader;\nvar Callbacks = require(\"./graph_callbacks\").CallbacksBackend;\nvar async = require('./utils');\nvar _ = require('./utils');\n\nfunction BindExpressionError(message, bind, error) {\n    this.name = \"BindExpressionError\";\n    this.bind = bind;\n    this.error = error;\n    this.message = message;\n}\nBindExpressionError.prototype = new Error();\nBindExpressionError.constructor = BindExpressionError;\n\nQueryEngine = function(params) {\n    if(arguments.length != 0) {\n        this.backend = params.backend;\n        this.lexicon = params.lexicon;\n        // batch loads should generate events?\n        this.eventsOnBatchLoad = (params.eventsOnBatchLoad || false);\n        // list of namespaces that will be automatically added to every query\n        this.defaultPrefixes = {};\n        this.abstractQueryTree = new AbstractQueryTree();\n        this.rdfLoader = new RDFLoader(params['communication']);\n        this.callbacksBackend = new Callbacks(this);\n        this.customFns = params.customFns || {};\n    }\n};\n\nQueryEngine.prototype.setCustomFunctions = function(customFns) {\n    this.customFns = customFns;\n};\n\n// Utils\nQueryEngine.prototype.registerNsInEnvironment = function(prologue, env) {\n    var prefixes = [];\n    if(prologue != null && prologue.prefixes != null) {\n        prefixes =prologue.prefixes;\n    }\n    var toSave = {};\n\n    // adding default prefixes;\n    for(var p in this.defaultPrefixes) {\n        toSave[p] = this.defaultPrefixes[p];\n    }\n\n    for(var i=0; i<prefixes.length; i++) {\n        var prefix = prefixes[i];\n        if(prefix.token === \"prefix\") {\n            toSave[prefix.prefix] = prefix.local;\n        }\n    }\n\n    env.namespaces = toSave;\n    if(prologue!=null && prologue.base && typeof(prologue.base) === 'object') {\n        env.base = prologue.base.value;\n    } else {\n        env.base = null;\n    }\n};\n\nQueryEngine.prototype.applyModifier = function(modifier, projectedBindings) {\n    if(modifier == \"DISTINCT\") {\n        var map = {};\n        var result = [];\n        for(var i=0; i<projectedBindings.length; i++) {\n            var bindings = projectedBindings[i];\n            var key = \"\";\n\n            // if no projection variables hash is passed, all the bound\n            // variable in the current bindings will be used.\n            for(var p in (bindings)) {\n                // hashing the object\n                var obj = bindings[p];\n                if(obj == null) {\n                    key = key+p+'null';\n                } else if(obj.token == 'literal') {\n                    if(obj.value != null) {\n                        key = key + obj.value;\n                    }\n                    if(obj.lang != null) {\n                        key = key + obj.lang;\n                    }\n                    if(obj.type != null) {\n                        key = key + obj.type;\n                    }\n                } else if(obj.value) {\n                    key  = key + p + obj.value;\n                } else {\n                    key = key + p + obj;\n                }\n            }\n\n            if(map[key] == null) {\n                // this will preserve the order in projectedBindings\n                result.push(bindings);\n                map[key] = true;\n            }\n        }\n        return result;\n    } else {\n        return projectedBindings;\n    }\n};\n\nQueryEngine.prototype.applyLimitOffset = function(offset, limit, bindings) {\n    if(limit == null && offset == null) {\n        return bindings;\n    }\n\n    if (offset == null) {\n        offset = 0;\n    }\n\n    if(limit == null) {\n        limit = bindings.length;\n    } else {\n        limit = offset + limit;\n    }\n\n    return bindings.slice(offset, limit);\n};\n\n\nQueryEngine.prototype.applySingleOrderBy = function(orderFilters, modifiedBindings, dataset, outEnv, callback) {\n    var acum = [];\n    var that = this;\n    async.eachSeries(orderFilters, function(orderFilter,k){\n        QueryFilters.collect(orderFilter.expression, [modifiedBindings], dataset, outEnv, that, function(results) {\n            acum.push(results[0].value);\n            k()\n        });\n    }, function(){\n        callback({binding:modifiedBindings, value:acum})\n    });\n};\n\nQueryEngine.prototype.applyOrderBy = function(order, modifiedBindings, dataset, outEnv, callback) {\n    var that = this;\n    var acum = [];\n    if(order != null && order.length > 0) {\n        async.eachSeries(modifiedBindings, function(bindings,k){\n            that.applySingleOrderBy(order, bindings, dataset, outEnv, function(results){\n                acum.push(results);\n                k();\n            });\n        }, function(){\n            acum.sort(function(a,b){\n                return that.compareFilteredBindings(a, b, order, outEnv);\n            });\n\n            var toReturn = [];\n            for(var i=0; i<acum.length; i++) {\n                toReturn.push(acum[i].binding);\n            }\n\n            callback(toReturn);\n        });\n\n    } else {\n        callback(modifiedBindings);\n    }\n};\n\nQueryEngine.prototype.compareFilteredBindings = function(a, b, order, env) {\n    var found = false;\n    var i = 0;\n    while(!found) {\n        if(i==a.value.length) {\n            return 0;\n        }\n        var direction = order[i].direction;\n        var filterResult;\n\n        // unbound first\n        if(a.value[i] == null && b.value[i] == null) {\n            i++;\n            continue;\n        }else if(a.value[i] == null) {\n            filterResult = {value: false};\n        } else if(b.value[i] == null) {\n            filterResult = {value: true};\n        } else\n\n        // blanks\n        if(a.value[i].token === 'blank' && b.value[i].token === 'blank') {\n            i++;\n            continue;\n        } else if(a.value[i].token === 'blank') {\n            filterResult = {value: false};\n        } else if(b.value[i].token === 'blank') {\n            filterResult = {value: true};\n        } else\n\n        // uris\n        if(a.value[i].token === 'uri' && b.value[i].token === 'uri') {\n            if(QueryFilters.runEqualityFunction(a.value[i], b.value[i], [], this, env).value == true) {\n                i++;\n                continue;\n            } else {\n                filterResult = QueryFilters.runTotalGtFunction(a.value[i], b.value[i], []);\n            }\n        } else if(a.value[i].token === 'uri') {\n            filterResult = {value: false};\n        } else if(b.value[i].token === 'uri') {\n            filterResult = {value: true};\n        } else\n\n        // simple literals\n        if(a.value[i].token === 'literal' && b.value[i].token === 'literal' && a.value[i].type == null && b.value[i].type == null) {\n            if(QueryFilters.runEqualityFunction(a.value[i], b.value[i], [], this, env).value == true) {\n                i++;\n                continue;\n            } else {\n                filterResult = QueryFilters.runTotalGtFunction(a.value[i], b.value[i], []);\n            }\n        } else if(a.value[i].token === 'literal' && a.value[i].type == null) {\n            filterResult = {value: false};\n        } else if(b.value[i].token === 'literal' && b.value[i].type == null) {\n            filterResult = {value: true};\n        } else\n\n        // literals\n        if(QueryFilters.runEqualityFunction(a.value[i], b.value[i], [], this, env).value == true) {\n            i++;\n            continue;\n        } else {\n            filterResult = QueryFilters.runTotalGtFunction(a.value[i], b.value[i], []);\n        }\n\n\n        // choose value for comparison based on the direction\n        if(filterResult.value == true) {\n            if(direction === \"ASC\") {\n                return 1;\n            } else {\n                return -1;\n            }\n        } else {\n            if(direction === \"ASC\") {\n                return -1;\n            } else {\n                return 1;\n            }\n        }\n    }\n};\n\nQueryEngine.prototype.removeDefaultGraphBindings = function(bindingsList, dataset) {\n    var onlyDefaultDatasets = [];\n    var namedDatasetsMap = {};\n    for(var i=0; i<dataset.named.length; i++) {\n        namedDatasetsMap[dataset.named[i].oid] = true;\n    }\n    for(i=0; i<dataset.implicit.length; i++) {\n        if(namedDatasetsMap[dataset.implicit[i].oid] == null) {\n            onlyDefaultDatasets.push(dataset.implicit[i].oid);\n        }\n    }\n    var acum = [];\n    for(i=0; i<bindingsList.length; i++) {\n        var bindings = bindingsList[i];\n        var foundDefaultGraph = false;\n        for(var p in bindings) {\n            for(var j=0; j<namedDatasetsMap.length; j++) {\n                if(bindings[p] === namedDatasetsMap[j]) {\n                    foundDefaultGraph = true;\n                    break;\n                }\n            }\n            if(foundDefaultGraph) {\n                break;\n            }\n        }\n        if(!foundDefaultGraph) {\n            acum.push(bindings);\n        }\n    }\n\n    return acum;\n};\n\n\nQueryEngine.prototype.aggregateBindings = function(projection, bindingsGroup, dataset, env, callback) {\n    this.copyDenormalizedBindings(bindingsGroup, env.outCache, function(denormBindings){\n        var aggregatedBindings = {};\n        for(var i=0; i<projection.length; i++) {\n            var aggregatedValue = QueryFilters.runAggregator(projection[i], denormBindings, this, dataset, env);\n            if(projection[i].alias) {\n                aggregatedBindings[projection[i].alias.value] = aggregatedValue;\n            } else {\n                aggregatedBindings[projection[i].value.value] = aggregatedValue;\n            }\n        }\n        callback(aggregatedBindings);\n    });\n};\n\n\nQueryEngine.prototype.projectBindings = function(projection, results, dataset) {\n    if(projection[0].kind === '*') {\n        return results;\n    } else {\n        var projectedResults = [];\n\n        for(var i=0; i<results.length; i++) {\n            var currentResult = results[i];\n            var currentProjected = {};\n            var shouldAdd = true;\n\n            for(var j=0; j< projection.length; j++) {\n                if(projection[j].token == 'variable' && projection[j].kind != 'aliased') {\n                    currentProjected[projection[j].value.value] = currentResult[projection[j].value.value];\n                } else if(projection[j].token == 'variable' && projection[j].kind == 'aliased') {\n                    var ebv = QueryFilters.runFilter(projection[j].expression, currentResult, this, dataset, {blanks:{}, outCache:{}});\n                    if(QueryFilters.isEbvError(ebv)) {\n                        shouldAdd = false;\n                        break;\n                    } else {\n                        currentProjected[projection[j].alias.value] = ebv;\n                    }\n                }\n            }\n\n            if(shouldAdd === true) {\n                projectedResults.push(currentProjected);\n            }\n\n        }\n\n        return projectedResults;\n    }\n};\n\nQueryEngine.prototype.resolveNsInEnvironment = function(prefix, env) {\n    var namespaces = env.namespaces;\n    return namespaces[prefix];\n};\n\nQueryEngine.prototype.normalizeTerm = function(term, env, shouldIndex, callback) {\n    if(term.token === 'uri') {\n        var uri = Utils.lexicalFormBaseUri(term, env);\n        if(uri == null) {\n            callback(null);\n        } else {\n            if(shouldIndex) {\n                this.lexicon.registerUri(uri,callback);\n            } else {\n                this.lexicon.resolveUri(uri,callback);\n            }\n        }\n\n    } else if(term.token === 'literal') {\n        var lexicalFormLiteral = Utils.lexicalFormLiteral(term, env);\n        if(shouldIndex) {\n            this.lexicon.registerLiteral(lexicalFormLiteral,callback);\n        } else {\n            this.lexicon.resolveLiteral(lexicalFormLiteral,callback);\n        }\n    } else if(term.token === 'blank') {\n        var label = term.value;\n        var oid = env.blanks[label];\n        if( oid != null) {\n            callback(oid);\n        } else {\n            if(shouldIndex) {\n                this.lexicon.registerBlank(function(oid){\n                    env.blanks[label] = oid;\n                    callback(oid);\n                });\n            } else {\n                // should never get here...\n                // is resolveBlank useful?\n                this.lexicon.resolveBlank(function(oid) {\n                    env.blanks[label] = oid;\n                    callback(oid);\n                });\n            }\n        }\n    } else if(term.token === 'var') {\n        callback(term.value);\n    } else {\n        callback(null);\n    }\n};\n\nQueryEngine.prototype.normalizeDatasets = function(datasets, outerEnv, callback) {\n    var that = this;\n    async.eachSeries(datasets, function(dataset, k){\n        if(dataset.value === that.lexicon.defaultGraphUri) {\n            dataset.oid = that.lexicon.defaultGraphOid;\n            k();\n        } else {\n            that.normalizeTerm(dataset, outerEnv, false, function(oid){\n                if(oid != null) {\n                    dataset.oid = oid;\n                }\n                k();\n            });\n        }\n    }, function(){\n        callback(true);\n    });\n};\n\nQueryEngine.prototype.normalizeQuad = function(quad, queryEnv, shouldIndex, callback) {\n    var subject    = null;\n    var predicate  = null;\n    var object     = null;\n    var graph      = null;\n    var that = this;\n    var error = false;\n\n    async.seq(function(k){\n        if(quad.graph == null || quad.graph.value === that.lexicon.defaultGraphUri) {\n            graph = 0; // default graph\n            k();\n        } else {\n            var graphUriValue = Utils.lexicalFormBaseUri(quad.graph, queryEnv);\n            that.normalizeTerm(quad.graph, queryEnv, shouldIndex, function(oid){\n                if(oid != null) {\n                    graph = oid;\n                    if(shouldIndex === true && quad.graph.token!='var') {\n                        that.lexicon.registerGraph(oid, graphUriValue, function(){\n                            k();\n                        });\n                    } else {\n                        k();\n                    }\n                } else {\n                    error = true;\n                    k();\n                }\n            });\n        }\n\n    }, function(k){\n        if(error === false) {\n            that.normalizeTerm(quad.subject, queryEnv, shouldIndex, function(oid){\n                if(oid!=null) {\n                    subject = oid;\n                    k();\n                } else {\n                    error = true;\n                    k();\n                }\n            });\n        } else {\n            k();\n        }\n    },function(k){\n        if(error === false) {\n            that.normalizeTerm(quad.predicate, queryEnv, shouldIndex, function(oid){\n                if(oid!=null) {\n                    predicate = oid;\n                    k();\n                } else {\n                    error = true;\n                    k();\n                }\n            });\n        } else {\n            k();\n        }\n    },function(k){\n        if(error === false) {\n            that.normalizeTerm(quad.object, queryEnv, shouldIndex, function(oid){\n                if(oid!=null) {\n                    object = oid;\n                    k();\n                } else {\n                    error = true;\n                    k();\n                }\n            });\n        } else {\n            k();\n        }\n    })(function(){\n        if(error === true){\n            callback(null);\n        } else {\n            callback({\n                subject:subject,\n                predicate:predicate,\n                object:object,\n                graph:graph\n            });\n        }\n    });\n};\n\nQueryEngine.prototype.denormalizeBindingsList = function(bindingsList, env, callback) {\n    var that = this;\n    var denormList = [];\n\n    async.eachSeries(bindingsList, function(bindings, k){\n        that.denormalizeBindings(bindings, env, function(denorm){\n            denormList.push(denorm);\n            k();\n        });\n    },function(){\n        callback(denormList);\n    });\n};\n\n/**\n * Receives a bindings map (var -> oid) and an out cache (oid -> value)\n * returns a bindings map (var -> value) storing in cache all the missing values for oids\n *\n * This is required just to save lookups when final results are generated.\n */\nQueryEngine.prototype.copyDenormalizedBindings = function(bindingsList, out, callback) {\n    var that = this;\n    var denormList = [];\n    async.eachSeries(bindingsList, function(bindings, k){\n        var denorm = {};\n        var variables = _.keys(bindings);\n        async.eachSeries(variables, function(variable, kk){\n            var oid = bindings[variable];\n            if(oid == null) {\n                // this can be null, e.g. union different variables (check SPARQL recommendation examples UNION)\n                denorm[variable] = null;\n                kk();\n            } else if(typeof(oid) === 'object') {\n                // the binding is already denormalized, this can happen for example because the value of the\n                // binding is the result of the aggregation of other bindings in a GROUP clause\n                denorm[variable] = oid;\n                kk();\n            } else {\n                var inOut = out[oid];\n                if(inOut!= null) {\n                    denorm[variable] = inOut;\n                    kk();\n                } else {\n                    that.lexicon.retrieve(oid, function(val){\n                        out[oid] = val;\n                        denorm[variable] = val;\n                        kk();\n                    });\n                }\n            }\n        },function(){\n            denormList.push(denorm);\n            k();\n        });\n    }, function(){\n        callback(denormList);\n    });\n};\n\nQueryEngine.prototype.denormalizeBindings = function(bindings, env, callback) {\n    var variables = _.keys(bindings);\n    var envOut = env.outCache;\n    var that = this;\n    async.eachSeries(variables, function(variable, k){\n        var oid = bindings[variable];\n        if(oid == null) {\n            // this can be null, e.g. union different variables (check SPARQL recommendation examples UNION)\n            bindings[variable] = null;\n            k();\n        } else if(typeof(oid) === 'object') {\n            // the binding is already denormalized, this can happen for example because the value of the\n            // binding is the result a BIND(expression AS ?new_var) binding.\n            k();\n        } else {\n            if(envOut[oid] != null) {\n                bindings[variable] = envOut[oid];\n                k();\n            } else {\n                that.lexicon.retrieve(oid, function(val){\n                    bindings[variable] = val;\n                    if(val.token === 'blank')\n                        env.blanks[val.value] = oid;\n                    k();\n                });\n            }\n        }\n    }, function(){\n        callback(bindings);\n    });\n};\n\n// Queries execution\n\nQueryEngine.prototype.execute = function(queryString, callback, defaultDataset, namedDataset){\n    //try{\n        queryString = Utils.normalizeUnicodeLiterals(queryString);\n        var syntaxTree = this.abstractQueryTree.parseQueryString(queryString);\n        if(syntaxTree == null) {\n            callback(false,\"Error parsing query string\");\n        } else {\n            if(syntaxTree.token === 'query' && syntaxTree.kind == 'update')  {\n                this.callbacksBackend.startGraphModification();\n                var that = this;\n                this.executeUpdate(syntaxTree, function(err, result){\n                    if(that.lexicon.updateAfterWrite)\n                        that.lexicon.updateAfterWrite();\n\n                    if(err) {\n                        that.callbacksBackend.cancelGraphModification();\n                        callback(err, result);\n                    } else {\n                        that.callbacksBackend.endGraphModification(function(){\n                            callback(err, result);\n                        });\n                    }\n                });\n            } else if(syntaxTree.token === 'query' && syntaxTree.kind == 'query') {\n                this.executeQuery(syntaxTree, callback, defaultDataset, namedDataset);\n            }\n        }\n    //} catch(e) {\n    //    callback(e);\n    //}\n};\n\n// Retrieval queries\n\nQueryEngine.prototype.executeQuery = function(syntaxTree, callback, defaultDataset, namedDataset) {\n    var prologue = syntaxTree.prologue;\n    var units = syntaxTree.units;\n    var that = this;\n\n    // environment for the operation -> base ns, declared ns, etc.\n    var queryEnv = {blanks:{}, outCache:{}};\n    this.registerNsInEnvironment(prologue, queryEnv);\n\n    // retrieval queries can only have 1 executable unit\n    var aqt = that.abstractQueryTree.parseExecutableUnit(units[0]);\n\n    // can be anything else but a select???\n    if(aqt.kind === 'select') {\n        this.executeSelect(aqt, queryEnv, defaultDataset, namedDataset, function(err, result){\n            if(err == null) {\n                if(typeof(result) === 'object' && result.denorm === true) {\n                    callback(null, result['bindings']);\n                } else {\n                    that.denormalizeBindingsList(result, queryEnv, function(result){\n                        callback(null, result);\n                    });\n                }\n            } else {\n                callback(err);\n            }\n        });\n    } else if(aqt.kind === 'ask') {\n        aqt.projection = [{\"token\": \"variable\", \"kind\": \"*\"}];\n        this.executeSelect(aqt, queryEnv, defaultDataset, namedDataset, function(err, result){\n            if(err == null) {\n                if(result.length>0) {\n                    callback(null, true);\n                } else {\n                    callback(null, false);\n                }\n            } else {\n                callback(err);\n            }\n        });\n    } else if(aqt.kind === 'construct') {\n        aqt.projection = [{\"token\": \"variable\", \"kind\": \"*\"}];\n        that = this;\n        this.executeSelect(aqt, queryEnv, defaultDataset, namedDataset, function(err, result){\n            if(err == null) {\n\n                that.denormalizeBindingsList(result, queryEnv, function(result){\n                    if(result != null) {\n                        var graph = new RDFModel.Graph();\n\n                        // CONSTRUCT WHERE {} case\n                        if(aqt.template == null) {\n                            aqt.template = {triplesContext: aqt.pattern};\n                        }\n                        var blankIdCounter = 1;\n                        var toClear = [];\n                        for(var i=0; i<result.length; i++) {\n                            var bindings = result[i];\n                            for(var j=0; j<toClear.length; j++)\n                                delete toClear[j].valuetmp;\n\n                            for(var j=0; j<aqt.template.triplesContext.length; j++) {\n                                // fresh IDs for blank nodes in the construct template\n                                var components = ['subject', 'predicate', 'object'];\n                                var tripleTemplate = aqt.template.triplesContext[j];\n                                for(var p=0; p<components.length; p++) {\n                                    var component = components[p];\n                                    if(tripleTemplate[component].token === 'blank') {\n                                        if(tripleTemplate[component].valuetmp && tripleTemplate[component].valuetmp != null) {\n                                        } else {\n                                            var blankId = \"_:b\"+blankIdCounter;\n                                            blankIdCounter++;\n                                            tripleTemplate[component].valuetmp = blankId;\n                                            toClear.push(tripleTemplate[component]);\n                                        }\n                                    }\n                                }\n                                var s = RDFModel.buildRDFResource(tripleTemplate.subject,bindings,that,queryEnv);\n                                var p = RDFModel.buildRDFResource(tripleTemplate.predicate,bindings,that,queryEnv);\n                                var o = RDFModel.buildRDFResource(tripleTemplate.object,bindings,that,queryEnv);\n                                if(s!=null && p!=null && o!=null) {\n                                    var triple = new RDFModel.Triple(s,p,o);\n                                    graph.add(triple);\n                                    //} else {\n                                    //    return callback(false, \"Error creating output graph\")\n                                }\n                            }\n                            }\n                        callback(null,graph);\n                    } else {\n                        callback(new Error(\"Error denormalizing bindings.\"));\n                    }\n                });\n            } else {\n                callback(err);\n            }\n        });\n    }\n};\n\n\n// Select queries\n\nQueryEngine.prototype.executeSelect = function(unit, env, defaultDataset, namedDataset, callback) {\n    if(unit.kind === \"select\" || unit.kind === \"ask\" || unit.kind === \"construct\" || unit.kind === \"modify\") {\n        var projection = unit.projection;\n        var dataset    = unit.dataset;\n        var modifier   = unit.modifier;\n        var limit      = unit.limit;\n        var offset     = unit.offset;\n        var order      = unit.order;\n        var that = this;\n\n        if(defaultDataset != null || namedDataset != null) {\n            dataset.implicit = defaultDataset || [];\n            dataset.named   = namedDataset || [];\n        }\n\n        if(dataset.implicit != null && dataset.implicit.length === 0 && dataset.named !=null && dataset.named.length === 0) {\n            // We add the default graph to the default merged graph\n            dataset.implicit.push(this.lexicon.defaultGraphUriTerm);\n        }\n\n\n        that.normalizeDatasets(dataset.implicit.concat(dataset.named), env, function(){\n            try {\n                that.executeSelectUnit(projection, dataset, unit.pattern, env, function (result) {\n                    if (result != null) {\n                        // detect single group\n                        if (unit.group != null && unit.group === \"\") {\n                            var foundUniqueGroup = false;\n                            for (var i = 0; i < unit.projection.length; i++) {\n                                if (unit.projection[i].expression != null && unit.projection[i].expression.expressionType === 'aggregate') {\n                                    foundUniqueGroup = true;\n                                    break;\n                                }\n                            }\n                            if (foundUniqueGroup === true) {\n                                unit.group = 'singleGroup';\n                            }\n                        }\n                        if (unit.group && unit.group != \"\") {\n                            if (that.checkGroupSemantics(unit.group, projection)) {\n                                that.groupSolution(result, unit.group, dataset, env, function(groupedBindings){\n                                    var aggregatedBindings = [];\n                                    async.eachSeries(groupedBindings, function(groupedBindingsGroup, k){\n                                        that.aggregateBindings(projection, groupedBindingsGroup, dataset, env, function(resultingBindings){\n                                            aggregatedBindings.push(resultingBindings);\n                                            k();\n                                        });\n                                    }, function(){\n                                        callback(null, {'bindings': aggregatedBindings, 'denorm': true});\n                                    });\n                                });\n                            } else {\n                                callback(new Error(\"Incompatible Group and Projection variables\"));\n                            }\n                        } else {\n                            that.applyOrderBy(order, result, dataset, env, function(orderedBindings){\n                                var projectedBindings = that.projectBindings(projection, orderedBindings, dataset);\n                                var modifiedBindings = that.applyModifier(modifier, projectedBindings);\n                                var limitedBindings = that.applyLimitOffset(offset, limit, modifiedBindings);\n                                var filteredBindings = that.removeDefaultGraphBindings(limitedBindings, dataset);\n\n                                callback(null, filteredBindings);\n                            });\n                        }\n\n                    } else { // fail selectUnit\n                        callback(new Error(\"Error executing SELECT query.\"));\n                    }\n                });\n            } catch(e) {\n                callback(e);\n            }\n        });\n    } else {\n        callback(new Error(\"Cannot execute \" + unit.kind + \" query as a select query\"));\n    }\n};\n\n\nQueryEngine.prototype.groupSolution = function(bindings, group, dataset, queryEnv, callback){\n    var order = [];\n    var filteredBindings = [];\n    var initialized = false;\n    var that = this;\n    if(group === 'singleGroup') {\n        callback([bindings]);\n    } else {\n        async.eachSeries(bindings, function(currentBindings,k){\n            var mustAddBindings = true;\n\n            /**\n             * In this loop, we iterate through all the group clauses and transform the current bindings\n             * according to the group by clauses.\n             * If it is the first iteration we also save in a different array the order for the\n             * grouped variables that will be used later to build the final groups\n             */\n            async.eachSeries(group, function(currentOrderClause, kk){\n                var orderVariable = null;\n\n                if(currentOrderClause.token === 'var') {\n                    orderVariable = currentOrderClause.value;\n\n                    if(initialized == false) {\n                        order.push(orderVariable);\n                    }\n                    kk();\n                } else if(currentOrderClause.token === 'aliased_expression') {\n                    orderVariable = currentOrderClause.alias.value;\n                    if(initialized == false) {\n                        order.push(orderVariable);\n                    }\n\n                    if(currentOrderClause.expression.primaryexpression === 'var') {\n                        currentBindings[currentOrderClause.alias.value] = currentBindings[currentOrderClause.expression.value.value];\n                    } else {\n                        var denormBindings = that.copyDenormalizedBindings([currentBindings], queryEnv.outCache);\n                        var filterResultEbv = QueryFilters.runFilter(currentOrderClause.expression, denormBindings[0], that, dataset, queryEnv);\n                        if(!QueryFilters.isEbvError(filterResultEbv)) {\n                            if(filterResultEbv.value != null) {\n                                filterResultEbv.value = \"\"+filterResultEbv.value;\n                            }\n                            currentBindings[currentOrderClause.alias.value]= filterResultEbv;\n                        } else {\n                            mustAddBindings = false;\n                        }\n                    }\n                    kk();\n                } else {\n                    // In this case, we create an additional variable in the binding to hold the group variable value\n                    that.copyDenormalizedBindings([currentBindings], queryEnv.outCache, function(denormBindings){\n                        var filterResultEbv = QueryFilters.runFilter(currentOrderClause, denormBindings[0], that, queryEnv);\n                        if(!QueryFilters.isEbvError(filterResultEbv)) {\n                            currentBindings[\"groupCondition\"+env._i] = filterResultEbv;\n                            orderVariable = \"groupCondition\"+env._i;\n                            if(initialized == false) {\n                                order.push(orderVariable);\n                            }\n\n                        } else {\n                            mustAddBindings = false;\n                        }\n                        kk();\n                    });\n                }\n            }, function(){\n                if(initialized == false) {\n                    initialized = true;\n                }\n                if(mustAddBindings === true) {\n                    filteredBindings.push(currentBindings);\n                }\n                k();\n            });\n        }, function(){\n            /**\n             * After processing all the bindings, we build the group using the\n             * information stored about the order of the group variables.\n             */\n            var dups = {};\n            var groupMap = {};\n            var groupCounter = 0;\n            for(var i=0; i<filteredBindings.length; i++) {\n                var currentTransformedBinding = filteredBindings[i];\n                var key = \"\";\n                for(var j=0; j<order.length; j++) {\n                    var maybeObject = currentTransformedBinding[order[j]];\n                    if(typeof(maybeObject) === 'object') {\n                        key = key + maybeObject.value;\n                    } else {\n                        key = key + maybeObject;\n                    }\n                }\n\n                if(dups[key] == null) {\n                    //currentTransformedBinding[\"__group__\"] = groupCounter;\n                    groupMap[key] = groupCounter;\n                    dups[key] = [currentTransformedBinding];\n                    //groupCounter++\n                } else {\n                    //currentTransformedBinding[\"__group__\"] = dups[key][0][\"__group__\"];\n                    dups[key].push(currentTransformedBinding);\n                }\n            }\n\n            // The final result is an array of arrays with all the groups\n            var groups = [];\n\n            for(var k in dups) {\n                groups.push(dups[k]);\n            }\n\n            callback(groups);\n        });\n    }\n};\n\n\n/**\n * Here, all the constructions of the SPARQL algebra are handled\n */\nQueryEngine.prototype.executeSelectUnit = function(projection, dataset, pattern, env, callback) {\n    if(pattern.kind === \"BGP\") {\n        this.executeAndBGP(projection, dataset, pattern, env, callback);\n    } else if(pattern.kind === \"UNION\") {\n        this.executeUNION(projection, dataset, pattern.value, env, callback);\n    } else if(pattern.kind === \"JOIN\") {\n        this.executeJOIN(projection, dataset, pattern, env, callback);\n    } else if(pattern.kind === \"LEFT_JOIN\") {\n        this.executeLEFT_JOIN(projection, dataset, pattern, env, callback);\n    } else if(pattern.kind === \"FILTER\") {\n        // Some components may have the filter inside the unit\n        var that = this;\n        this.executeSelectUnit(projection, dataset, pattern.value, env, function (results) {\n            if (results != null) {\n                QueryFilters.checkFilters(pattern, results, false, dataset, env, that, callback);\n            } else {\n                callback([]);\n            }\n        });\n    } else if(pattern.kind === \"EMPTY_PATTERN\") {\n        // as an example of this case  check DAWG test case: algebra/filter-nested-2\n        callback([]);\n    //} else if(pattern.kind === \"ZERO_OR_MORE_PATH\" || pattern.kind === 'ONE_OR_MORE_PATH') {\n    //    return this.executeZeroOrMorePath(pattern, dataset, env);\n    } else {\n        throw(new NonSupportedSparqlFeatureError(pattern.kind));\n    }\n};\n\n/*\nQueryEngine.prototype.executeZeroOrMorePath = function(pattern, dataset, env) {\n    //console.log(\"EXECUTING ZERO OR MORE PATH\");\n    //console.log(\"X\");\n    //console.log(pattern.x);\n    //console.log(\"Y\");\n    //console.log(pattern.y);\n    var projection = [];\n    var starProjection = false;\n    if(pattern.x.token === 'var') {\n        projection.push({token: 'variable',\n            kind: 'var',\n            value: pattern.x.value});\n    }\n    if(pattern.y.token === 'var') {\n        projection.push({token: 'variable',\n            kind: 'var',\n            value: pattern.y.value});\n    }\n\n    if(projection.length === 0) {\n        projection.push({\"token\": \"variable\", \"kind\": \"*\"});\n        starProjection = true;\n    }\n\n    //console.log(\"COMPUTED PROJECTION\");\n    //console.log(projection);\n\n\n    if(pattern.x.token === 'var' && pattern.y.token === 'var') {\n        var bindings = this.executeAndBGP(projection, dataset, pattern.path, env);\n        //console.log(\"BINDINGS \"+bindings.length);\n        //console.log(bindings);\n        var acum = {};\n        var results = [];\n        var vx, intermediate, nextBinding, vxDenorm;\n        var origVXName = pattern.x.value;\n        var last = pattern.x;\n        var nextPath = pattern.path;\n        //console.log(\"VAR - VAR PATTERN\");\n        //console.log(nextPath.value);\n        for(var i=0; i<bindings.length; i++) {\n            vx = bindings[i][origVXName];\n            if(acum[vx] == null) {\n                vxDenorm = this.lexicon.retrieve(vx);\n                pattern.x = vxDenorm;\n                //console.log(\"REPLACING\");\n                //console.log(last);\n                //console.log(\"BY\");\n                //console.log(vxDenorm);\n                //console.log(nextPath.value);\n                pattern.path = this.abstractQueryTree.replace(nextPath, last, vxDenorm, env);\n                nextPath = Utils.clone(pattern.path);\n                intermediate = this.executeZeroOrMorePath(pattern, dataset, env);\n                for(var j=0; j<intermediate.length; j++) {\n                    nextBinding = intermediate[j];\n                    nextBinding[origVXName] = vx;\n                    results.push(nextBinding)\n                }\n                last = vxDenorm;\n            }\n        }\n\n        //console.log(\"RETURNING VAR - VAR\");\n        return results;\n    } else if(pattern.x.token !== 'var' && pattern.y.token === 'var') {\n        var finished;\n        var acum = {};\n        var initial = true;\n        var pending = [];\n        var bindings,nextBinding;\n        var collected = [];\n        var origVx = pattern.x;\n        var last;\n\n        while(initial == true || pending.length !== 0) {\n            //console.log(\"-- Iteration\");\n            //console.log(pattern.path.value[0]);\n            if(initial === true) {\n                bindings = this.executeAndBGP(projection, dataset, pattern.path, env);\n                //console.log(\"SAVING LAST\");\n                //console.log(pattern.x);\n                last = pattern.x;\n                initial = false;\n            } else {\n                var nextOid = pending.pop();\n                //console.log(\"POPPING:\"+nextOid);\n                var value = this.lexicon.retrieve(nextOid);\n                var path = pattern.path; //Utils.clone(pattern.path);\n                //console.log(path.value[0]);\n                //console.log(\"REPLACING\");\n                //console.log(last);\n                //console.log(\"BY\");\n                //console.log(value);\n                path = this.abstractQueryTree.replace(path, last, value, env);\n                //console.log(path.value[0]);\n                bindings = this.executeAndBGP(projection, dataset, path, env);\n                last = value;\n            }\n\n\n            //console.log(\"BINDINGS!\");\n            //console.log(bindings);\n\n            for(var i=0; i<bindings.length; i++) {\n                //console.log(bindings[i][pattern.y.value])\n                var value = bindings[i][pattern.y.value];\n                //console.log(\"VALUE:\"+value);\n                if(acum[value] !== true) {\n                    nextBinding = {};\n                    nextBinding[pattern.y.value] = value;\n                    collected.push(nextBinding);\n                    acum[value] = true;\n                    pending.push(value);\n                }\n            }\n        }\n        //console.log(\"RETURNING TERM - VAR\");\n        //console.log(collected);\n        return collected;\n    } else {\n        throw \"Kind of path not supported!\";\n    }\n};\n*/\n\nQueryEngine.prototype.executeUNION = function(projection, dataset, patterns, env, callback) {\n    var setQuery1 = patterns[0];\n    var setQuery2 = patterns[1];\n    var error = null;\n    var set1,set2;\n\n\n    if(patterns.length != 2) {\n        throw(\"SPARQL algebra UNION with more than two components\");\n    }\n\n    var that = this;\n    async.seq(\n        function(k){\n            try {\n                that.executeSelectUnit(projection, dataset, setQuery1, env, function (result) {\n                    set1 = result;\n                    k();\n                });\n            } catch(e) {\n                error = e;\n                k();\n            }\n        },\n    function(k){\n        if(error == null) {\n            try {\n                that.executeSelectUnit(projection, dataset, setQuery2, env, function (result) {\n                    set2 = result;\n                    k();\n                });\n            } catch(e) {\n                error = e;\n                k();\n            }\n        } else {\n            k();\n        }\n    })(function(){\n        if(error != null) {\n            callback(error);\n        } else {\n            var result = QueryPlan.unionBindings(set1, set2);\n            that.runBinds(patterns.binds, result, dataset, env, function(err, bindings){\n                if(err != null) {\n                    throw(new BindExpressionError(\"Error processing bind expressions\", patterns.binds, err));\n                } else {\n                    QueryFilters.checkFilters(patterns, bindings, false, dataset, env, that, callback);\n                }\n            });\n        }\n    });\n};\n\nQueryEngine.prototype.executeAndBGP = function(projection, dataset, pattern, env, callback) {\n    var that = this;\n    QueryPlan.executeAndBGPsDPSize(pattern.value, dataset, this, env, function(result){\n        if(result!=null) {\n            that.runBinds(pattern.binds, result, dataset, env, function(err, bindings){\n                if(err != null) {\n                    throw(new BindExpressionError(\"Error processing bind expressions\", pattern.binds, err));\n                } else {\n                    QueryFilters.checkFilters(pattern, bindings, false, dataset, env, that, callback);\n                }\n            });\n        } else {\n            callback(null);\n        }\n    });\n};\n\nQueryEngine.prototype.executeLEFT_JOIN = function(projection, dataset, patterns, env, callback) {\n    var setQuery1 = patterns.lvalue;\n    var setQuery2 = patterns.rvalue;\n    if(setQuery1.kind === \"EMPTY_PATTERN\") {\n        // LEFT JOIN ( Z | X) => X\n        this.executeSelectUnit(projection, dataset, setQuery2, env, callback);\n    } else {\n        var set1 = null;\n        var set2 = null;\n        var error = null;\n\n        var that = this;\n        var acum, duplicates;\n\n        async.seq(\n            function(k){\n                try {\n                    that.executeSelectUnit(projection, dataset, setQuery1, env, function (result) {\n                        set1 = result;\n                        k();\n                    });\n                } catch(e) {\n                    error = e;\n                    k();\n                }\n            },\n            function(k){\n                if(error != null) {\n                    k();\n                } else {\n                    try {\n                        that.executeSelectUnit(projection, dataset, setQuery2, env, function (result) {\n                            set2 = result;\n                            k();\n                        });\n                    } catch(e) {\n                        error = e;\n                        k();\n                    }\n                }\n            })(\n            function(){\n                if(error != null) {\n                    callback(error);\n                } else {\n                    var result = QueryPlan.leftOuterJoinBindings(set1, set2);\n                    that.runBinds(patterns.binds, result, dataset, env, function(err, bindings){\n                        if(err != null) {\n                            throw(new BindExpressionError(\"Error processing bind expressions\", patterns.binds, err));\n                        } else {\n                            QueryFilters.checkFilters(patterns, result, true, dataset, env, that, function(bindings){\n                                if(set1.length>1 && set2.length>1) {\n                                    var vars = [];\n                                    var vars1 = {};\n                                    for(var p in set1[0]) {\n                                        vars1[p] = true;\n                                    }\n                                    for(p in set2[0]) {\n                                        if(vars1[p] != true) {\n                                            vars.push(p);\n                                        }\n                                    }\n                                    acum = [];\n                                    duplicates = {};\n                                    for(var i=0; i<bindings.length; i++) {\n                                        if(bindings[i][\"__nullify__\"] === true) {\n                                            for(var j=0; j<vars.length; j++) {\n                                                bindings[i][\"bindings\"][vars[j]] = null;\n                                            }\n                                            var idx = [];\n                                            var idxColl = [];\n                                            for(var p in bindings[i][\"bindings\"]) {\n                                                if(bindings[i][\"bindings\"][p] != null) {\n                                                    idx.push(p+bindings[i][\"bindings\"][p]);\n                                                    idx.sort();\n                                                    idxColl.push(idx.join(\"\"));\n                                                }\n                                            }\n                                            // reject duplicates -> (set union)\n                                            if(duplicates[idx.join(\"\")]==null) {\n                                                for(j=0; j<idxColl.length; j++) {\n                                                    //console.log(\" - \"+idxColl[j])\n                                                    duplicates[idxColl[j]] = true;\n                                                }\n                                                ////duplicates[idx.join(\"\")]= true\n                                                acum.push(bindings[i][\"bindings\"]);\n                                            }\n                                        } else {\n                                            acum.push(bindings[i]);\n                                            var idx = [];\n                                            var idxColl = [];\n                                            for(var p in bindings[i]) {\n                                                idx.push(p+bindings[i][p]);\n                                                idx.sort();\n                                                //console.log(idx.join(\"\") + \" -> ok\");\n                                                duplicates[idx.join(\"\")] = true;\n                                            }\n\n                                        }\n                                    }\n\n                                    callback(acum);\n                                } else {\n                                    callback(bindings);\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n    }\n};\n\nQueryEngine.prototype.executeJOIN = function(projection, dataset, patterns, env, callback) {\n    var setQuery1 = patterns.lvalue;\n    var setQuery2 = patterns.rvalue;\n    var set1 = null;\n    var set2 = null;\n    var error = null;\n\n    var that = this;\n\n    async.seq(\n        function(k){\n            try {\n                that.executeSelectUnit(projection, dataset, setQuery1, env, function (result) {\n                    set1 = result;\n                    k();\n                });\n            } catch(e) {\n                error = e;\n                k();\n            }\n        },\n        function(k){\n            if(error != null) {\n                k();\n            } else {\n                try {\n                    that.executeSelectUnit(projection, dataset, setQuery2, env, function (result) {\n                        set2 = result;\n                        k();\n                    });\n                } catch(e) {\n                    error = e;\n                    k();\n                }\n            }\n        })(\n        function(){\n            var result = null;\n            if(error != null) {\n                callback(error);\n            } else if(set1.length ===0 || set2.length===0) {\n                callback([]);\n            } else {\n                var commonVarsTmp = {};\n                var commonVars = [];\n\n                for(var p in set1[0])\n                    commonVarsTmp[p] = false;\n                for(var p  in set2[0]) {\n                    if(commonVarsTmp[p] === false)\n                        commonVars.push(p);\n                }\n\n                if(commonVars.length == 0) {\n                    result = QueryPlan.joinBindings(set1,set2);\n                } else if(that.abstractQueryTree.treeWithUnion(setQuery1) ||\n                    that.abstractQueryTree.treeWithUnion(setQuery2)) {\n                    result = QueryPlan.joinBindings(set1,set2);\n                } else {\n                    result = QueryPlan.joinBindings2(commonVars, set1, set2);\n                }\n                that.runBinds(patterns.binds, result, dataset, env, function(err, bindings){\n                    if(err != null) {\n                        throw(new BindExpressionError(\"Error processing bind expressions\", patterns.binds, err));\n                    } else {\n                        QueryFilters.checkFilters(patterns, bindings, false, dataset, env, that, callback);\n                    }\n                });\n            }\n        });\n};\n\n\nQueryEngine.prototype.rangeQuery = function(quad, queryEnv, callback) {\n    var that = this;\n    that.normalizeQuad(quad, queryEnv, false, function(key){\n        if(key != null) {\n            that.backend.range(new QuadIndex.Pattern(key), function(quads) {\n                if(quads == null || quads.length == 0) {\n                    callback([]);\n                } else {\n                    callback(quads);\n                }\n            });\n        } else {\n            callback(null);\n        }\n    });\n};\n\n// Update queries\n\nQueryEngine.prototype.executeUpdate = function(syntaxTree, callback) {\n    var prologue = syntaxTree.prologue;\n    var units = syntaxTree.units;\n    var that = this;\n\n    // environment for the operation -> base ns, declared ns, etc.\n    var queryEnv = {blanks:{}, outCache:{}};\n    this.registerNsInEnvironment(prologue, queryEnv);\n    for(var i=0; i<units.length; i++) {\n\n        var aqt = that.abstractQueryTree.parseExecutableUnit(units[i]);\n        if(aqt.kind === 'insertdata') {\n            var error = null;\n            async.eachSeries(aqt.quads, function(quad, k){\n                if(error === null) {\n                    that._executeQuadInsert(quad, queryEnv, function(err) {\n                        if(err != null)\n                            error = err;\n                        k();\n                    });\n                } else {\n                    k();\n                }\n            }, function(){\n                if(error === null)\n                    callback(null, true);\n                else\n                    callback(error);\n            });\n        } else if(aqt.kind === 'deletedata') {\n            var error = null;\n            async.eachSeries(aqt.quads, function(quad, k){\n                if(error === null) {\n                    that._executeQuadDelete(quad, queryEnv, function(err) {\n                        if(err != null)\n                            error = err;\n                        k();\n                    });\n                } else {\n                    k();\n                }\n            }, function(){\n                if(error === null)\n                    callback(null, true);\n                else\n                    callback(error);\n            });\n        } else if(aqt.kind === 'modify') {\n            this._executeModifyQuery(aqt, queryEnv, callback);\n        } else if(aqt.kind === 'create') {\n            callback(true);\n        } else if(aqt.kind === 'load') {\n            var graph = {'uri': Utils.lexicalFormBaseUri(aqt.sourceGraph, queryEnv)};\n            if(aqt.destinyGraph != null) {\n                graph = {'uri': Utils.lexicalFormBaseUri(aqt.destinyGraph, queryEnv)};\n            }\n            var that = this;\n            this.rdfLoader.load(aqt.sourceGraph.value, graph, function(err, result){\n                if(err) {\n                    callback(new Error(\"error batch loading quads\"));\n                } else {\n                    that.batchLoad(result,function(result){\n                        if(result !== null) {\n                            callback(null, result);\n                        } else {\n                            callback(new Error(\"Error batch loading quads\"));\n                        }\n                    });\n                }\n            });\n        } else if(aqt.kind === 'drop') {\n            this._executeClearGraph(aqt.destinyGraph, queryEnv, callback);\n        } else if(aqt.kind === 'clear') {\n            this._executeClearGraph(aqt.destinyGraph, queryEnv, callback);\n        } else {\n            throw new Error(\"not supported execution unit\");\n        }\n    }\n};\n\nQueryEngine.prototype.batchLoad = function(quads, callback) {\n    var counter = 0;\n    var blanks = {};\n    var that = this;\n\n    if(this.eventsOnBatchLoad)\n        this.callbacksBackend.startGraphModification();\n\n    // subject\n    var registerComponent = function(quad, component, newQuad, k) {\n        var maybeBlankOid, oid, quad;\n\n        if (quad[component]['uri'] || quad[component].token === 'uri') {\n            var uriValue = (quad[component].uri || quad[component].value);\n            that.lexicon.registerUri(uriValue, function(oid){\n                var returnUriComponent = function(){\n                    if (quad[component].uri != null) {\n                        quad[component] = {'token': 'uri', 'value': quad[component].uri};\n                        delete quad[component]['uri'];\n                    }\n                    newQuad[component] = oid;\n                    k();\n                };\n\n                if(component === 'graph') {\n                    that.lexicon.registerGraph(oid, uriValue, function(){\n                        returnUriComponent();\n                    });\n                } else {\n                    returnUriComponent();\n                }\n            });\n        } else if (quad[component]['literal'] || quad[component].token === 'literal') {\n            that.lexicon.registerLiteral(quad[component].literal || quad[component].value, function(oid){\n                if (quad[component].literal != null) {\n                    quad[component] = that.lexicon.parseLiteral(quad[component].literal);\n                    delete quad[component]['literal'];\n                }\n                newQuad[component] = oid;\n                k();\n            });\n        } else {\n            maybeBlankOid = blanks[quad[component].blank || quad[component].value];\n            if (maybeBlankOid == null) {\n                that.lexicon.registerBlank(function(maybeBlankOid){\n                    blanks[(quad[component].blank || quad[component].value)] = maybeBlankOid;\n\n                    if (quad[component].token == null) {\n                        quad[component].token = 'blank';\n                        quad[component].value = quad[component].blank;\n                        delete quad[component]['blank'];\n                    }\n                    newQuad[component] = maybeBlankOid;\n                    k();\n                });\n\n            } else {\n                if (quad[component].token == null) {\n                    quad[component].token = 'blank';\n                    quad[component].value = quad[component].blank;\n                    delete quad[component]['blank'];\n                }\n                newQuad[component] = maybeBlankOid;\n                k();\n            }\n        }\n\n    };\n\n\n    async.eachSeries(quads, function(quad,k){\n        var newQuad = {};\n        async.eachSeries(['subject','predicate','object','graph'], function(component,kk){\n            registerComponent(quad, component, newQuad, kk)\n        }, function(){\n            var originalQuad = quad;\n            quad = newQuad;\n            var key = new QuadIndex.NodeKey(quad);\n\n            that.backend.search(key, function(result){\n                if(!result) {\n                    that.backend.index(key, function(result){\n                        if(result){\n                            if(that.eventsOnBatchLoad)\n                                that.callbacksBackend.nextGraphModification(Callbacks.added, [originalQuad,quad]);\n                            counter = counter + 1;\n                        }\n                        k();\n                    });\n                } else {\n                    k();\n                }\n            });\n\n        });\n    }, function(){\n        if(that.lexicon.updateAfterWrite != null)\n            that.lexicon.updateAfterWrite();\n\n        var exitFn = function(){\n            callback(counter);\n        };\n\n        if(that.eventsOnBatchLoad) {\n            that.callbacksBackend.endGraphModification(exitFn());\n        } else {\n            exitFn();\n        }\n    });\n};\n\n// Low level operations for update queries\n\nQueryEngine.prototype._executeModifyQuery = function(aqt, queryEnv, callback) {\n    var that = this;\n    var querySuccess = true;\n    var error = new Error(\"Error executing modify query\");\n    var bindings = null;\n    var components = ['subject', 'predicate', 'object', 'graph'];\n\n    aqt.insert = aqt.insert == null ? [] : aqt.insert;\n    aqt.delete = aqt.delete == null ? [] : aqt.delete;\n\n    async.seq(\n        function(k) {\n            // select query\n\n            var defaultGraph = [];\n            var namedGraph = [];\n\n            if(aqt.with != null) {\n                defaultGraph.push(aqt.with);\n            }\n\n            if(aqt.using != null) {\n                namedGraph = [];\n                for(var i=0; i<aqt.using.length; i++) {\n                    var usingGraph = aqt.using[i];\n                    if(usingGraph.kind === 'named') {\n                        namedGraph.push(usingGraph.uri);\n                    } else {\n                        defaultGraph.push(usingGraph.uri);\n                    }\n                }\n            }\n\n            aqt.dataset = {};\n            aqt.projection = [{\"token\": \"variable\", \"kind\": \"*\"}];\n\n            that.executeSelect(aqt, queryEnv, defaultGraph, namedGraph, function(err, result) {\n                if(err) {\n                    error = err\n                    querySuccess = false;\n                    return k();\n                } else {\n                    that.denormalizeBindingsList(result, queryEnv, function(result){\n                        if(result!=null) {\n                            bindings = result;\n                        } else {\n                            error = new Error(\"Error denormalizing bindings list\");\n                            querySuccess = false;\n                        }\n                        k();\n                    });\n                }\n            });\n        },function(k) {\n            // delete query\n\n            var defaultGraph = aqt.with;\n            if(querySuccess) {\n                var quads = [];\n                for(var i=0; i<aqt.delete.length; i++) {\n                    var src = aqt.delete[i];\n\n                    for(var j=0; j<bindings.length; j++) {\n                        var quad = {};\n                        var binding = bindings[j];\n\n                        for(var c=0; c<components.length; c++) {\n                            var component = components[c];\n                            if(component == 'graph' && src[component] == null) {\n                                quad['graph'] = defaultGraph;\n                            } else if(src[component].token === 'var') {\n                                quad[component] = binding[src[component].value];\n                            } else {\n                                quad[component] = src[component];\n                            }\n                        }\n\n                        quads.push(quad);\n                    }\n                }\n\n                async.eachSeries(quads, function(quad,kk) {\n                    that._executeQuadDelete(quad, queryEnv, function(){\n                        kk();\n                    });\n                },function(){ k(); });\n            } else {\n                k();\n            }\n        },function(k) {\n            // insert query\n            var defaultGraph = aqt.with;\n\n            if(querySuccess) {\n                var quads = [];\n                for(var i=0; i<aqt.insert.length; i++) {\n                    var src = aqt.insert[i];\n\n                    for(var j=0; j<bindings.length; j++) {\n                        var quad = {};\n                        var binding = bindings[j];\n\n                        for(var c=0; c<components.length; c++) {\n                            var component = components[c];\n                            if(component == 'graph' && src[component] == null) {\n                                quad['graph'] = defaultGraph;\n                            } else if(src[component].token === 'var') {\n                                quad[component] = binding[src[component].value];\n                            } else {\n                                quad[component] = src[component];\n                            }\n                        }\n\n                        quads.push(quad);\n                    }\n                }\n\n                async.eachSeries(quads, function(quad,kk) {\n                    that._executeQuadInsert(quad, queryEnv, function(){\n                        kk();\n                    });\n                },function(){ k(); });\n            } else {\n                k();\n            }\n        }\n    )(function(){\n        if(querySuccess)\n            callback(null);\n        else\n            callback(error);\n    });\n};\n\nQueryEngine.prototype._executeQuadInsert = function(quad, queryEnv, callback) {\n    var that = this;\n    var normalized;\n    var error = false;\n    var errorMessage = null;\n    async.seq(\n        function(k){\n            that.normalizeQuad(quad, queryEnv, true, function(result){\n                if(result != null){\n                    normalized = result;\n                } else {\n                    error = true;\n                    errorMessage = \"Error normalizing quad.\";\n                }\n                k();\n            });\n        },\n        function(k){\n            if(error === false) {\n                var key = new QuadIndex.NodeKey(normalized);\n                that.backend.search(key, function(found){\n                    if(found === true){\n                        k();\n                    } else {\n                        that.backend.index(key, function(){\n                            that.callbacksBackend.nextGraphModification(Callbacks.added, [quad, normalized]);\n                            k();\n                        });\n                    }\n                });\n            } else {\n                k();\n            }\n        })(\n        function(){\n            if(error) {\n                callback(new Error(errorMessage));\n            } else {\n                callback(null, true);\n            }\n        });\n};\n\nQueryEngine.prototype._executeQuadDelete = function(quad, queryEnv, callback) {\n    var that = this;\n    var normalized;\n    var error = false;\n    var errorMessage, key;\n    async.seq(\n        function(k){\n            that.normalizeQuad(quad, queryEnv, true, function(result){\n                if(result != null){\n                    normalized = result;\n                } else {\n                    error = true;\n                    errorMessage = \"Error normalizing quad.\";\n                }\n                k();\n            });\n        },\n        function(k){\n            if(error === false) {\n                key = new QuadIndex.NodeKey(normalized);\n                that.backend.delete(key, function(){\n                        k();\n                });\n            } else {\n                k();\n            }\n        },\n        function(k){\n            if(error === false) {\n                that.lexicon.unregister(quad, key, function(){\n                    that.callbacksBackend.nextGraphModification(Callbacks['deleted'], [quad, normalized]);\n                    k();\n                });\n            } else {\n                k();\n            }\n        })(\n        function(){\n            if(error) {\n                callback(new Error(errorMessage));\n            } else {\n                callback(null, true);\n            }\n        });\n};\n\nQueryEngine.prototype._executeClearGraph = function(destinyGraph, queryEnv, callback) {\n    var that = this;\n    if(destinyGraph === 'default') {\n        this.execute(\"DELETE { ?s ?p ?o } WHERE { ?s ?p ?o }\", callback);\n    } else if(destinyGraph === 'named') {\n        that.lexicon.registeredGraphs(true, function(graphs){\n            if(graphs!=null) {\n                var foundErrorDeleting = false;\n                async.eachSeries(graphs, function(graph,k){\n                    if(!foundErrorDeleting) {\n                        that.execute(\"DELETE { GRAPH <\"+graph+\"> { ?s ?p ?o } } WHERE { GRAPH <\"+graph+\"> { ?s ?p ?o } }\", function(err, results){\n                            if(!err) {\n                                that.lexicon.resolveUri(graph, function(oid){\n                                    if(oid != -1) {\n                                        that.lexicon.knownGraphs.delete(oid, function(){\n                                            k();\n                                        });\n                                    } else {\n                                        foundErrorDeleting = \"Cannot find graph \"+graph+\" to clear it\";\n                                        k();\n                                    }\n                                });\n                            } else {\n                                foundErrorDeleting = err;\n                                k();\n                            }\n                        });\n                    } else {\n                        k();\n                    }\n                }, function(){\n                    callback(!foundErrorDeleting);\n                });\n            } else {\n                callback(false, \"Error deleting named graphs\");\n            }\n        });\n    } else if(destinyGraph === 'all') {\n        var that = this;\n        this.execute(\"CLEAR DEFAULT\", function(err, result) {\n            if(!err) {\n                that.execute(\"CLEAR NAMED\", callback);\n            } else {\n                callback(false,result);\n            }\n        });\n    } else {\n        // destinyGraph is an URI\n        if(destinyGraph.token == 'uri') {\n            var graphUri = Utils.lexicalFormBaseUri(destinyGraph,queryEnv);\n            if(graphUri != null) {\n                this.callbacksBackend.ongoingModification = true;\n                this.execute(\"DELETE { GRAPH <\"+graphUri+\"> { ?s ?p ?o } } WHERE { GRAPH <\"+graphUri+\"> { ?s ?p ?o } }\", function(res){\n                    that.callbacksBackend.ongoingModification = false;\n                    callback(res);\n                });\n            } else {\n                callback(false, \"wrong graph URI\");\n            }\n        } else {\n            callback(false, \"wrong graph URI\");\n        }\n    }\n};\n\nQueryEngine.prototype.checkGroupSemantics = function(groupVars, projectionVars) {\n    if(groupVars === 'singleGroup') {\n        return true;\n    }\n\n    var projection = {};\n\n    for(var i=0; i<groupVars.length; i++) {\n        var groupVar = groupVars[i];\n        if(groupVar.token === 'var') {\n            projection[groupVar.value] = true;\n        } else if(groupVar.token === 'aliased_expression') {\n            projection[groupVar.alias.value] = true;\n        }\n    }\n\n    for(i=0; i<projectionVars.length; i++) {\n        var projectionVar = projectionVars[i];\n        if(projectionVar.kind === 'var') {\n            if(projection[projectionVar.value.value] == null) {\n                return false;\n            }\n        } else if(projectionVar.kind === 'aliased' &&\n            projectionVar.expression &&\n            projectionVar.expression.primaryexpression === 'var') {\n            if(projection[projectionVar.expression.value.value] == null) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n};\n\nQueryEngine.prototype.runBinds = function(binds, bindings, dataset, env, callback) {\n    var that = this;\n    var originalBindings = bindings;\n    if(binds != null && binds.length > 0) {\n        that.copyDenormalizedBindings(bindings, env.outCache, function(denormBindings){\n            for(var i=0; i<bindings.length; i++) {\n                for(var j=0; j<binds.length; j++) {\n                    var bind = binds[j];\n                    var thisDenormBindings = denormBindings[i];\n                    var ebv = QueryFilters.runFilter(bind.expression, thisDenormBindings, that, dataset, env);\n                    if(QueryFilters.isEbvError(ebv)) {\n                        callback(ebv);\n                    } else {\n                        // we set the value for the new binding\n                        originalBindings[i][bind.as.value] = ebv;\n                    }\n                }\n            }\n            callback(null, bindings);\n        });\n    } else {\n        callback(null, bindings);\n    }\n};\n\nQueryEngine.prototype.computeCosts = function (quads, env, callback) {\n    for (var i = 0; i < quads.length; i++) {\n        quads[i]['_cost'] = this.quadCost(quads[i], env);\n    }\n\n    callback(quads);\n};\n\nQueryEngine.prototype.quadCost = function(quad, env) {\n    return 1;\n};\n\nQueryEngine.prototype.registerDefaultNamespace = function(ns, prefix) {\n    this.defaultPrefixes[ns] = prefix;\n};\n\n\nmodule.exports = {\n    QueryEngine: QueryEngine\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/query_engine.js\n// module id = 396\n// module chunks = 2","module.exports = /*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n(function() {\n  \"use strict\";\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  peg$SyntaxError.buildMessage = function(expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n          literal: function(expectation) {\n            return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n          },\n\n          \"class\": function(expectation) {\n            var escapedParts = \"\",\n                i;\n\n            for (i = 0; i < expectation.parts.length; i++) {\n              escapedParts += expectation.parts[i] instanceof Array\n                ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n                : classEscape(expectation.parts[i]);\n            }\n\n            return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n          },\n\n          any: function(expectation) {\n            return \"any character\";\n          },\n\n          end: function(expectation) {\n            return \"end of input\";\n          },\n\n          other: function(expectation) {\n            return expectation.description;\n          }\n        };\n\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g,  '\\\\\"')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function classEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\\]/g, '\\\\]')\n        .replace(/\\^/g, '\\\\^')\n        .replace(/-/g,  '\\\\-')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n\n    function describeExpected(expected) {\n      var descriptions = new Array(expected.length),\n          i, j;\n\n      for (i = 0; i < expected.length; i++) {\n        descriptions[i] = describeExpectation(expected[i]);\n      }\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n\n  function peg$parse(input, options) {\n    options = options !== void 0 ? options : {};\n\n    var peg$FAILED = {},\n\n        peg$startRuleFunctions = { DOCUMENT: peg$parseDOCUMENT },\n        peg$startRuleFunction  = peg$parseDOCUMENT,\n\n        peg$c0 = peg$otherExpectation(\"[1] QueryUnit\"),\n        peg$c1 = peg$otherExpectation(\"[2] Query\"),\n        peg$c2 = function(p, q, v) {\n            return {\n        \ttoken: 'query',\n        \tkind: 'query',\n        \tprologue: p,\n        \tunits: [q],\n        \tinlineData: v\n            }\n        },\n        peg$c3 = peg$otherExpectation(\"[3] Prologue\"),\n        peg$c4 = function(b, pfx) {\n            return { token: 'prologue',\n        \tbase: b,\n        \tprefixes: pfx }\n        },\n        peg$c5 = peg$otherExpectation(\"[4] BaseDecl\"),\n        peg$c6 = \"BASE\",\n        peg$c7 = peg$literalExpectation(\"BASE\", false),\n        peg$c8 = \"base\",\n        peg$c9 = peg$literalExpectation(\"base\", false),\n        peg$c10 = function(i) {\n            registerDefaultPrefix(i);\n\n            var base = {};\n            base.token = 'base';\n            base.value = i;\n\n            return base;\n        },\n        peg$c11 = peg$otherExpectation(\"[5] PrefixDecl\"),\n        peg$c12 = \"PREFIX\",\n        peg$c13 = peg$literalExpectation(\"PREFIX\", false),\n        peg$c14 = \"prefix\",\n        peg$c15 = peg$literalExpectation(\"prefix\", false),\n        peg$c16 = function(p, l) {\n\n            registerPrefix(p,l);\n\n            var prefix = {};\n            prefix.token = 'prefix';\n            prefix.prefix = p;\n            prefix.local = l;\n\n            return prefix;\n        },\n        peg$c17 = peg$otherExpectation(\"[6] SelectQuery\"),\n        peg$c18 = function(s, gs, w, sm) {\n\n            var dataset = {'named':[], 'implicit':[]};\n            for(var i=0; i<gs.length; i++) {\n        \tvar g = gs[i];\n        \tif(g.kind === 'default') {\n        \t    dataset['implicit'].push(g.graph);\n        \t} else {\n        \t    dataset['named'].push(g.graph)\n        \t}\n            }\n\n\n            if(dataset['named'].length === 0 && dataset['implicit'].length === 0) {\n        \tdataset['implicit'].push({token:'uri',\n        \t    prefix:null,\n        \t    suffix:null,\n        \t    value:'https://github.com/antoniogarrote/rdfstore-js#default_graph'});\n            }\n\n            var query = {};\n            query.kind = 'select';\n            query.token = 'executableunit';\n            query.dataset = dataset;\n            query.projection = s.vars;\n            query.modifier = s.modifier;\n            query.pattern = w;\n\n            if(sm!=null && sm.limit!=null) {\n        \tquery.limit = sm.limit;\n            }\n            if(sm!=null && sm.offset!=null) {\n        \tquery.offset = sm.offset;\n            }\n            if(sm!=null && (sm.order!=null && sm.order!=\"\")) {\n        \tquery.order = sm.order;\n            }\n            if(sm!=null && sm.group!=null) {\n        \tquery.group = sm.group;\n            }\n\n            return query;\n        },\n        peg$c19 = peg$otherExpectation(\"[7] SubSelect\"),\n        peg$c20 = function(s, w, sm) {\n\n            var query = {};\n            query.kind = 'select';\n            query.token = 'subselect';\n            query.projection = s.vars;\n            query.modifier = s.modifier;\n            query.pattern = w;\n\n            if(sm!=null && sm.limit!=null) {\n        \tquery.limit = sm.limit;\n            }\n            if(sm!=null && sm.offset!=null) {\n        \tquery.offset = sm.offset;\n            }\n            if(sm!=null && (sm.order!=null && sm.order!=\"\")) {\n        \tquery.order = sm.order;\n            }\n            if(sm!=null && sm.group!=null) {\n        \tquery.group = sm.group;\n            }\n\n            return query;\n\n        },\n        peg$c21 = peg$otherExpectation(\"[8] SelectClause\"),\n        peg$c22 = \"SELECT\",\n        peg$c23 = peg$literalExpectation(\"SELECT\", false),\n        peg$c24 = \"select\",\n        peg$c25 = peg$literalExpectation(\"select\", false),\n        peg$c26 = \"DISTINCT\",\n        peg$c27 = peg$literalExpectation(\"DISTINCT\", false),\n        peg$c28 = \"distinct\",\n        peg$c29 = peg$literalExpectation(\"distinct\", false),\n        peg$c30 = \"REDUCED\",\n        peg$c31 = peg$literalExpectation(\"REDUCED\", false),\n        peg$c32 = \"reduced\",\n        peg$c33 = peg$literalExpectation(\"reduced\", false),\n        peg$c34 = \"(\",\n        peg$c35 = peg$literalExpectation(\"(\", false),\n        peg$c36 = \"AS\",\n        peg$c37 = peg$literalExpectation(\"AS\", false),\n        peg$c38 = \"as\",\n        peg$c39 = peg$literalExpectation(\"as\", false),\n        peg$c40 = \")\",\n        peg$c41 = peg$literalExpectation(\")\", false),\n        peg$c42 = \"*\",\n        peg$c43 = peg$literalExpectation(\"*\", false),\n        peg$c44 = function(mod, proj) {\n            var vars = [];\n            if(proj.length === 3 && proj[1]===\"*\") {\n        \treturn {vars: [{token: 'variable', kind:'*'}], modifier:arrayToString(mod)};\n            }\n\n            for(var i=0; i< proj.length; i++) {\n        \tvar aVar = proj[i];\n\n        \tif(aVar.length === 3) {\n        \t    vars.push({token: 'variable', kind:'var', value:aVar[1]});\n        \t} else {\n        \t    vars.push({token: 'variable', kind:'aliased', expression: aVar[3], alias:aVar[7]})\n        \t}\n            }\n\n            return {vars: vars, modifier:arrayToString(mod)};\n        },\n        peg$c45 = peg$otherExpectation(\"[9] ConstructQuery\"),\n        peg$c46 = \"CONSTRUCT\",\n        peg$c47 = peg$literalExpectation(\"CONSTRUCT\", false),\n        peg$c48 = \"construct\",\n        peg$c49 = peg$literalExpectation(\"construct\", false),\n        peg$c50 = function(t, gs, w, sm) {\n            var dataset = {'named':[], 'implicit':[]};\n            for(var i=0; i<gs.length; i++) {\n        \tvar g = gs[i];\n        \tif(g.kind === 'default') {\n        \t    dataset['implicit'].push(g.graph);\n        \t} else {\n        \t    dataset['named'].push(g.graph)\n        \t}\n            }\n\n\n            if(dataset['named'].length === 0 && dataset['implicit'].length === 0) {\n        \tdataset['implicit'].push({token:'uri',\n        \t    prefix:null,\n        \t    suffix:null,\n        \t    value:'https://github.com/antoniogarrote/rdfstore-js#default_graph'});\n            }\n\n            var query = {};\n            query.kind = 'construct';\n            query.token = 'executableunit'\n            query.dataset = dataset;\n            query.template = t;\n            query.pattern = w;\n\n            if(sm!=null && sm.limit!=null) {\n        \tquery.limit = sm.limit;\n            }\n            if(sm!=null && sm.offset!=null) {\n        \tquery.offset = sm.offset;\n            }\n            if(sm!=null && (sm.order!=null && sm.order!=\"\")) {\n        \tquery.order = sm.order;\n            }\n            return query\n\n        },\n        peg$c51 = \"WHERE\",\n        peg$c52 = peg$literalExpectation(\"WHERE\", false),\n        peg$c53 = \"where\",\n        peg$c54 = peg$literalExpectation(\"where\", false),\n        peg$c55 = \"{\",\n        peg$c56 = peg$literalExpectation(\"{\", false),\n        peg$c57 = \"}\",\n        peg$c58 = peg$literalExpectation(\"}\", false),\n        peg$c59 = function(gs, t, sm) {\n            var dataset = {'named':[], 'implicit':[]};\n            for(var i=0; i<gs.length; i++) {\n        \tvar g = gs[i];\n        \tif(g.kind === 'default') {\n        \t    dataset['implicit'].push(g.graph);\n        \t} else {\n        \t    dataset['named'].push(g.graph)\n        \t}\n            }\n\n\n            if(dataset['named'].length === 0 && dataset['implicit'].length === 0) {\n        \tdataset['implicit'].push({token:'uri',\n        \t    prefix:null,\n        \t    suffix:null,\n        \t    value:'https://github.com/antoniogarrote/rdfstore-js#default_graph'});\n            }\n\n            var query = {};\n            query.kind = 'construct';\n            query.token = 'executableunit'\n            query.dataset = dataset;\n            query.template = t;\n            query.pattern = {\n        \ttoken: \"basicgraphpattern\",\n        \ttriplesContext: t.triplesContext\n            };\n\n            if(sm!=null && sm.limit!=null) {\n        \tquery.limit = sm.limit;\n            }\n            if(sm!=null && sm.offset!=null) {\n        \tquery.offset = sm.offset;\n            }\n            if(sm!=null && (sm.order!=null && sm.order!=\"\")) {\n        \tquery.order = sm.order;\n            }\n            return query\n        },\n        peg$c60 = peg$otherExpectation(\"[10] DescribeQuery\"),\n        peg$c61 = \"DESCRIBE\",\n        peg$c62 = peg$literalExpectation(\"DESCRIBE\", false),\n        peg$c63 = peg$otherExpectation(\"[11] AskQuery\"),\n        peg$c64 = \"ASK\",\n        peg$c65 = peg$literalExpectation(\"ASK\", false),\n        peg$c66 = \"ask\",\n        peg$c67 = peg$literalExpectation(\"ask\", false),\n        peg$c68 = function(gs, w) {\n            var dataset = {'named':[], 'implicit':[]};\n            for(var i=0; i<gs.length; i++) {\n        \tvar g = gs[i];\n        \tif(g.kind === 'implicit') {\n        \t    dataset['implicit'].push(g.graph);\n        \t} else {\n        \t    dataset['named'].push(g.graph)\n        \t}\n            }\n\n\n            if(dataset['named'].length === 0 && dataset['implicit'].length === 0) {\n        \tdataset['implicit'].push({token:'uri',\n        \t    prefix:null,\n        \t    suffix:null,\n        \t    value:'https://github.com/antoniogarrote/rdfstore-js#default_graph'});\n            }\n\n            var query = {};\n            query.kind = 'ask';\n            query.token = 'executableunit'\n            query.dataset = dataset;\n            query.pattern = w\n\n            return query\n        },\n        peg$c69 = peg$otherExpectation(\"[12] DatasetClause\"),\n        peg$c70 = \"FROM\",\n        peg$c71 = peg$literalExpectation(\"FROM\", false),\n        peg$c72 = \"from\",\n        peg$c73 = peg$literalExpectation(\"from\", false),\n        peg$c74 = function(gs) {\n            return gs;\n        },\n        peg$c75 = peg$otherExpectation(\"[13] DefaultGraphClause\"),\n        peg$c76 = function(s) {\n            return {graph:s , kind:'default', token:'graphClause'}\n        },\n        peg$c77 = peg$otherExpectation(\"[14] NamedGraphClause\"),\n        peg$c78 = \"NAMED\",\n        peg$c79 = peg$literalExpectation(\"NAMED\", false),\n        peg$c80 = \"named\",\n        peg$c81 = peg$literalExpectation(\"named\", false),\n        peg$c82 = function(s) {\n            return {graph:s, kind:'named', token:'graphCluase'};\n        },\n        peg$c83 = peg$otherExpectation(\"[15] SourceSelector\"),\n        peg$c84 = peg$otherExpectation(\"[16] WhereClause\"),\n        peg$c85 = function(g) {\n            return g;\n        },\n        peg$c86 = peg$otherExpectation(\"[17] SolutionModifier\"),\n        peg$c87 = function(gc, oc, lo) {\n            var acum = {};\n        if(lo != null) {\n            if(lo.limit != null) {\n        \tacum.limit = lo.limit;\n            }\n            if(lo.offset != null) {\n        \tacum.offset = lo.offset;\n            }\n        }\n\n        if(gc != null) {\n            acum.group = gc;\n        }\n\n        acum.order = oc;\n\n        return acum\n        },\n        peg$c88 = peg$otherExpectation(\"[18] GroupClause\"),\n        peg$c89 = \"GROUP\",\n        peg$c90 = peg$literalExpectation(\"GROUP\", false),\n        peg$c91 = \"group\",\n        peg$c92 = peg$literalExpectation(\"group\", false),\n        peg$c93 = \"BY\",\n        peg$c94 = peg$literalExpectation(\"BY\", false),\n        peg$c95 = \"by\",\n        peg$c96 = peg$literalExpectation(\"by\", false),\n        peg$c97 = function(conds) {\n            return conds;\n        },\n        peg$c98 = peg$otherExpectation(\"[19] GroupCondition\"),\n        peg$c99 = function(b) {\n            return b;\n        },\n        peg$c100 = function(f) {\n            return f;\n        },\n        peg$c101 = function(e, alias) {\n            if(alias.length != 0) {\n            return {token: 'aliased_expression',\n        \texpression: e,\n        \talias: alias[2] };\n        } else {\n            return e;\n        }\n        },\n        peg$c102 = function(v) {\n            return v;\n        },\n        peg$c103 = peg$otherExpectation(\"[20] HavingClause\"),\n        peg$c104 = \"HAVING\",\n        peg$c105 = peg$literalExpectation(\"HAVING\", false),\n        peg$c106 = peg$otherExpectation(\"[21] HavingCondition\"),\n        peg$c107 = peg$otherExpectation(\"[22] OrderClause\"),\n        peg$c108 = \"ORDER\",\n        peg$c109 = peg$literalExpectation(\"ORDER\", false),\n        peg$c110 = \"order\",\n        peg$c111 = peg$literalExpectation(\"order\", false),\n        peg$c112 = function(os) {\n            return os;\n        },\n        peg$c113 = peg$otherExpectation(\"[23] OrderCondition\"),\n        peg$c114 = \"ASC\",\n        peg$c115 = peg$literalExpectation(\"ASC\", false),\n        peg$c116 = \"asc\",\n        peg$c117 = peg$literalExpectation(\"asc\", false),\n        peg$c118 = \"DESC\",\n        peg$c119 = peg$literalExpectation(\"DESC\", false),\n        peg$c120 = \"desc\",\n        peg$c121 = peg$literalExpectation(\"desc\", false),\n        peg$c122 = function(direction, e) {\n            return { direction: direction.toUpperCase(), expression:e };\n        },\n        peg$c123 = function(e) {\n            if(e.token === 'var') {\n            var e = { token:'expression',\n        \texpressionType:'atomic',\n        \tprimaryexpression: 'var',\n        \tvalue: e };\n        }\n        return { direction: 'ASC', expression:e };\n        },\n        peg$c124 = peg$otherExpectation(\"[24] LimitOffsetClauses\"),\n        peg$c125 = function(cls) {\n            var acum = {};\n            for(var i=0; i<cls.length; i++) {\n        \tvar cl = cls[i];\n        \tif(cl != null && cl.limit != null) {\n        \t    acum['limit'] = cl.limit;\n        \t} else if(cl != null && cl.offset != null){\n        \t    acum['offset'] = cl.offset;\n        \t}\n            }\n\n            return acum;\n        },\n        peg$c126 = peg$otherExpectation(\"[25] LimitClause\"),\n        peg$c127 = \"LIMIT\",\n        peg$c128 = peg$literalExpectation(\"LIMIT\", false),\n        peg$c129 = \"limit\",\n        peg$c130 = peg$literalExpectation(\"limit\", false),\n        peg$c131 = function(i) {\n            return { limit:parseInt(i.value) };\n        },\n        peg$c132 = peg$otherExpectation(\"[26] OffsetClause\"),\n        peg$c133 = \"OFFSET\",\n        peg$c134 = peg$literalExpectation(\"OFFSET\", false),\n        peg$c135 = \"offset\",\n        peg$c136 = peg$literalExpectation(\"offset\", false),\n        peg$c137 = function(i) {\n            return { offset:parseInt(i.value) };\n        },\n        peg$c138 = peg$otherExpectation(\"[27] BindingsClause\"),\n        peg$c139 = \"BINDINGS\",\n        peg$c140 = peg$literalExpectation(\"BINDINGS\", false),\n        peg$c141 = peg$otherExpectation(\"[28] BindingValue\"),\n        peg$c142 = \"UNDEF\",\n        peg$c143 = peg$literalExpectation(\"UNDEF\", false),\n        peg$c144 = peg$otherExpectation(\"[28]\\tValuesClause\\t  ::=\\t( 'VALUES' DataBlock )?\"),\n        peg$c145 = \"VALUES\",\n        peg$c146 = peg$literalExpectation(\"VALUES\", false),\n        peg$c147 = \"values\",\n        peg$c148 = peg$literalExpectation(\"values\", false),\n        peg$c149 = function(b) {\n             if(b != null) {\n               return b[1];\n             } else {\n               return null;\n             }\n        },\n        peg$c150 = peg$otherExpectation(\"[29] UpdateUnit\"),\n        peg$c151 = peg$otherExpectation(\"[30] Update\"),\n        peg$c152 = \";\",\n        peg$c153 = peg$literalExpectation(\";\", false),\n        peg$c154 = function(p, u, us) {\n\n            var query = {};\n        query.token = 'query';\n        query.kind = 'update'\n        query.prologue = p;\n\n        var units = [u];\n\n        if(us != null && us.length != null && us[3] != null && us[3].units != null) {\n            units = units.concat(us[3].units);\n        }\n\n        query.units = units;\n        return query;\n        },\n        peg$c155 = peg$otherExpectation(\"[31] Update1\"),\n        peg$c156 = peg$otherExpectation(\"[32] Load\"),\n        peg$c157 = \"LOAD\",\n        peg$c158 = peg$literalExpectation(\"LOAD\", false),\n        peg$c159 = \"load\",\n        peg$c160 = peg$literalExpectation(\"load\", false),\n        peg$c161 = \"INTO\",\n        peg$c162 = peg$literalExpectation(\"INTO\", false),\n        peg$c163 = \"into\",\n        peg$c164 = peg$literalExpectation(\"into\", false),\n        peg$c165 = function(sg, dg) {\n            var query = {};\n        query.kind = 'load';\n        query.token = 'executableunit';\n        query.sourceGraph = sg;\n        if(dg != null) {\n            query.destinyGraph = dg[2];\n        }\n        return query;\n        },\n        peg$c166 = peg$otherExpectation(\"[33] Clear\"),\n        peg$c167 = \"CLEAR\",\n        peg$c168 = peg$literalExpectation(\"CLEAR\", false),\n        peg$c169 = \"clear\",\n        peg$c170 = peg$literalExpectation(\"clear\", false),\n        peg$c171 = \"SILENT\",\n        peg$c172 = peg$literalExpectation(\"SILENT\", false),\n        peg$c173 = \"silent\",\n        peg$c174 = peg$literalExpectation(\"silent\", false),\n        peg$c175 = function(ref) {\n            var query = {};\n            query.kind = 'clear';\n            query.token = 'executableunit'\n            query.destinyGraph = ref;\n\n            return query;\n        },\n        peg$c176 = peg$otherExpectation(\"[34] Drop\"),\n        peg$c177 = \"DROP\",\n        peg$c178 = peg$literalExpectation(\"DROP\", false),\n        peg$c179 = \"drop\",\n        peg$c180 = peg$literalExpectation(\"drop\", false),\n        peg$c181 = function(ref) {\n            var query = {};\n            query.kind = 'drop';\n            query.token = 'executableunit'\n            query.destinyGraph = ref;\n\n            return query;\n        },\n        peg$c182 = peg$otherExpectation(\"[35] Create\"),\n        peg$c183 = \"CREATE\",\n        peg$c184 = peg$literalExpectation(\"CREATE\", false),\n        peg$c185 = \"create\",\n        peg$c186 = peg$literalExpectation(\"create\", false),\n        peg$c187 = function(ref) {\n            var query = {};\n            query.kind = 'create';\n            query.token = 'executableunit'\n            query.destinyGraph = ref;\n\n            return query;\n        },\n        peg$c188 = peg$otherExpectation(\"[36] InsertData\"),\n        peg$c189 = \"INSERT\",\n        peg$c190 = peg$literalExpectation(\"INSERT\", false),\n        peg$c191 = \"insert\",\n        peg$c192 = peg$literalExpectation(\"insert\", false),\n        peg$c193 = \"DATA\",\n        peg$c194 = peg$literalExpectation(\"DATA\", false),\n        peg$c195 = \"data\",\n        peg$c196 = peg$literalExpectation(\"data\", false),\n        peg$c197 = function(qs) {\n            var query = {};\n            query.kind = 'insertdata';\n            query.token = 'executableunit'\n            query.quads = qs;\n\n            return query;\n        },\n        peg$c198 = peg$otherExpectation(\"[37] DeleteData\"),\n        peg$c199 = \"DELETE\",\n        peg$c200 = peg$literalExpectation(\"DELETE\", false),\n        peg$c201 = \"delete\",\n        peg$c202 = peg$literalExpectation(\"delete\", false),\n        peg$c203 = function(qs) {\n            var query = {};\n            query.kind = 'deletedata';\n            query.token = 'executableunit'\n            query.quads = qs;\n\n            return query;\n        },\n        peg$c204 = peg$otherExpectation(\"[38] DeleteWhere\"),\n        peg$c205 = function(p) {\n            var query = {};\n            query.kind = 'modify';\n            query.pattern = p;\n            query.with = null;\n            query.using = null;\n\n            var quads = [];\n\n\n            var patternsCollection = p.patterns[0];\n            if(patternsCollection.triplesContext == null && patternsCollection.patterns!=null) {\n        \tpatternsCollection = patternsCollection.patterns[0].triplesContext;\n            } else {\n        \tpatternsCollection = patternsCollection.triplesContext;\n            }\n\n            for(var i=0; i<patternsCollection.length; i++) {\n        \tvar quad = {};\n        \tvar contextQuad = patternsCollection[i];\n\n        \tquad['subject'] = contextQuad['subject'];\n        \tquad['predicate'] = contextQuad['predicate'];\n        \tquad['object'] = contextQuad['object'];\n        \tquad['graph'] = contextQuad['graph'];\n\n        \tquads.push(quad);\n            }\n\n            query.delete = quads;\n\n            return query;\n        },\n        peg$c206 = peg$otherExpectation(\"[39] Modify\"),\n        peg$c207 = \"WITH\",\n        peg$c208 = peg$literalExpectation(\"WITH\", false),\n        peg$c209 = \"with\",\n        peg$c210 = peg$literalExpectation(\"with\", false),\n        peg$c211 = function(wg, dic, uc, p) {\n            var query = {};\n        query.kind = 'modify';\n\n        if(wg != \"\" && wg != null) {\n            query.with = wg[2];\n        } else {\n            query.with = null;\n        }\n\n\n        if(dic.length === 3 && (dic[2] === ''|| dic[2] == null)) {\n            query.delete = dic[0];\n            query.insert = null;\n        } else if(dic.length === 3 && dic[0].length != null && dic[1].length != null && dic[2].length != null) {\n            query.delete = dic[0];\n            query.insert = dic[2];\n        } else  {\n            query.insert = dic;\n            query.delete = null;\n        }\n\n        if(uc != '') {\n            query.using = uc;\n        }\n\n        query.pattern = p;\n\n        return query;\n        },\n        peg$c212 = peg$otherExpectation(\"[40] DeleteClause\"),\n        peg$c213 = function(q) {\n            return q;\n        },\n        peg$c214 = peg$otherExpectation(\"[41] InsertClause\"),\n        peg$c215 = peg$otherExpectation(\"[42] UsingClause\"),\n        peg$c216 = \"USING\",\n        peg$c217 = peg$literalExpectation(\"USING\", false),\n        peg$c218 = \"using\",\n        peg$c219 = peg$literalExpectation(\"using\", false),\n        peg$c220 = function(g) {\n            if(g.length!=null) {\n        \treturn {kind: 'named', uri: g[2]};\n            } else {\n        \treturn {kind: 'default', uri: g};\n            }\n        },\n        peg$c221 = peg$otherExpectation(\"[43] GraphRef\"),\n        peg$c222 = \"GRAPH\",\n        peg$c223 = peg$literalExpectation(\"GRAPH\", false),\n        peg$c224 = \"graph\",\n        peg$c225 = peg$literalExpectation(\"graph\", false),\n        peg$c226 = function(i) {\n            return i;\n        },\n        peg$c227 = peg$otherExpectation(\"[44] GraphRefAll\"),\n        peg$c228 = \"DEFAULT\",\n        peg$c229 = peg$literalExpectation(\"DEFAULT\", false),\n        peg$c230 = \"default\",\n        peg$c231 = peg$literalExpectation(\"default\", false),\n        peg$c232 = function() {\n            return 'default';\n        },\n        peg$c233 = function() {\n            return 'named';\n        },\n        peg$c234 = \"ALL\",\n        peg$c235 = peg$literalExpectation(\"ALL\", false),\n        peg$c236 = \"all\",\n        peg$c237 = peg$literalExpectation(\"all\", false),\n        peg$c238 = function() {\n            return 'all';\n        },\n        peg$c239 = peg$otherExpectation(\"[45] QuadPattern\"),\n        peg$c240 = function(qs) {\n            return qs.quadsContext;\n        },\n        peg$c241 = peg$otherExpectation(\"[46] QuadData\"),\n        peg$c242 = peg$otherExpectation(\"[47] Quads\"),\n        peg$c243 = \".\",\n        peg$c244 = peg$literalExpectation(\".\", false),\n        peg$c245 = function(ts, qs) {\n            var quads = [];\n            if(ts != null && ts.triplesContext != null) {\n        \tfor(var i=0; i<ts.triplesContext.length; i++) {\n        \t    var triple = ts.triplesContext[i]\n        \t    triple.graph = null;\n        \t    quads.push(triple)\n        \t}\n            }\n\n            if(qs && qs.length>0 && qs[0].length > 0) {\n        \tquads = quads.concat(qs[0][0].quadsContext);\n\n        \tif( qs[0][2] != null && qs[0][2].triplesContext != null) {\n        \t    for(var i=0; i<qs[0][2].triplesContext.length; i++) {\n        \t\tvar triple = qs[0][2].triplesContext[i]\n        \t\ttriple.graph = null;\n        \t\tquads.push(triple)\n        \t    }\n        \t}\n            }\n\n            return {token:'quads',\n        \tquadsContext: quads}\n        },\n        peg$c246 = peg$otherExpectation(\"[48] QuadsNotTriples\"),\n        peg$c247 = function(g, ts) {\n            var quads = [];\n            if(ts!=null) {\n        \tfor (var i = 0; i < ts.triplesContext.length; i++) {\n        \t    var triple = ts.triplesContext[i];\n        \t    triple.graph = g;\n        \t    quads.push(triple)\n        \t}\n            }\n\n        return {token:'quadsnottriples',\n            quadsContext: quads}\n        },\n        peg$c248 = peg$otherExpectation(\"[49] TriplesTemplate\"),\n        peg$c249 = function(b, bs) {\n            var triples = b.triplesContext;\n            if(bs != null && typeof(bs) === 'object') {\n               if(bs.length != null) {\n        \t  if(bs[3] != null && bs[3].triplesContext!=null) {\n        \t      triples = triples.concat(bs[3].triplesContext);\n        \t  }\n               }\n            }\n\n            return {\n        \ttoken:'triplestemplate',\n        \ttriplesContext: triples\n            };\n        },\n        peg$c250 = peg$otherExpectation(\"[50] GroupGraphPattern\"),\n        peg$c251 = function(p) {\n            return p;\n        },\n        peg$c252 = peg$otherExpectation(\"[51] GroupGraphPatternSub\"),\n        peg$c253 = function(tb, tbs) {\n            var subpatterns = [];\n            if(tb != null && tb != []) {\n        \tsubpatterns.push(tb);\n            }\n\n            for(var i=0; i<tbs.length; i++) {\n        \tfor(var j=0; j< tbs[i].length; j++) {\n        \t    if(tbs[i][j] != null && tbs[i][j].token != null) {\n        \t\tsubpatterns.push(tbs[i][j]);\n        \t    }\n        \t}\n            }\n\n            var compactedSubpatterns = [];\n\n            var currentBasicGraphPatterns = [];\n            var currentFilters = [];\n            var currentBinds = [];\n\n            for(var i=0; i<subpatterns.length; i++) {\n        \tif(subpatterns[i].token!=='triplespattern' && subpatterns[i].token !== 'filter' && subpatterns[i].token !== 'bind') {\n        \t    if(currentBasicGraphPatterns.length != 0 || currentFilters.length != 0) {\n        \t\tvar triplesContext = [];\n        \t\tfor(var j=0; j<currentBasicGraphPatterns.length; j++) {\n        \t\t    triplesContext = triplesContext.concat(currentBasicGraphPatterns[j].triplesContext);\n        \t\t}\n        \t\tif(triplesContext.length > 0) {\n        \t\t    compactedSubpatterns.push({token: 'basicgraphpattern',\n        \t\t\ttriplesContext: triplesContext});\n        \t\t}\n        \t\tcurrentBasicGraphPatterns = [];\n        \t    }\n        \t    compactedSubpatterns.push(subpatterns[i]);\n        \t} else {\n        \t    if(subpatterns[i].token === 'triplespattern') {\n        \t\tcurrentBasicGraphPatterns.push(subpatterns[i]);\n                    } else if(subpatterns[i].token === 'bind') {\n                        currentBinds.push(subpatterns[i]);\n\n        \t    } else {\n        \t\tcurrentFilters.push(subpatterns[i]);\n        \t    }\n        \t}\n            }\n\n            if(currentBasicGraphPatterns.length != 0 || currentFilters.length != 0) {\n        \tvar triplesContext = [];\n        \tfor(var j=0; j<currentBasicGraphPatterns.length; j++) {\n        \t    triplesContext = triplesContext.concat(currentBasicGraphPatterns[j].triplesContext);\n        \t}\n        \tif(triplesContext.length > 0) {\n        \t    compactedSubpatterns.push({token: 'basicgraphpattern',\n        \t\ttriplesContext: triplesContext});\n        \t}\n            }\n\n        //      if(compactedSubpatterns.length == 1) {\n        //          compactedSubpatterns[0].filters = currentFilters;\n        //          return compactedSubpatterns[0];\n        //      } else  {\n            return { token: 'groupgraphpattern',\n        \tpatterns: compactedSubpatterns,\n                filters: currentFilters,\n                binds: currentBinds\n            }\n        //      }\n        },\n        peg$c254 = peg$otherExpectation(\"[54] TriplesBlock\"),\n        peg$c255 = function(b, bs) {\n            var triples = b.triplesContext;\n        if(bs != null && typeof(bs) === 'object') {\n            if(bs != null && bs.length != null) {\n        \tif(bs[2] != null && bs[2].triplesContext!=null) {\n        \t    triples = triples.concat(bs[2].triplesContext);\n        \t}\n            }\n        }\n\n        return {token:'triplespattern',\n            triplesContext: triples}\n        },\n        peg$c256 = peg$otherExpectation(\"[53] GraphPatternNotTriples\"),\n        peg$c257 = peg$otherExpectation(\"[54] OptionalGraphPattern\"),\n        peg$c258 = \"OPTIONAL\",\n        peg$c259 = peg$literalExpectation(\"OPTIONAL\", false),\n        peg$c260 = \"optional\",\n        peg$c261 = peg$literalExpectation(\"optional\", false),\n        peg$c262 = function(v) {\n            return { token: 'optionalgraphpattern',\n        \tvalue: v }\n        },\n        peg$c263 = peg$otherExpectation(\"[55] GraphGraphPattern\"),\n        peg$c264 = function(g, gg) {\n            for(var i=0; i<gg.patterns.length; i++) {\n        \tvar quads = []\n        \tvar ts = gg.patterns[i];\n        \tfor(var j=0; j<ts.triplesContext.length; j++) {\n        \t    var triple = ts.triplesContext[j]\n        \t    triple.graph = g;\n        \t}\n            }\n\n            gg.token = 'groupgraphpattern'\n            return gg;\n        },\n        peg$c265 = peg$otherExpectation(\"[56] ServiceGraphPattern\"),\n        peg$c266 = \"SERVICE\",\n        peg$c267 = peg$literalExpectation(\"SERVICE\", false),\n        peg$c268 = function(v, ts) {\n            return {token: 'servicegraphpattern',\n        \tstatus: 'todo',\n        \tvalue: [v,ts] }\n        },\n        peg$c269 = peg$otherExpectation(\"[57] MinusGraphPattern\"),\n        peg$c270 = \"MINUS\",\n        peg$c271 = peg$literalExpectation(\"MINUS\", false),\n        peg$c272 = \"minus\",\n        peg$c273 = peg$literalExpectation(\"minus\", false),\n        peg$c274 = function(ts) {\n            return {token: 'minusgraphpattern',\n        \tstatus: 'todo',\n        \tvalue: ts}\n        },\n        peg$c275 = peg$otherExpectation(\"[58] GroupOrUnionGraphPattern\"),\n        peg$c276 = \"UNION\",\n        peg$c277 = peg$literalExpectation(\"UNION\", false),\n        peg$c278 = \"union\",\n        peg$c279 = peg$literalExpectation(\"union\", false),\n        peg$c280 = function(a, b) {\n            if(b.length === 0) {\n        \treturn a;\n            } else {\n\n        \tvar lastToken = {token: 'graphunionpattern',\n        \t    value: [a]};\n\n        \tfor(var i=0; i<b.length; i++) {\n        \t    if(i==b.length-1) {\n        \t\tlastToken.value.push(b[i][3]);\n        \t    } else {\n        \t\tlastToken.value.push(b[i][3]);\n        \t\tvar newToken = {token: 'graphunionpattern',\n        \t\t    value: [lastToken]}\n\n        \t\tlastToken = newToken;\n        \t    }\n        \t}\n\n        \treturn lastToken;\n\n            }\n        },\n        peg$c281 = peg$otherExpectation(\"[59] Filter\"),\n        peg$c282 = \"FILTER\",\n        peg$c283 = peg$literalExpectation(\"FILTER\", false),\n        peg$c284 = \"filter\",\n        peg$c285 = peg$literalExpectation(\"filter\", false),\n        peg$c286 = function(c) {\n            return {token: 'filter',\n        \tvalue: c}\n        },\n        peg$c287 = peg$otherExpectation(\"[60] Bind\"),\n        peg$c288 = \"BIND\",\n        peg$c289 = peg$literalExpectation(\"BIND\", false),\n        peg$c290 = \"bind\",\n        peg$c291 = peg$literalExpectation(\"bind\", false),\n        peg$c292 = function(ex, v) {\n            return {token: 'bind',\n        \t    expression: ex,\n        \t    as: v};\n        },\n        peg$c293 = peg$otherExpectation(\"[60] Constraint\"),\n        peg$c294 = peg$otherExpectation(\"[61] InlineData\"),\n        peg$c295 = function(d) {\n            return d;\n        },\n        peg$c296 = peg$otherExpectation(\"[62] DataBlock\"),\n        peg$c297 = peg$otherExpectation(\"[63] InlineDataOneVar\"),\n        peg$c298 = function(v, d) {\n            var result =  {\n        \ttoken: 'inlineData',\n        \tvalues: [{\n        \t    'var': v,\n        \t    'value': d\n        \t}]\n            };\n\n            return result;\n        },\n        peg$c299 = peg$otherExpectation(\"[64] InlineDataFull\"),\n        peg$c300 = function(vars, vals) {\n            var result = {\n        \ttoken: 'inlineData',\n        \tvalues: [],\n        \ttodo: true\n            };\n            return result;\n        },\n        peg$c301 = peg$otherExpectation(\"[65] DataBlockValue\"),\n        peg$c302 = peg$otherExpectation(\"[61] FunctionCall\"),\n        peg$c303 = function(i, args) {\n            var fcall = {};\n            fcall.token = \"expression\";\n            fcall.expressionType = 'irireforfunction'\n            fcall.iriref = i;\n            fcall.args = args.value;\n\n            return fcall;\n        },\n        peg$c304 = peg$otherExpectation(\"[62] ArgList\"),\n        peg$c305 = function() {\n            var args = {};\n            args.token = 'args';\n            args.value = [];\n            return args;\n        },\n        peg$c306 = \",\",\n        peg$c307 = peg$literalExpectation(\",\", false),\n        peg$c308 = function(d, e, es) {\n            var cleanEx = [];\n\n            for(var i=0; i<es.length; i++) {\n        \tcleanEx.push(es[i][2]);\n            }\n            var args = {};\n            args.token = 'args';\n            args.value = [e].concat(cleanEx);\n\n            if(d!=null && d.toUpperCase()===\"DISTINCT\") {\n        \targs.distinct = true;\n            } else {\n        \targs.distinct = false;\n            }\n\n            return args;\n        },\n        peg$c309 = peg$otherExpectation(\"[63] ExpressionList\"),\n        peg$c310 = function(e, es) {\n            var cleanEx = [];\n\n            for(var i=0; i<es.length; i++) {\n        \tcleanEx.push(es[i][2]);\n            }\n            var args = {};\n            args.token = 'args';\n            args.value = [e].concat(cleanEx);\n\n            return args;\n        },\n        peg$c311 = peg$otherExpectation(\"[64] ConstructTemplate\"),\n        peg$c312 = function(ts) {\n            return ts;\n        },\n        peg$c313 = peg$otherExpectation(\"[65] ConstructTriples\"),\n        peg$c314 = function(b, bs) {\n            var triples = b.triplesContext;\n        var toTest = null;\n        if(bs != null && typeof(bs) === 'object') {\n            if(bs.length != null) {\n        \tif(bs[3] != null && bs[3].triplesContext!=null) {\n        \t    triples = triples.concat(bs[3].triplesContext);\n        \t}\n            }\n        }\n\n        return {token:'triplestemplate',\n            triplesContext: triples}\n        },\n        peg$c315 = peg$otherExpectation(\"[66] TriplesSameSubject\"),\n        peg$c316 = function(s, pairs) {\n            var triplesContext = pairs.triplesContext;\n            var subject = s;\n            if(pairs.pairs) {\n        \tfor(var i=0; i< pairs.pairs.length; i++) {\n        \t    var pair = pairs.pairs[i];\n        \t    var triple = null;\n        \t    if(pair[1].length != null)\n        \t\tpair[1] = pair[1][0]\n        \t    if(subject.token && subject.token==='triplesnodecollection') {\n        \t\ttriple = {subject: subject.chainSubject[0], predicate: pair[0], object: pair[1]}\n        \t\ttriplesContext.push(triple);\n        \t\ttriplesContext = triplesContext.concat(subject.triplesContext);\n        \t    } else {\n        \t\ttriple = {subject: subject, predicate: pair[0], object: pair[1]}\n        \t\ttriplesContext.push(triple);\n        \t    }\n        \t}\n            }\n\n            var token = {};\n            token.token = \"triplessamesubject\";\n            token.triplesContext = triplesContext;\n            token.chainSubject = subject;\n\n            return token;\n        },\n        peg$c317 = function(tn, pairs) {\n            var triplesContext = tn.triplesContext;\n            var subject = tn.chainSubject;\n\n            if(pairs.pairs) {\n        \tfor(var i=0; i< pairs.pairs.length; i++) {\n        \t    var pair = pairs.pairs[i];\n        \t    if(pair[1].length != null)\n        \t\tpair[1] = pair[1][0]\n\n        \t    if(tn.token === \"triplesnodecollection\") {\n        \t\tfor(var j=0; j<subject.length; j++) {\n        \t\t    var subj = subject[j];\n        \t\t    if(subj.triplesContext != null) {\n        \t\t\tvar triple = {subject: subj.chainSubject, predicate: pair[0], object: pair[1]}\n        \t\t\ttriplesContext.concat(subj.triplesContext);\n        \t\t    } else {\n        \t\t\tvar triple = {subject: subject[j], predicate: pair[0], object: pair[1]}\n        \t\t\ttriplesContext.push(triple);\n        \t\t    }\n        \t\t}\n        \t    } else {\n        \t\tvar triple = {subject: subject, predicate: pair[0], object: pair[1]}\n        \t\ttriplesContext.push(triple);\n        \t    }\n        \t}\n            }\n\n            var token = {};\n            token.token = \"triplessamesubject\";\n            token.triplesContext = triplesContext;\n            token.chainSubject = subject;\n\n            return token;\n        },\n        peg$c318 = peg$otherExpectation(\"[83] PropertyListPathNotEmpty\"),\n        peg$c319 = function(v, ol, rest) {\n            var tokenParsed = {};\n            tokenParsed.token = 'propertylist';\n            var triplesContext = [];\n            var pairs = [];\n            var test = [];\n\n            for( var i=0; i<ol.length; i++) {\n\n        \tif(ol[i].triplesContext != null) {\n        \t    triplesContext = triplesContext.concat(ol[i].triplesContext);\n        \t    if(ol[i].token==='triplesnodecollection' && ol[i].chainSubject.length != null) {\n        \t\tpairs.push([v, ol[i].chainSubject[0]]);\n        \t    } else {\n        \t\tpairs.push([v, ol[i].chainSubject]);\n        \t    }\n\n        \t} else {\n        \t    pairs.push([v, ol[i]])\n        \t}\n\n            }\n\n\n            for(var i=0; i<rest.length; i++) {\n        \tvar tok = rest[i][3];\n        \tvar newVerb  = tok[0];\n        \tvar newObjsList = tok[2] || [];\n\n        \tfor(var j=0; j<newObjsList.length; j++) {\n        \t    if(newObjsList[j].triplesContext != null) {\n        \t\ttriplesContext = triplesContext.concat(newObjsList[j].triplesContext);\n        \t\tpairs.push([newVerb, newObjsList[j].chainSubject]);\n        \t    } else {\n        \t\tpairs.push([newVerb, newObjsList[j]])\n        \t    }\n        \t}\n            }\n\n            tokenParsed.pairs = pairs;\n            tokenParsed.triplesContext = triplesContext;\n\n            return tokenParsed;\n        },\n        peg$c320 = peg$otherExpectation(\"[67] PropertyListNotEmpty\"),\n        peg$c321 = function(v, ol, rest) {\n            var tokenParsed = {};\n            tokenParsed.token = 'propertylist';\n            var triplesContext = [];\n            var pairs = [];\n            var test = [];\n\n            for( var i=0; i<ol.length; i++) {\n\n        \tif(ol[i].triplesContext != null) {\n        \t    triplesContext = triplesContext.concat(ol[i].triplesContext);\n        \t    if(ol[i].token==='triplesnodecollection' && ol[i].chainSubject.length != null) {\n        \t\tpairs.push([v, ol[i].chainSubject[0]]);\n        \t    } else {\n        \t\tpairs.push([v, ol[i].chainSubject]);\n        \t    }\n\n        \t} else {\n        \t    pairs.push([v, ol[i]])\n        \t}\n\n            }\n\n\n            for(var i=0; i<rest.length; i++) {\n        \tvar tok = rest[i][3];\n        \tvar newVerb  = tok[0];\n        \tvar newObjsList = tok[2] || [];\n\n        \tfor(var j=0; j<newObjsList.length; j++) {\n        \t    if(newObjsList[j].triplesContext != null) {\n        \t\ttriplesContext = triplesContext.concat(newObjsList[j].triplesContext);\n        \t\tpairs.push([newVerb, newObjsList[j].chainSubject]);\n        \t    } else {\n        \t\tpairs.push([newVerb, newObjsList[j]])\n        \t    }\n        \t}\n            }\n\n            tokenParsed.pairs = pairs;\n            tokenParsed.triplesContext = triplesContext;\n\n            return tokenParsed;\n\n        },\n        peg$c322 = peg$otherExpectation(\"[68] PropertyList\"),\n        peg$c323 = peg$otherExpectation(\"[86] ObjectListPath\"),\n        peg$c324 = function(obj, objs) {\n            var toReturn = [];\n\n            toReturn.push(obj);\n\n            for(var i=0; i<objs.length; i++) {\n        \tfor(var j=0; j<objs[i].length; j++) {\n        \t    if(typeof(objs[i][j])==\"object\" && objs[i][j].token != null) {\n        \t\ttoReturn.push(objs[i][j]);\n        \t    }\n        \t}\n            }\n\n            return toReturn;\n        },\n        peg$c325 = peg$otherExpectation(\"[69] ObjectList\"),\n        peg$c326 = function(obj, objs) {\n\n            var toReturn = [];\n\n            toReturn.push(obj);\n\n            for(var i=0; i<objs.length; i++) {\n        \tfor(var j=0; j<objs[i].length; j++) {\n        \t    if(typeof(objs[i][j])==\"object\" && objs[i][j].token != null) {\n        \t\ttoReturn.push(objs[i][j]);\n        \t    }\n        \t}\n            }\n\n            return toReturn;\n        },\n        peg$c327 = peg$otherExpectation(\"[87] ObjectPath\"),\n        peg$c328 = peg$otherExpectation(\"[70] Object\"),\n        peg$c329 = peg$otherExpectation(\"[71] Verb\"),\n        peg$c330 = \"a\",\n        peg$c331 = peg$literalExpectation(\"a\", false),\n        peg$c332 = function() {\n            return{token: 'uri', prefix:null, suffix:null, value:\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\"}\n        },\n        peg$c333 = peg$otherExpectation(\"[72] TriplesSameSubjectPath\"),\n        peg$c334 = function(s, pairs) {\n            var triplesContext = pairs.triplesContext;\n            var subject = s;\n            if(pairs.pairs) {\n        \tfor(var i=0; i< pairs.pairs.length; i++) {\n        \t    var pair = pairs.pairs[i];\n        \t    var triple = null;\n        \t    if(pair[1].length != null)\n        \t\tpair[1] = pair[1][0]\n        \t    if(subject.token && subject.token==='triplesnodecollection') {\n        \t\ttriple = {subject: subject.chainSubject[0], predicate: pair[0], object: pair[1]};\n        \t\tif(triple.predicate.token === 'path' && triple.predicate.kind === 'element') {\n        \t\t    triple.predicate = triple.predicate.value;\n        \t\t}\n        \t\ttriplesContext.push(triple);\n        \t\ttriplesContext = triplesContext.concat(subject.triplesContext);\n        \t    } else {\n        \t\ttriple = {subject: subject, predicate: pair[0], object: pair[1]}\n        \t\tif(triple.predicate.token === 'path' && triple.predicate.kind === 'element') {\n        \t\t    triple.predicate = triple.predicate.value;\n        \t\t}\n        \t\ttriplesContext.push(triple);\n        \t    }\n        \t}\n            }\n\n            var tokenParsed = {};\n            tokenParsed.token = \"triplessamesubject\";\n            tokenParsed.triplesContext = triplesContext;\n            tokenParsed.chainSubject = subject;\n\n            return tokenParsed;\n        },\n        peg$c335 = function(tn, pairs) {\n            var triplesContext = tn.triplesContext;\n            var subject = tn.chainSubject;\n\n            if(pairs != null && pairs.pairs != null) {\n        \tfor(var i=0; i< pairs.pairs.length; i++) {\n        \t    var pair = pairs.pairs[i];\n        \t    if(pair[1].length != null)\n        \t\tpair[1] = pair[1][0]\n\n        \t    if(tn.token === \"triplesnodecollection\") {\n        \t\tfor(var j=0; j<subject.length; j++) {\n        \t\t    var subj = subject[j];\n        \t\t    if(subj.triplesContext != null) {\n        \t\t\tvar triple = {subject: subj.chainSubject, predicate: pair[0], object: pair[1]}\n        \t\t\ttriplesContext.concat(subj.triplesContext);\n        \t\t    } else {\n        \t\t\tvar triple = {subject: subject[j], predicate: pair[0], object: pair[1]}\n        \t\t\ttriplesContext.push(triple);\n        \t\t    }\n        \t\t}\n        \t    } else {\n        \t\tvar triple = {subject: subject, predicate: pair[0], object: pair[1]}\n        \t\ttriplesContext.push(triple);\n        \t    }\n        \t}\n            }\n\n            var tokenParsed = {};\n            tokenParsed.token = \"triplessamesubject\";\n            tokenParsed.triplesContext = triplesContext;\n            tokenParsed.chainSubject = subject;\n\n            return tokenParsed;\n\n        },\n        peg$c336 = peg$otherExpectation(\"[73] PropertyListNotEmptyPath\"),\n        peg$c337 = function(v, ol, rest) {\n            var token = {}\n            token.token = 'propertylist';\n            var triplesContext = [];\n            var pairs = [];\n            var test = [];\n\n            for( var i=0; i<ol.length; i++) {\n\n        \tif(ol[i].triplesContext != null) {\n        \t    triplesContext = triplesContext.concat(ol[i].triplesContext);\n        \t    if(ol[i].token==='triplesnodecollection' && ol[i].chainSubject.length != null) {\n        \t\tpairs.push([v, ol[i].chainSubject[0]]);\n        \t    } else {\n        \t\tpairs.push([v, ol[i].chainSubject]);\n        \t    }\n\n        \t} else {\n        \t    pairs.push([v, ol[i]])\n        \t}\n\n            }\n\n\n            for(var i=0; i<rest.length; i++) {\n        \tvar tok = rest[i][3];\n        \tvar newVerb  = tok[0];\n        \tvar newObjsList = tok[1] || [];\n\n        \tfor(var j=0; j<newObjsList.length; j++) {\n        \t    if(newObjsList[j].triplesContext != null) {\n        \t\ttriplesContext = triplesContext.concat(newObjsList[j].triplesContext);\n        \t\tpairs.push([newVerb, newObjsList[j].chainSubject]);\n        \t    } else {\n        \t\tpairs.push([newVerb, newObjsList[j]])\n        \t    }\n        \t}\n            }\n\n            token.pairs = pairs;\n            token.triplesContext = triplesContext;\n\n            return token;\n        },\n        peg$c338 = peg$otherExpectation(\"[74] PropertyListPath\"),\n        peg$c339 = peg$otherExpectation(\"[75]\"),\n        peg$c340 = function(p) {\n            var path = {};\n            path.token = 'path';\n            path.kind = 'element';\n            path.value = p;\n\n            return p;\n        },\n        peg$c341 = peg$otherExpectation(\"[76] VerbSimple\"),\n        peg$c342 = peg$otherExpectation(\"[77] Path\"),\n        peg$c343 = peg$otherExpectation(\"[78] PathAlternative\"),\n        peg$c344 = \"|\",\n        peg$c345 = peg$literalExpectation(\"|\", false),\n        peg$c346 = function(first, rest) {\n            if(rest == null || rest.length === 0) {\n        \treturn first;\n            } else {\n        \tvar acum = [];\n        \tfor(var i=0; i<rest.length; i++)\n        \t    acum.push(rest[1]);\n\n        \tvar path = {};\n        \tpath.token = 'path';\n        \tpath.kind = 'alternative';\n        \tpath.value = acum;\n\n        \treturn path;\n            }\n        },\n        peg$c347 = peg$otherExpectation(\"[79] PathSequence\"),\n        peg$c348 = \"/\",\n        peg$c349 = peg$literalExpectation(\"/\", false),\n        peg$c350 = function(first, rest) {\n            if(rest == null || rest.length === 0) {\n        \treturn first;\n            } else {\n        \tvar acum = [first];\n\n        \tfor(var i=0; i<rest.length; i++)\n        \t    acum.push(rest[i][1]);\n\n        \tvar path = {};\n        \tpath.token = 'path';\n        \tpath.kind = 'sequence';\n\n        \tpath.value = acum;\n\n        \treturn path;\n            }\n        },\n        peg$c351 = peg$otherExpectation(\"[88] PathElt\"),\n        peg$c352 = function(p, mod) {\n            if(p.token && p.token != 'path' && mod == '') {\n            return p;\n        } else if(p.token && p.token != path && mod != '') {\n            var path = {};\n            path.token = 'path';\n            path.kind = 'element';\n            path.value = p;\n            path.modifier = mod;\n            return path;\n        } else {\n            p.modifier = mod;\n            return p;\n        }\n        },\n        peg$c353 = peg$otherExpectation(\"[81] PathEltOrInverse\"),\n        peg$c354 = \"^\",\n        peg$c355 = peg$literalExpectation(\"^\", false),\n        peg$c356 = function(elt) {\n            var path = {};\n            path.token = 'path';\n            path.kind = 'inversePath';\n            path.value = elt;\n\n            return path;\n        },\n        peg$c357 = peg$otherExpectation(\"[82] PathMod\"),\n        peg$c358 = \"?\",\n        peg$c359 = peg$literalExpectation(\"?\", false),\n        peg$c360 = \"+\",\n        peg$c361 = peg$literalExpectation(\"+\", false),\n        peg$c362 = peg$otherExpectation(\"[83] PathPrimary\"),\n        peg$c363 = \"!\",\n        peg$c364 = peg$literalExpectation(\"!\", false),\n        peg$c365 = peg$otherExpectation(\"[85] PathOneInPropertySet\"),\n        peg$c366 = peg$otherExpectation(\"[86] Integer\"),\n        peg$c367 = peg$otherExpectation(\"[100] TriplesNodePath\"),\n        peg$c368 = function(c) {\n            var triplesContext = [];\n            var chainSubject = [];\n\n            var triple = null;\n\n            // catch NIL\n            /*\n             if(c.length == 1 && c[0].token && c[0].token === 'nil') {\n             GlobalBlankNodeCounter++;\n             return  {token: \"triplesnodecollection\",\n             triplesContext:[{subject: {token:'blank', value:(\"_:\"+GlobalBlankNodeCounter)},\n             predicate:{token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#rest'},\n             object:  {token:'blank', value:(\"_:\"+(GlobalBlankNodeCounter+1))}}],\n             chainSubject:{token:'blank', value:(\"_:\"+GlobalBlankNodeCounter)}};\n\n             }\n             */\n\n            // other cases\n            for(var i=0; i<c.length; i++) {\n        \tGlobalBlankNodeCounter++;\n        \t//_:b0  rdf:first  1 ;\n        \t//rdf:rest   _:b1 .\n        \tvar nextObject = null;\n        \tif(c[i].chainSubject == null && c[i].triplesContext == null) {\n        \t    nextObject = c[i];\n        \t} else {\n        \t    nextObject = c[i].chainSubject;\n        \t    triplesContext = triplesContext.concat(c[i].triplesContext);\n        \t}\n        \ttriple = {\n        \t    subject: {token:'blank', value:(\"_:\"+GlobalBlankNodeCounter)},\n        \t    predicate:{token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#first'},\n        \t    object:nextObject\n        \t};\n\n        \tif(i==0) {\n        \t    chainSubject.push(triple.subject);\n        \t}\n\n        \ttriplesContext.push(triple);\n\n        \tif(i===(c.length-1)) {\n        \t    triple = {subject: {token:'blank', value:(\"_:\"+GlobalBlankNodeCounter)},\n        \t\tpredicate:{token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#rest'},\n        \t\tobject:   {token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#nil'}};\n        \t} else {\n        \t    triple = {subject: {token:'blank', value:(\"_:\"+GlobalBlankNodeCounter)},\n        \t\tpredicate:{token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#rest'},\n        \t\tobject:  {token:'blank', value:(\"_:\"+(GlobalBlankNodeCounter+1))} };\n        \t}\n\n        \ttriplesContext.push(triple);\n            }\n\n            return {token:\"triplesnodecollection\", triplesContext:triplesContext, chainSubject:chainSubject};\n        },\n        peg$c369 = peg$otherExpectation(\"[87] TriplesNode\"),\n        peg$c370 = function(c) {\n            var triplesContext = [];\n            var chainSubject = [];\n\n            var triple = null;\n\n            // catch NIL\n            /*\n             if(c.length == 1 && c[0].token && c[0].token === 'nil') {\n             GlobalBlankNodeCounter++;\n             return  {token: \"triplesnodecollection\",\n             triplesContext:[{subject: {token:'blank', value:(\"_:\"+GlobalBlankNodeCounter)},\n             predicate:{token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#rest'},\n             object:  {token:'blank', value:(\"_:\"+(GlobalBlankNodeCounter+1))}}],\n             chainSubject:{token:'blank', value:(\"_:\"+GlobalBlankNodeCounter)}};\n\n             }\n             */\n\n            // other cases\n            for(var i=0; i<c.length; i++) {\n        \tGlobalBlankNodeCounter++;\n        \t//_:b0  rdf:first  1 ;\n        \t//rdf:rest   _:b1 .\n        \tvar nextObject = null;\n        \tif(c[i].chainSubject == null && c[i].triplesContext == null) {\n        \t    nextObject = c[i];\n        \t} else {\n        \t    nextObject = c[i].chainSubject;\n        \t    triplesContext = triplesContext.concat(nextObject.triplesContext);\n        \t}\n        \ttriple = {subject: {token:'blank', value:(\"_:\"+GlobalBlankNodeCounter)},\n        \t    predicate:{token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#first'},\n        \t    object:nextObject };\n\n        \tif(i==0) {\n        \t    chainSubject.push(triple.subject);\n        \t}\n\n        \ttriplesContext.push(triple);\n\n        \tif(i===(c.length-1)) {\n        \t    triple = {subject: {token:'blank', value:(\"_:\"+GlobalBlankNodeCounter)},\n        \t\tpredicate:{token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#rest'},\n        \t\tobject:   {token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#nil'}};\n        \t} else {\n        \t    triple = {subject: {token:'blank', value:(\"_:\"+GlobalBlankNodeCounter)},\n        \t\tpredicate:{token:'uri', prefix:null, suffix:null, value:'http://www.w3.org/1999/02/22-rdf-syntax-ns#rest'},\n        \t\tobject:  {token:'blank', value:(\"_:\"+(GlobalBlankNodeCounter+1))} };\n        \t}\n\n        \ttriplesContext.push(triple);\n            }\n\n            return {token:\"triplesnodecollection\", triplesContext:triplesContext, chainSubject:chainSubject};\n        },\n        peg$c371 = peg$otherExpectation(\"[101] BlankNodePropertyListPath\"),\n        peg$c372 = \"[\",\n        peg$c373 = peg$literalExpectation(\"[\", false),\n        peg$c374 = \"]\",\n        peg$c375 = peg$literalExpectation(\"]\", false),\n        peg$c376 = function(pl) {\n            GlobalBlankNodeCounter++;\n            var subject = {token:'blank', value:'_:'+GlobalBlankNodeCounter};\n             var newTriples =  [];\n\n            for(var i=0; i< pl.pairs.length; i++) {\n        \tvar pair = pl.pairs[i];\n        \tvar triple = {}\n        \ttriple.subject = subject;\n        \ttriple.predicate = pair[0];\n        \tif(pair[1].length != null)\n        \t    pair[1] = pair[1][0]\n        \ttriple.object = pair[1];\n        \tnewTriples.push(triple);\n            }\n\n            return {\n        \ttoken: 'triplesnode',\n        \tkind: 'blanknodepropertylist',\n        \ttriplesContext: pl.triplesContext.concat(newTriples),\n        \tchainSubject: subject\n            };\n        },\n        peg$c377 = peg$otherExpectation(\"[88] BlankNodePropertyList\"),\n        peg$c378 = function(pl) {\n\n            GlobalBlankNodeCounter++;\n            var subject = {token:'blank', value:'_:'+GlobalBlankNodeCounter};\n            var newTriples =  [];\n\n            for(var i=0; i< pl.pairs.length; i++) {\n        \tvar pair = pl.pairs[i];\n        \tvar triple = {}\n        \ttriple.subject = subject;\n        \ttriple.predicate = pair[0];\n        \tif(pair[1].length != null)\n        \t    pair[1] = pair[1][0]\n        \ttriple.object = pair[1];\n        \tnewTriples.push(triple);\n            }\n\n            return {\n        \ttoken: 'triplesnode',\n        \tkind: 'blanknodepropertylist',\n        \ttriplesContext: pl.triplesContext.concat(newTriples),\n        \tchainSubject: subject\n            };\n        },\n        peg$c379 = peg$otherExpectation(\"[103] CollectionPath\"),\n        peg$c380 = function(gn) {\n            return gn;\n        },\n        peg$c381 = peg$otherExpectation(\"[89] Collection\"),\n        peg$c382 = peg$otherExpectation(\"[105] GraphNodePath\"),\n        peg$c383 = function(gn) {\n            return gn[1];\n        },\n        peg$c384 = peg$otherExpectation(\"[90] GraphNode\"),\n        peg$c385 = peg$otherExpectation(\"[91] VarOrTerm\"),\n        peg$c386 = peg$otherExpectation(\"[92] VarOrIRIref\"),\n        peg$c387 = peg$otherExpectation(\"[93] Var\"),\n        peg$c388 = function(v) {\n            var term = {};\n            term.token = 'var';\n            term.value = v;\n            return term;\n        },\n        peg$c389 = peg$otherExpectation(\"[94] GraphTerm\"),\n        peg$c390 = peg$otherExpectation(\"[95] Expression\"),\n        peg$c391 = peg$otherExpectation(\"[96] ConditionalOrExpression\"),\n        peg$c392 = \"||\",\n        peg$c393 = peg$literalExpectation(\"||\", false),\n        peg$c394 = function(v, vs) {\n            if(vs.length === 0) {\n        \treturn v;\n            }\n\n            var exp = {};\n            exp.token = \"expression\";\n            exp.expressionType = \"conditionalor\";\n            var ops = [v];\n\n            for(var i=0; i<vs.length; i++) {\n        \tops.push(vs[i][3]);\n            }\n\n            exp.operands = ops;\n\n            return exp;\n        },\n        peg$c395 = peg$otherExpectation(\"[97] ConditionalAndExpression\"),\n        peg$c396 = \"&&\",\n        peg$c397 = peg$literalExpectation(\"&&\", false),\n        peg$c398 = function(v, vs) {\n            if(vs.length === 0) {\n        \treturn v;\n            }\n            var exp = {};\n            exp.token = \"expression\";\n            exp.expressionType = \"conditionaland\";\n            var ops = [v];\n\n            for(var i=0; i<vs.length; i++) {\n        \tops.push(vs[i][3]);\n            }\n\n            exp.operands = ops;\n\n            return exp;\n        },\n        peg$c399 = peg$otherExpectation(\"[98] ValueLogical\"),\n        peg$c400 = peg$otherExpectation(\"[99] RelationalExpression\"),\n        peg$c401 = \"=\",\n        peg$c402 = peg$literalExpectation(\"=\", false),\n        peg$c403 = \"!=\",\n        peg$c404 = peg$literalExpectation(\"!=\", false),\n        peg$c405 = \"<\",\n        peg$c406 = peg$literalExpectation(\"<\", false),\n        peg$c407 = \">\",\n        peg$c408 = peg$literalExpectation(\">\", false),\n        peg$c409 = \"<=\",\n        peg$c410 = peg$literalExpectation(\"<=\", false),\n        peg$c411 = \">=\",\n        peg$c412 = peg$literalExpectation(\">=\", false),\n        peg$c413 = \"I\",\n        peg$c414 = peg$literalExpectation(\"I\", false),\n        peg$c415 = \"i\",\n        peg$c416 = peg$literalExpectation(\"i\", false),\n        peg$c417 = \"N\",\n        peg$c418 = peg$literalExpectation(\"N\", false),\n        peg$c419 = \"n\",\n        peg$c420 = peg$literalExpectation(\"n\", false),\n        peg$c421 = \"O\",\n        peg$c422 = peg$literalExpectation(\"O\", false),\n        peg$c423 = \"o\",\n        peg$c424 = peg$literalExpectation(\"o\", false),\n        peg$c425 = \"T\",\n        peg$c426 = peg$literalExpectation(\"T\", false),\n        peg$c427 = \"t\",\n        peg$c428 = peg$literalExpectation(\"t\", false),\n        peg$c429 = function(op1, op2) {\n            if(op2.length === 0) {\n        \treturn op1;\n            } else if(op2[0][1] === 'i' || op2[0][1] === 'I' || op2[0][1] === 'n' || op2[0][1] === 'N'){\n        \tvar exp = {};\n\n        \tif(op2[0][1] === 'i' || op2[0][1] === 'I') {\n        \t    var operator = \"=\";\n        \t    exp.expressionType = \"conditionalor\"\n        \t} else {\n        \t    var operator = \"!=\";\n        \t    exp.expressionType = \"conditionaland\"\n        \t}\n        \tvar lop = op1;\n        \tvar rops = []\n        \tfor(var opi=0; opi<op2[0].length; opi++) {\n        \t    if(op2[0][opi].token ===\"args\") {\n        \t\trops = op2[0][opi].value;\n        \t\tbreak;\n        \t    }\n        \t}\n\n        \texp.token = \"expression\";\n        \texp.operands = [];\n        \tfor(var i=0; i<rops.length; i++) {\n        \t    var nextOperand = {};\n        \t    nextOperand.token = \"expression\";\n        \t    nextOperand.expressionType = \"relationalexpression\";\n        \t    nextOperand.operator = operator;\n        \t    nextOperand.op1 = lop;\n        \t    nextOperand.op2 = rops[i];\n\n        \t    exp.operands.push(nextOperand);\n        \t}\n        \treturn exp;\n            } else {\n        \tvar exp = {};\n        \texp.expressionType = \"relationalexpression\"\n        \texp.operator = op2[0][1];\n        \texp.op1 = op1;\n        \texp.op2 = op2[0][3];\n        \texp.token = \"expression\";\n\n        \treturn exp;\n            }\n        },\n        peg$c430 = peg$otherExpectation(\"[100] NumericExpression\"),\n        peg$c431 = peg$otherExpectation(\"[101] AdditiveExpression\"),\n        peg$c432 = \"-\",\n        peg$c433 = peg$literalExpectation(\"-\", false),\n        peg$c434 = function(op1, ops) {\n            if(ops.length === 0) {\n        \treturn op1;\n            }\n\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'additiveexpression';\n            ex.summand = op1;\n            ex.summands = [];\n\n            for(var i=0; i<ops.length; i++) {\n        \tvar summand = ops[i];\n        \tvar sum = {};\n        \tif(summand.length == 4 && typeof(summand[1]) === \"string\") {\n        \t    sum.operator = summand[1];\n        \t    sum.expression = summand[3];\n        \t} else {\n        \t    var subexp = {}\n        \t    var firstFactor = sum[0];\n        \t    var operator = sum[1][1];\n        \t    var secondFactor = sum[1][3];\n        \t    var operator = null;\n        \t    if(firstFactor.value < 0) {\n        \t\tsum.operator = '-';\n        \t\tfirstFactor.value = - firstFactor.value;\n        \t    } else {\n        \t\tsum.operator = '+';\n        \t    }\n        \t    subexp.token = 'expression';\n        \t    subexp.expressionType = 'multiplicativeexpression';\n        \t    subexp.operator = firstFactor;\n        \t    subexp.factors = [{operator: operator, expression: secondFactor}];\n\n        \t    sum.expression = subexp;\n        \t}\n        \tex.summands.push(sum);\n            }\n\n            return ex;\n        },\n        peg$c435 = peg$otherExpectation(\"[102] MultiplicativeExpression\"),\n        peg$c436 = function(exp, exps) {\n            if(exps.length === 0) {\n        \treturn exp;\n            }\n\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'multiplicativeexpression';\n            ex.factor = exp;\n            ex.factors = [];\n            for(var i=0; i<exps.length; i++) {\n        \tvar factor = exps[i];\n        \tvar fact = {};\n        \tfact.operator = factor[1];\n        \tfact.expression = factor[3];\n        \tex.factors.push(fact);\n            }\n\n            return ex;\n        },\n        peg$c437 = peg$otherExpectation(\"[103] UnaryExpression\"),\n        peg$c438 = function(e) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'unaryexpression';\n            ex.unaryexpression = \"!\";\n            ex.expression = e;\n\n            return ex;\n        },\n        peg$c439 = function(v) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'unaryexpression';\n            ex.unaryexpression = \"+\";\n            ex.expression = v;\n\n            return ex;\n        },\n        peg$c440 = function(v) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'unaryexpression';\n            ex.unaryexpression = \"-\";\n            ex.expression = v;\n\n            return ex;\n        },\n        peg$c441 = peg$otherExpectation(\"[104] PrimaryExpression\"),\n        peg$c442 = function(v) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'atomic';\n            ex.primaryexpression = 'rdfliteral';\n            ex.value = v;\n\n            return ex;\n        },\n        peg$c443 = function(v) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'atomic';\n            ex.primaryexpression = 'numericliteral';\n            ex.value = v;\n\n            return ex;\n        },\n        peg$c444 = function(v) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'atomic';\n            ex.primaryexpression = 'booleanliteral';\n            ex.value = v;\n\n            return ex;\n        },\n        peg$c445 = function(v) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'atomic';\n            ex.primaryexpression = 'var';\n            ex.value = v;\n\n            return ex;\n        },\n        peg$c446 = peg$otherExpectation(\"[105] BrackettedExpression\"),\n        peg$c447 = function(e) {\n            return e;\n        },\n        peg$c448 = peg$otherExpectation(\"[106] BuiltInCall\"),\n        peg$c449 = \"STR\",\n        peg$c450 = peg$literalExpectation(\"STR\", false),\n        peg$c451 = \"str\",\n        peg$c452 = peg$literalExpectation(\"str\", false),\n        peg$c453 = function(e) {\n            var ex = {};\n            ex.token = 'expression'\n            ex.expressionType = 'builtincall'\n            ex.builtincall = 'str'\n            ex.args = [e]\n\n            return ex;\n        },\n        peg$c454 = \"LANG\",\n        peg$c455 = peg$literalExpectation(\"LANG\", false),\n        peg$c456 = \"lang\",\n        peg$c457 = peg$literalExpectation(\"lang\", false),\n        peg$c458 = function(e) {\n            var ex = {};\n            ex.token = 'expression'\n            ex.expressionType = 'builtincall'\n            ex.builtincall = 'lang'\n            ex.args = [e]\n\n            return ex;\n        },\n        peg$c459 = \"LANGMATCHES\",\n        peg$c460 = peg$literalExpectation(\"LANGMATCHES\", false),\n        peg$c461 = \"langmatches\",\n        peg$c462 = peg$literalExpectation(\"langmatches\", false),\n        peg$c463 = function(e1, e2) {\n            var ex = {};\n            ex.token = 'expression'\n            ex.expressionType = 'builtincall'\n            ex.builtincall = 'langmatches'\n            ex.args = [e1,e2]\n\n            return ex;\n        },\n        peg$c464 = \"DATATYPE\",\n        peg$c465 = peg$literalExpectation(\"DATATYPE\", false),\n        peg$c466 = \"datatype\",\n        peg$c467 = peg$literalExpectation(\"datatype\", false),\n        peg$c468 = function(e) {\n            var ex = {};\n            ex.token = 'expression'\n            ex.expressionType = 'builtincall'\n            ex.builtincall = 'datatype'\n            ex.args = [e]\n\n            return ex;\n        },\n        peg$c469 = \"BOUND\",\n        peg$c470 = peg$literalExpectation(\"BOUND\", false),\n        peg$c471 = \"bound\",\n        peg$c472 = peg$literalExpectation(\"bound\", false),\n        peg$c473 = function(v) {\n            var ex = {};\n            ex.token = 'expression'\n            ex.expressionType = 'builtincall'\n            ex.builtincall = 'bound'\n            ex.args = [v]\n\n            return ex;\n        },\n        peg$c474 = \"IRI\",\n        peg$c475 = peg$literalExpectation(\"IRI\", false),\n        peg$c476 = \"iri\",\n        peg$c477 = peg$literalExpectation(\"iri\", false),\n        peg$c478 = function(e) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'builtincall';\n            ex.builtincall = 'iri'\n            ex.args = [e];\n\n            return ex;\n        },\n        peg$c479 = \"URI\",\n        peg$c480 = peg$literalExpectation(\"URI\", false),\n        peg$c481 = \"uri\",\n        peg$c482 = peg$literalExpectation(\"uri\", false),\n        peg$c483 = function(e) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'builtincall';\n            ex.builtincall = 'uri'\n            ex.args = [e];\n\n            return ex;\n        },\n        peg$c484 = \"BNODE\",\n        peg$c485 = peg$literalExpectation(\"BNODE\", false),\n        peg$c486 = \"bnode\",\n        peg$c487 = peg$literalExpectation(\"bnode\", false),\n        peg$c488 = function(arg) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'builtincall';\n            ex.builtincall = 'bnode';\n            if(arg.length === 5) {\n        \tex.args = [arg[2]];\n            } else {\n        \tex.args = null;\n            }\n\n            return ex;\n        },\n        peg$c489 = \"COALESCE\",\n        peg$c490 = peg$literalExpectation(\"COALESCE\", false),\n        peg$c491 = \"coalesce\",\n        peg$c492 = peg$literalExpectation(\"coalesce\", false),\n        peg$c493 = function(args) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'builtincall';\n            ex.builtincall = 'coalesce';\n            ex.args = args;\n\n            return ex;\n        },\n        peg$c494 = \"IF\",\n        peg$c495 = peg$literalExpectation(\"IF\", false),\n        peg$c496 = \"if\",\n        peg$c497 = peg$literalExpectation(\"if\", false),\n        peg$c498 = function(test, trueCond, falseCond) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'builtincall';\n            ex.builtincall = 'if';\n            ex.args = [test,trueCond,falseCond];\n\n            return ex;\n        },\n        peg$c499 = \"ISLITERAL\",\n        peg$c500 = peg$literalExpectation(\"ISLITERAL\", false),\n        peg$c501 = \"isliteral\",\n        peg$c502 = peg$literalExpectation(\"isliteral\", false),\n        peg$c503 = \"isLITERAL\",\n        peg$c504 = peg$literalExpectation(\"isLITERAL\", false),\n        peg$c505 = function(arg) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'builtincall';\n            ex.builtincall = 'isliteral';\n            ex.args = [arg];\n\n            return ex;\n        },\n        peg$c506 = \"ISBLANK\",\n        peg$c507 = peg$literalExpectation(\"ISBLANK\", false),\n        peg$c508 = \"isblank\",\n        peg$c509 = peg$literalExpectation(\"isblank\", false),\n        peg$c510 = \"isBLANK\",\n        peg$c511 = peg$literalExpectation(\"isBLANK\", false),\n        peg$c512 = function(arg) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'builtincall';\n            ex.builtincall = 'isblank';\n            ex.args = [arg];\n\n            return ex;\n        },\n        peg$c513 = \"SAMETERM\",\n        peg$c514 = peg$literalExpectation(\"SAMETERM\", false),\n        peg$c515 = \"sameterm\",\n        peg$c516 = peg$literalExpectation(\"sameterm\", false),\n        peg$c517 = function(e1, e2) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'builtincall';\n            ex.builtincall = 'sameterm';\n            ex.args = [e1, e2];\n            return ex;\n        },\n        peg$c518 = \"ISURI\",\n        peg$c519 = peg$literalExpectation(\"ISURI\", false),\n        peg$c520 = \"isuri\",\n        peg$c521 = peg$literalExpectation(\"isuri\", false),\n        peg$c522 = \"isURI\",\n        peg$c523 = peg$literalExpectation(\"isURI\", false),\n        peg$c524 = \"ISIRI\",\n        peg$c525 = peg$literalExpectation(\"ISIRI\", false),\n        peg$c526 = \"isiri\",\n        peg$c527 = peg$literalExpectation(\"isiri\", false),\n        peg$c528 = \"isIRI\",\n        peg$c529 = peg$literalExpectation(\"isIRI\", false),\n        peg$c530 = function(arg) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'builtincall';\n            ex.builtincall = 'isuri';\n            ex.args = [arg];\n\n            return ex;\n        },\n        peg$c531 = \"custom:\",\n        peg$c532 = peg$literalExpectation(\"custom:\", false),\n        peg$c533 = \"CUSTOM:\",\n        peg$c534 = peg$literalExpectation(\"CUSTOM:\", false),\n        peg$c535 = /^[a-zA-Z0-9_]/,\n        peg$c536 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"_\"], false, false),\n        peg$c537 = function(fnname, alter, finalarg) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'custom';\n            ex.name = fnname.join('');\n            var acum = [];\n            for(var i=0; i<alter.length; i++)\n        \tacum.push(alter[i][1]);\n            acum.push(finalarg);\n            ex.args = acum;\n\n            return ex;\n        },\n        peg$c538 = peg$otherExpectation(\"[107] RegexExpression\"),\n        peg$c539 = \"REGEX\",\n        peg$c540 = peg$literalExpectation(\"REGEX\", false),\n        peg$c541 = \"regex\",\n        peg$c542 = peg$literalExpectation(\"regex\", false),\n        peg$c543 = function(e1, e2, eo) {\n            var regex = {};\n        regex.token = 'expression';\n        regex.expressionType = 'regex';\n        regex.text = e1;\n        regex.pattern = e2;\n        if(eo != null) {\n          regex.flags = eo[2];\n        }\n\n        return regex;\n        },\n        peg$c544 = peg$otherExpectation(\"[108] ExistsFunc\"),\n        peg$c545 = \"EXISTS\",\n        peg$c546 = peg$literalExpectation(\"EXISTS\", false),\n        peg$c547 = \"exists\",\n        peg$c548 = peg$literalExpectation(\"exists\", false),\n        peg$c549 = function(ggp) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'builtincall';\n            ex.builtincall = 'exists';\n            ex.args = [ggp];\n\n            return ex;\n        },\n        peg$c550 = peg$otherExpectation(\"[109] NotExistsFunc\"),\n        peg$c551 = \"NOT\",\n        peg$c552 = peg$literalExpectation(\"NOT\", false),\n        peg$c553 = \"not\",\n        peg$c554 = peg$literalExpectation(\"not\", false),\n        peg$c555 = function(ggp) {\n            var ex = {};\n            ex.token = 'expression';\n            ex.expressionType = 'builtincall';\n            ex.builtincall = 'notexists';\n            ex.args = [ggp];\n\n            return ex;\n        },\n        peg$c556 = peg$otherExpectation(\"[110] Aggregate\"),\n        peg$c557 = \"COUNT\",\n        peg$c558 = peg$literalExpectation(\"COUNT\", false),\n        peg$c559 = \"count\",\n        peg$c560 = peg$literalExpectation(\"count\", false),\n        peg$c561 = function(d, e) {\n            var exp = {};\n        exp.token = 'expression';\n        exp.expressionType = 'aggregate';\n        exp.aggregateType = 'count';\n        exp.distinct = ((d != \"\" && d != null) ? 'DISTINCT' : d);\n        exp.expression = e;\n\n        return exp;\n\n        },\n        peg$c562 = \"GROUP_CONCAT\",\n        peg$c563 = peg$literalExpectation(\"GROUP_CONCAT\", false),\n        peg$c564 = \"group_concat\",\n        peg$c565 = peg$literalExpectation(\"group_concat\", false),\n        peg$c566 = \"SEPARATOR\",\n        peg$c567 = peg$literalExpectation(\"SEPARATOR\", false),\n        peg$c568 = function(d, e, s) {\n            var exp = {};\n            exp.token = 'expression';\n            exp.expressionType = 'aggregate';\n            exp.aggregateType = 'group_concat';\n            exp.distinct = ((d != \"\" && d != null) ? 'DISTINCT' : d);\n            exp.expression = e;\n            exp.separator = s;\n\n            return exp;\n\n        },\n        peg$c569 = \"SUM\",\n        peg$c570 = peg$literalExpectation(\"SUM\", false),\n        peg$c571 = \"sum\",\n        peg$c572 = peg$literalExpectation(\"sum\", false),\n        peg$c573 = function(d, e) {\n            var exp = {};\n        exp.token = 'expression';\n        exp.expressionType = 'aggregate';\n        exp.aggregateType = 'sum';\n        exp.distinct = ((d != \"\" && d != null) ? 'DISTINCT' : d);\n        exp.expression = e;\n\n        return exp;\n\n        },\n        peg$c574 = \"MIN\",\n        peg$c575 = peg$literalExpectation(\"MIN\", false),\n        peg$c576 = \"min\",\n        peg$c577 = peg$literalExpectation(\"min\", false),\n        peg$c578 = function(d, e) {\n            var exp = {};\n        exp.token = 'expression';\n        exp.expressionType = 'aggregate';\n        exp.aggregateType = 'min';\n        exp.distinct = ((d != \"\" && d != null) ? 'DISTINCT' : d);\n        exp.expression = e;\n\n        return exp;\n\n        },\n        peg$c579 = \"MAX\",\n        peg$c580 = peg$literalExpectation(\"MAX\", false),\n        peg$c581 = \"max\",\n        peg$c582 = peg$literalExpectation(\"max\", false),\n        peg$c583 = function(d, e) {\n            var exp = {};\n        exp.token = 'expression'\n        exp.expressionType = 'aggregate'\n        exp.aggregateType = 'max'\n        exp.distinct = ((d != \"\" && d != null) ? 'DISTINCT' : d);\n        exp.expression = e\n\n        return exp\n\n        },\n        peg$c584 = \"AVG\",\n        peg$c585 = peg$literalExpectation(\"AVG\", false),\n        peg$c586 = \"avg\",\n        peg$c587 = peg$literalExpectation(\"avg\", false),\n        peg$c588 = function(d, e) {\n            var exp = {};\n        exp.token = 'expression'\n        exp.expressionType = 'aggregate'\n        exp.aggregateType = 'avg'\n        exp.distinct = ((d != \"\" && d != null) ? 'DISTINCT' : d);\n        exp.expression = e\n\n        return exp\n\n        },\n        peg$c589 = peg$otherExpectation(\"[117] IRIrefOrFunction\"),\n        peg$c590 = function(i, args) {\n            var fcall = {};\n        fcall.token = \"expression\";\n        fcall.expressionType = 'irireforfunction';\n        fcall.iriref = i;\n        fcall.args = (args != null ? args.value : args);\n\n        return fcall;\n        },\n        peg$c591 = peg$otherExpectation(\"[112] RDFLiteral\"),\n        peg$c592 = \"^^\",\n        peg$c593 = peg$literalExpectation(\"^^\", false),\n        peg$c594 = function(s, e) {\n            if(typeof(e) === \"string\" && e.length > 0) {\n            return {token:'literal', value:s.value, lang:e.slice(1), type:null}\n        } else {\n            if(e != null && typeof(e) === \"object\") {\n        \te.shift(); // remove the '^^' char\n        \treturn {token:'literal', value:s.value, lang:null, type:e[0] }\n            } else {\n        \treturn { token:'literal', value:s.value, lang:null, type:null }\n            }\n        }\n        },\n        peg$c595 = peg$otherExpectation(\"[113] NumericLiteral\"),\n        peg$c596 = peg$otherExpectation(\"[114] NumericLiteralUnsigned\"),\n        peg$c597 = peg$otherExpectation(\"[115] NumericLiteralPositive\"),\n        peg$c598 = peg$otherExpectation(\"[116] NumericLiteralNegative\"),\n        peg$c599 = peg$otherExpectation(\"[117] BooleanLiteral\"),\n        peg$c600 = \"TRUE\",\n        peg$c601 = peg$literalExpectation(\"TRUE\", false),\n        peg$c602 = \"true\",\n        peg$c603 = peg$literalExpectation(\"true\", false),\n        peg$c604 = function() {\n            var lit = {};\n            lit.token = \"literal\";\n            lit.lang = null;\n            lit.type = \"http://www.w3.org/2001/XMLSchema#boolean\";\n            lit.value = true;\n            return lit;\n        },\n        peg$c605 = \"FALSE\",\n        peg$c606 = peg$literalExpectation(\"FALSE\", false),\n        peg$c607 = \"false\",\n        peg$c608 = peg$literalExpectation(\"false\", false),\n        peg$c609 = function() {\n            var lit = {};\n            lit.token = \"literal\";\n            lit.lang = null;\n            lit.type = \"http://www.w3.org/2001/XMLSchema#boolean\";\n            lit.value = false;\n            return lit;\n        },\n        peg$c610 = peg$otherExpectation(\"[118] String\"),\n        peg$c611 = function(s) { return {token:'string', value:s} },\n        peg$c612 = peg$otherExpectation(\"[119] IRIref\"),\n        peg$c613 = function(iri) { return {token: 'uri', prefix:null, suffix:null, value:iri} },\n        peg$c614 = function(p) { return p },\n        peg$c615 = peg$otherExpectation(\"[120] PrefixedName\"),\n        peg$c616 = function(p) { return {token: 'uri', prefix:p[0], suffix:p[1], value:null } },\n        peg$c617 = function(p) { return {token: 'uri', prefix:p, suffix:'', value:null } },\n        peg$c618 = peg$otherExpectation(\"[121] BlankNode\"),\n        peg$c619 = function(l) { return {token:'blank', value:l}},\n        peg$c620 = function() { GlobalBlankNodeCounter++; return {token:'blank', value:'_:'+GlobalBlankNodeCounter} },\n        peg$c621 = peg$otherExpectation(\"[122] IRI_REF\"),\n        peg$c622 = /^[^<>\"{}|\\^`\\\\]/,\n        peg$c623 = peg$classExpectation([\"<\", \">\", \"\\\"\", \"{\", \"}\", \"|\", \"^\", \"`\", \"\\\\\"], true, false),\n        peg$c624 = function(iri_ref) { return iri_ref.join('') },\n        peg$c625 = peg$otherExpectation(\"[123] PNAME_NS\"),\n        peg$c626 = \":\",\n        peg$c627 = peg$literalExpectation(\":\", false),\n        peg$c628 = peg$otherExpectation(\"[124] PNAME_LN\"),\n        peg$c629 = function(p, s) { return [p, s] },\n        peg$c630 = peg$otherExpectation(\"[125] BLANK_NODE_LABEL\"),\n        peg$c631 = \"_:\",\n        peg$c632 = peg$literalExpectation(\"_:\", false),\n        peg$c633 = function(l) { return l },\n        peg$c634 = peg$otherExpectation(\"[126] VAR1\"),\n        peg$c635 = function(v) { return v },\n        peg$c636 = peg$otherExpectation(\"[127] VAR2\"),\n        peg$c637 = \"$\",\n        peg$c638 = peg$literalExpectation(\"$\", false),\n        peg$c639 = peg$otherExpectation(\"[128] LANGTAG\"),\n        peg$c640 = \"@\",\n        peg$c641 = peg$literalExpectation(\"@\", false),\n        peg$c642 = /^[a-zA-Z]/,\n        peg$c643 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n        peg$c644 = /^[a-zA-Z0-9]/,\n        peg$c645 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"]], false, false),\n        peg$c646 = function(a, b) {\n\n            if(b.length===0) {\n            return (\"@\"+a.join('')).toLowerCase();\n            } else {\n            return (\"@\"+a.join('')+\"-\"+b[0][1].join('')).toLowerCase();\n            }\n            },\n        peg$c647 = peg$otherExpectation(\"[129] INTEGER\"),\n        peg$c648 = /^[0-9]/,\n        peg$c649 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n        peg$c650 = function(d) {\n            var lit = {};\n            lit.token = \"literal\";\n            lit.lang = null;\n            lit.type = \"http://www.w3.org/2001/XMLSchema#integer\";\n            lit.value = flattenString(d);\n            return lit;\n            },\n        peg$c651 = peg$otherExpectation(\"[130] DECIMAL\"),\n        peg$c652 = function(a, b, c) {\n\n            var lit = {};\n            lit.token = \"literal\";\n            lit.lang = null;\n            lit.type = \"http://www.w3.org/2001/XMLSchema#decimal\";\n            lit.value = flattenString([a,b,c]);\n            return lit;\n            },\n        peg$c653 = function(a, b) {\n            var lit = {};\n            lit.token = \"literal\";\n            lit.lang = null;\n            lit.type = \"http://www.w3.org/2001/XMLSchema#decimal\";\n            lit.value = flattenString([a,b]);\n            return lit;\n            },\n        peg$c654 = peg$otherExpectation(\"[131] DOUBLE\"),\n        peg$c655 = function(a, b, c, e) {\n            var lit = {};\n            lit.token = \"literal\";\n            lit.lang = null;\n            lit.type = \"http://www.w3.org/2001/XMLSchema#double\";\n            lit.value = flattenString([a,b,c,e]);\n            return lit;\n            },\n        peg$c656 = function(a, b, c) {\n            var lit = {};\n            lit.token = \"literal\";\n            lit.lang = null;\n            lit.type = \"http://www.w3.org/2001/XMLSchema#double\";\n            lit.value = flattenString([a,b,c]);\n            return lit;\n            },\n        peg$c657 = function(a, b) {\n            var lit = {};\n            lit.token = \"literal\";\n            lit.lang = null;\n            lit.type = \"http://www.w3.org/2001/XMLSchema#double\";\n            lit.value = flattenString([a,b]);\n            return lit;\n            },\n        peg$c658 = peg$otherExpectation(\"[132] INTEGER_POSITIVE\"),\n        peg$c659 = function(d) { d.value = \"+\"+d.value; return d; },\n        peg$c660 = peg$otherExpectation(\"[133] DECIMAL_POSITIVE\"),\n        peg$c661 = function(d) { d.value = \"+\"+d.value; return d },\n        peg$c662 = peg$otherExpectation(\"[134] DOUBLE_POSITIVE\"),\n        peg$c663 = peg$otherExpectation(\"[135] INTEGER_NEGATIVE\"),\n        peg$c664 = function(d) { d.value = \"-\"+d.value; return d; },\n        peg$c665 = peg$otherExpectation(\"[136] DECIMAL_NEGATIVE\"),\n        peg$c666 = peg$otherExpectation(\"[137] DOUBLE_NEGATIVE\"),\n        peg$c667 = peg$otherExpectation(\"[138] EXPONENT\"),\n        peg$c668 = /^[eE]/,\n        peg$c669 = peg$classExpectation([\"e\", \"E\"], false, false),\n        peg$c670 = /^[+\\-]/,\n        peg$c671 = peg$classExpectation([\"+\", \"-\"], false, false),\n        peg$c672 = function(a, b, c) { return flattenString([a,b,c]) },\n        peg$c673 = peg$otherExpectation(\"[139] STRING_LITERAL1\"),\n        peg$c674 = \"'\",\n        peg$c675 = peg$literalExpectation(\"'\", false),\n        peg$c676 = /^[^'\\\\\\n\\r]/,\n        peg$c677 = peg$classExpectation([\"'\", \"\\\\\", \"\\n\", \"\\r\"], true, false),\n        peg$c678 = function(content) { return flattenString(content) },\n        peg$c679 = peg$otherExpectation(\"[140] STRING_LITERAL2\"),\n        peg$c680 = \"\\\"\",\n        peg$c681 = peg$literalExpectation(\"\\\"\", false),\n        peg$c682 = /^[^\"\\\\\\n\\r]/,\n        peg$c683 = peg$classExpectation([\"\\\"\", \"\\\\\", \"\\n\", \"\\r\"], true, false),\n        peg$c684 = peg$otherExpectation(\"[141] STRING_LITERAL_LONG1\"),\n        peg$c685 = \"'''\",\n        peg$c686 = peg$literalExpectation(\"'''\", false),\n        peg$c687 = /^[^'\\\\]/,\n        peg$c688 = peg$classExpectation([\"'\", \"\\\\\"], true, false),\n        peg$c689 = peg$otherExpectation(\"[142] STRING_LITERAL_LONG2\"),\n        peg$c690 = \"\\\"\\\"\\\"\",\n        peg$c691 = peg$literalExpectation(\"\\\"\\\"\\\"\", false),\n        peg$c692 = /^[^\"\\\\]/,\n        peg$c693 = peg$classExpectation([\"\\\"\", \"\\\\\"], true, false),\n        peg$c694 = peg$otherExpectation(\"[143] ECHAR\"),\n        peg$c695 = \"\\\\\",\n        peg$c696 = peg$literalExpectation(\"\\\\\", false),\n        peg$c697 = /^[tbnrf\"']/,\n        peg$c698 = peg$classExpectation([\"t\", \"b\", \"n\", \"r\", \"f\", \"\\\"\", \"'\"], false, false),\n        peg$c699 = peg$otherExpectation(\"[144] NIL\"),\n        peg$c700 = function() {\n\n            return  {token: \"triplesnodecollection\",\n            triplesContext:[],\n            chainSubject:[{token:'uri', value:\"http://www.w3.org/1999/02/22-rdf-syntax-ns#nil\"}]};\n            },\n        peg$c701 = peg$otherExpectation(\"[145] WS\"),\n        peg$c702 = /^[ ]/,\n        peg$c703 = peg$classExpectation([\" \"], false, false),\n        peg$c704 = /^[\\t]/,\n        peg$c705 = peg$classExpectation([\"\\t\"], false, false),\n        peg$c706 = /^[\\r]/,\n        peg$c707 = peg$classExpectation([\"\\r\"], false, false),\n        peg$c708 = /^[\\n]/,\n        peg$c709 = peg$classExpectation([\"\\n\"], false, false),\n        peg$c710 = peg$otherExpectation(\" COMMENT\"),\n        peg$c711 = \"#\",\n        peg$c712 = peg$literalExpectation(\"#\", false),\n        peg$c713 = /^[^\\n\\r]/,\n        peg$c714 = peg$classExpectation([\"\\n\", \"\\r\"], true, false),\n        peg$c715 = peg$otherExpectation(\"[146] ANON\"),\n        peg$c716 = peg$otherExpectation(\"[147] PN_CHARS_BASE\"),\n        peg$c717 = /^[A-Z]/,\n        peg$c718 = peg$classExpectation([[\"A\", \"Z\"]], false, false),\n        peg$c719 = /^[a-z]/,\n        peg$c720 = peg$classExpectation([[\"a\", \"z\"]], false, false),\n        peg$c721 = /^[\\xC0-\\xD6]/,\n        peg$c722 = peg$classExpectation([[\"\\xC0\", \"\\xD6\"]], false, false),\n        peg$c723 = /^[\\xD8-\\xF6]/,\n        peg$c724 = peg$classExpectation([[\"\\xD8\", \"\\xF6\"]], false, false),\n        peg$c725 = /^[\\xF8-\\u02FF]/,\n        peg$c726 = peg$classExpectation([[\"\\xF8\", \"\\u02FF\"]], false, false),\n        peg$c727 = /^[\\u0370-\\u037D]/,\n        peg$c728 = peg$classExpectation([[\"\\u0370\", \"\\u037D\"]], false, false),\n        peg$c729 = /^[\\u037F-\\u1FFF]/,\n        peg$c730 = peg$classExpectation([[\"\\u037F\", \"\\u1FFF\"]], false, false),\n        peg$c731 = /^[\\u200C-\\u200D]/,\n        peg$c732 = peg$classExpectation([[\"\\u200C\", \"\\u200D\"]], false, false),\n        peg$c733 = /^[\\u2070-\\u218F]/,\n        peg$c734 = peg$classExpectation([[\"\\u2070\", \"\\u218F\"]], false, false),\n        peg$c735 = /^[\\u2C00-\\u2FEF]/,\n        peg$c736 = peg$classExpectation([[\"\\u2C00\", \"\\u2FEF\"]], false, false),\n        peg$c737 = /^[\\u3001-\\uD7FF]/,\n        peg$c738 = peg$classExpectation([[\"\\u3001\", \"\\uD7FF\"]], false, false),\n        peg$c739 = /^[\\uF900-\\uFDCF]/,\n        peg$c740 = peg$classExpectation([[\"\\uF900\", \"\\uFDCF\"]], false, false),\n        peg$c741 = /^[\\uFDF0-\\uFFFD]/,\n        peg$c742 = peg$classExpectation([[\"\\uFDF0\", \"\\uFFFD\"]], false, false),\n        peg$c743 = /^[\\u1000-\\uEFFF]/,\n        peg$c744 = peg$classExpectation([[\"\\u1000\", \"\\uEFFF\"]], false, false),\n        peg$c745 = peg$otherExpectation(\"[148] PN_CHARS_U\"),\n        peg$c746 = \"_\",\n        peg$c747 = peg$literalExpectation(\"_\", false),\n        peg$c748 = peg$otherExpectation(\"[149] VARNAME\"),\n        peg$c749 = /^[\\xB7]/,\n        peg$c750 = peg$classExpectation([\"\\xB7\"], false, false),\n        peg$c751 = /^[\\u0300-\\u036F]/,\n        peg$c752 = peg$classExpectation([[\"\\u0300\", \"\\u036F\"]], false, false),\n        peg$c753 = /^[\\u203F-\\u2040]/,\n        peg$c754 = peg$classExpectation([[\"\\u203F\", \"\\u2040\"]], false, false),\n        peg$c755 = function(init, rpart) { return init+rpart.join('') },\n        peg$c756 = peg$otherExpectation(\"[150] PN_CHARS\"),\n        peg$c757 = peg$otherExpectation(\"[151] PN_PREFIX\"),\n        peg$c758 = function(base, rest) { if(rest[rest.length-1] == '.'){\n            throw new Error(\"Wrong PN_PREFIX, cannot finish with '.'\")\n            } else {\n            return base + rest.join('');\n            }},\n        peg$c759 = peg$otherExpectation(\"[152] PN_LOCAL\"),\n        peg$c760 = function(base, rest) {\n          return base + (rest||[]).join('');\n        },\n        peg$c761 = peg$otherExpectation(\"[170] PLX\"),\n        peg$c762 = peg$otherExpectation(\"[171] PERCENT\"),\n        peg$c763 = \"%\",\n        peg$c764 = peg$literalExpectation(\"%\", false),\n        peg$c765 = function(h) {\n          return h.join(\"\");\n        },\n        peg$c766 = peg$otherExpectation(\"[172] HEX\"),\n        peg$c767 = /^[A-F]/,\n        peg$c768 = peg$classExpectation([[\"A\", \"F\"]], false, false),\n        peg$c769 = /^[a-f]/,\n        peg$c770 = peg$classExpectation([[\"a\", \"f\"]], false, false),\n        peg$c771 = peg$otherExpectation(\"[173] PN_LOCAL_ESC\"),\n        peg$c772 = \"~\",\n        peg$c773 = peg$literalExpectation(\"~\", false),\n        peg$c774 = \"&\",\n        peg$c775 = peg$literalExpectation(\"&\", false),\n        peg$c776 = function(c) {\n           return \"\\\\\"+c;\n        },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1 }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildStructuredError(\n        [peg$otherExpectation(description)],\n        input.substring(peg$savedPos, peg$currPos),\n        location\n      );\n    }\n\n    function error(message, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildSimpleError(message, location);\n    }\n\n    function peg$literalExpectation(text, ignoreCase) {\n      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n    }\n\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n\n    function peg$anyExpectation() {\n      return { type: \"any\" };\n    }\n\n    function peg$endExpectation() {\n      return { type: \"end\" };\n    }\n\n    function peg$otherExpectation(description) {\n      return { type: \"other\", description: description };\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos], p;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column\n        };\n\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildSimpleError(message, location) {\n      return new peg$SyntaxError(message, null, null, location);\n    }\n\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(\n        peg$SyntaxError.buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parseDOCUMENT() {\n      var s0;\n\n      s0 = peg$parseSPARQL();\n\n      return s0;\n    }\n\n    function peg$parseSPARQL() {\n      var s0;\n\n      s0 = peg$parseQueryUnit();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseUpdateUnit();\n      }\n\n      return s0;\n    }\n\n    function peg$parseQueryUnit() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseQuery();\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c0); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseQuery() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsePrologue();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseSelectQuery();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseConstructQuery();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseDescribeQuery();\n            if (s2 === peg$FAILED) {\n              s2 = peg$parseAskQuery();\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseValuesClause();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c2(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c1); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePrologue() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseBaseDecl();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parsePrefixDecl();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsePrefixDecl();\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c4(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c3); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseBaseDecl() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c6) {\n          s2 = peg$c6;\n          peg$currPos += 4;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c7); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c8) {\n            s2 = peg$c8;\n            peg$currPos += 4;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c9); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseIRI_REF();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c10(s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePrefixDecl() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c12) {\n          s2 = peg$c12;\n          peg$currPos += 6;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c14) {\n            s2 = peg$c14;\n            peg$currPos += 6;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c15); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsePNAME_NS();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseWS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseWS();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseIRI_REF();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c16(s4, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c11); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseSelectQuery() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseSelectClause();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseDatasetClause();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseDatasetClause();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseWhereClause();\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseSolutionModifier();\n                  if (s7 !== peg$FAILED) {\n                    s8 = [];\n                    s9 = peg$parseWS();\n                    while (s9 !== peg$FAILED) {\n                      s8.push(s9);\n                      s9 = peg$parseWS();\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = peg$parseBindingsClause();\n                      if (s9 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c18(s1, s3, s5, s7);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c17); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseSubSelect() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseSelectClause();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseWhereClause();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseSolutionModifier();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c20(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c19); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseSelectClause() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c22) {\n          s2 = peg$c22;\n          peg$currPos += 6;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c24) {\n            s2 = peg$c24;\n            peg$currPos += 6;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c25); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 8) === peg$c26) {\n              s4 = peg$c26;\n              peg$currPos += 8;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c27); }\n            }\n            if (s4 === peg$FAILED) {\n              if (input.substr(peg$currPos, 8) === peg$c28) {\n                s4 = peg$c28;\n                peg$currPos += 8;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c29); }\n              }\n            }\n            if (s4 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c30) {\n                s4 = peg$c30;\n                peg$currPos += 7;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c31); }\n              }\n              if (s4 === peg$FAILED) {\n                if (input.substr(peg$currPos, 7) === peg$c32) {\n                  s4 = peg$c32;\n                  peg$currPos += 7;\n                } else {\n                  s4 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c33); }\n                }\n              }\n            }\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseWS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseWS();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$currPos;\n                s8 = [];\n                s9 = peg$parseWS();\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$parseWS();\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parseVar();\n                  if (s9 !== peg$FAILED) {\n                    s10 = [];\n                    s11 = peg$parseWS();\n                    while (s11 !== peg$FAILED) {\n                      s10.push(s11);\n                      s11 = peg$parseWS();\n                    }\n                    if (s10 !== peg$FAILED) {\n                      s8 = [s8, s9, s10];\n                      s7 = s8;\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n                if (s7 === peg$FAILED) {\n                  s7 = peg$currPos;\n                  s8 = [];\n                  s9 = peg$parseWS();\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parseWS();\n                  }\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 40) {\n                      s9 = peg$c34;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = [];\n                      s11 = peg$parseWS();\n                      while (s11 !== peg$FAILED) {\n                        s10.push(s11);\n                        s11 = peg$parseWS();\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parseExpression();\n                        if (s11 !== peg$FAILED) {\n                          s12 = [];\n                          s13 = peg$parseWS();\n                          while (s13 !== peg$FAILED) {\n                            s12.push(s13);\n                            s13 = peg$parseWS();\n                          }\n                          if (s12 !== peg$FAILED) {\n                            if (input.substr(peg$currPos, 2) === peg$c36) {\n                              s13 = peg$c36;\n                              peg$currPos += 2;\n                            } else {\n                              s13 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                            }\n                            if (s13 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 2) === peg$c38) {\n                                s13 = peg$c38;\n                                peg$currPos += 2;\n                              } else {\n                                s13 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                              }\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = [];\n                              s15 = peg$parseWS();\n                              while (s15 !== peg$FAILED) {\n                                s14.push(s15);\n                                s15 = peg$parseWS();\n                              }\n                              if (s14 !== peg$FAILED) {\n                                s15 = peg$parseVar();\n                                if (s15 !== peg$FAILED) {\n                                  s16 = [];\n                                  s17 = peg$parseWS();\n                                  while (s17 !== peg$FAILED) {\n                                    s16.push(s17);\n                                    s17 = peg$parseWS();\n                                  }\n                                  if (s16 !== peg$FAILED) {\n                                    if (input.charCodeAt(peg$currPos) === 41) {\n                                      s17 = peg$c40;\n                                      peg$currPos++;\n                                    } else {\n                                      s17 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                                    }\n                                    if (s17 !== peg$FAILED) {\n                                      s18 = [];\n                                      s19 = peg$parseWS();\n                                      while (s19 !== peg$FAILED) {\n                                        s18.push(s19);\n                                        s19 = peg$parseWS();\n                                      }\n                                      if (s18 !== peg$FAILED) {\n                                        s8 = [s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18];\n                                        s7 = s8;\n                                      } else {\n                                        peg$currPos = s7;\n                                        s7 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s7;\n                                      s7 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s7;\n                                    s7 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s7;\n                                  s7 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s7;\n                                s7 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s7;\n                              s7 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s7;\n                            s7 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s7;\n                          s7 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s7;\n                        s7 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                }\n                if (s7 !== peg$FAILED) {\n                  while (s7 !== peg$FAILED) {\n                    s6.push(s7);\n                    s7 = peg$currPos;\n                    s8 = [];\n                    s9 = peg$parseWS();\n                    while (s9 !== peg$FAILED) {\n                      s8.push(s9);\n                      s9 = peg$parseWS();\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = peg$parseVar();\n                      if (s9 !== peg$FAILED) {\n                        s10 = [];\n                        s11 = peg$parseWS();\n                        while (s11 !== peg$FAILED) {\n                          s10.push(s11);\n                          s11 = peg$parseWS();\n                        }\n                        if (s10 !== peg$FAILED) {\n                          s8 = [s8, s9, s10];\n                          s7 = s8;\n                        } else {\n                          peg$currPos = s7;\n                          s7 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s7;\n                        s7 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$FAILED;\n                    }\n                    if (s7 === peg$FAILED) {\n                      s7 = peg$currPos;\n                      s8 = [];\n                      s9 = peg$parseWS();\n                      while (s9 !== peg$FAILED) {\n                        s8.push(s9);\n                        s9 = peg$parseWS();\n                      }\n                      if (s8 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 40) {\n                          s9 = peg$c34;\n                          peg$currPos++;\n                        } else {\n                          s9 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                        }\n                        if (s9 !== peg$FAILED) {\n                          s10 = [];\n                          s11 = peg$parseWS();\n                          while (s11 !== peg$FAILED) {\n                            s10.push(s11);\n                            s11 = peg$parseWS();\n                          }\n                          if (s10 !== peg$FAILED) {\n                            s11 = peg$parseExpression();\n                            if (s11 !== peg$FAILED) {\n                              s12 = [];\n                              s13 = peg$parseWS();\n                              while (s13 !== peg$FAILED) {\n                                s12.push(s13);\n                                s13 = peg$parseWS();\n                              }\n                              if (s12 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 2) === peg$c36) {\n                                  s13 = peg$c36;\n                                  peg$currPos += 2;\n                                } else {\n                                  s13 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                                }\n                                if (s13 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 2) === peg$c38) {\n                                    s13 = peg$c38;\n                                    peg$currPos += 2;\n                                  } else {\n                                    s13 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                                  }\n                                }\n                                if (s13 !== peg$FAILED) {\n                                  s14 = [];\n                                  s15 = peg$parseWS();\n                                  while (s15 !== peg$FAILED) {\n                                    s14.push(s15);\n                                    s15 = peg$parseWS();\n                                  }\n                                  if (s14 !== peg$FAILED) {\n                                    s15 = peg$parseVar();\n                                    if (s15 !== peg$FAILED) {\n                                      s16 = [];\n                                      s17 = peg$parseWS();\n                                      while (s17 !== peg$FAILED) {\n                                        s16.push(s17);\n                                        s17 = peg$parseWS();\n                                      }\n                                      if (s16 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 41) {\n                                          s17 = peg$c40;\n                                          peg$currPos++;\n                                        } else {\n                                          s17 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                                        }\n                                        if (s17 !== peg$FAILED) {\n                                          s18 = [];\n                                          s19 = peg$parseWS();\n                                          while (s19 !== peg$FAILED) {\n                                            s18.push(s19);\n                                            s19 = peg$parseWS();\n                                          }\n                                          if (s18 !== peg$FAILED) {\n                                            s8 = [s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18];\n                                            s7 = s8;\n                                          } else {\n                                            peg$currPos = s7;\n                                            s7 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s7;\n                                          s7 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s7;\n                                        s7 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s7;\n                                      s7 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s7;\n                                    s7 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s7;\n                                  s7 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s7;\n                                s7 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s7;\n                              s7 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s7;\n                            s7 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s7;\n                          s7 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s7;\n                        s7 = peg$FAILED;\n                      }\n                    }\n                  }\n                } else {\n                  s6 = peg$FAILED;\n                }\n                if (s6 === peg$FAILED) {\n                  s6 = peg$currPos;\n                  s7 = [];\n                  s8 = peg$parseWS();\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseWS();\n                  }\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 42) {\n                      s8 = peg$c42;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = [];\n                      s10 = peg$parseWS();\n                      while (s10 !== peg$FAILED) {\n                        s9.push(s10);\n                        s10 = peg$parseWS();\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s7 = [s7, s8, s9];\n                        s6 = s7;\n                      } else {\n                        peg$currPos = s6;\n                        s6 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s6;\n                      s6 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s6;\n                    s6 = peg$FAILED;\n                  }\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c44(s4, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c21); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseConstructQuery() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 9) === peg$c46) {\n          s2 = peg$c46;\n          peg$currPos += 9;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 9) === peg$c48) {\n            s2 = peg$c48;\n            peg$currPos += 9;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c49); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseConstructTemplate();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseWS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseWS();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseDatasetClause();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseDatasetClause();\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseWS();\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseWS();\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parseWhereClause();\n                    if (s8 !== peg$FAILED) {\n                      s9 = [];\n                      s10 = peg$parseWS();\n                      while (s10 !== peg$FAILED) {\n                        s9.push(s10);\n                        s10 = peg$parseWS();\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s10 = peg$parseSolutionModifier();\n                        if (s10 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c50(s4, s6, s8, s10);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseWS();\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseWS();\n        }\n        if (s1 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 9) === peg$c46) {\n            s2 = peg$c46;\n            peg$currPos += 9;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c47); }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.substr(peg$currPos, 9) === peg$c48) {\n              s2 = peg$c48;\n              peg$currPos += 9;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c49); }\n            }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$parseWS();\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseWS();\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              s5 = peg$parseDatasetClause();\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parseDatasetClause();\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = [];\n                s6 = peg$parseWS();\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseWS();\n                }\n                if (s5 !== peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c51) {\n                    s6 = peg$c51;\n                    peg$currPos += 5;\n                  } else {\n                    s6 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                  }\n                  if (s6 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 5) === peg$c53) {\n                      s6 = peg$c53;\n                      peg$currPos += 5;\n                    } else {\n                      s6 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                    }\n                  }\n                  if (s6 !== peg$FAILED) {\n                    s7 = [];\n                    s8 = peg$parseWS();\n                    while (s8 !== peg$FAILED) {\n                      s7.push(s8);\n                      s8 = peg$parseWS();\n                    }\n                    if (s7 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 123) {\n                        s8 = peg$c55;\n                        peg$currPos++;\n                      } else {\n                        s8 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                      }\n                      if (s8 !== peg$FAILED) {\n                        s9 = [];\n                        s10 = peg$parseWS();\n                        while (s10 !== peg$FAILED) {\n                          s9.push(s10);\n                          s10 = peg$parseWS();\n                        }\n                        if (s9 !== peg$FAILED) {\n                          s10 = peg$parseTriplesTemplate();\n                          if (s10 === peg$FAILED) {\n                            s10 = null;\n                          }\n                          if (s10 !== peg$FAILED) {\n                            s11 = [];\n                            s12 = peg$parseWS();\n                            while (s12 !== peg$FAILED) {\n                              s11.push(s12);\n                              s12 = peg$parseWS();\n                            }\n                            if (s11 !== peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 125) {\n                                s12 = peg$c57;\n                                peg$currPos++;\n                              } else {\n                                s12 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                              }\n                              if (s12 !== peg$FAILED) {\n                                s13 = [];\n                                s14 = peg$parseWS();\n                                while (s14 !== peg$FAILED) {\n                                  s13.push(s14);\n                                  s14 = peg$parseWS();\n                                }\n                                if (s13 !== peg$FAILED) {\n                                  s14 = peg$parseSolutionModifier();\n                                  if (s14 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c59(s4, s10, s14);\n                                    s0 = s1;\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDescribeQuery() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 8) === peg$c61) {\n        s1 = peg$c61;\n        peg$currPos += 8;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c62); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseVarOrIRIref();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseVarOrIRIref();\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s2 = peg$c42;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c43); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseDatasetClause();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseDatasetClause();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseWhereClause();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseSolutionModifier();\n              if (s5 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4, s5];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c60); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseAskQuery() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c64) {\n          s2 = peg$c64;\n          peg$currPos += 3;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c65); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c66) {\n            s2 = peg$c66;\n            peg$currPos += 3;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c67); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseDatasetClause();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseDatasetClause();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseWS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseWS();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseWhereClause();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c68(s4, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c63); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDatasetClause() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c70) {\n        s1 = peg$c70;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c71); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c72) {\n          s1 = peg$c72;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c73); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseDefaultGraphClause();\n          if (s3 === peg$FAILED) {\n            s3 = peg$parseNamedGraphClause();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c74(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c69); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDefaultGraphClause() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseSourceSelector();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c76(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c75); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseNamedGraphClause() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c78) {\n        s1 = peg$c78;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c79); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c80) {\n          s1 = peg$c80;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c81); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseSourceSelector();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c82(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c77); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseSourceSelector() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseIRIref();\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c83); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseWhereClause() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c51) {\n        s1 = peg$c51;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c53) {\n          s1 = peg$c53;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n        }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseGroupGraphPattern();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c85(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c84); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseSolutionModifier() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseGroupClause();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseHavingClause();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseOrderClause();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseLimitOffsetClauses();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c87(s1, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c86); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseGroupClause() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c89) {\n        s1 = peg$c89;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c90); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c91) {\n          s1 = peg$c91;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c92); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c93) {\n            s3 = peg$c93;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c94); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c95) {\n              s3 = peg$c95;\n              peg$currPos += 2;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c96); }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseGroupCondition();\n              if (s6 !== peg$FAILED) {\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseGroupCondition();\n                }\n              } else {\n                s5 = peg$FAILED;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c97(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c88); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseGroupCondition() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseBuiltInCall();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c99(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseWS();\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseWS();\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseFunctionCall();\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$parseWS();\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseWS();\n            }\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c100(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = [];\n          s2 = peg$parseWS();\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parseWS();\n          }\n          if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 40) {\n              s2 = peg$c34;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c35); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = [];\n              s4 = peg$parseWS();\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n                s4 = peg$parseWS();\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parseExpression();\n                if (s4 !== peg$FAILED) {\n                  s5 = [];\n                  s6 = peg$parseWS();\n                  while (s6 !== peg$FAILED) {\n                    s5.push(s6);\n                    s6 = peg$parseWS();\n                  }\n                  if (s5 !== peg$FAILED) {\n                    s6 = peg$currPos;\n                    if (input.substr(peg$currPos, 2) === peg$c36) {\n                      s7 = peg$c36;\n                      peg$currPos += 2;\n                    } else {\n                      s7 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                    }\n                    if (s7 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 2) === peg$c38) {\n                        s7 = peg$c38;\n                        peg$currPos += 2;\n                      } else {\n                        s7 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                      }\n                    }\n                    if (s7 !== peg$FAILED) {\n                      s8 = [];\n                      s9 = peg$parseWS();\n                      while (s9 !== peg$FAILED) {\n                        s8.push(s9);\n                        s9 = peg$parseWS();\n                      }\n                      if (s8 !== peg$FAILED) {\n                        s9 = peg$parseVar();\n                        if (s9 !== peg$FAILED) {\n                          s7 = [s7, s8, s9];\n                          s6 = s7;\n                        } else {\n                          peg$currPos = s6;\n                          s6 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s6;\n                        s6 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s6;\n                      s6 = peg$FAILED;\n                    }\n                    if (s6 === peg$FAILED) {\n                      s6 = null;\n                    }\n                    if (s6 !== peg$FAILED) {\n                      s7 = [];\n                      s8 = peg$parseWS();\n                      while (s8 !== peg$FAILED) {\n                        s7.push(s8);\n                        s8 = peg$parseWS();\n                      }\n                      if (s7 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 41) {\n                          s8 = peg$c40;\n                          peg$currPos++;\n                        } else {\n                          s8 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                        }\n                        if (s8 !== peg$FAILED) {\n                          s9 = [];\n                          s10 = peg$parseWS();\n                          while (s10 !== peg$FAILED) {\n                            s9.push(s10);\n                            s10 = peg$parseWS();\n                          }\n                          if (s9 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c101(s4, s6);\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = [];\n            s2 = peg$parseWS();\n            while (s2 !== peg$FAILED) {\n              s1.push(s2);\n              s2 = peg$parseWS();\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parseVar();\n              if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parseWS();\n                while (s4 !== peg$FAILED) {\n                  s3.push(s4);\n                  s4 = peg$parseWS();\n                }\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c102(s2);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c98); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseHavingClause() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c104) {\n        s1 = peg$c104;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c105); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseHavingCondition();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseHavingCondition();\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c103); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseHavingCondition() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseConstraint();\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c106); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseOrderClause() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c108) {\n        s1 = peg$c108;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c109); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c110) {\n          s1 = peg$c110;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c111); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c93) {\n            s3 = peg$c93;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c94); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c95) {\n              s3 = peg$c95;\n              peg$currPos += 2;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c96); }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseOrderCondition();\n              if (s6 !== peg$FAILED) {\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseOrderCondition();\n                }\n              } else {\n                s5 = peg$FAILED;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c112(s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c107); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseOrderCondition() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c114) {\n        s1 = peg$c114;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c115); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c116) {\n          s1 = peg$c116;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c117); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c118) {\n            s1 = peg$c118;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c119); }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 4) === peg$c120) {\n              s1 = peg$c120;\n              peg$currPos += 4;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c121); }\n            }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseBrackettedExpression();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c122(s1, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseConstraint();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseVar();\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseWS();\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseWS();\n          }\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c123(s1);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c113); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseLimitOffsetClauses() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseLimitClause();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOffsetClause();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = peg$parseOffsetClause();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseLimitClause();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s2 = [s2, s3];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c125(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c124); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseLimitClause() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c127) {\n        s1 = peg$c127;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c128); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c129) {\n          s1 = peg$c129;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c130); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseINTEGER();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c131(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c126); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseOffsetClause() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c133) {\n        s1 = peg$c133;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c134); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c135) {\n          s1 = peg$c135;\n          peg$currPos += 6;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c136); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseINTEGER();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c137(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c132); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseBindingsClause() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 8) === peg$c139) {\n        s1 = peg$c139;\n        peg$currPos += 8;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c140); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseVar();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseVar();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 123) {\n            s3 = peg$c55;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c56); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 40) {\n              s6 = peg$c34;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c35); }\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = [];\n              s8 = peg$parseBindingValue();\n              if (s8 !== peg$FAILED) {\n                while (s8 !== peg$FAILED) {\n                  s7.push(s8);\n                  s8 = peg$parseBindingValue();\n                }\n              } else {\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s8 = peg$c40;\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s6 = [s6, s7, s8];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = peg$parseNIL();\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 40) {\n                s6 = peg$c34;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c35); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                s8 = peg$parseBindingValue();\n                if (s8 !== peg$FAILED) {\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseBindingValue();\n                  }\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s8 = peg$c40;\n                    peg$currPos++;\n                  } else {\n                    s8 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s6 = [s6, s7, s8];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$parseNIL();\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 125) {\n                s5 = peg$c57;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c58); }\n              }\n              if (s5 !== peg$FAILED) {\n                s1 = [s1, s2, s3, s4, s5];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = null;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c138); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseBindingValue() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseIRIref();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseRDFLiteral();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseNumericLiteral();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseBooleanLiteral();\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 5) === peg$c142) {\n                s0 = peg$c142;\n                peg$currPos += 5;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c143); }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c141); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseValuesClause() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c145) {\n        s2 = peg$c145;\n        peg$currPos += 6;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c146); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c147) {\n          s2 = peg$c147;\n          peg$currPos += 6;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c148); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDataBlock();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c149(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c144); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseUpdateUnit() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseUpdate();\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c150); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseUpdate() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsePrologue();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseUpdate1();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            s5 = [];\n            s6 = peg$parseWS();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parseWS();\n            }\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 59) {\n                s6 = peg$c152;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c153); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                s8 = peg$parseWS();\n                while (s8 !== peg$FAILED) {\n                  s7.push(s8);\n                  s8 = peg$parseWS();\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseUpdate();\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s5 = [s5, s6, s7, s8];\n                    s4 = s5;\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c154(s1, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c151); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseUpdate1() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseLoad();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseClear();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseDrop();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseCreate();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseInsertData();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseDeleteData();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseDeleteWhere();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseModify();\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c155); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseLoad() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c157) {\n        s1 = peg$c157;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c158); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c159) {\n          s1 = peg$c159;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c160); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseIRIref();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              if (input.substr(peg$currPos, 4) === peg$c161) {\n                s6 = peg$c161;\n                peg$currPos += 4;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c162); }\n              }\n              if (s6 === peg$FAILED) {\n                if (input.substr(peg$currPos, 4) === peg$c163) {\n                  s6 = peg$c163;\n                  peg$currPos += 4;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c164); }\n                }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                s8 = peg$parseWS();\n                while (s8 !== peg$FAILED) {\n                  s7.push(s8);\n                  s8 = peg$parseWS();\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseGraphRef();\n                  if (s8 !== peg$FAILED) {\n                    s6 = [s6, s7, s8];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = null;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c165(s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c156); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseClear() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c167) {\n        s1 = peg$c167;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c168); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c169) {\n          s1 = peg$c169;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c170); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c171) {\n            s3 = peg$c171;\n            peg$currPos += 6;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c172); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.substr(peg$currPos, 6) === peg$c173) {\n              s3 = peg$c173;\n              peg$currPos += 6;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c174); }\n            }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseGraphRefAll();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c175(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c166); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDrop() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c177) {\n        s1 = peg$c177;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c178); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c179) {\n          s1 = peg$c179;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c180); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c171) {\n            s3 = peg$c171;\n            peg$currPos += 6;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c172); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.substr(peg$currPos, 6) === peg$c173) {\n              s3 = peg$c173;\n              peg$currPos += 6;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c174); }\n            }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseGraphRefAll();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c181(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c176); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseCreate() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c183) {\n        s1 = peg$c183;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c184); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c185) {\n          s1 = peg$c185;\n          peg$currPos += 6;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c186); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c171) {\n            s3 = peg$c171;\n            peg$currPos += 6;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c172); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.substr(peg$currPos, 6) === peg$c173) {\n              s3 = peg$c173;\n              peg$currPos += 6;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c174); }\n            }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseGraphRef();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c187(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c182); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseInsertData() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c189) {\n        s1 = peg$c189;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c190); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c191) {\n          s1 = peg$c191;\n          peg$currPos += 6;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c192); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c193) {\n            s3 = peg$c193;\n            peg$currPos += 4;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c194); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.substr(peg$currPos, 4) === peg$c195) {\n              s3 = peg$c195;\n              peg$currPos += 4;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c196); }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseQuadData();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c197(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c188); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDeleteData() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c199) {\n        s1 = peg$c199;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c200); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c201) {\n          s1 = peg$c201;\n          peg$currPos += 6;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c202); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c193) {\n            s3 = peg$c193;\n            peg$currPos += 4;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c194); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.substr(peg$currPos, 4) === peg$c195) {\n              s3 = peg$c195;\n              peg$currPos += 4;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c196); }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseQuadData();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c203(s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c198); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDeleteWhere() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c199) {\n        s1 = peg$c199;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c200); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c201) {\n          s1 = peg$c201;\n          peg$currPos += 6;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c202); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 5) === peg$c51) {\n            s3 = peg$c51;\n            peg$currPos += 5;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c52); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c53) {\n              s3 = peg$c53;\n              peg$currPos += 5;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c54); }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseGroupGraphPattern();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c205(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c204); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseModify() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c207) {\n        s2 = peg$c207;\n        peg$currPos += 4;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c208); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c209) {\n          s2 = peg$c209;\n          peg$currPos += 4;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c210); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseWS();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseWS();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseIRIref();\n          if (s4 !== peg$FAILED) {\n            s2 = [s2, s3, s4];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = peg$parseDeleteClause();\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parseWS();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parseWS();\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseInsertClause();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s4 = [s4, s5, s6];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$parseInsertClause();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseUsingClause();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseUsingClause();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c51) {\n                    s7 = peg$c51;\n                    peg$currPos += 5;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c52); }\n                  }\n                  if (s7 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 5) === peg$c53) {\n                      s7 = peg$c53;\n                      peg$currPos += 5;\n                    } else {\n                      s7 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                    }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = [];\n                    s9 = peg$parseWS();\n                    while (s9 !== peg$FAILED) {\n                      s8.push(s9);\n                      s9 = peg$parseWS();\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = peg$parseGroupGraphPattern();\n                      if (s9 !== peg$FAILED) {\n                        s10 = [];\n                        s11 = peg$parseWS();\n                        while (s11 !== peg$FAILED) {\n                          s10.push(s11);\n                          s11 = peg$parseWS();\n                        }\n                        if (s10 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c211(s1, s3, s5, s9);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c206); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDeleteClause() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c199) {\n        s1 = peg$c199;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c200); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c201) {\n          s1 = peg$c201;\n          peg$currPos += 6;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c202); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseQuadPattern();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c213(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c212); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseInsertClause() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c189) {\n        s1 = peg$c189;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c190); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c191) {\n          s1 = peg$c191;\n          peg$currPos += 6;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c192); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseQuadPattern();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c213(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c214); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseUsingClause() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c216) {\n          s2 = peg$c216;\n          peg$currPos += 5;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c217); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 5) === peg$c218) {\n            s2 = peg$c218;\n            peg$currPos += 5;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c219); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseIRIref();\n            if (s4 === peg$FAILED) {\n              s4 = peg$currPos;\n              if (input.substr(peg$currPos, 5) === peg$c78) {\n                s5 = peg$c78;\n                peg$currPos += 5;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c79); }\n              }\n              if (s5 === peg$FAILED) {\n                if (input.substr(peg$currPos, 5) === peg$c80) {\n                  s5 = peg$c80;\n                  peg$currPos += 5;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c81); }\n                }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseIRIref();\n                  if (s7 !== peg$FAILED) {\n                    s5 = [s5, s6, s7];\n                    s4 = s5;\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c220(s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c215); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseGraphRef() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c222) {\n        s1 = peg$c222;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c223); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c224) {\n          s1 = peg$c224;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c225); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseIRIref();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c226(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c221); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseGraphRefAll() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseGraphRef();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c85(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 7) === peg$c228) {\n          s1 = peg$c228;\n          peg$currPos += 7;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c229); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 7) === peg$c230) {\n            s1 = peg$c230;\n            peg$currPos += 7;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c231); }\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c232();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 5) === peg$c78) {\n            s1 = peg$c78;\n            peg$currPos += 5;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c79); }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c80) {\n              s1 = peg$c80;\n              peg$currPos += 5;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c81); }\n            }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c233();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 3) === peg$c234) {\n              s1 = peg$c234;\n              peg$currPos += 3;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c235); }\n            }\n            if (s1 === peg$FAILED) {\n              if (input.substr(peg$currPos, 3) === peg$c236) {\n                s1 = peg$c236;\n                peg$currPos += 3;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c237); }\n              }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c238();\n            }\n            s0 = s1;\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c227); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseQuadPattern() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s2 = peg$c55;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c56); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseQuads();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseWS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseWS();\n              }\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 125) {\n                  s6 = peg$c57;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseWS();\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseWS();\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c240(s4);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c239); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseQuadData() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s2 = peg$c55;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c56); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseQuads();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseWS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseWS();\n              }\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 125) {\n                  s6 = peg$c57;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseWS();\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseWS();\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c240(s4);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c241); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseQuads() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseTriplesTemplate();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseQuadsNotTriples();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s5 = peg$c243;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c244); }\n          }\n          if (s5 === peg$FAILED) {\n            s5 = null;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseTriplesTemplate();\n            if (s6 === peg$FAILED) {\n              s6 = null;\n            }\n            if (s6 !== peg$FAILED) {\n              s4 = [s4, s5, s6];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseQuadsNotTriples();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s5 = peg$c243;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c244); }\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseTriplesTemplate();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s4 = [s4, s5, s6];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c245(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c242); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseQuadsNotTriples() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c222) {\n          s2 = peg$c222;\n          peg$currPos += 5;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c223); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 5) === peg$c224) {\n            s2 = peg$c224;\n            peg$currPos += 5;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c225); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseVarOrIRIref();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseWS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseWS();\n              }\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 123) {\n                  s6 = peg$c55;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseWS();\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseWS();\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parseTriplesTemplate();\n                    if (s8 === peg$FAILED) {\n                      s8 = null;\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = [];\n                      s10 = peg$parseWS();\n                      while (s10 !== peg$FAILED) {\n                        s9.push(s10);\n                        s10 = peg$parseWS();\n                      }\n                      if (s9 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                          s10 = peg$c57;\n                          peg$currPos++;\n                        } else {\n                          s10 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                        }\n                        if (s10 !== peg$FAILED) {\n                          s11 = [];\n                          s12 = peg$parseWS();\n                          while (s12 !== peg$FAILED) {\n                            s11.push(s12);\n                            s12 = peg$parseWS();\n                          }\n                          if (s11 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c247(s4, s8);\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c246); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseTriplesTemplate() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseTriplesSameSubject();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        s4 = peg$parseWS();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseWS();\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c243;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c244); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parseWS();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parseWS();\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseTriplesTemplate();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s3 = [s3, s4, s5, s6];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c249(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c248); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseGroupGraphPattern() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c55;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseSubSelect();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 125) {\n                s5 = peg$c57;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c58); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c251(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s1 = peg$c55;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c56); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseWS();\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseWS();\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseGroupGraphPatternSub();\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              s5 = peg$parseWS();\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parseWS();\n              }\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 125) {\n                  s5 = peg$c57;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c251(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c250); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseGroupGraphPatternSub() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseTriplesBlock();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          s5 = peg$parseGraphPatternNotTriples();\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parseWS();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parseWS();\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 46) {\n                s7 = peg$c243;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c244); }\n              }\n              if (s7 === peg$FAILED) {\n                s7 = null;\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = [];\n                s9 = peg$parseWS();\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$parseWS();\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parseTriplesBlock();\n                  if (s9 === peg$FAILED) {\n                    s9 = null;\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s5 = [s5, s6, s7, s8, s9];\n                    s4 = s5;\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            s5 = peg$parseGraphPatternNotTriples();\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 46) {\n                  s7 = peg$c243;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c244); }\n                }\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = [];\n                  s9 = peg$parseWS();\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parseWS();\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseTriplesBlock();\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s5 = [s5, s6, s7, s8, s9];\n                      s4 = s5;\n                    } else {\n                      peg$currPos = s4;\n                      s4 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c253(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c252); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseTriplesBlock() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseTriplesSameSubjectPath();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        s4 = peg$parseWS();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseWS();\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c243;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c244); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseTriplesBlock();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s3 = [s3, s4, s5];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c255(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c254); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseGraphPatternNotTriples() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseGroupOrUnionGraphPattern();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseOptionalGraphPattern();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseMinusGraphPattern();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseGraphGraphPattern();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseServiceGraphPattern();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseFilter();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseBind();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseInlineData();\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c256); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseOptionalGraphPattern() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 8) === peg$c258) {\n          s2 = peg$c258;\n          peg$currPos += 8;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c259); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c260) {\n            s2 = peg$c260;\n            peg$currPos += 8;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c261); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseGroupGraphPattern();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c262(s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c257); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseGraphGraphPattern() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c222) {\n          s2 = peg$c222;\n          peg$currPos += 5;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c223); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 5) === peg$c224) {\n            s2 = peg$c224;\n            peg$currPos += 5;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c225); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseVarOrIRIref();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseWS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseWS();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseGroupGraphPattern();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c264(s4, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c263); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseServiceGraphPattern() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 7) === peg$c266) {\n        s1 = peg$c266;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c267); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseVarOrIRIref();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseGroupGraphPattern();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c268(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c265); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseMinusGraphPattern() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c270) {\n        s1 = peg$c270;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c271); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c272) {\n          s1 = peg$c272;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c273); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseGroupGraphPattern();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c274(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c269); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseGroupOrUnionGraphPattern() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseGroupGraphPattern();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parseWS();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parseWS();\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 5) === peg$c276) {\n            s5 = peg$c276;\n            peg$currPos += 5;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c277); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c278) {\n              s5 = peg$c278;\n              peg$currPos += 5;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c279); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parseWS();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parseWS();\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseGroupGraphPattern();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$parseWS();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseWS();\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c276) {\n              s5 = peg$c276;\n              peg$currPos += 5;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c277); }\n            }\n            if (s5 === peg$FAILED) {\n              if (input.substr(peg$currPos, 5) === peg$c278) {\n                s5 = peg$c278;\n                peg$currPos += 5;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c279); }\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseGroupGraphPattern();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c280(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c275); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseFilter() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c282) {\n          s2 = peg$c282;\n          peg$currPos += 6;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c283); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c284) {\n            s2 = peg$c284;\n            peg$currPos += 6;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c285); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseConstraint();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c286(s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c281); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseBind() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c288) {\n          s2 = peg$c288;\n          peg$currPos += 4;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c289); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c290) {\n            s2 = peg$c290;\n            peg$currPos += 4;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c291); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 40) {\n              s4 = peg$c34;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c35); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseWS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseWS();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseExpression();\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseWS();\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseWS();\n                  }\n                  if (s7 !== peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c38) {\n                      s8 = peg$c38;\n                      peg$currPos += 2;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                    }\n                    if (s8 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 2) === peg$c36) {\n                        s8 = peg$c36;\n                        peg$currPos += 2;\n                      } else {\n                        s8 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                      }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = [];\n                      s10 = peg$parseWS();\n                      while (s10 !== peg$FAILED) {\n                        s9.push(s10);\n                        s10 = peg$parseWS();\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s10 = peg$parseVar();\n                        if (s10 !== peg$FAILED) {\n                          s11 = [];\n                          s12 = peg$parseWS();\n                          while (s12 !== peg$FAILED) {\n                            s11.push(s12);\n                            s12 = peg$parseWS();\n                          }\n                          if (s11 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 41) {\n                              s12 = peg$c40;\n                              peg$currPos++;\n                            } else {\n                              s12 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                            }\n                            if (s12 !== peg$FAILED) {\n                              peg$savedPos = s0;\n                              s1 = peg$c292(s6, s10);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c287); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseConstraint() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseBrackettedExpression();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseBuiltInCall();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFunctionCall();\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c293); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseInlineData() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c145) {\n          s2 = peg$c145;\n          peg$currPos += 6;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c146); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c147) {\n            s2 = peg$c147;\n            peg$currPos += 6;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c148); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseDataBlock();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c295(s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c294); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDataBlock() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseInlineDataOneVar();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseInlineDataFull();\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c296); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseInlineDataOneVar() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseVar();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s4 = peg$c55;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c56); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseWS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseWS();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseDataBlockValue();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseDataBlockValue();\n                }\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 125) {\n                    s7 = peg$c57;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c298(s2, s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c297); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseInlineDataFull() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseNIL();\n        if (s2 === peg$FAILED) {\n          s2 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s3 = peg$c34;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseVar();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseVar();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s7 = peg$c40;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s3 = [s3, s4, s5, s6, s7];\n                    s2 = s3;\n                  } else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s4 = peg$c55;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c56); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseWS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseWS();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$currPos;\n                s8 = [];\n                s9 = peg$parseWS();\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$parseWS();\n                }\n                if (s8 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 40) {\n                    s9 = peg$c34;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s10 = [];\n                    s11 = peg$parseWS();\n                    while (s11 !== peg$FAILED) {\n                      s10.push(s11);\n                      s11 = peg$parseWS();\n                    }\n                    if (s10 !== peg$FAILED) {\n                      s11 = [];\n                      s12 = peg$parseDataBlockValue();\n                      while (s12 !== peg$FAILED) {\n                        s11.push(s12);\n                        s12 = peg$parseDataBlockValue();\n                      }\n                      if (s11 !== peg$FAILED) {\n                        s12 = [];\n                        s13 = peg$parseWS();\n                        while (s13 !== peg$FAILED) {\n                          s12.push(s13);\n                          s13 = peg$parseWS();\n                        }\n                        if (s12 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 41) {\n                            s13 = peg$c40;\n                            peg$currPos++;\n                          } else {\n                            s13 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                          }\n                          if (s13 !== peg$FAILED) {\n                            s14 = [];\n                            s15 = peg$parseWS();\n                            while (s15 !== peg$FAILED) {\n                              s14.push(s15);\n                              s15 = peg$parseWS();\n                            }\n                            if (s14 !== peg$FAILED) {\n                              s8 = [s8, s9, s10, s11, s12, s13, s14];\n                              s7 = s8;\n                            } else {\n                              peg$currPos = s7;\n                              s7 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s7;\n                            s7 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s7;\n                          s7 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s7;\n                        s7 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n                if (s7 === peg$FAILED) {\n                  s7 = peg$parseNIL();\n                }\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$currPos;\n                  s8 = [];\n                  s9 = peg$parseWS();\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parseWS();\n                  }\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 40) {\n                      s9 = peg$c34;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = [];\n                      s11 = peg$parseWS();\n                      while (s11 !== peg$FAILED) {\n                        s10.push(s11);\n                        s11 = peg$parseWS();\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s11 = [];\n                        s12 = peg$parseDataBlockValue();\n                        while (s12 !== peg$FAILED) {\n                          s11.push(s12);\n                          s12 = peg$parseDataBlockValue();\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = [];\n                          s13 = peg$parseWS();\n                          while (s13 !== peg$FAILED) {\n                            s12.push(s13);\n                            s13 = peg$parseWS();\n                          }\n                          if (s12 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 41) {\n                              s13 = peg$c40;\n                              peg$currPos++;\n                            } else {\n                              s13 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = [];\n                              s15 = peg$parseWS();\n                              while (s15 !== peg$FAILED) {\n                                s14.push(s15);\n                                s15 = peg$parseWS();\n                              }\n                              if (s14 !== peg$FAILED) {\n                                s8 = [s8, s9, s10, s11, s12, s13, s14];\n                                s7 = s8;\n                              } else {\n                                peg$currPos = s7;\n                                s7 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s7;\n                              s7 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s7;\n                            s7 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s7;\n                          s7 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s7;\n                        s7 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                  if (s7 === peg$FAILED) {\n                    s7 = peg$parseNIL();\n                  }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseWS();\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseWS();\n                  }\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s8 = peg$c57;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c300(s2, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c299); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDataBlockValue() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseIRI_REF();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseRDFLiteral();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseNumericLiteral();\n            if (s2 === peg$FAILED) {\n              s2 = peg$parseBooleanLiteral();\n              if (s2 === peg$FAILED) {\n                if (input.substr(peg$currPos, 5) === peg$c142) {\n                  s2 = peg$c142;\n                  peg$currPos += 5;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c143); }\n                }\n              }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c102(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c301); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseFunctionCall() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseIRIref();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseArgList();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c303(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c302); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseArgList() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseNIL();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c305();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c34;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseWS();\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseWS();\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 8) === peg$c26) {\n              s3 = peg$c26;\n              peg$currPos += 8;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c27); }\n            }\n            if (s3 === peg$FAILED) {\n              if (input.substr(peg$currPos, 8) === peg$c28) {\n                s3 = peg$c28;\n                peg$currPos += 8;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c29); }\n              }\n            }\n            if (s3 === peg$FAILED) {\n              s3 = null;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              s5 = peg$parseWS();\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parseWS();\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseExpression();\n                if (s5 !== peg$FAILED) {\n                  s6 = [];\n                  s7 = peg$parseWS();\n                  while (s7 !== peg$FAILED) {\n                    s6.push(s7);\n                    s7 = peg$parseWS();\n                  }\n                  if (s6 !== peg$FAILED) {\n                    s7 = [];\n                    s8 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                      s9 = peg$c306;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = [];\n                      s11 = peg$parseWS();\n                      while (s11 !== peg$FAILED) {\n                        s10.push(s11);\n                        s11 = peg$parseWS();\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parseExpression();\n                        if (s11 !== peg$FAILED) {\n                          s9 = [s9, s10, s11];\n                          s8 = s9;\n                        } else {\n                          peg$currPos = s8;\n                          s8 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                    while (s8 !== peg$FAILED) {\n                      s7.push(s8);\n                      s8 = peg$currPos;\n                      if (input.charCodeAt(peg$currPos) === 44) {\n                        s9 = peg$c306;\n                        peg$currPos++;\n                      } else {\n                        s9 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s10 = [];\n                        s11 = peg$parseWS();\n                        while (s11 !== peg$FAILED) {\n                          s10.push(s11);\n                          s11 = peg$parseWS();\n                        }\n                        if (s10 !== peg$FAILED) {\n                          s11 = peg$parseExpression();\n                          if (s11 !== peg$FAILED) {\n                            s9 = [s9, s10, s11];\n                            s8 = s9;\n                          } else {\n                            peg$currPos = s8;\n                            s8 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s8;\n                          s8 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    }\n                    if (s7 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 41) {\n                        s8 = peg$c40;\n                        peg$currPos++;\n                      } else {\n                        s8 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                      }\n                      if (s8 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c308(s3, s5, s7);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c304); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseExpressionList() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseNIL();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c305();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c34;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseWS();\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseWS();\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseIRIref();\n            if (s3 === peg$FAILED) {\n              s3 = peg$parseExpression();\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              s5 = peg$parseWS();\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parseWS();\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = [];\n                s6 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s7 = peg$c306;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = [];\n                  s9 = peg$parseWS();\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parseWS();\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseIRIref();\n                    if (s9 === peg$FAILED) {\n                      s9 = peg$parseExpression();\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s7 = [s7, s8, s9];\n                      s6 = s7;\n                    } else {\n                      peg$currPos = s6;\n                      s6 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s6;\n                    s6 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s7 = peg$c306;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = [];\n                    s9 = peg$parseWS();\n                    while (s9 !== peg$FAILED) {\n                      s8.push(s9);\n                      s9 = peg$parseWS();\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = peg$parseIRIref();\n                      if (s9 === peg$FAILED) {\n                        s9 = peg$parseExpression();\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s7 = [s7, s8, s9];\n                        s6 = s7;\n                      } else {\n                        peg$currPos = s6;\n                        s6 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s6;\n                      s6 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s6;\n                    s6 = peg$FAILED;\n                  }\n                }\n                if (s5 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s6 = peg$c40;\n                    peg$currPos++;\n                  } else {\n                    s6 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                  }\n                  if (s6 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c310(s3, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c309); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseConstructTemplate() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c55;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseConstructTriples();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 125) {\n                s5 = peg$c57;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c58); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c312(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c311); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseConstructTriples() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseTriplesSameSubject();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        s4 = peg$parseWS();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseWS();\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c243;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c244); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parseWS();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parseWS();\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseConstructTriples();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s3 = [s3, s4, s5, s6];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c314(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c313); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseTriplesSameSubject() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseVarOrTerm();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsePropertyListNotEmpty();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c316(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseWS();\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseWS();\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseTriplesNode();\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$parseWS();\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseWS();\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parsePropertyList();\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c317(s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c315); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePropertyListPathNotEmpty() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseVerbPath();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseVerbSimple();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseObjectListPath();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parseWS();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parseWS();\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 59) {\n                s7 = peg$c152;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c153); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = [];\n                s9 = peg$parseWS();\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$parseWS();\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$currPos;\n                  s10 = peg$parseVerbPath();\n                  if (s10 === peg$FAILED) {\n                    s10 = peg$parseVerbSimple();\n                  }\n                  if (s10 !== peg$FAILED) {\n                    s11 = [];\n                    s12 = peg$parseWS();\n                    while (s12 !== peg$FAILED) {\n                      s11.push(s12);\n                      s12 = peg$parseWS();\n                    }\n                    if (s11 !== peg$FAILED) {\n                      s12 = peg$parseObjectList();\n                      if (s12 !== peg$FAILED) {\n                        s10 = [s10, s11, s12];\n                        s9 = s10;\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                  if (s9 === peg$FAILED) {\n                    s9 = null;\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s6 = [s6, s7, s8, s9];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 59) {\n                  s7 = peg$c152;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c153); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = [];\n                  s9 = peg$parseWS();\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parseWS();\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$currPos;\n                    s10 = peg$parseVerbPath();\n                    if (s10 === peg$FAILED) {\n                      s10 = peg$parseVerbSimple();\n                    }\n                    if (s10 !== peg$FAILED) {\n                      s11 = [];\n                      s12 = peg$parseWS();\n                      while (s12 !== peg$FAILED) {\n                        s11.push(s12);\n                        s12 = peg$parseWS();\n                      }\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parseObjectList();\n                        if (s12 !== peg$FAILED) {\n                          s10 = [s10, s11, s12];\n                          s9 = s10;\n                        } else {\n                          peg$currPos = s9;\n                          s9 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s6 = [s6, s7, s8, s9];\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c319(s1, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c318); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePropertyListNotEmpty() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseVerb();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseObjectList();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parseWS();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parseWS();\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 59) {\n                s7 = peg$c152;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c153); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = [];\n                s9 = peg$parseWS();\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$parseWS();\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$currPos;\n                  s10 = peg$parseVerb();\n                  if (s10 !== peg$FAILED) {\n                    s11 = [];\n                    s12 = peg$parseWS();\n                    while (s12 !== peg$FAILED) {\n                      s11.push(s12);\n                      s12 = peg$parseWS();\n                    }\n                    if (s11 !== peg$FAILED) {\n                      s12 = peg$parseObjectList();\n                      if (s12 !== peg$FAILED) {\n                        s10 = [s10, s11, s12];\n                        s9 = s10;\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                  if (s9 === peg$FAILED) {\n                    s9 = null;\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s6 = [s6, s7, s8, s9];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 59) {\n                  s7 = peg$c152;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c153); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = [];\n                  s9 = peg$parseWS();\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parseWS();\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$currPos;\n                    s10 = peg$parseVerb();\n                    if (s10 !== peg$FAILED) {\n                      s11 = [];\n                      s12 = peg$parseWS();\n                      while (s12 !== peg$FAILED) {\n                        s11.push(s12);\n                        s12 = peg$parseWS();\n                      }\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parseObjectList();\n                        if (s12 !== peg$FAILED) {\n                          s10 = [s10, s11, s12];\n                          s9 = s10;\n                        } else {\n                          peg$currPos = s9;\n                          s9 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s6 = [s6, s7, s8, s9];\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c321(s1, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c320); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePropertyList() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parsePropertyListNotEmpty();\n      if (s0 === peg$FAILED) {\n        s0 = null;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c322); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseObjectListPath() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseObjectPath();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c306;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c307); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parseWS();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parseWS();\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseObjectPath();\n              if (s7 !== peg$FAILED) {\n                s5 = [s5, s6, s7];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c306;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c307); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseObjectPath();\n                if (s7 !== peg$FAILED) {\n                  s5 = [s5, s6, s7];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c324(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c323); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseObjectList() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseObject();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c306;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c307); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parseWS();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parseWS();\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseObject();\n              if (s7 !== peg$FAILED) {\n                s5 = [s5, s6, s7];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c306;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c307); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseObject();\n                if (s7 !== peg$FAILED) {\n                  s5 = [s5, s6, s7];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c326(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c325); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseObjectPath() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseGraphNodePath();\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c327); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseObject() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseGraphNode();\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c328); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseVerb() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseVarOrIRIref();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 97) {\n          s1 = peg$c330;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c331); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c332();\n        }\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c329); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseTriplesSameSubjectPath() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseVarOrTerm();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsePropertyListNotEmptyPath();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c334(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseWS();\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseWS();\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseTriplesNodePath();\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$parseWS();\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseWS();\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parsePropertyListPath();\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c335(s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c333); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePropertyListNotEmptyPath() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseVerbPath();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseVerbSimple();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseObjectListPath();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parseWS();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parseWS();\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 59) {\n                s7 = peg$c152;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c153); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = [];\n                s9 = peg$parseWS();\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  s9 = peg$parseWS();\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$currPos;\n                  s10 = peg$parseVerbPath();\n                  if (s10 === peg$FAILED) {\n                    s10 = peg$parseVerbSimple();\n                  }\n                  if (s10 !== peg$FAILED) {\n                    s11 = peg$parseObjectList();\n                    if (s11 !== peg$FAILED) {\n                      s10 = [s10, s11];\n                      s9 = s10;\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                  if (s9 === peg$FAILED) {\n                    s9 = null;\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s6 = [s6, s7, s8, s9];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 59) {\n                  s7 = peg$c152;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c153); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = [];\n                  s9 = peg$parseWS();\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parseWS();\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$currPos;\n                    s10 = peg$parseVerbPath();\n                    if (s10 === peg$FAILED) {\n                      s10 = peg$parseVerbSimple();\n                    }\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$parseObjectList();\n                      if (s11 !== peg$FAILED) {\n                        s10 = [s10, s11];\n                        s9 = s10;\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s6 = [s6, s7, s8, s9];\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c337(s1, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c336); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePropertyListPath() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parsePropertyListPathNotEmpty();\n      if (s0 === peg$FAILED) {\n        s0 = null;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c338); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseVerbPath() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsePath();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c340(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c339); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseVerbSimple() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseVar();\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c341); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePath() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parsePathAlternative();\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c342); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePathAlternative() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsePathSequence();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 124) {\n          s4 = peg$c344;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c345); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsePathSequence();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 124) {\n            s4 = peg$c344;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c345); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsePathSequence();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c346(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c343); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePathSequence() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsePathEltOrInverse();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n          s4 = peg$c348;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c349); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsePathEltOrInverse();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s4 = peg$c348;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c349); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsePathEltOrInverse();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c350(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c347); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePathElt() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsePathPrimary();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsePathMod();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c352(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c351); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePathEltOrInverse() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$parsePathElt();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 94) {\n          s1 = peg$c354;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c355); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsePathElt();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c356(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c353); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePathMod() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 42) {\n        s0 = peg$c42;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 63) {\n          s0 = peg$c358;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c359); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s0 = peg$c360;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c361); }\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s1 = peg$c55;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c56); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$currPos;\n              s3 = peg$parseInteger();\n              if (s3 !== peg$FAILED) {\n                s4 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s5 = peg$c306;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                }\n                if (s5 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 125) {\n                    s6 = peg$c57;\n                    peg$currPos++;\n                  } else {\n                    s6 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                  }\n                  if (s6 === peg$FAILED) {\n                    s6 = peg$currPos;\n                    s7 = peg$parseInteger();\n                    if (s7 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 125) {\n                        s8 = peg$c57;\n                        peg$currPos++;\n                      } else {\n                        s8 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                      }\n                      if (s8 !== peg$FAILED) {\n                        s7 = [s7, s8];\n                        s6 = s7;\n                      } else {\n                        peg$currPos = s6;\n                        s6 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s6;\n                      s6 = peg$FAILED;\n                    }\n                  }\n                  if (s6 !== peg$FAILED) {\n                    s5 = [s5, s6];\n                    s4 = s5;\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n                if (s4 === peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 125) {\n                    s4 = peg$c57;\n                    peg$currPos++;\n                  } else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                  }\n                }\n                if (s4 !== peg$FAILED) {\n                  s3 = [s3, s4];\n                  s2 = s3;\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n              if (s2 === peg$FAILED) {\n                s2 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s3 = peg$c306;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                }\n                if (s3 !== peg$FAILED) {\n                  s4 = peg$parseInteger();\n                  if (s4 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s5 = peg$c57;\n                      peg$currPos++;\n                    } else {\n                      s5 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                    }\n                    if (s5 !== peg$FAILED) {\n                      s3 = [s3, s4, s5];\n                      s2 = s3;\n                    } else {\n                      peg$currPos = s2;\n                      s2 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s2;\n                  s2 = peg$FAILED;\n                }\n              }\n              if (s2 !== peg$FAILED) {\n                s1 = [s1, s2];\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c357); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePathPrimary() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$parseIRIref();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 97) {\n          s1 = peg$c330;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c331); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c332();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 33) {\n            s1 = peg$c363;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c364); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsePathNegatedPropertySet();\n            if (s2 !== peg$FAILED) {\n              s1 = [s1, s2];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 40) {\n              s1 = peg$c34;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c35); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parsePath();\n              if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s3 = peg$c40;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                }\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c251(s2);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c362); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePathNegatedPropertySet() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$parsePathOneInPropertySet();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c34;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = peg$parsePathOneInPropertySet();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 124) {\n              s6 = peg$c344;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c345); }\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsePathOneInPropertySet();\n              if (s7 !== peg$FAILED) {\n                s6 = [s6, s7];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 124) {\n                s6 = peg$c344;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c345); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsePathOneInPropertySet();\n                if (s7 !== peg$FAILED) {\n                  s6 = [s6, s7];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s3 = [s3, s4];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n          if (s2 === peg$FAILED) {\n            s2 = null;\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c40;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c41); }\n            }\n            if (s3 !== peg$FAILED) {\n              s1 = [s1, s2, s3];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePathOneInPropertySet() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$parseIRIref();\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 97) {\n          s0 = peg$c330;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c331); }\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 94) {\n            s1 = peg$c354;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c355); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseIRIref();\n            if (s2 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 97) {\n                s2 = peg$c330;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c331); }\n              }\n            }\n            if (s2 !== peg$FAILED) {\n              s1 = [s1, s2];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c365); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseInteger() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseINTEGER();\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c366); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseTriplesNodePath() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseCollectionPath();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c368(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseBlankNodePropertyListPath();\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c367); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseTriplesNode() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseCollection();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c370(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseBlankNodePropertyList();\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c369); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseBlankNodePropertyListPath() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 91) {\n          s2 = peg$c372;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c373); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsePropertyListNotEmptyPath();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s5 = peg$c374;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c375); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c376(s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c371); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseBlankNodePropertyList() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 91) {\n          s2 = peg$c372;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c373); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsePropertyListNotEmpty();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseWS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseWS();\n              }\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 93) {\n                  s6 = peg$c374;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c375); }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseWS();\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseWS();\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c378(s4);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c377); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseCollectionPath() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s2 = peg$c34;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseGraphNodePath();\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parseGraphNodePath();\n              }\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseWS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseWS();\n              }\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s6 = peg$c40;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseWS();\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseWS();\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c380(s4);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c379); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseCollection() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s2 = peg$c34;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseGraphNode();\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parseGraphNode();\n              }\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseWS();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parseWS();\n              }\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s6 = peg$c40;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = [];\n                  s8 = peg$parseWS();\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    s8 = peg$parseWS();\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c380(s4);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c381); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseGraphNodePath() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      s3 = peg$parseWS();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseWS();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseVarOrTerm();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parseWS();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseWS();\n          }\n          if (s4 !== peg$FAILED) {\n            s2 = [s2, s3, s4];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseTriplesNodePath();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s2 = [s2, s3, s4];\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c383(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c382); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseGraphNode() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      s3 = peg$parseWS();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseWS();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseVarOrTerm();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parseWS();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseWS();\n          }\n          if (s4 !== peg$FAILED) {\n            s2 = [s2, s3, s4];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseTriplesNode();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s2 = [s2, s3, s4];\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c383(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c384); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseVarOrTerm() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseVar();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseGraphTerm();\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c385); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseVarOrIRIref() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseVar();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseIRIref();\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c386); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseVar() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseWS();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWS();\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseVAR1();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseVAR2();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseWS();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseWS();\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c388(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c387); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseGraphTerm() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseIRIref();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseRDFLiteral();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseNumericLiteral();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseBooleanLiteral();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseBlankNode();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseNIL();\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c389); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseExpression() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseConditionalOrExpression();\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c390); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseConditionalOrExpression() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseConditionalAndExpression();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parseWS();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parseWS();\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c392) {\n            s5 = peg$c392;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c393); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parseWS();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parseWS();\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseConditionalAndExpression();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$parseWS();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseWS();\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c392) {\n              s5 = peg$c392;\n              peg$currPos += 2;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c393); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseConditionalAndExpression();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c394(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c391); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseConditionalAndExpression() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseValueLogical();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parseWS();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parseWS();\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c396) {\n            s5 = peg$c396;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c397); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parseWS();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parseWS();\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseValueLogical();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$parseWS();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseWS();\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c396) {\n              s5 = peg$c396;\n              peg$currPos += 2;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c397); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseValueLogical();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c398(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c395); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseValueLogical() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseRelationalExpression();\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c399); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseRelationalExpression() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseNumericExpression();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parseWS();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parseWS();\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s5 = peg$c401;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c402); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parseWS();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parseWS();\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseNumericExpression();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$parseWS();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseWS();\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c403) {\n              s5 = peg$c403;\n              peg$currPos += 2;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c404); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseNumericExpression();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 60) {\n                s5 = peg$c405;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c406); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseNumericExpression();\n                  if (s7 !== peg$FAILED) {\n                    s4 = [s4, s5, s6, s7];\n                    s3 = s4;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n            if (s3 === peg$FAILED) {\n              s3 = peg$currPos;\n              s4 = [];\n              s5 = peg$parseWS();\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parseWS();\n              }\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 62) {\n                  s5 = peg$c407;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c408); }\n                }\n                if (s5 !== peg$FAILED) {\n                  s6 = [];\n                  s7 = peg$parseWS();\n                  while (s7 !== peg$FAILED) {\n                    s6.push(s7);\n                    s7 = peg$parseWS();\n                  }\n                  if (s6 !== peg$FAILED) {\n                    s7 = peg$parseNumericExpression();\n                    if (s7 !== peg$FAILED) {\n                      s4 = [s4, s5, s6, s7];\n                      s3 = s4;\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n              if (s3 === peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                s5 = peg$parseWS();\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  s5 = peg$parseWS();\n                }\n                if (s4 !== peg$FAILED) {\n                  if (input.substr(peg$currPos, 2) === peg$c409) {\n                    s5 = peg$c409;\n                    peg$currPos += 2;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c410); }\n                  }\n                  if (s5 !== peg$FAILED) {\n                    s6 = [];\n                    s7 = peg$parseWS();\n                    while (s7 !== peg$FAILED) {\n                      s6.push(s7);\n                      s7 = peg$parseWS();\n                    }\n                    if (s6 !== peg$FAILED) {\n                      s7 = peg$parseNumericExpression();\n                      if (s7 !== peg$FAILED) {\n                        s4 = [s4, s5, s6, s7];\n                        s3 = s4;\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n                if (s3 === peg$FAILED) {\n                  s3 = peg$currPos;\n                  s4 = [];\n                  s5 = peg$parseWS();\n                  while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    s5 = peg$parseWS();\n                  }\n                  if (s4 !== peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c411) {\n                      s5 = peg$c411;\n                      peg$currPos += 2;\n                    } else {\n                      s5 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c412); }\n                    }\n                    if (s5 !== peg$FAILED) {\n                      s6 = [];\n                      s7 = peg$parseWS();\n                      while (s7 !== peg$FAILED) {\n                        s6.push(s7);\n                        s7 = peg$parseWS();\n                      }\n                      if (s6 !== peg$FAILED) {\n                        s7 = peg$parseNumericExpression();\n                        if (s7 !== peg$FAILED) {\n                          s4 = [s4, s5, s6, s7];\n                          s3 = s4;\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                  if (s3 === peg$FAILED) {\n                    s3 = peg$currPos;\n                    s4 = [];\n                    s5 = peg$parseWS();\n                    while (s5 !== peg$FAILED) {\n                      s4.push(s5);\n                      s5 = peg$parseWS();\n                    }\n                    if (s4 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 73) {\n                        s5 = peg$c413;\n                        peg$currPos++;\n                      } else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c414); }\n                      }\n                      if (s5 === peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 105) {\n                          s5 = peg$c415;\n                          peg$currPos++;\n                        } else {\n                          s5 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c416); }\n                        }\n                      }\n                      if (s5 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 78) {\n                          s6 = peg$c417;\n                          peg$currPos++;\n                        } else {\n                          s6 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c418); }\n                        }\n                        if (s6 === peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 110) {\n                            s6 = peg$c419;\n                            peg$currPos++;\n                          } else {\n                            s6 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c420); }\n                          }\n                        }\n                        if (s6 !== peg$FAILED) {\n                          s7 = [];\n                          s8 = peg$parseWS();\n                          while (s8 !== peg$FAILED) {\n                            s7.push(s8);\n                            s8 = peg$parseWS();\n                          }\n                          if (s7 !== peg$FAILED) {\n                            s8 = peg$parseExpressionList();\n                            if (s8 !== peg$FAILED) {\n                              s4 = [s4, s5, s6, s7, s8];\n                              s3 = s4;\n                            } else {\n                              peg$currPos = s3;\n                              s3 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                    if (s3 === peg$FAILED) {\n                      s3 = peg$currPos;\n                      s4 = [];\n                      s5 = peg$parseWS();\n                      while (s5 !== peg$FAILED) {\n                        s4.push(s5);\n                        s5 = peg$parseWS();\n                      }\n                      if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 78) {\n                          s5 = peg$c417;\n                          peg$currPos++;\n                        } else {\n                          s5 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c418); }\n                        }\n                        if (s5 === peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 110) {\n                            s5 = peg$c419;\n                            peg$currPos++;\n                          } else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c420); }\n                          }\n                        }\n                        if (s5 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 79) {\n                            s6 = peg$c421;\n                            peg$currPos++;\n                          } else {\n                            s6 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c422); }\n                          }\n                          if (s6 === peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 111) {\n                              s6 = peg$c423;\n                              peg$currPos++;\n                            } else {\n                              s6 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c424); }\n                            }\n                          }\n                          if (s6 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 84) {\n                              s7 = peg$c425;\n                              peg$currPos++;\n                            } else {\n                              s7 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c426); }\n                            }\n                            if (s7 === peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 116) {\n                                s7 = peg$c427;\n                                peg$currPos++;\n                              } else {\n                                s7 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c428); }\n                              }\n                            }\n                            if (s7 !== peg$FAILED) {\n                              s8 = [];\n                              s9 = peg$parseWS();\n                              while (s9 !== peg$FAILED) {\n                                s8.push(s9);\n                                s9 = peg$parseWS();\n                              }\n                              if (s8 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 73) {\n                                  s9 = peg$c413;\n                                  peg$currPos++;\n                                } else {\n                                  s9 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c414); }\n                                }\n                                if (s9 === peg$FAILED) {\n                                  if (input.charCodeAt(peg$currPos) === 105) {\n                                    s9 = peg$c415;\n                                    peg$currPos++;\n                                  } else {\n                                    s9 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c416); }\n                                  }\n                                }\n                                if (s9 !== peg$FAILED) {\n                                  if (input.charCodeAt(peg$currPos) === 78) {\n                                    s10 = peg$c417;\n                                    peg$currPos++;\n                                  } else {\n                                    s10 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c418); }\n                                  }\n                                  if (s10 === peg$FAILED) {\n                                    if (input.charCodeAt(peg$currPos) === 110) {\n                                      s10 = peg$c419;\n                                      peg$currPos++;\n                                    } else {\n                                      s10 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c420); }\n                                    }\n                                  }\n                                  if (s10 !== peg$FAILED) {\n                                    s11 = [];\n                                    s12 = peg$parseWS();\n                                    while (s12 !== peg$FAILED) {\n                                      s11.push(s12);\n                                      s12 = peg$parseWS();\n                                    }\n                                    if (s11 !== peg$FAILED) {\n                                      s12 = peg$parseExpressionList();\n                                      if (s12 !== peg$FAILED) {\n                                        s4 = [s4, s5, s6, s7, s8, s9, s10, s11, s12];\n                                        s3 = s4;\n                                      } else {\n                                        peg$currPos = s3;\n                                        s3 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s3;\n                                      s3 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s3;\n                                    s3 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s3;\n                                  s3 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s3;\n                              s3 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$parseWS();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseWS();\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s5 = peg$c401;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c402); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseNumericExpression();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c403) {\n                s5 = peg$c403;\n                peg$currPos += 2;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c404); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseNumericExpression();\n                  if (s7 !== peg$FAILED) {\n                    s4 = [s4, s5, s6, s7];\n                    s3 = s4;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n            if (s3 === peg$FAILED) {\n              s3 = peg$currPos;\n              s4 = [];\n              s5 = peg$parseWS();\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parseWS();\n              }\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 60) {\n                  s5 = peg$c405;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c406); }\n                }\n                if (s5 !== peg$FAILED) {\n                  s6 = [];\n                  s7 = peg$parseWS();\n                  while (s7 !== peg$FAILED) {\n                    s6.push(s7);\n                    s7 = peg$parseWS();\n                  }\n                  if (s6 !== peg$FAILED) {\n                    s7 = peg$parseNumericExpression();\n                    if (s7 !== peg$FAILED) {\n                      s4 = [s4, s5, s6, s7];\n                      s3 = s4;\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n              if (s3 === peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                s5 = peg$parseWS();\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  s5 = peg$parseWS();\n                }\n                if (s4 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 62) {\n                    s5 = peg$c407;\n                    peg$currPos++;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c408); }\n                  }\n                  if (s5 !== peg$FAILED) {\n                    s6 = [];\n                    s7 = peg$parseWS();\n                    while (s7 !== peg$FAILED) {\n                      s6.push(s7);\n                      s7 = peg$parseWS();\n                    }\n                    if (s6 !== peg$FAILED) {\n                      s7 = peg$parseNumericExpression();\n                      if (s7 !== peg$FAILED) {\n                        s4 = [s4, s5, s6, s7];\n                        s3 = s4;\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n                if (s3 === peg$FAILED) {\n                  s3 = peg$currPos;\n                  s4 = [];\n                  s5 = peg$parseWS();\n                  while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    s5 = peg$parseWS();\n                  }\n                  if (s4 !== peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c409) {\n                      s5 = peg$c409;\n                      peg$currPos += 2;\n                    } else {\n                      s5 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c410); }\n                    }\n                    if (s5 !== peg$FAILED) {\n                      s6 = [];\n                      s7 = peg$parseWS();\n                      while (s7 !== peg$FAILED) {\n                        s6.push(s7);\n                        s7 = peg$parseWS();\n                      }\n                      if (s6 !== peg$FAILED) {\n                        s7 = peg$parseNumericExpression();\n                        if (s7 !== peg$FAILED) {\n                          s4 = [s4, s5, s6, s7];\n                          s3 = s4;\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                  if (s3 === peg$FAILED) {\n                    s3 = peg$currPos;\n                    s4 = [];\n                    s5 = peg$parseWS();\n                    while (s5 !== peg$FAILED) {\n                      s4.push(s5);\n                      s5 = peg$parseWS();\n                    }\n                    if (s4 !== peg$FAILED) {\n                      if (input.substr(peg$currPos, 2) === peg$c411) {\n                        s5 = peg$c411;\n                        peg$currPos += 2;\n                      } else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c412); }\n                      }\n                      if (s5 !== peg$FAILED) {\n                        s6 = [];\n                        s7 = peg$parseWS();\n                        while (s7 !== peg$FAILED) {\n                          s6.push(s7);\n                          s7 = peg$parseWS();\n                        }\n                        if (s6 !== peg$FAILED) {\n                          s7 = peg$parseNumericExpression();\n                          if (s7 !== peg$FAILED) {\n                            s4 = [s4, s5, s6, s7];\n                            s3 = s4;\n                          } else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                    if (s3 === peg$FAILED) {\n                      s3 = peg$currPos;\n                      s4 = [];\n                      s5 = peg$parseWS();\n                      while (s5 !== peg$FAILED) {\n                        s4.push(s5);\n                        s5 = peg$parseWS();\n                      }\n                      if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 73) {\n                          s5 = peg$c413;\n                          peg$currPos++;\n                        } else {\n                          s5 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c414); }\n                        }\n                        if (s5 === peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 105) {\n                            s5 = peg$c415;\n                            peg$currPos++;\n                          } else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c416); }\n                          }\n                        }\n                        if (s5 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 78) {\n                            s6 = peg$c417;\n                            peg$currPos++;\n                          } else {\n                            s6 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c418); }\n                          }\n                          if (s6 === peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 110) {\n                              s6 = peg$c419;\n                              peg$currPos++;\n                            } else {\n                              s6 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c420); }\n                            }\n                          }\n                          if (s6 !== peg$FAILED) {\n                            s7 = [];\n                            s8 = peg$parseWS();\n                            while (s8 !== peg$FAILED) {\n                              s7.push(s8);\n                              s8 = peg$parseWS();\n                            }\n                            if (s7 !== peg$FAILED) {\n                              s8 = peg$parseExpressionList();\n                              if (s8 !== peg$FAILED) {\n                                s4 = [s4, s5, s6, s7, s8];\n                                s3 = s4;\n                              } else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s3;\n                              s3 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                      }\n                      if (s3 === peg$FAILED) {\n                        s3 = peg$currPos;\n                        s4 = [];\n                        s5 = peg$parseWS();\n                        while (s5 !== peg$FAILED) {\n                          s4.push(s5);\n                          s5 = peg$parseWS();\n                        }\n                        if (s4 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 78) {\n                            s5 = peg$c417;\n                            peg$currPos++;\n                          } else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c418); }\n                          }\n                          if (s5 === peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 110) {\n                              s5 = peg$c419;\n                              peg$currPos++;\n                            } else {\n                              s5 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c420); }\n                            }\n                          }\n                          if (s5 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 79) {\n                              s6 = peg$c421;\n                              peg$currPos++;\n                            } else {\n                              s6 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c422); }\n                            }\n                            if (s6 === peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 111) {\n                                s6 = peg$c423;\n                                peg$currPos++;\n                              } else {\n                                s6 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c424); }\n                              }\n                            }\n                            if (s6 !== peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 84) {\n                                s7 = peg$c425;\n                                peg$currPos++;\n                              } else {\n                                s7 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c426); }\n                              }\n                              if (s7 === peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 116) {\n                                  s7 = peg$c427;\n                                  peg$currPos++;\n                                } else {\n                                  s7 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c428); }\n                                }\n                              }\n                              if (s7 !== peg$FAILED) {\n                                s8 = [];\n                                s9 = peg$parseWS();\n                                while (s9 !== peg$FAILED) {\n                                  s8.push(s9);\n                                  s9 = peg$parseWS();\n                                }\n                                if (s8 !== peg$FAILED) {\n                                  if (input.charCodeAt(peg$currPos) === 73) {\n                                    s9 = peg$c413;\n                                    peg$currPos++;\n                                  } else {\n                                    s9 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c414); }\n                                  }\n                                  if (s9 === peg$FAILED) {\n                                    if (input.charCodeAt(peg$currPos) === 105) {\n                                      s9 = peg$c415;\n                                      peg$currPos++;\n                                    } else {\n                                      s9 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c416); }\n                                    }\n                                  }\n                                  if (s9 !== peg$FAILED) {\n                                    if (input.charCodeAt(peg$currPos) === 78) {\n                                      s10 = peg$c417;\n                                      peg$currPos++;\n                                    } else {\n                                      s10 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c418); }\n                                    }\n                                    if (s10 === peg$FAILED) {\n                                      if (input.charCodeAt(peg$currPos) === 110) {\n                                        s10 = peg$c419;\n                                        peg$currPos++;\n                                      } else {\n                                        s10 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c420); }\n                                      }\n                                    }\n                                    if (s10 !== peg$FAILED) {\n                                      s11 = [];\n                                      s12 = peg$parseWS();\n                                      while (s12 !== peg$FAILED) {\n                                        s11.push(s12);\n                                        s12 = peg$parseWS();\n                                      }\n                                      if (s11 !== peg$FAILED) {\n                                        s12 = peg$parseExpressionList();\n                                        if (s12 !== peg$FAILED) {\n                                          s4 = [s4, s5, s6, s7, s8, s9, s10, s11, s12];\n                                          s3 = s4;\n                                        } else {\n                                          peg$currPos = s3;\n                                          s3 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s3;\n                                        s3 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s3;\n                                      s3 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s3;\n                                    s3 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s3;\n                                  s3 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s3;\n                              s3 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c429(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c400); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseNumericExpression() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseAdditiveExpression();\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c430); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseAdditiveExpression() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseMultiplicativeExpression();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parseWS();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parseWS();\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s5 = peg$c360;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c361); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parseWS();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parseWS();\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseMultiplicativeExpression();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$parseWS();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseWS();\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c432;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c433); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseMultiplicativeExpression();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = peg$parseNumericLiteralNegative();\n            if (s4 === peg$FAILED) {\n              s4 = peg$parseNumericLiteralNegative();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 42) {\n                  s7 = peg$c42;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c43); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = [];\n                  s9 = peg$parseWS();\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parseWS();\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseUnaryExpression();\n                    if (s9 !== peg$FAILED) {\n                      s6 = [s6, s7, s8, s9];\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$currPos;\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 47) {\n                    s7 = peg$c348;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c349); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = [];\n                    s9 = peg$parseWS();\n                    while (s9 !== peg$FAILED) {\n                      s8.push(s9);\n                      s9 = peg$parseWS();\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = peg$parseUnaryExpression();\n                      if (s9 !== peg$FAILED) {\n                        s6 = [s6, s7, s8, s9];\n                        s5 = s6;\n                      } else {\n                        peg$currPos = s5;\n                        s5 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              }\n              if (s5 === peg$FAILED) {\n                s5 = null;\n              }\n              if (s5 !== peg$FAILED) {\n                s4 = [s4, s5];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$parseWS();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseWS();\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 43) {\n              s5 = peg$c360;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c361); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseMultiplicativeExpression();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 45) {\n                s5 = peg$c432;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c433); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseMultiplicativeExpression();\n                  if (s7 !== peg$FAILED) {\n                    s4 = [s4, s5, s6, s7];\n                    s3 = s4;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n            if (s3 === peg$FAILED) {\n              s3 = peg$currPos;\n              s4 = peg$parseNumericLiteralNegative();\n              if (s4 === peg$FAILED) {\n                s4 = peg$parseNumericLiteralNegative();\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$currPos;\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 42) {\n                    s7 = peg$c42;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c43); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = [];\n                    s9 = peg$parseWS();\n                    while (s9 !== peg$FAILED) {\n                      s8.push(s9);\n                      s9 = peg$parseWS();\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = peg$parseUnaryExpression();\n                      if (s9 !== peg$FAILED) {\n                        s6 = [s6, s7, s8, s9];\n                        s5 = s6;\n                      } else {\n                        peg$currPos = s5;\n                        s5 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n                if (s5 === peg$FAILED) {\n                  s5 = peg$currPos;\n                  s6 = [];\n                  s7 = peg$parseWS();\n                  while (s7 !== peg$FAILED) {\n                    s6.push(s7);\n                    s7 = peg$parseWS();\n                  }\n                  if (s6 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 47) {\n                      s7 = peg$c348;\n                      peg$currPos++;\n                    } else {\n                      s7 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c349); }\n                    }\n                    if (s7 !== peg$FAILED) {\n                      s8 = [];\n                      s9 = peg$parseWS();\n                      while (s9 !== peg$FAILED) {\n                        s8.push(s9);\n                        s9 = peg$parseWS();\n                      }\n                      if (s8 !== peg$FAILED) {\n                        s9 = peg$parseUnaryExpression();\n                        if (s9 !== peg$FAILED) {\n                          s6 = [s6, s7, s8, s9];\n                          s5 = s6;\n                        } else {\n                          peg$currPos = s5;\n                          s5 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s5;\n                        s5 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                }\n                if (s5 === peg$FAILED) {\n                  s5 = null;\n                }\n                if (s5 !== peg$FAILED) {\n                  s4 = [s4, s5];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c434(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c431); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseMultiplicativeExpression() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryExpression();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parseWS();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parseWS();\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c42;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c43); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parseWS();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parseWS();\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseUnaryExpression();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$parseWS();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseWS();\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c348;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c349); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseUnaryExpression();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$parseWS();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseWS();\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 42) {\n              s5 = peg$c42;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c43); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parseWS();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parseWS();\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseUnaryExpression();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 47) {\n                s5 = peg$c348;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c349); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseUnaryExpression();\n                  if (s7 !== peg$FAILED) {\n                    s4 = [s4, s5, s6, s7];\n                    s3 = s4;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c436(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c435); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseUnaryExpression() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c363;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c364); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsePrimaryExpression();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c438(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s1 = peg$c360;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c361); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseWS();\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseWS();\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsePrimaryExpression();\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c439(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c432;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c433); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parseWS();\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n              s3 = peg$parseWS();\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parsePrimaryExpression();\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c440(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsePrimaryExpression();\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c437); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePrimaryExpression() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseBrackettedExpression();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseBuiltInCall();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseIRIrefOrFunction();\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseRDFLiteral();\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c442(s1);\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parseNumericLiteral();\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c443(s1);\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parseBooleanLiteral();\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c444(s1);\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseAggregate();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    s1 = peg$parseVar();\n                    if (s1 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c445(s1);\n                    }\n                    s0 = s1;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c441); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseBrackettedExpression() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c34;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExpression();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c40;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c41); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c447(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c446); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseBuiltInCall() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c449) {\n        s1 = peg$c449;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c450); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c451) {\n          s1 = peg$c451;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c452); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s3 = peg$c34;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseExpression();\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s7 = peg$c40;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c453(s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 4) === peg$c454) {\n          s1 = peg$c454;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c455); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c456) {\n            s1 = peg$c456;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c457); }\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseWS();\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseWS();\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 40) {\n              s3 = peg$c34;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c35); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              s5 = peg$parseWS();\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parseWS();\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseExpression();\n                if (s5 !== peg$FAILED) {\n                  s6 = [];\n                  s7 = peg$parseWS();\n                  while (s7 !== peg$FAILED) {\n                    s6.push(s7);\n                    s7 = peg$parseWS();\n                  }\n                  if (s6 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 41) {\n                      s7 = peg$c40;\n                      peg$currPos++;\n                    } else {\n                      s7 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                    }\n                    if (s7 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c458(s5);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 11) === peg$c459) {\n            s1 = peg$c459;\n            peg$currPos += 11;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c460); }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 11) === peg$c461) {\n              s1 = peg$c461;\n              peg$currPos += 11;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c462); }\n            }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parseWS();\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n              s3 = peg$parseWS();\n            }\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 40) {\n                s3 = peg$c34;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c35); }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = [];\n                s5 = peg$parseWS();\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  s5 = peg$parseWS();\n                }\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parseExpression();\n                  if (s5 !== peg$FAILED) {\n                    s6 = [];\n                    s7 = peg$parseWS();\n                    while (s7 !== peg$FAILED) {\n                      s6.push(s7);\n                      s7 = peg$parseWS();\n                    }\n                    if (s6 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 44) {\n                        s7 = peg$c306;\n                        peg$currPos++;\n                      } else {\n                        s7 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                      }\n                      if (s7 !== peg$FAILED) {\n                        s8 = [];\n                        s9 = peg$parseWS();\n                        while (s9 !== peg$FAILED) {\n                          s8.push(s9);\n                          s9 = peg$parseWS();\n                        }\n                        if (s8 !== peg$FAILED) {\n                          s9 = peg$parseExpression();\n                          if (s9 !== peg$FAILED) {\n                            s10 = [];\n                            s11 = peg$parseWS();\n                            while (s11 !== peg$FAILED) {\n                              s10.push(s11);\n                              s11 = peg$parseWS();\n                            }\n                            if (s10 !== peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 41) {\n                                s11 = peg$c40;\n                                peg$currPos++;\n                              } else {\n                                s11 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                              }\n                              if (s11 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c463(s5, s9);\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 8) === peg$c464) {\n              s1 = peg$c464;\n              peg$currPos += 8;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c465); }\n            }\n            if (s1 === peg$FAILED) {\n              if (input.substr(peg$currPos, 8) === peg$c466) {\n                s1 = peg$c466;\n                peg$currPos += 8;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c467); }\n              }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = [];\n              s3 = peg$parseWS();\n              while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parseWS();\n              }\n              if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 40) {\n                  s3 = peg$c34;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                }\n                if (s3 !== peg$FAILED) {\n                  s4 = [];\n                  s5 = peg$parseWS();\n                  while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    s5 = peg$parseWS();\n                  }\n                  if (s4 !== peg$FAILED) {\n                    s5 = peg$parseExpression();\n                    if (s5 !== peg$FAILED) {\n                      s6 = [];\n                      s7 = peg$parseWS();\n                      while (s7 !== peg$FAILED) {\n                        s6.push(s7);\n                        s7 = peg$parseWS();\n                      }\n                      if (s6 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 41) {\n                          s7 = peg$c40;\n                          peg$currPos++;\n                        } else {\n                          s7 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                        }\n                        if (s7 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c468(s5);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 5) === peg$c469) {\n                s1 = peg$c469;\n                peg$currPos += 5;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c470); }\n              }\n              if (s1 === peg$FAILED) {\n                if (input.substr(peg$currPos, 5) === peg$c471) {\n                  s1 = peg$c471;\n                  peg$currPos += 5;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c472); }\n                }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = [];\n                s3 = peg$parseWS();\n                while (s3 !== peg$FAILED) {\n                  s2.push(s3);\n                  s3 = peg$parseWS();\n                }\n                if (s2 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 40) {\n                    s3 = peg$c34;\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = [];\n                    s5 = peg$parseWS();\n                    while (s5 !== peg$FAILED) {\n                      s4.push(s5);\n                      s5 = peg$parseWS();\n                    }\n                    if (s4 !== peg$FAILED) {\n                      s5 = peg$parseVar();\n                      if (s5 !== peg$FAILED) {\n                        s6 = [];\n                        s7 = peg$parseWS();\n                        while (s7 !== peg$FAILED) {\n                          s6.push(s7);\n                          s7 = peg$parseWS();\n                        }\n                        if (s6 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 41) {\n                            s7 = peg$c40;\n                            peg$currPos++;\n                          } else {\n                            s7 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                          }\n                          if (s7 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c473(s5);\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 3) === peg$c474) {\n                  s1 = peg$c474;\n                  peg$currPos += 3;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c475); }\n                }\n                if (s1 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 3) === peg$c476) {\n                    s1 = peg$c476;\n                    peg$currPos += 3;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c477); }\n                  }\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = [];\n                  s3 = peg$parseWS();\n                  while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parseWS();\n                  }\n                  if (s2 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 40) {\n                      s3 = peg$c34;\n                      peg$currPos++;\n                    } else {\n                      s3 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                    }\n                    if (s3 !== peg$FAILED) {\n                      s4 = [];\n                      s5 = peg$parseWS();\n                      while (s5 !== peg$FAILED) {\n                        s4.push(s5);\n                        s5 = peg$parseWS();\n                      }\n                      if (s4 !== peg$FAILED) {\n                        s5 = peg$parseExpression();\n                        if (s5 !== peg$FAILED) {\n                          s6 = [];\n                          s7 = peg$parseWS();\n                          while (s7 !== peg$FAILED) {\n                            s6.push(s7);\n                            s7 = peg$parseWS();\n                          }\n                          if (s6 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 41) {\n                              s7 = peg$c40;\n                              peg$currPos++;\n                            } else {\n                              s7 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                            }\n                            if (s7 !== peg$FAILED) {\n                              peg$savedPos = s0;\n                              s1 = peg$c478(s5);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.substr(peg$currPos, 3) === peg$c479) {\n                    s1 = peg$c479;\n                    peg$currPos += 3;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c480); }\n                  }\n                  if (s1 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 3) === peg$c481) {\n                      s1 = peg$c481;\n                      peg$currPos += 3;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c482); }\n                    }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    s2 = [];\n                    s3 = peg$parseWS();\n                    while (s3 !== peg$FAILED) {\n                      s2.push(s3);\n                      s3 = peg$parseWS();\n                    }\n                    if (s2 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 40) {\n                        s3 = peg$c34;\n                        peg$currPos++;\n                      } else {\n                        s3 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                      }\n                      if (s3 !== peg$FAILED) {\n                        s4 = [];\n                        s5 = peg$parseWS();\n                        while (s5 !== peg$FAILED) {\n                          s4.push(s5);\n                          s5 = peg$parseWS();\n                        }\n                        if (s4 !== peg$FAILED) {\n                          s5 = peg$parseExpression();\n                          if (s5 !== peg$FAILED) {\n                            s6 = [];\n                            s7 = peg$parseWS();\n                            while (s7 !== peg$FAILED) {\n                              s6.push(s7);\n                              s7 = peg$parseWS();\n                            }\n                            if (s6 !== peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 41) {\n                                s7 = peg$c40;\n                                peg$currPos++;\n                              } else {\n                                s7 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                              }\n                              if (s7 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c483(s5);\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.substr(peg$currPos, 5) === peg$c484) {\n                      s1 = peg$c484;\n                      peg$currPos += 5;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c485); }\n                    }\n                    if (s1 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 5) === peg$c486) {\n                        s1 = peg$c486;\n                        peg$currPos += 5;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c487); }\n                      }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      s2 = [];\n                      s3 = peg$parseWS();\n                      while (s3 !== peg$FAILED) {\n                        s2.push(s3);\n                        s3 = peg$parseWS();\n                      }\n                      if (s2 !== peg$FAILED) {\n                        s3 = peg$currPos;\n                        if (input.charCodeAt(peg$currPos) === 40) {\n                          s4 = peg$c34;\n                          peg$currPos++;\n                        } else {\n                          s4 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                        }\n                        if (s4 !== peg$FAILED) {\n                          s5 = [];\n                          s6 = peg$parseWS();\n                          while (s6 !== peg$FAILED) {\n                            s5.push(s6);\n                            s6 = peg$parseWS();\n                          }\n                          if (s5 !== peg$FAILED) {\n                            s6 = peg$parseExpression();\n                            if (s6 !== peg$FAILED) {\n                              s7 = [];\n                              s8 = peg$parseWS();\n                              while (s8 !== peg$FAILED) {\n                                s7.push(s8);\n                                s8 = peg$parseWS();\n                              }\n                              if (s7 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 41) {\n                                  s8 = peg$c40;\n                                  peg$currPos++;\n                                } else {\n                                  s8 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                                }\n                                if (s8 !== peg$FAILED) {\n                                  s4 = [s4, s5, s6, s7, s8];\n                                  s3 = s4;\n                                } else {\n                                  peg$currPos = s3;\n                                  s3 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s3;\n                              s3 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                        if (s3 === peg$FAILED) {\n                          s3 = peg$parseNIL();\n                        }\n                        if (s3 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c488(s3);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n                      if (input.substr(peg$currPos, 8) === peg$c489) {\n                        s1 = peg$c489;\n                        peg$currPos += 8;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c490); }\n                      }\n                      if (s1 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c491) {\n                          s1 = peg$c491;\n                          peg$currPos += 8;\n                        } else {\n                          s1 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c492); }\n                        }\n                      }\n                      if (s1 !== peg$FAILED) {\n                        s2 = [];\n                        s3 = peg$parseWS();\n                        while (s3 !== peg$FAILED) {\n                          s2.push(s3);\n                          s3 = peg$parseWS();\n                        }\n                        if (s2 !== peg$FAILED) {\n                          s3 = peg$parseExpressionList();\n                          if (s3 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c493(s3);\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$currPos;\n                        if (input.substr(peg$currPos, 2) === peg$c494) {\n                          s1 = peg$c494;\n                          peg$currPos += 2;\n                        } else {\n                          s1 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c495); }\n                        }\n                        if (s1 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 2) === peg$c496) {\n                            s1 = peg$c496;\n                            peg$currPos += 2;\n                          } else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c497); }\n                          }\n                        }\n                        if (s1 !== peg$FAILED) {\n                          s2 = [];\n                          s3 = peg$parseWS();\n                          while (s3 !== peg$FAILED) {\n                            s2.push(s3);\n                            s3 = peg$parseWS();\n                          }\n                          if (s2 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 40) {\n                              s3 = peg$c34;\n                              peg$currPos++;\n                            } else {\n                              s3 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                            }\n                            if (s3 !== peg$FAILED) {\n                              s4 = [];\n                              s5 = peg$parseWS();\n                              while (s5 !== peg$FAILED) {\n                                s4.push(s5);\n                                s5 = peg$parseWS();\n                              }\n                              if (s4 !== peg$FAILED) {\n                                s5 = peg$parseExpression();\n                                if (s5 !== peg$FAILED) {\n                                  s6 = [];\n                                  s7 = peg$parseWS();\n                                  while (s7 !== peg$FAILED) {\n                                    s6.push(s7);\n                                    s7 = peg$parseWS();\n                                  }\n                                  if (s6 !== peg$FAILED) {\n                                    if (input.charCodeAt(peg$currPos) === 44) {\n                                      s7 = peg$c306;\n                                      peg$currPos++;\n                                    } else {\n                                      s7 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                                    }\n                                    if (s7 !== peg$FAILED) {\n                                      s8 = [];\n                                      s9 = peg$parseWS();\n                                      while (s9 !== peg$FAILED) {\n                                        s8.push(s9);\n                                        s9 = peg$parseWS();\n                                      }\n                                      if (s8 !== peg$FAILED) {\n                                        s9 = peg$parseExpression();\n                                        if (s9 !== peg$FAILED) {\n                                          s10 = [];\n                                          s11 = peg$parseWS();\n                                          while (s11 !== peg$FAILED) {\n                                            s10.push(s11);\n                                            s11 = peg$parseWS();\n                                          }\n                                          if (s10 !== peg$FAILED) {\n                                            if (input.charCodeAt(peg$currPos) === 44) {\n                                              s11 = peg$c306;\n                                              peg$currPos++;\n                                            } else {\n                                              s11 = peg$FAILED;\n                                              if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                                            }\n                                            if (s11 !== peg$FAILED) {\n                                              s12 = [];\n                                              s13 = peg$parseWS();\n                                              while (s13 !== peg$FAILED) {\n                                                s12.push(s13);\n                                                s13 = peg$parseWS();\n                                              }\n                                              if (s12 !== peg$FAILED) {\n                                                s13 = peg$parseExpression();\n                                                if (s13 !== peg$FAILED) {\n                                                  s14 = [];\n                                                  s15 = peg$parseWS();\n                                                  while (s15 !== peg$FAILED) {\n                                                    s14.push(s15);\n                                                    s15 = peg$parseWS();\n                                                  }\n                                                  if (s14 !== peg$FAILED) {\n                                                    if (input.charCodeAt(peg$currPos) === 41) {\n                                                      s15 = peg$c40;\n                                                      peg$currPos++;\n                                                    } else {\n                                                      s15 = peg$FAILED;\n                                                      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                                                    }\n                                                    if (s15 !== peg$FAILED) {\n                                                      peg$savedPos = s0;\n                                                      s1 = peg$c498(s5, s9, s13);\n                                                      s0 = s1;\n                                                    } else {\n                                                      peg$currPos = s0;\n                                                      s0 = peg$FAILED;\n                                                    }\n                                                  } else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                  }\n                                                } else {\n                                                  peg$currPos = s0;\n                                                  s0 = peg$FAILED;\n                                                }\n                                              } else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                              }\n                                            } else {\n                                              peg$currPos = s0;\n                                              s0 = peg$FAILED;\n                                            }\n                                          } else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s0;\n                                          s0 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$currPos;\n                          if (input.substr(peg$currPos, 9) === peg$c499) {\n                            s1 = peg$c499;\n                            peg$currPos += 9;\n                          } else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c500); }\n                          }\n                          if (s1 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 9) === peg$c501) {\n                              s1 = peg$c501;\n                              peg$currPos += 9;\n                            } else {\n                              s1 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c502); }\n                            }\n                            if (s1 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 9) === peg$c503) {\n                                s1 = peg$c503;\n                                peg$currPos += 9;\n                              } else {\n                                s1 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c504); }\n                              }\n                            }\n                          }\n                          if (s1 !== peg$FAILED) {\n                            s2 = [];\n                            s3 = peg$parseWS();\n                            while (s3 !== peg$FAILED) {\n                              s2.push(s3);\n                              s3 = peg$parseWS();\n                            }\n                            if (s2 !== peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 40) {\n                                s3 = peg$c34;\n                                peg$currPos++;\n                              } else {\n                                s3 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                              }\n                              if (s3 !== peg$FAILED) {\n                                s4 = [];\n                                s5 = peg$parseWS();\n                                while (s5 !== peg$FAILED) {\n                                  s4.push(s5);\n                                  s5 = peg$parseWS();\n                                }\n                                if (s4 !== peg$FAILED) {\n                                  s5 = peg$parseExpression();\n                                  if (s5 !== peg$FAILED) {\n                                    s6 = [];\n                                    s7 = peg$parseWS();\n                                    while (s7 !== peg$FAILED) {\n                                      s6.push(s7);\n                                      s7 = peg$parseWS();\n                                    }\n                                    if (s6 !== peg$FAILED) {\n                                      if (input.charCodeAt(peg$currPos) === 41) {\n                                        s7 = peg$c40;\n                                        peg$currPos++;\n                                      } else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                                      }\n                                      if (s7 !== peg$FAILED) {\n                                        peg$savedPos = s0;\n                                        s1 = peg$c505(s5);\n                                        s0 = s1;\n                                      } else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$currPos;\n                            if (input.substr(peg$currPos, 7) === peg$c506) {\n                              s1 = peg$c506;\n                              peg$currPos += 7;\n                            } else {\n                              s1 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c507); }\n                            }\n                            if (s1 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 7) === peg$c508) {\n                                s1 = peg$c508;\n                                peg$currPos += 7;\n                              } else {\n                                s1 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c509); }\n                              }\n                              if (s1 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 7) === peg$c510) {\n                                  s1 = peg$c510;\n                                  peg$currPos += 7;\n                                } else {\n                                  s1 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c511); }\n                                }\n                              }\n                            }\n                            if (s1 !== peg$FAILED) {\n                              s2 = [];\n                              s3 = peg$parseWS();\n                              while (s3 !== peg$FAILED) {\n                                s2.push(s3);\n                                s3 = peg$parseWS();\n                              }\n                              if (s2 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 40) {\n                                  s3 = peg$c34;\n                                  peg$currPos++;\n                                } else {\n                                  s3 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                                }\n                                if (s3 !== peg$FAILED) {\n                                  s4 = [];\n                                  s5 = peg$parseWS();\n                                  while (s5 !== peg$FAILED) {\n                                    s4.push(s5);\n                                    s5 = peg$parseWS();\n                                  }\n                                  if (s4 !== peg$FAILED) {\n                                    s5 = peg$parseExpression();\n                                    if (s5 !== peg$FAILED) {\n                                      s6 = [];\n                                      s7 = peg$parseWS();\n                                      while (s7 !== peg$FAILED) {\n                                        s6.push(s7);\n                                        s7 = peg$parseWS();\n                                      }\n                                      if (s6 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 41) {\n                                          s7 = peg$c40;\n                                          peg$currPos++;\n                                        } else {\n                                          s7 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                                        }\n                                        if (s7 !== peg$FAILED) {\n                                          peg$savedPos = s0;\n                                          s1 = peg$c512(s5);\n                                          s0 = s1;\n                                        } else {\n                                          peg$currPos = s0;\n                                          s0 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$currPos;\n                              if (input.substr(peg$currPos, 8) === peg$c513) {\n                                s1 = peg$c513;\n                                peg$currPos += 8;\n                              } else {\n                                s1 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c514); }\n                              }\n                              if (s1 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 8) === peg$c515) {\n                                  s1 = peg$c515;\n                                  peg$currPos += 8;\n                                } else {\n                                  s1 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c516); }\n                                }\n                              }\n                              if (s1 !== peg$FAILED) {\n                                s2 = [];\n                                s3 = peg$parseWS();\n                                while (s3 !== peg$FAILED) {\n                                  s2.push(s3);\n                                  s3 = peg$parseWS();\n                                }\n                                if (s2 !== peg$FAILED) {\n                                  if (input.charCodeAt(peg$currPos) === 40) {\n                                    s3 = peg$c34;\n                                    peg$currPos++;\n                                  } else {\n                                    s3 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                                  }\n                                  if (s3 !== peg$FAILED) {\n                                    s4 = [];\n                                    s5 = peg$parseWS();\n                                    while (s5 !== peg$FAILED) {\n                                      s4.push(s5);\n                                      s5 = peg$parseWS();\n                                    }\n                                    if (s4 !== peg$FAILED) {\n                                      s5 = peg$parseExpression();\n                                      if (s5 !== peg$FAILED) {\n                                        s6 = [];\n                                        s7 = peg$parseWS();\n                                        while (s7 !== peg$FAILED) {\n                                          s6.push(s7);\n                                          s7 = peg$parseWS();\n                                        }\n                                        if (s6 !== peg$FAILED) {\n                                          if (input.charCodeAt(peg$currPos) === 44) {\n                                            s7 = peg$c306;\n                                            peg$currPos++;\n                                          } else {\n                                            s7 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                                          }\n                                          if (s7 !== peg$FAILED) {\n                                            s8 = [];\n                                            s9 = peg$parseWS();\n                                            while (s9 !== peg$FAILED) {\n                                              s8.push(s9);\n                                              s9 = peg$parseWS();\n                                            }\n                                            if (s8 !== peg$FAILED) {\n                                              s9 = peg$parseExpression();\n                                              if (s9 !== peg$FAILED) {\n                                                s10 = [];\n                                                s11 = peg$parseWS();\n                                                while (s11 !== peg$FAILED) {\n                                                  s10.push(s11);\n                                                  s11 = peg$parseWS();\n                                                }\n                                                if (s10 !== peg$FAILED) {\n                                                  if (input.charCodeAt(peg$currPos) === 41) {\n                                                    s11 = peg$c40;\n                                                    peg$currPos++;\n                                                  } else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                                                  }\n                                                  if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c517(s5, s9);\n                                                    s0 = s1;\n                                                  } else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                  }\n                                                } else {\n                                                  peg$currPos = s0;\n                                                  s0 = peg$FAILED;\n                                                }\n                                              } else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                              }\n                                            } else {\n                                              peg$currPos = s0;\n                                              s0 = peg$FAILED;\n                                            }\n                                          } else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s0;\n                                          s0 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$currPos;\n                                if (input.substr(peg$currPos, 5) === peg$c518) {\n                                  s1 = peg$c518;\n                                  peg$currPos += 5;\n                                } else {\n                                  s1 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c519); }\n                                }\n                                if (s1 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 5) === peg$c520) {\n                                    s1 = peg$c520;\n                                    peg$currPos += 5;\n                                  } else {\n                                    s1 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c521); }\n                                  }\n                                  if (s1 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 5) === peg$c522) {\n                                      s1 = peg$c522;\n                                      peg$currPos += 5;\n                                    } else {\n                                      s1 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c523); }\n                                    }\n                                    if (s1 === peg$FAILED) {\n                                      if (input.substr(peg$currPos, 5) === peg$c524) {\n                                        s1 = peg$c524;\n                                        peg$currPos += 5;\n                                      } else {\n                                        s1 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c525); }\n                                      }\n                                      if (s1 === peg$FAILED) {\n                                        if (input.substr(peg$currPos, 5) === peg$c526) {\n                                          s1 = peg$c526;\n                                          peg$currPos += 5;\n                                        } else {\n                                          s1 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c527); }\n                                        }\n                                        if (s1 === peg$FAILED) {\n                                          if (input.substr(peg$currPos, 5) === peg$c528) {\n                                            s1 = peg$c528;\n                                            peg$currPos += 5;\n                                          } else {\n                                            s1 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c529); }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                                if (s1 !== peg$FAILED) {\n                                  s2 = [];\n                                  s3 = peg$parseWS();\n                                  while (s3 !== peg$FAILED) {\n                                    s2.push(s3);\n                                    s3 = peg$parseWS();\n                                  }\n                                  if (s2 !== peg$FAILED) {\n                                    if (input.charCodeAt(peg$currPos) === 40) {\n                                      s3 = peg$c34;\n                                      peg$currPos++;\n                                    } else {\n                                      s3 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                                    }\n                                    if (s3 !== peg$FAILED) {\n                                      s4 = [];\n                                      s5 = peg$parseWS();\n                                      while (s5 !== peg$FAILED) {\n                                        s4.push(s5);\n                                        s5 = peg$parseWS();\n                                      }\n                                      if (s4 !== peg$FAILED) {\n                                        s5 = peg$parseExpression();\n                                        if (s5 !== peg$FAILED) {\n                                          s6 = [];\n                                          s7 = peg$parseWS();\n                                          while (s7 !== peg$FAILED) {\n                                            s6.push(s7);\n                                            s7 = peg$parseWS();\n                                          }\n                                          if (s6 !== peg$FAILED) {\n                                            if (input.charCodeAt(peg$currPos) === 41) {\n                                              s7 = peg$c40;\n                                              peg$currPos++;\n                                            } else {\n                                              s7 = peg$FAILED;\n                                              if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                                            }\n                                            if (s7 !== peg$FAILED) {\n                                              peg$savedPos = s0;\n                                              s1 = peg$c530(s5);\n                                              s0 = s1;\n                                            } else {\n                                              peg$currPos = s0;\n                                              s0 = peg$FAILED;\n                                            }\n                                          } else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s0;\n                                          s0 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$currPos;\n                                  if (input.substr(peg$currPos, 7) === peg$c531) {\n                                    s1 = peg$c531;\n                                    peg$currPos += 7;\n                                  } else {\n                                    s1 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c532); }\n                                  }\n                                  if (s1 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 7) === peg$c533) {\n                                      s1 = peg$c533;\n                                      peg$currPos += 7;\n                                    } else {\n                                      s1 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c534); }\n                                    }\n                                  }\n                                  if (s1 !== peg$FAILED) {\n                                    s2 = [];\n                                    if (peg$c535.test(input.charAt(peg$currPos))) {\n                                      s3 = input.charAt(peg$currPos);\n                                      peg$currPos++;\n                                    } else {\n                                      s3 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c536); }\n                                    }\n                                    if (s3 !== peg$FAILED) {\n                                      while (s3 !== peg$FAILED) {\n                                        s2.push(s3);\n                                        if (peg$c535.test(input.charAt(peg$currPos))) {\n                                          s3 = input.charAt(peg$currPos);\n                                          peg$currPos++;\n                                        } else {\n                                          s3 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c536); }\n                                        }\n                                      }\n                                    } else {\n                                      s2 = peg$FAILED;\n                                    }\n                                    if (s2 !== peg$FAILED) {\n                                      s3 = [];\n                                      s4 = peg$parseWS();\n                                      while (s4 !== peg$FAILED) {\n                                        s3.push(s4);\n                                        s4 = peg$parseWS();\n                                      }\n                                      if (s3 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 40) {\n                                          s4 = peg$c34;\n                                          peg$currPos++;\n                                        } else {\n                                          s4 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                                        }\n                                        if (s4 !== peg$FAILED) {\n                                          s5 = [];\n                                          s6 = peg$currPos;\n                                          s7 = [];\n                                          s8 = peg$parseWS();\n                                          while (s8 !== peg$FAILED) {\n                                            s7.push(s8);\n                                            s8 = peg$parseWS();\n                                          }\n                                          if (s7 !== peg$FAILED) {\n                                            s8 = peg$parseExpression();\n                                            if (s8 !== peg$FAILED) {\n                                              if (input.charCodeAt(peg$currPos) === 44) {\n                                                s9 = peg$c306;\n                                                peg$currPos++;\n                                              } else {\n                                                s9 = peg$FAILED;\n                                                if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                                              }\n                                              if (s9 !== peg$FAILED) {\n                                                s7 = [s7, s8, s9];\n                                                s6 = s7;\n                                              } else {\n                                                peg$currPos = s6;\n                                                s6 = peg$FAILED;\n                                              }\n                                            } else {\n                                              peg$currPos = s6;\n                                              s6 = peg$FAILED;\n                                            }\n                                          } else {\n                                            peg$currPos = s6;\n                                            s6 = peg$FAILED;\n                                          }\n                                          while (s6 !== peg$FAILED) {\n                                            s5.push(s6);\n                                            s6 = peg$currPos;\n                                            s7 = [];\n                                            s8 = peg$parseWS();\n                                            while (s8 !== peg$FAILED) {\n                                              s7.push(s8);\n                                              s8 = peg$parseWS();\n                                            }\n                                            if (s7 !== peg$FAILED) {\n                                              s8 = peg$parseExpression();\n                                              if (s8 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 44) {\n                                                  s9 = peg$c306;\n                                                  peg$currPos++;\n                                                } else {\n                                                  s9 = peg$FAILED;\n                                                  if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                                                }\n                                                if (s9 !== peg$FAILED) {\n                                                  s7 = [s7, s8, s9];\n                                                  s6 = s7;\n                                                } else {\n                                                  peg$currPos = s6;\n                                                  s6 = peg$FAILED;\n                                                }\n                                              } else {\n                                                peg$currPos = s6;\n                                                s6 = peg$FAILED;\n                                              }\n                                            } else {\n                                              peg$currPos = s6;\n                                              s6 = peg$FAILED;\n                                            }\n                                          }\n                                          if (s5 !== peg$FAILED) {\n                                            s6 = [];\n                                            s7 = peg$parseWS();\n                                            while (s7 !== peg$FAILED) {\n                                              s6.push(s7);\n                                              s7 = peg$parseWS();\n                                            }\n                                            if (s6 !== peg$FAILED) {\n                                              s7 = peg$parseExpression();\n                                              if (s7 !== peg$FAILED) {\n                                                s8 = [];\n                                                s9 = peg$parseWS();\n                                                while (s9 !== peg$FAILED) {\n                                                  s8.push(s9);\n                                                  s9 = peg$parseWS();\n                                                }\n                                                if (s8 !== peg$FAILED) {\n                                                  if (input.charCodeAt(peg$currPos) === 41) {\n                                                    s9 = peg$c40;\n                                                    peg$currPos++;\n                                                  } else {\n                                                    s9 = peg$FAILED;\n                                                    if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                                                  }\n                                                  if (s9 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c537(s2, s5, s7);\n                                                    s0 = s1;\n                                                  } else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                  }\n                                                } else {\n                                                  peg$currPos = s0;\n                                                  s0 = peg$FAILED;\n                                                }\n                                              } else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                              }\n                                            } else {\n                                              peg$currPos = s0;\n                                              s0 = peg$FAILED;\n                                            }\n                                          } else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s0;\n                                          s0 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                  }\n                                  if (s0 === peg$FAILED) {\n                                    s0 = peg$parseRegexExpression();\n                                    if (s0 === peg$FAILED) {\n                                      s0 = peg$parseExistsFunc();\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$parseNotExistsFunc();\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c448); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseRegexExpression() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c539) {\n        s1 = peg$c539;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c540); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c541) {\n          s1 = peg$c541;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c542); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s3 = peg$c34;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseExpression();\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s7 = peg$c306;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = [];\n                    s9 = peg$parseWS();\n                    while (s9 !== peg$FAILED) {\n                      s8.push(s9);\n                      s9 = peg$parseWS();\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = peg$parseExpression();\n                      if (s9 !== peg$FAILED) {\n                        s10 = [];\n                        s11 = peg$parseWS();\n                        while (s11 !== peg$FAILED) {\n                          s10.push(s11);\n                          s11 = peg$parseWS();\n                        }\n                        if (s10 !== peg$FAILED) {\n                          s11 = peg$currPos;\n                          if (input.charCodeAt(peg$currPos) === 44) {\n                            s12 = peg$c306;\n                            peg$currPos++;\n                          } else {\n                            s12 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                          }\n                          if (s12 !== peg$FAILED) {\n                            s13 = [];\n                            s14 = peg$parseWS();\n                            while (s14 !== peg$FAILED) {\n                              s13.push(s14);\n                              s14 = peg$parseWS();\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parseExpression();\n                              if (s14 !== peg$FAILED) {\n                                s12 = [s12, s13, s14];\n                                s11 = s12;\n                              } else {\n                                peg$currPos = s11;\n                                s11 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s11;\n                              s11 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s11;\n                            s11 = peg$FAILED;\n                          }\n                          if (s11 === peg$FAILED) {\n                            s11 = null;\n                          }\n                          if (s11 !== peg$FAILED) {\n                            s12 = [];\n                            s13 = peg$parseWS();\n                            while (s13 !== peg$FAILED) {\n                              s12.push(s13);\n                              s13 = peg$parseWS();\n                            }\n                            if (s12 !== peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 41) {\n                                s13 = peg$c40;\n                                peg$currPos++;\n                              } else {\n                                s13 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                              }\n                              if (s13 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c543(s5, s9, s11);\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c538); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseExistsFunc() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c545) {\n        s1 = peg$c545;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c546); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c547) {\n          s1 = peg$c547;\n          peg$currPos += 6;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c548); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseGroupGraphPattern();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c549(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c544); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseNotExistsFunc() {\n      var s0, s1, s2, s3, s4, s5;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c551) {\n        s1 = peg$c551;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c552); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3) === peg$c553) {\n          s1 = peg$c553;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c554); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c545) {\n            s3 = peg$c545;\n            peg$currPos += 6;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c546); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.substr(peg$currPos, 6) === peg$c547) {\n              s3 = peg$c547;\n              peg$currPos += 6;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c548); }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseGroupGraphPattern();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c555(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c550); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseAggregate() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c557) {\n        s1 = peg$c557;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c558); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c559) {\n          s1 = peg$c559;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c560); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s3 = peg$c34;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parseWS();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parseWS();\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 8) === peg$c26) {\n                s5 = peg$c26;\n                peg$currPos += 8;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c27); }\n              }\n              if (s5 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c28) {\n                  s5 = peg$c28;\n                  peg$currPos += 8;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c29); }\n                }\n              }\n              if (s5 === peg$FAILED) {\n                s5 = null;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                s7 = peg$parseWS();\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  s7 = peg$parseWS();\n                }\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 42) {\n                    s7 = peg$c42;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c43); }\n                  }\n                  if (s7 === peg$FAILED) {\n                    s7 = peg$parseExpression();\n                  }\n                  if (s7 !== peg$FAILED) {\n                    s8 = [];\n                    s9 = peg$parseWS();\n                    while (s9 !== peg$FAILED) {\n                      s8.push(s9);\n                      s9 = peg$parseWS();\n                    }\n                    if (s8 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 41) {\n                        s9 = peg$c40;\n                        peg$currPos++;\n                      } else {\n                        s9 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s10 = [];\n                        s11 = peg$parseWS();\n                        while (s11 !== peg$FAILED) {\n                          s10.push(s11);\n                          s11 = peg$parseWS();\n                        }\n                        if (s10 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c561(s5, s7);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 12) === peg$c562) {\n          s1 = peg$c562;\n          peg$currPos += 12;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c563); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 12) === peg$c564) {\n            s1 = peg$c564;\n            peg$currPos += 12;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c565); }\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseWS();\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseWS();\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 40) {\n              s3 = peg$c34;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c35); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              s5 = peg$parseWS();\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parseWS();\n              }\n              if (s4 !== peg$FAILED) {\n                if (input.substr(peg$currPos, 8) === peg$c26) {\n                  s5 = peg$c26;\n                  peg$currPos += 8;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c27); }\n                }\n                if (s5 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 8) === peg$c28) {\n                    s5 = peg$c28;\n                    peg$currPos += 8;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c29); }\n                  }\n                }\n                if (s5 === peg$FAILED) {\n                  s5 = null;\n                }\n                if (s5 !== peg$FAILED) {\n                  s6 = [];\n                  s7 = peg$parseWS();\n                  while (s7 !== peg$FAILED) {\n                    s6.push(s7);\n                    s7 = peg$parseWS();\n                  }\n                  if (s6 !== peg$FAILED) {\n                    s7 = peg$parseExpression();\n                    if (s7 !== peg$FAILED) {\n                      s8 = peg$currPos;\n                      if (input.charCodeAt(peg$currPos) === 59) {\n                        s9 = peg$c152;\n                        peg$currPos++;\n                      } else {\n                        s9 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c153); }\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s10 = [];\n                        s11 = peg$parseWS();\n                        while (s11 !== peg$FAILED) {\n                          s10.push(s11);\n                          s11 = peg$parseWS();\n                        }\n                        if (s10 !== peg$FAILED) {\n                          if (input.substr(peg$currPos, 9) === peg$c566) {\n                            s11 = peg$c566;\n                            peg$currPos += 9;\n                          } else {\n                            s11 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c567); }\n                          }\n                          if (s11 !== peg$FAILED) {\n                            s12 = [];\n                            s13 = peg$parseWS();\n                            while (s13 !== peg$FAILED) {\n                              s12.push(s13);\n                              s13 = peg$parseWS();\n                            }\n                            if (s12 !== peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 61) {\n                                s13 = peg$c401;\n                                peg$currPos++;\n                              } else {\n                                s13 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c402); }\n                              }\n                              if (s13 !== peg$FAILED) {\n                                s14 = [];\n                                s15 = peg$parseWS();\n                                while (s15 !== peg$FAILED) {\n                                  s14.push(s15);\n                                  s15 = peg$parseWS();\n                                }\n                                if (s14 !== peg$FAILED) {\n                                  s15 = peg$parseString();\n                                  if (s15 !== peg$FAILED) {\n                                    s16 = [];\n                                    s17 = peg$parseWS();\n                                    while (s17 !== peg$FAILED) {\n                                      s16.push(s17);\n                                      s17 = peg$parseWS();\n                                    }\n                                    if (s16 !== peg$FAILED) {\n                                      s9 = [s9, s10, s11, s12, s13, s14, s15, s16];\n                                      s8 = s9;\n                                    } else {\n                                      peg$currPos = s8;\n                                      s8 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s8;\n                                    s8 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s8;\n                                  s8 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s8;\n                                s8 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s8;\n                              s8 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s8;\n                            s8 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s8;\n                          s8 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                      if (s8 === peg$FAILED) {\n                        s8 = null;\n                      }\n                      if (s8 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 41) {\n                          s9 = peg$c40;\n                          peg$currPos++;\n                        } else {\n                          s9 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                        }\n                        if (s9 !== peg$FAILED) {\n                          s10 = [];\n                          s11 = peg$parseWS();\n                          while (s11 !== peg$FAILED) {\n                            s10.push(s11);\n                            s11 = peg$parseWS();\n                          }\n                          if (s10 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c568(s5, s7, s8);\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 3) === peg$c569) {\n            s1 = peg$c569;\n            peg$currPos += 3;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c570); }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c571) {\n              s1 = peg$c571;\n              peg$currPos += 3;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c572); }\n            }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parseWS();\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n              s3 = peg$parseWS();\n            }\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 40) {\n                s3 = peg$c34;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c35); }\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = [];\n                s5 = peg$parseWS();\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  s5 = peg$parseWS();\n                }\n                if (s4 !== peg$FAILED) {\n                  if (input.substr(peg$currPos, 8) === peg$c26) {\n                    s5 = peg$c26;\n                    peg$currPos += 8;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c27); }\n                  }\n                  if (s5 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 8) === peg$c28) {\n                      s5 = peg$c28;\n                      peg$currPos += 8;\n                    } else {\n                      s5 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c29); }\n                    }\n                  }\n                  if (s5 === peg$FAILED) {\n                    s5 = null;\n                  }\n                  if (s5 !== peg$FAILED) {\n                    s6 = [];\n                    s7 = peg$parseWS();\n                    while (s7 !== peg$FAILED) {\n                      s6.push(s7);\n                      s7 = peg$parseWS();\n                    }\n                    if (s6 !== peg$FAILED) {\n                      s7 = peg$parseExpression();\n                      if (s7 !== peg$FAILED) {\n                        s8 = [];\n                        s9 = peg$parseWS();\n                        while (s9 !== peg$FAILED) {\n                          s8.push(s9);\n                          s9 = peg$parseWS();\n                        }\n                        if (s8 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 41) {\n                            s9 = peg$c40;\n                            peg$currPos++;\n                          } else {\n                            s9 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                          }\n                          if (s9 !== peg$FAILED) {\n                            s10 = [];\n                            s11 = peg$parseWS();\n                            while (s11 !== peg$FAILED) {\n                              s10.push(s11);\n                              s11 = peg$parseWS();\n                            }\n                            if (s10 !== peg$FAILED) {\n                              peg$savedPos = s0;\n                              s1 = peg$c573(s5, s7);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 3) === peg$c574) {\n              s1 = peg$c574;\n              peg$currPos += 3;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c575); }\n            }\n            if (s1 === peg$FAILED) {\n              if (input.substr(peg$currPos, 3) === peg$c576) {\n                s1 = peg$c576;\n                peg$currPos += 3;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c577); }\n              }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = [];\n              s3 = peg$parseWS();\n              while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parseWS();\n              }\n              if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 40) {\n                  s3 = peg$c34;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                }\n                if (s3 !== peg$FAILED) {\n                  s4 = [];\n                  s5 = peg$parseWS();\n                  while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    s5 = peg$parseWS();\n                  }\n                  if (s4 !== peg$FAILED) {\n                    if (input.substr(peg$currPos, 8) === peg$c26) {\n                      s5 = peg$c26;\n                      peg$currPos += 8;\n                    } else {\n                      s5 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n                    }\n                    if (s5 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 8) === peg$c28) {\n                        s5 = peg$c28;\n                        peg$currPos += 8;\n                      } else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n                      }\n                    }\n                    if (s5 === peg$FAILED) {\n                      s5 = null;\n                    }\n                    if (s5 !== peg$FAILED) {\n                      s6 = [];\n                      s7 = peg$parseWS();\n                      while (s7 !== peg$FAILED) {\n                        s6.push(s7);\n                        s7 = peg$parseWS();\n                      }\n                      if (s6 !== peg$FAILED) {\n                        s7 = peg$parseExpression();\n                        if (s7 !== peg$FAILED) {\n                          s8 = [];\n                          s9 = peg$parseWS();\n                          while (s9 !== peg$FAILED) {\n                            s8.push(s9);\n                            s9 = peg$parseWS();\n                          }\n                          if (s8 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 41) {\n                              s9 = peg$c40;\n                              peg$currPos++;\n                            } else {\n                              s9 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                            }\n                            if (s9 !== peg$FAILED) {\n                              s10 = [];\n                              s11 = peg$parseWS();\n                              while (s11 !== peg$FAILED) {\n                                s10.push(s11);\n                                s11 = peg$parseWS();\n                              }\n                              if (s10 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c578(s5, s7);\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 3) === peg$c579) {\n                s1 = peg$c579;\n                peg$currPos += 3;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c580); }\n              }\n              if (s1 === peg$FAILED) {\n                if (input.substr(peg$currPos, 3) === peg$c581) {\n                  s1 = peg$c581;\n                  peg$currPos += 3;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c582); }\n                }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = [];\n                s3 = peg$parseWS();\n                while (s3 !== peg$FAILED) {\n                  s2.push(s3);\n                  s3 = peg$parseWS();\n                }\n                if (s2 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 40) {\n                    s3 = peg$c34;\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = [];\n                    s5 = peg$parseWS();\n                    while (s5 !== peg$FAILED) {\n                      s4.push(s5);\n                      s5 = peg$parseWS();\n                    }\n                    if (s4 !== peg$FAILED) {\n                      if (input.substr(peg$currPos, 8) === peg$c26) {\n                        s5 = peg$c26;\n                        peg$currPos += 8;\n                      } else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c27); }\n                      }\n                      if (s5 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c28) {\n                          s5 = peg$c28;\n                          peg$currPos += 8;\n                        } else {\n                          s5 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n                        }\n                      }\n                      if (s5 === peg$FAILED) {\n                        s5 = null;\n                      }\n                      if (s5 !== peg$FAILED) {\n                        s6 = [];\n                        s7 = peg$parseWS();\n                        while (s7 !== peg$FAILED) {\n                          s6.push(s7);\n                          s7 = peg$parseWS();\n                        }\n                        if (s6 !== peg$FAILED) {\n                          s7 = peg$parseExpression();\n                          if (s7 !== peg$FAILED) {\n                            s8 = [];\n                            s9 = peg$parseWS();\n                            while (s9 !== peg$FAILED) {\n                              s8.push(s9);\n                              s9 = peg$parseWS();\n                            }\n                            if (s8 !== peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 41) {\n                                s9 = peg$c40;\n                                peg$currPos++;\n                              } else {\n                                s9 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                              }\n                              if (s9 !== peg$FAILED) {\n                                s10 = [];\n                                s11 = peg$parseWS();\n                                while (s11 !== peg$FAILED) {\n                                  s10.push(s11);\n                                  s11 = peg$parseWS();\n                                }\n                                if (s10 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c583(s5, s7);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 3) === peg$c584) {\n                  s1 = peg$c584;\n                  peg$currPos += 3;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c585); }\n                }\n                if (s1 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 3) === peg$c586) {\n                    s1 = peg$c586;\n                    peg$currPos += 3;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c587); }\n                  }\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = [];\n                  s3 = peg$parseWS();\n                  while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parseWS();\n                  }\n                  if (s2 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 40) {\n                      s3 = peg$c34;\n                      peg$currPos++;\n                    } else {\n                      s3 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                    }\n                    if (s3 !== peg$FAILED) {\n                      s4 = [];\n                      s5 = peg$parseWS();\n                      while (s5 !== peg$FAILED) {\n                        s4.push(s5);\n                        s5 = peg$parseWS();\n                      }\n                      if (s4 !== peg$FAILED) {\n                        if (input.substr(peg$currPos, 8) === peg$c26) {\n                          s5 = peg$c26;\n                          peg$currPos += 8;\n                        } else {\n                          s5 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c27); }\n                        }\n                        if (s5 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 8) === peg$c28) {\n                            s5 = peg$c28;\n                            peg$currPos += 8;\n                          } else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c29); }\n                          }\n                        }\n                        if (s5 === peg$FAILED) {\n                          s5 = null;\n                        }\n                        if (s5 !== peg$FAILED) {\n                          s6 = [];\n                          s7 = peg$parseWS();\n                          while (s7 !== peg$FAILED) {\n                            s6.push(s7);\n                            s7 = peg$parseWS();\n                          }\n                          if (s6 !== peg$FAILED) {\n                            s7 = peg$parseExpression();\n                            if (s7 !== peg$FAILED) {\n                              s8 = [];\n                              s9 = peg$parseWS();\n                              while (s9 !== peg$FAILED) {\n                                s8.push(s9);\n                                s9 = peg$parseWS();\n                              }\n                              if (s8 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 41) {\n                                  s9 = peg$c40;\n                                  peg$currPos++;\n                                } else {\n                                  s9 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                                }\n                                if (s9 !== peg$FAILED) {\n                                  s10 = [];\n                                  s11 = peg$parseWS();\n                                  while (s11 !== peg$FAILED) {\n                                    s10.push(s11);\n                                    s11 = peg$parseWS();\n                                  }\n                                  if (s10 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c588(s5, s7);\n                                    s0 = s1;\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c556); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseIRIrefOrFunction() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseIRIref();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseArgList();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c590(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c589); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseRDFLiteral() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseString();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseLANGTAG();\n        if (s2 === peg$FAILED) {\n          s2 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c592) {\n            s3 = peg$c592;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c593); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseIRIref();\n            if (s4 !== peg$FAILED) {\n              s3 = [s3, s4];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c594(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c591); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseNumericLiteral() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseNumericLiteralUnsigned();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseNumericLiteralPositive();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseNumericLiteralNegative();\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c595); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseNumericLiteralUnsigned() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseDOUBLE();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseDECIMAL();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseINTEGER();\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c596); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseNumericLiteralPositive() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseDOUBLE_POSITIVE();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseDECIMAL_POSITIVE();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseINTEGER_POSITIVE();\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c597); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseNumericLiteralNegative() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parseDOUBLE_NEGATIVE();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseDECIMAL_NEGATIVE();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseINTEGER_NEGATIVE();\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c598); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseBooleanLiteral() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c600) {\n        s1 = peg$c600;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c601); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c602) {\n          s1 = peg$c602;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c603); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c604();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 5) === peg$c605) {\n          s1 = peg$c605;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c606); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 5) === peg$c607) {\n            s1 = peg$c607;\n            peg$currPos += 5;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c608); }\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c609();\n        }\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c599); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseString() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseSTRING_LITERAL_LONG1();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c611(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseSTRING_LITERAL_LONG2();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c611(s1);\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseSTRING_LITERAL1();\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c611(s1);\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseSTRING_LITERAL2();\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c611(s1);\n            }\n            s0 = s1;\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c610); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseIRIref() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseIRI_REF();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c613(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsePrefixedName();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c614(s1);\n        }\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c612); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePrefixedName() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsePNAME_LN();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c616(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsePNAME_NS();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c617(s1);\n        }\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c615); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseBlankNode() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseBLANK_NODE_LABEL();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c619(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseANON();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c620();\n        }\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c618); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseIRI_REF() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 60) {\n        s1 = peg$c405;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c406); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c622.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c623); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c622.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c623); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s3 = peg$c407;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c408); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c624(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c621); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePNAME_NS() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsePN_PREFIX();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s2 = peg$c626;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c627); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c614(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c625); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePNAME_LN() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsePNAME_NS();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsePN_LOCAL();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c629(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c628); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseBLANK_NODE_LABEL() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c631) {\n        s1 = peg$c631;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c632); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsePN_LOCAL();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c633(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c630); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseVAR1() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 63) {\n        s1 = peg$c358;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c359); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseVARNAME();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c635(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c634); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseVAR2() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 36) {\n        s1 = peg$c637;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c638); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseVARNAME();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c635(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c636); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseLANGTAG() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 64) {\n        s1 = peg$c640;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c641); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c642.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c643); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c642.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c643); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s5 = peg$c432;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c433); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            if (peg$c644.test(input.charAt(peg$currPos))) {\n              s7 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c645); }\n            }\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                if (peg$c644.test(input.charAt(peg$currPos))) {\n                  s7 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c645); }\n                }\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c432;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c433); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              if (peg$c644.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c645); }\n              }\n              if (s7 !== peg$FAILED) {\n                while (s7 !== peg$FAILED) {\n                  s6.push(s7);\n                  if (peg$c644.test(input.charAt(peg$currPos))) {\n                    s7 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c645); }\n                  }\n                }\n              } else {\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c646(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c639); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseINTEGER() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c648.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c649); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c648.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c649); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c650(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c647); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDECIMAL() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c648.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c649); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c648.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c649); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s2 = peg$c243;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c244); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c648.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c649); }\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c648.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c649); }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c652(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s1 = peg$c243;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c244); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          if (peg$c648.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c649); }\n          }\n          if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n              if (peg$c648.test(input.charAt(peg$currPos))) {\n                s3 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c649); }\n              }\n            }\n          } else {\n            s2 = peg$FAILED;\n          }\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c653(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c651); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDOUBLE() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c648.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c649); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c648.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c649); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s2 = peg$c243;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c244); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c648.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c649); }\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c648.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c649); }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseEXPONENT();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c655(s1, s2, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s1 = peg$c243;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c244); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          if (peg$c648.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c649); }\n          }\n          if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n              if (peg$c648.test(input.charAt(peg$currPos))) {\n                s3 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c649); }\n              }\n            }\n          } else {\n            s2 = peg$FAILED;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseEXPONENT();\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c656(s1, s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = [];\n          if (peg$c648.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c649); }\n          }\n          if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n              s1.push(s2);\n              if (peg$c648.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c649); }\n              }\n            }\n          } else {\n            s1 = peg$FAILED;\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseEXPONENT();\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c657(s1, s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c654); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseINTEGER_POSITIVE() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s1 = peg$c360;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c361); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseINTEGER();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c659(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c658); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDECIMAL_POSITIVE() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s1 = peg$c360;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c361); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseDECIMAL();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c661(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c660); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDOUBLE_POSITIVE() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s1 = peg$c360;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c361); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseDOUBLE();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c661(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c662); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseINTEGER_NEGATIVE() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c432;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c433); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseINTEGER();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c664(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c663); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDECIMAL_NEGATIVE() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c432;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c433); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseDECIMAL();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c664(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c665); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDOUBLE_NEGATIVE() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c432;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c433); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseDOUBLE();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c664(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c666); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseEXPONENT() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (peg$c668.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c669); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (peg$c670.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c671); }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c648.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c649); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c648.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c649); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c672(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c667); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseSTRING_LITERAL1() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s1 = peg$c674;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c675); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c676.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c677); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$parseECHAR();\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c676.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c677); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$parseECHAR();\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s3 = peg$c674;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c675); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c678(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c673); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseSTRING_LITERAL2() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s1 = peg$c680;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c681); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c682.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c683); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$parseECHAR();\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c682.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c683); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$parseECHAR();\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s3 = peg$c680;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c681); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c678(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c679); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseSTRING_LITERAL_LONG1() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c685) {\n        s1 = peg$c685;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c686); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c687.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c688); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$parseECHAR();\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c687.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c688); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$parseECHAR();\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c685) {\n            s3 = peg$c685;\n            peg$currPos += 3;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c686); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c678(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c684); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseSTRING_LITERAL_LONG2() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 3) === peg$c690) {\n        s1 = peg$c690;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c691); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c692.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c693); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$parseECHAR();\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c692.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c693); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$parseECHAR();\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 3) === peg$c690) {\n            s3 = peg$c690;\n            peg$currPos += 3;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c691); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c678(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c689); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseECHAR() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c695;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c696); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (peg$c697.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c698); }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c694); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseNIL() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c34;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c40;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c41); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c700();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c699); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseWS() {\n      var s0, s1;\n\n      peg$silentFails++;\n      if (peg$c702.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c703); }\n      }\n      if (s0 === peg$FAILED) {\n        if (peg$c704.test(input.charAt(peg$currPos))) {\n          s0 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c705); }\n        }\n        if (s0 === peg$FAILED) {\n          if (peg$c706.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c707); }\n          }\n          if (s0 === peg$FAILED) {\n            if (peg$c708.test(input.charAt(peg$currPos))) {\n              s0 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c709); }\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseCOMMENT();\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c701); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseCOMMENT() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s1 = peg$c711;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c712); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c713.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c714); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c713.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c714); }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c710); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseANON() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c372;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c373); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseWS();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseWS();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s3 = peg$c374;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c375); }\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c715); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePN_CHARS_BASE() {\n      var s0, s1;\n\n      peg$silentFails++;\n      if (peg$c717.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c718); }\n      }\n      if (s0 === peg$FAILED) {\n        if (peg$c719.test(input.charAt(peg$currPos))) {\n          s0 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c720); }\n        }\n        if (s0 === peg$FAILED) {\n          if (peg$c721.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c722); }\n          }\n          if (s0 === peg$FAILED) {\n            if (peg$c723.test(input.charAt(peg$currPos))) {\n              s0 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c724); }\n            }\n            if (s0 === peg$FAILED) {\n              if (peg$c725.test(input.charAt(peg$currPos))) {\n                s0 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c726); }\n              }\n              if (s0 === peg$FAILED) {\n                if (peg$c727.test(input.charAt(peg$currPos))) {\n                  s0 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c728); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (peg$c729.test(input.charAt(peg$currPos))) {\n                    s0 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c730); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (peg$c731.test(input.charAt(peg$currPos))) {\n                      s0 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c732); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (peg$c733.test(input.charAt(peg$currPos))) {\n                        s0 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c734); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (peg$c735.test(input.charAt(peg$currPos))) {\n                          s0 = input.charAt(peg$currPos);\n                          peg$currPos++;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c736); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (peg$c737.test(input.charAt(peg$currPos))) {\n                            s0 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c738); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (peg$c739.test(input.charAt(peg$currPos))) {\n                              s0 = input.charAt(peg$currPos);\n                              peg$currPos++;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c740); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (peg$c741.test(input.charAt(peg$currPos))) {\n                                s0 = input.charAt(peg$currPos);\n                                peg$currPos++;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c742); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (peg$c743.test(input.charAt(peg$currPos))) {\n                                  s0 = input.charAt(peg$currPos);\n                                  peg$currPos++;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c744); }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c716); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePN_CHARS_U() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parsePN_CHARS_BASE();\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 95) {\n          s0 = peg$c746;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c747); }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c745); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseVARNAME() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsePN_CHARS_U();\n      if (s1 === peg$FAILED) {\n        if (peg$c648.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c649); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsePN_CHARS_U();\n        if (s3 === peg$FAILED) {\n          if (peg$c648.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c649); }\n          }\n          if (s3 === peg$FAILED) {\n            if (peg$c749.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c750); }\n            }\n            if (s3 === peg$FAILED) {\n              if (peg$c751.test(input.charAt(peg$currPos))) {\n                s3 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c752); }\n              }\n              if (s3 === peg$FAILED) {\n                if (peg$c753.test(input.charAt(peg$currPos))) {\n                  s3 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c754); }\n                }\n              }\n            }\n          }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsePN_CHARS_U();\n          if (s3 === peg$FAILED) {\n            if (peg$c648.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c649); }\n            }\n            if (s3 === peg$FAILED) {\n              if (peg$c749.test(input.charAt(peg$currPos))) {\n                s3 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c750); }\n              }\n              if (s3 === peg$FAILED) {\n                if (peg$c751.test(input.charAt(peg$currPos))) {\n                  s3 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c752); }\n                }\n                if (s3 === peg$FAILED) {\n                  if (peg$c753.test(input.charAt(peg$currPos))) {\n                    s3 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c754); }\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c755(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c748); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePN_CHARS() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parsePN_CHARS_U();\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s0 = peg$c432;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c433); }\n        }\n        if (s0 === peg$FAILED) {\n          if (peg$c648.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c649); }\n          }\n          if (s0 === peg$FAILED) {\n            if (peg$c749.test(input.charAt(peg$currPos))) {\n              s0 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c750); }\n            }\n            if (s0 === peg$FAILED) {\n              if (peg$c751.test(input.charAt(peg$currPos))) {\n                s0 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c752); }\n              }\n              if (s0 === peg$FAILED) {\n                if (peg$c753.test(input.charAt(peg$currPos))) {\n                  s0 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c754); }\n                }\n              }\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c756); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePN_PREFIX() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsePN_CHARS_BASE();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsePN_CHARS();\n        if (s3 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s3 = peg$c243;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c244); }\n          }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsePN_CHARS();\n          if (s3 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s3 = peg$c243;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c244); }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c758(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c757); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePN_LOCAL() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsePN_CHARS_U();\n      if (s1 === peg$FAILED) {\n        if (peg$c648.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c649); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s1 = peg$c626;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c627); }\n          }\n          if (s1 === peg$FAILED) {\n            s1 = peg$parsePLX();\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsePN_CHARS();\n        if (s3 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s3 = peg$c243;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c244); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 58) {\n              s3 = peg$c626;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c627); }\n            }\n            if (s3 === peg$FAILED) {\n              s3 = peg$parsePLX();\n            }\n          }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsePN_CHARS();\n          if (s3 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s3 = peg$c243;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c244); }\n            }\n            if (s3 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 58) {\n                s3 = peg$c626;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c627); }\n              }\n              if (s3 === peg$FAILED) {\n                s3 = peg$parsePLX();\n              }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c760(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c759); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePLX() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = peg$parsePERCENT();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsePN_LOCAL_ESC();\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c761); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePERCENT() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 37) {\n        s2 = peg$c763;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c764); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseHEX();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseHEX();\n          if (s4 !== peg$FAILED) {\n            s2 = [s2, s3, s4];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c765(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c762); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseHEX() {\n      var s0, s1;\n\n      peg$silentFails++;\n      if (peg$c648.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c649); }\n      }\n      if (s0 === peg$FAILED) {\n        if (peg$c767.test(input.charAt(peg$currPos))) {\n          s0 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c768); }\n        }\n        if (s0 === peg$FAILED) {\n          if (peg$c769.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c770); }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c766); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsePN_LOCAL_ESC() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c695;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c696); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 95) {\n          s2 = peg$c746;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c747); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 126) {\n            s2 = peg$c772;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c773); }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s2 = peg$c243;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c244); }\n            }\n            if (s2 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 45) {\n                s2 = peg$c432;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c433); }\n              }\n              if (s2 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 33) {\n                  s2 = peg$c363;\n                  peg$currPos++;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c364); }\n                }\n                if (s2 === peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 36) {\n                    s2 = peg$c637;\n                    peg$currPos++;\n                  } else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c638); }\n                  }\n                  if (s2 === peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 38) {\n                      s2 = peg$c774;\n                      peg$currPos++;\n                    } else {\n                      s2 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c775); }\n                    }\n                    if (s2 === peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 39) {\n                        s2 = peg$c674;\n                        peg$currPos++;\n                      } else {\n                        s2 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c675); }\n                      }\n                      if (s2 === peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 40) {\n                          s2 = peg$c34;\n                          peg$currPos++;\n                        } else {\n                          s2 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c35); }\n                        }\n                        if (s2 === peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 41) {\n                            s2 = peg$c40;\n                            peg$currPos++;\n                          } else {\n                            s2 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                          }\n                          if (s2 === peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 42) {\n                              s2 = peg$c42;\n                              peg$currPos++;\n                            } else {\n                              s2 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c43); }\n                            }\n                            if (s2 === peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 43) {\n                                s2 = peg$c360;\n                                peg$currPos++;\n                              } else {\n                                s2 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c361); }\n                              }\n                              if (s2 === peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 44) {\n                                  s2 = peg$c306;\n                                  peg$currPos++;\n                                } else {\n                                  s2 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c307); }\n                                }\n                                if (s2 === peg$FAILED) {\n                                  if (input.charCodeAt(peg$currPos) === 59) {\n                                    s2 = peg$c152;\n                                    peg$currPos++;\n                                  } else {\n                                    s2 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c153); }\n                                  }\n                                  if (s2 === peg$FAILED) {\n                                    if (input.charCodeAt(peg$currPos) === 58) {\n                                      s2 = peg$c626;\n                                      peg$currPos++;\n                                    } else {\n                                      s2 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c627); }\n                                    }\n                                    if (s2 === peg$FAILED) {\n                                      if (input.charCodeAt(peg$currPos) === 61) {\n                                        s2 = peg$c401;\n                                        peg$currPos++;\n                                      } else {\n                                        s2 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c402); }\n                                      }\n                                      if (s2 === peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 47) {\n                                          s2 = peg$c348;\n                                          peg$currPos++;\n                                        } else {\n                                          s2 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c349); }\n                                        }\n                                        if (s2 === peg$FAILED) {\n                                          if (input.charCodeAt(peg$currPos) === 63) {\n                                            s2 = peg$c358;\n                                            peg$currPos++;\n                                          } else {\n                                            s2 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c359); }\n                                          }\n                                          if (s2 === peg$FAILED) {\n                                            if (input.charCodeAt(peg$currPos) === 35) {\n                                              s2 = peg$c711;\n                                              peg$currPos++;\n                                            } else {\n                                              s2 = peg$FAILED;\n                                              if (peg$silentFails === 0) { peg$fail(peg$c712); }\n                                            }\n                                            if (s2 === peg$FAILED) {\n                                              if (input.charCodeAt(peg$currPos) === 64) {\n                                                s2 = peg$c640;\n                                                peg$currPos++;\n                                              } else {\n                                                s2 = peg$FAILED;\n                                                if (peg$silentFails === 0) { peg$fail(peg$c641); }\n                                              }\n                                              if (s2 === peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 37) {\n                                                  s2 = peg$c763;\n                                                  peg$currPos++;\n                                                } else {\n                                                  s2 = peg$FAILED;\n                                                  if (peg$silentFails === 0) { peg$fail(peg$c764); }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c776(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c771); }\n      }\n\n      return s0;\n    }\n\n\n        var flattenString = function(arrs) {\n    \tvar acum =\"\";\n    \tfor(var i=0; i< arrs.length; i++) {\n    \t  if(typeof(arrs[i])==='string') {\n    \t    acum = acum + arrs[i];\n    \t  } else {\n    \t    acum = acum + arrs[i].join('');\n    \t  }\n    \t}\n\n    \treturn acum;\n        }\n\n\n        var GlobalBlankNodeCounter = 0;\n\n        var prefixes = {};\n\n        var registerPrefix = function(prefix, uri) {\n    \tprefixes[prefix] = uri;\n        }\n\n        var registerDefaultPrefix = function(uri) {\n    \tprefixes[null] = uri;\n        }\n\n        var arrayToString = function(array) {\n    \tvar tmp = \"\";\n    \tif(array == null)\n    \t  return null;\n\n    \tfor(var i=0; i<array.length; i++) {\n    \t    tmp = tmp + array[i];\n    \t}\n\n    \treturn tmp.toUpperCase();\n        }\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n\n      throw peg$buildStructuredError(\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})()\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/parser.js\n// module id = 397\n// module chunks = 2","var _ = require('./utils');\nvar async = require('./utils');\n\n/**\n * A new query plan object\n * @param left\n * @param right\n * @param cost\n * @param identifier\n * @param allVars\n * @param joinVars\n * @constructor\n */\nvar QueryPlan = function(left, right, cost, identifier, allVars, joinVars) {\n\n    this.left =  left;\n    this.right = right;\n    this.cost = cost;\n    this.i = identifier;\n    this.vars = allVars;\n    this.join = joinVars;\n\n};\n\n/**\n * Functions to build and execute query plans for a particular query\n * using a dynamic programming join algorithm.\n */\nvar QueryPlanDPSize = {};\n\n/**\n * Finds variable in a BGP. Variables can be actual variables or blank nodes.\n * The variables are returned as an array and assigned as a property of the BGP object.\n * @param bgp\n * @returns Array with the found variables.\n */\nQueryPlanDPSize.variablesInBGP = function(bgp) {\n    // may be cached in the pattern\n    var variables = bgp.variables;\n    if(variables) {\n        return variables;\n    }\n\n    var components =  bgp.value || bgp;\n    variables  = [];\n    for(var comp in components) {\n        if(components[comp] && components[comp].token === \"var\") {\n            variables.push(components[comp].value);\n        } else if(components[comp] && components[comp].token === \"blank\") {\n            variables.push(\"blank:\"+components[comp].value);\n        }\n    }\n    bgp.variables = variables;\n\n    return variables;\n};\n\n/**\n * Checks if two plans are connected due to at least on common variable.\n * @param leftPlan\n * @param rightPlan\n * @returns {boolean}\n */\nQueryPlanDPSize.connected = function(leftPlan, rightPlan) {\n    var varsLeft =\"/\"+leftPlan.vars.join(\"/\")+\"/\";\n    for(var i=0; i<rightPlan.vars.length; i++) {\n        if(varsLeft.indexOf(\"/\"+rightPlan.vars[i]+\"/\") != -1) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\nvar intersection = function(arr1,arr2) {\n    var acc = {};\n    for(var i=0; i<arr1.lenght; i++) {\n        acc[arr1[i]] = 1;\n    }\n    for(i=0; i<arr2.length; i++) {\n        var val = acc[arr2[i]] || 0;\n        val++;\n        acc[arr2[i]] = val;\n    }\n    var intersect = [];\n    for(var p in acc) {\n        if(acc[p] == 2)\n        intersect.push(acc[p]);\n    }\n\n    return intersect;\n};\n\n/**\n * Computes the intersection for the bariables of two BGPs\n * @param bgpa\n * @param bgpb\n * @returns {*}\n */\nQueryPlanDPSize.variablesIntersectionBGP = function(bgpa, bgpb) {\n    return intersection(\n        QueryPlanDPSize.variablesInBGP(bgpa),\n        QueryPlanDPSize.variablesInBGP(bgpb)\n    );\n};\n\n/**\n * All BGPs sharing variables are grouped together.\n */\nQueryPlanDPSize.executeAndBGPsGroups = function(bgps) {\n    var groups = {};\n    var groupVars = {};\n    var groupId = 0;\n\n\n    // Returns true if the any of the passed vars are in the vars\n    // associated to the group.\n    var detectVarsInGroup = function(vars, groupVars) {\n\n        for(var j=0; j<vars.length; j++) {\n            var thisVar = \"/\"+vars[j]+\"/\";\n            if(groupVars.indexOf(thisVar) != -1) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    // Creates a new group merging the vars and the groups\n    var mergeGroups = function(bgp, toJoin, newGroups, newGroupVars) {\n        var acumGroups = [];\n        var acumId = \"\";\n        var acumVars = \"\";\n        for(var gid in toJoin) {\n            acumId = acumId+gid; // new group id\n            acumGroups = acumGroups.concat(groups[gid]);\n            acumVars = acumVars + groupVars[gid]; // @todo bug here? we were not adding...\n        }\n\n        acumVars = acumVars + vars.join(\"/\") + \"/\";\n        acumGroups.push(bgp);\n\n        newGroups[acumId] = acumGroups;\n        newGroupVars[acumId] = acumVars;\n    };\n\n    for(var i=0; i<bgps.length; i++) {\n        var bgp = bgps[i];\n        var newGroups = {};\n        var newGroupVars = {};\n\n        var vars = QueryPlanDPSize.variablesInBGP(bgp);\n        var toJoin = {};\n\n        for(var nextGroupId in groupVars) {\n            if(detectVarsInGroup(vars, groupVars[nextGroupId])) {\n                // we need to merge this group fo the next iteration\n                toJoin[nextGroupId] = true;\n            } else {\n                // this group does not need merge for the next iteration\n                newGroups[nextGroupId] = groups[nextGroupId];\n                newGroupVars[nextGroupId] = groupVars[nextGroupId];\n            }\n        }\n\n        if(_.size(toJoin) === 0) {\n            // we haven't found a single existing group sharing vars\n            // with the BGP. We need to create a new group only for this BGP.\n            newGroups['g'+groupId] = [bgp];\n            newGroupVars['g'+groupId] = \"/\"+(vars.join(\"/\"))+\"/\";\n            groupId++;\n        } else {\n            // We merge all the groups sharing vars with the BGP.\n            mergeGroups(bgp,toJoin, newGroups, newGroupVars);\n        }\n\n        groups = newGroups;\n        groupVars = newGroupVars;\n    }\n\n    return _.values(groups);\n};\n\n/**\n * Checks if there is an intersection between search plans.\n * @param leftPlan\n * @param rightPlan\n * @returns 0 or 1 if there's an intersection\n */\nQueryPlanDPSize.intersectionSize = function(leftPlan, rightPlan) {\n    var idsRight = rightPlan.i.split(\"_\");\n    for(var i=0; i<idsRight.length; i++) {\n        if(idsRight[i]==\"\")\n            continue;\n        if(leftPlan.i.indexOf('_'+idsRight[i]+'_') != -1) {\n            return 1; // we just need to know if this value is >0\n        }\n    }\n    return 0;\n};\n\n/**\n * Creates  a new join tree merging two query plans with shared variables.\n * @param left plan object\n * @param right plan object\n * @returns a new query plan object\n */\nQueryPlanDPSize.createJoinTree = function(leftPlan, rightPlan) {\n    var varsLeft =\"/\"+leftPlan.vars.join(\"/\")+\"/\";\n    var accumVars = leftPlan.vars.concat([]);\n\n    var join = [];\n\n    // Search for the join vars trying to find shared vars between\n    // the left plan and the right plan.\n    for(var i=0; i<rightPlan.vars.length; i++) {\n        if(varsLeft.indexOf(\"/\"+rightPlan.vars[i]+\"/\") != -1) {\n            if(rightPlan.vars[i].indexOf(\"_:\") == 0) {\n                join.push(\"blank:\"+rightPlan.vars[i]);\n            } else {\n                join.push(rightPlan.vars[i]);\n            }\n        } else {\n            accumVars.push(rightPlan.vars[i]);\n        }\n    }\n\n    // Creates a new identifier for the join tree using the union\n    // of both plans identifiers.\n    var rightIds = rightPlan.i.split(\"_\");\n    var leftIds = leftPlan.i.split(\"_\");\n    var distinct = {};\n    for(var i=0; i<rightIds.length; i++) {\n        if(rightIds[i] != \"\") {\n            distinct[rightIds[i]] = true;\n        }\n    }\n    for(var i=0; i<leftIds.length; i++) {\n        if(leftIds[i] != \"\") {\n            distinct[leftIds[i]] = true;\n        }\n    }\n    var ids = _.keys(distinct);\n\n    // Returns the new join tree\n    return {\n        left: leftPlan,\n        right: rightPlan,\n        cost: leftPlan.cost+rightPlan.cost,\n        i: \"_\"+(ids.sort().join(\"_\"))+\"_\",\n        vars: accumVars,\n        join: join\n    };\n};\n\n/**\n * Algorithm that chooses the best way to execute an execution plan in the query engine.\n * @param treeNode\n * @param dataset\n * @param queryEngine\n * @param env\n * @returns {*}\n */\nQueryPlanDPSize.executeBushyTree = function(queryPlan, dataset, queryEngine, env, callback) {\n    if(queryPlan.left == null ) {\n        QueryPlanDPSize.executeEmptyJoinBGP(queryPlan.right, dataset, queryEngine, env, callback);\n    } else if(queryPlan.right == null) {\n        QueryPlanDPSize.executeEmptyJoinBGP(queryPlan.left, dataset, queryEngine, env, callback);\n    } else {\n        QueryPlanDPSize.executeBushyTree(queryPlan.left, dataset, queryEngine, env, function(resultsLeft){\n\n            if(resultsLeft!=null) {\n                QueryPlanDPSize.executeBushyTree(queryPlan.right, dataset, queryEngine, env, function(resultsRight){\n                    if(resultsRight!=null) {\n                        callback(QueryPlanDPSize.joinBindings2(queryPlan.join, resultsLeft, resultsRight));\n                    } else {\n                        callback(null);\n                    }\n                });\n            } else {\n                callback(null);\n            }\n        });\n    }\n};\n\nQueryPlanDPSize.executeAndBGPsDPSize = function(allBgps, dataset, queryEngine, env, callback) {\n\n    var groups = QueryPlanDPSize.executeAndBGPsGroups(allBgps);\n    var groupResults = [];\n\n    async.eachSeries(groups,function(bgps,k) {\n        // @todo\n        // this lambda function should be moved to its named function\n\n        // Build bushy tree for this group\n        var costFactor = 1;\n        queryEngine.computeCosts(bgps,env,function(bgps) {\n            var bestPlans = {};\n            var plans = {};\n            var sizes = {};\n\n            var maxSize = 1;\n            var maxPlan = null;\n\n            var cache = {};\n\n            sizes['1'] = [];\n\n            // Building plans of size 1\n            for(var i=0; i<bgps.length; i++) {\n                var vars = [];\n\n                delete bgps[i]['variables'];\n                for(var comp in bgps[i]) {\n                    if(comp != '_cost') {\n                        if(bgps[i][comp].token === 'var') {\n                            vars.push(bgps[i][comp].value);\n                        } else if(bgps[i][comp].token === 'blank') {\n                            vars.push(bgps[i][comp].value);\n                        }\n                    }\n                }\n\n                plans[\"_\"+i+\"_\"] = {left: bgps[i], right:null, cost:bgps[i]._cost, i:('_'+i+'_'), vars:vars};\n                var plan = {left: bgps[i], right:null, cost:bgps[i]._cost, i:('_'+i+'_'), vars:vars};\n                bestPlans[\"_\"+i+\"_\"] = plan;\n                delete bgps[i]['_cost'];\n                cache[\"_\"+i+\"_\"] = true;\n                sizes['1'].push(\"_\"+i+\"_\");\n                if(maxPlan == null || maxPlan.cost>plan.cost) {\n                    maxPlan = plan;\n                }\n            }\n\n            // dynamic programming -> build plans of increasing size\n            for(var s=2; s<=bgps.length; s++) { // size\n                for(var sl=1; sl<s; sl++) { // size left plan\n                    var sr = s - sl; // size right plan\n                    var leftPlans = sizes[''+sl] || [];\n                    var rightPlans = sizes[''+sr] || [];\n                    for(var i=0; i<leftPlans.length; i++) {\n                        for(var j=0; j<rightPlans.length; j++) {\n                            if(leftPlans[i]===rightPlans[j])\n                                continue;\n                            var leftPlan = plans[leftPlans[i]];\n                            var rightPlan = plans[rightPlans[j]];\n\n                            // condition (1)\n                            if(QueryPlanDPSize.intersectionSize(leftPlan, rightPlan) == 0) {\n                                // condition (2)\n\n                                if(QueryPlanDPSize.connected(leftPlan,rightPlan)) {\n                                    maxSize = s;\n                                    var p1 = bestPlans[leftPlan.i];  //QueryPlanAsync.bestPlan(leftPlan, bestPlans);\n                                    var p2 = bestPlans[rightPlan.i]; //QueryPlanAsync.bestPlan(rightPlan, bestPlans);\n\n                                    var currPlan = QueryPlanDPSize.createJoinTree(p1,p2);\n                                    if(!cache[currPlan.i]) {\n                                        cache[currPlan.i] = true;\n\n                                        var costUnion = currPlan.cost+1;\n                                        if(bestPlans[currPlan.i] != null) {\n                                            costUnion = bestPlans[currPlan.i].cost;\n                                        }\n\n                                        var acum = sizes[s] || [];\n                                        acum.push(currPlan.i);\n                                        plans[currPlan.i] = currPlan;\n                                        sizes[s] = acum;\n\n                                        if(costUnion > currPlan.cost) {\n                                            if(maxSize === s) {\n                                                maxPlan = currPlan;\n                                            }\n                                            bestPlans[currPlan.i] = currPlan;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            groupResults.push(maxPlan);\n            k();\n        });\n    },function() {\n        // now execute the Bushy trees and perform\n        // cross products between groups\n        var acum = null;\n        async.eachSeries(groupResults, function(tree,k) {\n\n\n            QueryPlanDPSize.executeBushyTree(tree, dataset, queryEngine, env, function(result) {\n                if(result) {\n                    if(acum == null) {\n                        acum = result;\n                        k();\n                    } else {\n                        acum = QueryPlanDPSize.crossProductBindings(acum, result);\n                        k();\n                    }\n                } else {\n                    k(\"Error executing bushy tree\");\n                }\n\n            });\n        },function(err){\n            if(err) {\n                callback(null, err);\n            } else {\n                callback(acum);\n            }\n        });\n    });\n};\n\nQueryPlanDPSize.executeEmptyJoinBGP = function(bgp, dataset, queryEngine, queryEnv, callback) {\n    return QueryPlanDPSize.executeBGPDatasets(bgp, dataset, queryEngine, queryEnv, callback);\n};\n\n\nQueryPlanDPSize.executeBGPDatasets = function(bgp, dataset, queryEngine, queryEnv, callback) {\n    // avoid duplicate queries in the same graph\n    // merge of graphs is not guaranteed here.\n    var duplicates = {};\n\n    if(bgp.graph == null) {\n        //union through all default graph(s)\n        var acum = [];\n        async.eachSeries(dataset.implicit,\n            function(implicitGraph, k){\n                if(duplicates[implicitGraph.oid] == null) {\n                    duplicates[implicitGraph.oid] = true;\n                    bgp.graph = implicitGraph;//.oid\n                    queryEngine.rangeQuery(bgp, queryEnv, function(results){\n                        results = QueryPlanDPSize.buildBindingsFromRange(results, bgp);\n                        acum.push(results);\n                        k();\n                    });\n                } else {\n                    k();\n                }\n            }, function(){\n                var acumBindings = QueryPlanDPSize.unionManyBindings(acum);\n                callback(acumBindings);\n            });\n    } else if(bgp.graph.token === 'var') {\n        // union through all named datasets\n        var graphVar = bgp.graph.value;\n        var acum = [];\n\n        async.eachSeries(dataset.named,\n            function(graph, k){\n                if(duplicates[graph.oid] == null) {\n                    duplicates[graph.oid] = true;\n                    bgp.graph = graph;//.oid\n                    if(acum != null) {\n                        queryEngine.rangeQuery(bgp, queryEnv, function (results) {\n                            if (results != null) {\n                                results = QueryPlanDPSize.buildBindingsFromRange(results, bgp);\n                                // add the graph bound variable to the result\n                                for (var j = 0; j < results.length; j++) {\n                                    results[j][graphVar] = graph.oid;\n                                }\n                                acum.push(results);\n                            } else {\n                                acum = null;\n                            }\n                            k();\n                        });\n                    } else {\n                        k();\n                    }\n                } else {\n\t\t    k();\n\t\t}\n            }, function(){\n                if(acum == null) {\n                    callback(null);\n                } else {\n                    var acumBindings = QueryPlanDPSize.unionManyBindings(acum);\n                    callback(acumBindings);\n                }\n            });\n    } else {\n        // graph already has an active value, just match.\n        // Filtering the results will still be necessary\n        queryEngine.rangeQuery(bgp, queryEnv, function(results){\n            if(results!=null) {\n                results = QueryPlanDPSize.buildBindingsFromRange(results, bgp);\n                callback(results);\n            } else {\n                callback(null);\n            }\n        });\n    }\n};\n\nQueryPlanDPSize.buildBindingsFromRange = function(results, bgp) {\n    QueryPlanDPSize.variablesInBGP(bgp);\n\n    var components =  bgp.value||bgp;\n    var bindings = {};\n    for(comp in components) {\n        if(components[comp] && components[comp].token === \"var\") {\n            bindings[comp] = components[comp].value;\n        } else if(components[comp] && components[comp].token === \"blank\") {\n            bindings[comp] = \"blank:\"+components[comp].value;\n        }\n    }\n\n    var resultsBindings =[];\n\n    if(results!=null) {\n        for(var i=0; i<results.length; i++) {\n            var binding = {};\n            var result  = results[i];\n            var duplicated = false;\n            for(var comp in bindings) {\n                var value = result[comp];\n                if(binding[bindings[comp]] == null || binding[bindings[comp]] === value) {\n                    binding[bindings[comp]] = value;\n                } else {\n                    duplicated = true;\n                    break;\n                }\n            }\n            if(!duplicated)\n                resultsBindings.push(binding);\n        }\n    }\n\n    return resultsBindings;\n};\n\n\n// @used\nQueryPlanDPSize.areCompatibleBindings = function(bindingsa, bindingsb) {\n    for(var variable in bindingsa) {\n        if(bindingsb[variable]!=null && (bindingsb[variable] != bindingsa[variable])) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n//QueryPlanDPSize.areCompatibleBindingsStrict = function(bindingsa, bindingsb) {\n//    var foundSome = false;\n//    for(var variable in bindingsa) {\n// \tif(bindingsb[variable]!=null && (bindingsb[variable] != bindingsa[variable])) {\n// \t    return false;\n// \t} else if(bindingsb[variable] == bindingsa[variable]){\n// \t    foundSome = true;\n// \t}\n//    }\n//\n//    return foundSome;\n//};\n\n\n\nQueryPlanDPSize.mergeBindings = function(bindingsa, bindingsb) {\n    var merged = {};\n    for(var variable in bindingsa) {\n        merged[variable] = bindingsa[variable];\n    }\n\n    for(var variable in bindingsb) {\n        merged[variable] = bindingsb[variable];\n    }\n\n    return merged;\n};\n\nQueryPlanDPSize.joinBindings2 = function(bindingVars, bindingsa, bindingsb) {\n    var acum = {};\n    var bindings, variable, variableValue, values, tmp;\n    var joined = [];\n\n    for(var i=0; i<bindingsa.length; i++) {\n        bindings = bindingsa[i];\n        tmp = acum;\n        for(var j=0; j<bindingVars.length; j++) {\n            variable = bindingVars[j];\n            variableValue = bindings[variable];\n            if(j == bindingVars.length-1) {\n                values = tmp[variableValue] || [];\n                values.push(bindings);\n                tmp[variableValue] = values;\n            } else {\n                values = tmp[variableValue] || {};\n                tmp[variableValue] = values;\n                tmp = values;\n            }\n        }\n    }\n\n    for(var i=0; i<bindingsb.length; i++) {\n        bindings = bindingsb[i];\n        tmp = acum;\n        for(var j=0; j<bindingVars.length; j++) {\n            variable = bindingVars[j];\n            variableValue = bindings[variable];\n\n            if(tmp[variableValue] != null) {\n                if(j == bindingVars.length-1) {\n                    for(var k=0; k<tmp[variableValue].length; k++) {\n                        joined.push(QueryPlanDPSize.mergeBindings(tmp[variableValue][k],bindings));\n                    }\n                } else {\n                    tmp = tmp[variableValue];\n                }\n            }\n        }\n    }\n\n    return joined;\n};\n\nQueryPlanDPSize.joinBindings = function(bindingsa, bindingsb) {\n    var result = [];\n\n    for(var i=0; i< bindingsa.length; i++) {\n        var bindinga = bindingsa[i];\n        for(var j=0; j<bindingsb.length; j++) {\n            var bindingb = bindingsb[j];\n            if(QueryPlanDPSize.areCompatibleBindings(bindinga, bindingb)){\n                result.push(QueryPlanDPSize.mergeBindings(bindinga, bindingb));\n            }\n        }\n    }\n    return result;\n};\n\nQueryPlanDPSize.augmentMissingBindings = function(bindinga, bindingb) {\n    for(var pb in bindingb) {\n        if(bindinga[pb] == null) {\n            bindinga[pb] = null;\n        }\n    }\n    return bindinga;\n};\n\n/*\n QueryPlanDPSize.diff = function(bindingsa, biundingsb) {\n var result = [];\n\n for(var i=0; i< bindingsa.length; i++) {\n var bindinga = bindingsa[i];\n var matched = false;\n for(var j=0; j<bindingsb.length; j++) {\n var bindingb = bindingsb[j];\n if(QueryPlanDPSize.areCompatibleBindings(bindinga, bindingb)){\n matched = true;\n result.push(QueryPlanDPSize.mergeBindings(bindinga, bindingb));\n }\n }\n if(matched === false) {\n // missing bindings must be present for further processing\n // e.g. filtering by not present value (see DAWG tests\n // bev-6)\n QueryPlanDPSize.augmentMissingBindings(bindinga, bindingb);\n result.push(bindinga);\n }\n }\n\n return result;\n };\n */\n\nQueryPlanDPSize.leftOuterJoinBindings = function(bindingsa, bindingsb) {\n    var result = [];\n    // strict was being passes ad an argument\n    //var compatibleFunction = QueryPlanDPSize.areCompatibleBindings;\n    //if(strict === true)\n    // \tcompatibleFunction = QueryPlanDPSize.areCompatibleBindingsStrict;\n\n    for(var i=0; i< bindingsa.length; i++) {\n        var bindinga = bindingsa[i];\n        var matched = false;\n        for(var j=0; j<bindingsb.length; j++) {\n            var bindingb = bindingsb[j];\n            if(QueryPlanDPSize.areCompatibleBindings(bindinga, bindingb)){\n                matched = true;\n                result.push(QueryPlanDPSize.mergeBindings(bindinga, bindingb));\n            }\n        }\n        if(matched === false) {\n            // missing bindings must be present for further processing\n            // e.g. filtering by not present value (see DAWG tests\n            // bev-6)\n            // augmentMissingBindings set their value to null.\n            QueryPlanDPSize.augmentMissingBindings(bindinga, bindingb);\n            result.push(bindinga);\n        }\n    }\n    return result;\n};\n\nQueryPlanDPSize.crossProductBindings = function(bindingsa, bindingsb) {\n    var result = [];\n\n    for(var i=0; i< bindingsa.length; i++) {\n        var bindinga = bindingsa[i];\n        for(var j=0; j<bindingsb.length; j++) {\n            var bindingb = bindingsb[j];\n            result.push(QueryPlanDPSize.mergeBindings(bindinga, bindingb));\n        }\n    }\n\n    return result;\n};\n\nQueryPlanDPSize.unionBindings = function(bindingsa, bindingsb) {\n    return bindingsa.concat(bindingsb);\n};\n\nQueryPlanDPSize.unionManyBindings = function(bindingLists) {\n    var acum = [];\n    for(var i=0; i<bindingLists.length; i++) {\n        var bindings = bindingLists[i];\n        acum = QueryPlanDPSize.unionBindings(acum, bindings);\n    }\n\n    return acum;\n};\n\n\nmodule.exports = {\n    QueryPlan: QueryPlanDPSize\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/query_plan.js\n// module id = 398\n// module chunks = 2","var NetworkTransport = require(\"./network_transport\").NetworkTransport;\nvar RVN3Parser = require(\"./rvn3_parser\").RVN3Parser;\nvar JSONLDParser = require(\"./jsonld_parser\").JSONLDParser;\nvar Utils = require(\"./utils\");\n\n var RDFLoader = function (params) {\n\n    this.precedences = [\"text/turtle\", \"text/n3\", \"application/ld+json\", \"application/json\"];\n    this.parsers = {\"text/turtle\":RVN3Parser.parser, \"text/n3\":RVN3Parser.parser, \"application/ld+json\":JSONLDParser.parser, \"application/json\":JSONLDParser.parser};\n\n    // Conditionally adding RDFXML parser\n    if(typeof(RDFXMLParser) !== 'undefined') {\n        this.precedences.push(\"application/rdf+xml\");\n        this.parsers[\"application/rdf+xml\"] = RDFXMLParser.parser;\n    }\n\n    if (params != null) {\n        for (var mime in params[\"parsers\"]) {\n            this.parsers[mime] = params[\"parsers\"][mime];\n        }\n    }\n\n    if (params && params[\"precedences\"] != null) {\n        this.precedences = params[\"precedences\"];\n        for (var mime in params[\"parsers\"]) {\n            if (!Utils.include(this.precedences, mime)) {\n                this.precedences.push(mime);\n            }\n        }\n    }\n\n    this.acceptHeaderValue = \"\";\n    for (var i = 0; i < this.precedences.length; i++) {\n        if (i != 0) {\n            this.acceptHeaderValue = this.acceptHeaderValue + \",\" + this.precedences[i];\n        } else {\n            this.acceptHeaderValue = this.acceptHeaderValue + this.precedences[i];\n        }\n    }\n};\n\nRDFLoader.prototype.registerParser = function(mediaType, parser) {\n    this.parsers[mediaType] = parser;\n    this.precedences.push(mediaType);\n};\n\nRDFLoader.prototype.unregisterParser = function(mediaType) {\n    delete this.parsers[mediaType];\n    var mediaTypes = [];\n    for(var i=0; i<this.precedences.length; i++) {\n        if(this.precedences[i] != mediaType) {\n            mediaTypes.push(this.precedences[i]);\n        }\n    }\n\n    this.precedences = mediaTypes;\n};\n\nRDFLoader.prototype.setAcceptHeaderPrecedence = function(mediaTypes) {\n    this.precedences = mediaTypes;\n};\n\nRDFLoader.prototype.load = function(uri, graph, callback) {\n    var that = this;\n    NetworkTransport.load(uri, this.acceptHeaderValue, function(err, results){\n        if(err) {\n            callback(err);\n        } else {\n            var mime = results[\"headers\"][\"Content-Type\"] || results[\"headers\"][\"content-type\"];\n            var data = results['data'];\n            if(mime != null) {\n                mime = mime.split(\";\")[0];\n                for(var m in that.parsers) {\n                    if(m.indexOf(\"/\")!=-1) {\n                        var mimeParts = m.split(\"/\");\n                        if(mimeParts[1] === '*') {\n                            if(mime.indexOf(mimeParts[0])!=-1) {\n                                return that.tryToParse(that.parsers[m], graph, data, {documentURI: uri}, callback);\n                            }\n                        } else {\n                            if(mime.indexOf(m)!=-1) {\n                                return that.tryToParse(that.parsers[m], graph, data, {documentURI: uri}, callback);\n                            } else if(mime.indexOf(mimeParts[1])!=-1) {\n                                return that.tryToParse(that.parsers[m], graph, data, {documentURI: uri}, callback);\n                            }\n                        }\n                    } else {\n                        if(mime.indexOf(m)!=-1) {\n                            return that.tryToParse(that.parsers[m], graph, data, {documentURI: uri}, callback);\n                        }\n                    }\n                }\n                callback(new Error(\"Unknown media type : \"+mime));\n            } else {\n                callback(new Error(\"Uknown media type\"));\n            }\n        }});\n};\n\nRDFLoader.prototype.loadFromFile = function(parser, graph, uri, callback) {\n    try {\n        var that = this;\n        var fs = require('fs');\n        fs.readFile(uri.split(\"file:/\")[1], function(err, data) {\n            if(err) {\n                callback(err);\n            } else {\n                var data = data.toString('utf8');\n                that.tryToParse(parser, graph, data, {documentURI: uri}, callback);\n            }\n        });\n    } catch(e) {\n        callback(e);\n    }\n};\n\nRDFLoader.prototype.tryToParse = function(parser, graph, input, options, callback) {\n    // console.log(\"TRYING TO PARSE\");\n    // console.log(parser);\n    // console.log(graph);\n    // console.log(options);\n    // console.log(callback);\n    try {\n        if(typeof(input) === 'string') {\n            input = Utils.normalizeUnicodeLiterals(input);\n        }\n        parser.parse(input, graph, options, callback);\n\n    } catch(e) {\n        console.log(e.message);\n        console.log(e.stack);\n        callback(e);\n    }\n};\n\nmodule.exports = {\n    RDFLoader: RDFLoader\n};\n\n\n// var loader = require(\"./js-communication/src/rdf_loader\").RDFLoader; loader = new loader.RDFLoader(); loader.load('http://dbpedialite.org/titles/Lisp_%28programming_language%29', function(success, results){console.log(\"hey\"); console.log(success); console.log(results)})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/rdf_loader.js\n// module id = 399\n// module chunks = 2","var utils = require(\"./utils\");\nif(!utils.isWorker()) {\n    var http = require(\"http\");\n    var https = require(\"https\");\n    var url = require(\"url\");\n\n    NetworkTransport = {\n\n        load: function (uri, accept, callback, redirect) {\n            var redirection = redirect == null ? 3 : redirect;\n            var parts = url.parse(uri, true, true);\n\n            var params = {\n                'host': parts.host,\n                'hostname': parts.hostname,\n                'method': 'GET',\n                'path': parts.path,\n                'headers': {'host': parts.hostname, 'Accept': accept}\n            };\n\n            var client = null;\n\n            if (parts.protocol === 'http:') {\n                params.port = (parts.port || 80);\n                client = http;\n            } else if (parts.protocol === 'https:') {\n                params.port = (parts.port || 443);\n                client = https;\n            }\n\n            var request = client.request(params, function (response) {\n                var headers = response.headers;\n                var data = \"\";\n\n                if ((\"\" + response.statusCode)[0] == '2') {\n                    response.on('end', function () {\n                        callback(null, {headers: headers, data: data});\n                    });\n                    response.on('data', function (chunk) {\n                        data = data + chunk;\n                    });\n                } else if ((\"\" + response.statusCode)[0] == '3') {\n                    if (redirection == 0) {\n                        callback(new Error(\"Too many redirections\"));\n                    } else {\n                        var location = (headers[\"Location\"] || headers[\"location\"]);\n                        if (location != null) {\n                            NetworkTransport.load(location, accept, callback, (redirection - 1));\n                        } else {\n                            callback(new Error(\"Redirection without location header\"));\n                        }\n                    }\n                } else {\n                    callback(new Error(\"HTTP error: \" + response.statusCode));\n                }\n            });\n\n            request.on('error', callback);\n\n            request.end();\n        }\n\n    };\n\n    module.exports = {\n        NetworkTransport: NetworkTransport\n    };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/network_transport.js\n// module id = 400\n// module chunks = 2","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\nvar toArrayBuffer = require('to-arraybuffer')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.arraybuffer) {\n\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\n\t\t} else if (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tglobal.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'user-agent',\n\t'via'\n]\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/lib/request.js\n// module id = 401\n// module chunks = 2","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = 402\n// module chunks = 2","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = 403\n// module chunks = 2","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 404\n// module chunks = 2","'use strict';\n\n/*<replacement>*/\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/BufferList.js\n// module id = 405\n// module chunks = 2","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/setimmediate/setImmediate.js\n// module id = 406\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js\n// module id = 407\n// module chunks = 2","var Buffer = require('buffer').Buffer\n\nmodule.exports = function (buf) {\n\t// If the buffer is backed by a Uint8Array, a faster version will work\n\tif (buf instanceof Uint8Array) {\n\t\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\n\t\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n\t\t\treturn buf.buffer\n\t\t} else if (typeof buf.buffer.slice === 'function') {\n\t\t\t// Otherwise we need to get a proper copy\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n\t\t}\n\t}\n\n\tif (Buffer.isBuffer(buf)) {\n\t\t// This is the slow version that will work with any Buffer\n\t\t// implementation (even in old browsers)\n\t\tvar arrayCopy = new Uint8Array(buf.length)\n\t\tvar len = buf.length\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tarrayCopy[i] = buf[i]\n\t\t}\n\t\treturn arrayCopy.buffer\n\t} else {\n\t\tthrow new Error('Argument must be a Buffer')\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/to-arraybuffer/index.js\n// module id = 408\n// module chunks = 2","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = 409\n// module chunks = 2","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/builtin-status-codes/browser.js\n// module id = 410\n// module chunks = 2","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/punycode/punycode.js\n// module id = 411\n// module chunks = 2","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url/util.js\n// module id = 412\n// module chunks = 2","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/querystring-es3/index.js\n// module id = 413\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/querystring-es3/decode.js\n// module id = 414\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/querystring-es3/encode.js\n// module id = 415\n// module chunks = 2","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/https-browserify/index.js\n// module id = 416\n// module chunks = 2","var N3Parser = require('n3').Parser;\n//var N3Parser = require('../node_modules/n3/lib/N3Parser');\n\n// Add a wrapper around the N3.js parser\nvar RVN3Parser = {};\nRVN3Parser.parser = {\n    async: true,\n    parse: function (data, graph, options, callback) {\n        // Shift arguments if necessary\n        if (!callback) {\n            callback = options;\n            options = graph;\n            graph = null;\n        }\n\n        // Make sure graph is an object\n        if (graph && typeof(graph) === 'string')\n            graph = { token: 'uri', value: graph, prefix: null, suffix: null };\n        // Convert options\n        if (options && options.baseURI)\n            options.documentIRI = options.baseURI;\n\n        // Parse triples into array\n        var triples = [];\n        new N3Parser(options).parse(data, function (error, triple) {\n            if (error)\n                callback(error);\n            else if (!triple)\n                callback(false, triples);\n            else\n                triples.push({\n                    subject:   convertEntity(triple.subject),\n                    predicate: convertEntity(triple.predicate),\n                    object:    convertEntity(triple.object),\n                    graph:     graph\n                });\n        });\n    },\n\n    resetBlankNodeIds: function() {\n        N3Parser._resetBlankNodeIds();\n    }\n\n};\n\n// Converts an entity in N3.js representation to this library's representation\nfunction convertEntity(entity) {\n    switch (entity[0]) {\n        case '\"': {\n            if(entity.indexOf(\"^^\") > 0) {\n                var parts = entity.split(\"^^\");\n                return {literal: parts[0] + \"^^<\" + parts[1] + \">\" };\n            } else {\n                return { literal: entity };\n            }\n        }\n        case '_': return { blank: entity.replace('b', '') };\n        default:  return { token: 'uri', value: entity, prefix: null, suffix: null };\n    }\n}\n\nmodule.exports = {\n    RVN3Parser: RVN3Parser\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/rvn3_parser.js\n// module id = 417\n// module chunks = 2","// Replace local require by a lazy loader\nvar globalRequire = require;\nrequire = function () {};\n\n// Expose submodules\nvar exports = module.exports = {\n  Lexer:        require('./lib/N3Lexer'),\n  Parser:       require('./lib/N3Parser'),\n  Writer:       require('./lib/N3Writer'),\n  Store:        require('./lib/N3Store'),\n  StreamParser: require('./lib/N3StreamParser'),\n  StreamWriter: require('./lib/N3StreamWriter'),\n  Util:         require('./lib/N3Util'),\n};\n\n// Load submodules on first access\nObject.keys(exports).forEach(function (submodule) {\n  Object.defineProperty(exports, submodule, {\n    configurable: true,\n    enumerable: true,\n    get: function () {\n      delete exports[submodule];\n      return exports[submodule] = globalRequire('./lib/N3' + submodule);\n    },\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/n3/N3.js\n// module id = 418\n// module chunks = 2","var map = {\n\t\"./N3Lexer\": 147,\n\t\"./N3Lexer.js\": 147,\n\t\"./N3Parser\": 148,\n\t\"./N3Parser.js\": 148,\n\t\"./N3Store\": 228,\n\t\"./N3Store.js\": 228,\n\t\"./N3StreamParser\": 229,\n\t\"./N3StreamParser.js\": 229,\n\t\"./N3StreamWriter\": 236,\n\t\"./N3StreamWriter.js\": 236,\n\t\"./N3Util\": 149,\n\t\"./N3Util.js\": 149,\n\t\"./N3Writer\": 152,\n\t\"./N3Writer.js\": 152\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 419;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/n3/lib ^\\.\\/N3.*$\n// module id = 419\n// module chunks = 2","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 420\n// module chunks = 2","'use strict';\n\n/*<replacement>*/\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/internal/streams/BufferList.js\n// module id = 421\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/lib/_stream_passthrough.js\n// module id = 422\n// module chunks = 2","module.exports = require('./lib/_stream_writable.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/writable-browser.js\n// module id = 423\n// module chunks = 2","module.exports = require('./lib/_stream_duplex.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/duplex-browser.js\n// module id = 424\n// module chunks = 2","module.exports = require('./readable').Transform\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/transform.js\n// module id = 425\n// module chunks = 2","module.exports = require('./readable').PassThrough\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/readable-stream/passthrough.js\n// module id = 426\n// module chunks = 2","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util/support/isBufferBrowser.js\n// module id = 427\n// module chunks = 2","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util/node_modules/inherits/inherits_browser.js\n// module id = 428\n// module chunks = 2","var jsonld = require('jsonld');\n\nvar toTriples = function (input, graph, cb) {\n    var rval = null;\n\n    // normalize input\n    jsonld.normalize(input, {}, function (err, normalized) {\n        if (err)\n            cb(err);\n        else {\n            var parseTerm = function (term) {\n                if (term.type === 'blank node') {\n                    return {'blank': term.value};\n                } else if (term.type === 'IRI') {\n                    return {'token': 'uri', 'value': term.value};\n                } else if (term.type === 'literal') {\n                    if (term.language != null) {\n                        return {'literal': '\"' + term.value + '\"@' + term.language};\n                    } else if (term.datatype !== null) {\n                        return {'literal': '\"' + term.value + '\"^^<' + term.datatype + \">\"};\n                    } else {\n                        return {'literal': '\"' + term.value + '\"'};\n\n                    }\n                }\n            };\n\n            rval = [];\n            var callback = function (s, p, o) {\n                rval.push({\n                    'subject': parseTerm(s),\n                    'predicate': parseTerm(p),\n                    'object': parseTerm(o),\n                    'graph': graph\n                });\n            };\n\n\n            // generate triples\n            var quit = false;\n            for (var p in normalized) {\n                var triples = normalized[p];\n                for (var i = 0; i < triples.length; i++) {\n                    var triple = triples[i];\n                    callback(triple.subject, triple.predicate, triple.object);\n                }\n            }\n\n            cb(null, rval);\n\n        }\n    });\n};\n\n\n// exports\nexports.JSONLDParser = {};\nvar JSONLDParser = exports.JSONLDParser;\n\nJSONLDParser.parser = {\n\n    async: true,\n\n    parse: function (data, graph, options, callback) {\n        try {\n            if (typeof(data) === 'string') {\n                data = JSON.parse(data);\n            }\n            toTriples(data, graph, callback);\n        } catch (error) {\n            callback(error);\n        }\n\n    }\n\n};\n\nmodule.exports = {\n    JSONLDParser: JSONLDParser\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/jsonld_parser.js\n// module id = 429\n// module chunks = 2","/**\n * A JavaScript implementation of the JSON-LD API.\n *\n * @author Dave Longley\n *\n * @license BSD 3-Clause License\n * Copyright (c) 2011-2015 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n(function() {\n\n// determine if in-browser or using node.js\nvar _nodejs = (\n  typeof process !== 'undefined' && process.versions && process.versions.node);\nvar _browser = !_nodejs &&\n  (typeof window !== 'undefined' || typeof self !== 'undefined');\nif(_browser) {\n  if(typeof global === 'undefined') {\n    if(typeof window !== 'undefined') {\n      global = window;\n    } else if(typeof self !== 'undefined') {\n      global = self;\n    } else if(typeof $ !== 'undefined') {\n      global = $;\n    }\n  }\n}\n\n// attaches jsonld API to the given object\nvar wrapper = function(jsonld) {\n\n/* Core API */\n\n/**\n * Performs JSON-LD compaction.\n *\n * @param input the JSON-LD input to compact.\n * @param ctx the context to compact with.\n * @param [options] options to use:\n *          [base] the base IRI to use.\n *          [compactArrays] true to compact arrays to single values when\n *            appropriate, false not to (default: true).\n *          [graph] true to always output a top-level graph (default: false).\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, compacted, ctx) called once the operation completes.\n */\njsonld.compact = function(input, ctx, options, callback) {\n  if(arguments.length < 2) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not compact, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  if(ctx === null) {\n    return jsonld.nextTick(function() {\n      callback(new JsonLdError(\n        'The compaction context must not be null.',\n        'jsonld.CompactError', {code: 'invalid local context'}));\n    });\n  }\n\n  // nothing to compact\n  if(input === null) {\n    return jsonld.nextTick(function() {\n      callback(null, null);\n    });\n  }\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('compactArrays' in options)) {\n    options.compactArrays = true;\n  }\n  if(!('graph' in options)) {\n    options.graph = false;\n  }\n  if(!('skipExpansion' in options)) {\n    options.skipExpansion = false;\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n  if(!('link' in options)) {\n    options.link = false;\n  }\n  if(options.link) {\n    // force skip expansion when linking, \"link\" is not part of the public\n    // API, it should only be called from framing\n    options.skipExpansion = true;\n  }\n\n  var expand = function(input, options, callback) {\n    if(options.skipExpansion) {\n      return jsonld.nextTick(function() {\n        callback(null, input);\n      });\n    }\n    jsonld.expand(input, options, callback);\n  };\n\n  // expand input then do compaction\n  expand(input, options, function(err, expanded) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before compaction.',\n        'jsonld.CompactError', {cause: err}));\n    }\n\n    // process context\n    var activeCtx = _getInitialContext(options);\n    jsonld.processContext(activeCtx, ctx, options, function(err, activeCtx) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not process context before compaction.',\n          'jsonld.CompactError', {cause: err}));\n      }\n\n      var compacted;\n      try {\n        // do compaction\n        compacted = new Processor().compact(activeCtx, null, expanded, options);\n      } catch(ex) {\n        return callback(ex);\n      }\n\n      cleanup(null, compacted, activeCtx, options);\n    });\n  });\n\n  // performs clean up after compaction\n  function cleanup(err, compacted, activeCtx, options) {\n    if(err) {\n      return callback(err);\n    }\n\n    if(options.compactArrays && !options.graph && _isArray(compacted)) {\n      if(compacted.length === 1) {\n        // simplify to a single item\n        compacted = compacted[0];\n      } else if(compacted.length === 0) {\n        // simplify to an empty object\n        compacted = {};\n      }\n    } else if(options.graph && _isObject(compacted)) {\n      // always use array if graph option is on\n      compacted = [compacted];\n    }\n\n    // follow @context key\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // build output context\n    ctx = _clone(ctx);\n    if(!_isArray(ctx)) {\n      ctx = [ctx];\n    }\n    // remove empty contexts\n    var tmp = ctx;\n    ctx = [];\n    for(var i = 0; i < tmp.length; ++i) {\n      if(!_isObject(tmp[i]) || Object.keys(tmp[i]).length > 0) {\n        ctx.push(tmp[i]);\n      }\n    }\n\n    // remove array if only one context\n    var hasContext = (ctx.length > 0);\n    if(ctx.length === 1) {\n      ctx = ctx[0];\n    }\n\n    // add context and/or @graph\n    if(_isArray(compacted)) {\n      // use '@graph' keyword\n      var kwgraph = _compactIri(activeCtx, '@graph');\n      var graph = compacted;\n      compacted = {};\n      if(hasContext) {\n        compacted['@context'] = ctx;\n      }\n      compacted[kwgraph] = graph;\n    } else if(_isObject(compacted) && hasContext) {\n      // reorder keys so @context is first\n      var graph = compacted;\n      compacted = {'@context': ctx};\n      for(var key in graph) {\n        compacted[key] = graph[key];\n      }\n    }\n\n    callback(null, compacted, activeCtx);\n  }\n};\n\n/**\n * Performs JSON-LD expansion.\n *\n * @param input the JSON-LD input to expand.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [keepFreeFloatingNodes] true to keep free-floating nodes,\n *            false not to, defaults to false.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, expanded) called once the operation completes.\n */\njsonld.expand = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not expand, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n  if(!('keepFreeFloatingNodes' in options)) {\n    options.keepFreeFloatingNodes = false;\n  }\n\n  jsonld.nextTick(function() {\n    // if input is a string, attempt to dereference remote document\n    if(typeof input === 'string') {\n      var done = function(err, remoteDoc) {\n        if(err) {\n          return callback(err);\n        }\n        try {\n          if(!remoteDoc.document) {\n            throw new JsonLdError(\n              'No remote document found at the given URL.',\n              'jsonld.NullRemoteDocument');\n          }\n          if(typeof remoteDoc.document === 'string') {\n            remoteDoc.document = JSON.parse(remoteDoc.document);\n          }\n        } catch(ex) {\n          return callback(new JsonLdError(\n            'Could not retrieve a JSON-LD document from the URL. URL ' +\n            'dereferencing not implemented.', 'jsonld.LoadDocumentError', {\n              code: 'loading document failed',\n              cause: ex,\n              remoteDoc: remoteDoc\n          }));\n        }\n        expand(remoteDoc);\n      };\n      var promise = options.documentLoader(input, done);\n      if(promise && 'then' in promise) {\n        promise.then(done.bind(null, null), done);\n      }\n      return;\n    }\n    // nothing to load\n    expand({contextUrl: null, documentUrl: null, document: input});\n  });\n\n  function expand(remoteDoc) {\n    // set default base\n    if(!('base' in options)) {\n      options.base = remoteDoc.documentUrl || '';\n    }\n    // build meta-object and retrieve all @context URLs\n    var input = {\n      document: _clone(remoteDoc.document),\n      remoteContext: {'@context': remoteDoc.contextUrl}\n    };\n    if('expandContext' in options) {\n      var expandContext = _clone(options.expandContext);\n      if(typeof expandContext === 'object' && '@context' in expandContext) {\n        input.expandContext = expandContext;\n      } else {\n        input.expandContext = {'@context': expandContext};\n      }\n    }\n    _retrieveContextUrls(input, options, function(err, input) {\n      if(err) {\n        return callback(err);\n      }\n\n      var expanded;\n      try {\n        var processor = new Processor();\n        var activeCtx = _getInitialContext(options);\n        var document = input.document;\n        var remoteContext = input.remoteContext['@context'];\n\n        // process optional expandContext\n        if(input.expandContext) {\n          activeCtx = processor.processContext(\n            activeCtx, input.expandContext['@context'], options);\n        }\n\n        // process remote context from HTTP Link Header\n        if(remoteContext) {\n          activeCtx = processor.processContext(\n            activeCtx, remoteContext, options);\n        }\n\n        // expand document\n        expanded = processor.expand(\n          activeCtx, null, document, options, false);\n\n        // optimize away @graph with no other properties\n        if(_isObject(expanded) && ('@graph' in expanded) &&\n          Object.keys(expanded).length === 1) {\n          expanded = expanded['@graph'];\n        } else if(expanded === null) {\n          expanded = [];\n        }\n\n        // normalize to an array\n        if(!_isArray(expanded)) {\n          expanded = [expanded];\n        }\n      } catch(ex) {\n        return callback(ex);\n      }\n      callback(null, expanded);\n    });\n  }\n};\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the JSON-LD to flatten.\n * @param ctx the context to use to compact the flattened output, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, flattened) called once the operation completes.\n */\njsonld.flatten = function(input, ctx, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not flatten, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if(typeof ctx === 'function') {\n    callback = ctx;\n    ctx = null;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, _input) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before flattening.',\n        'jsonld.FlattenError', {cause: err}));\n    }\n\n    var flattened;\n    try {\n      // do flattening\n      flattened = new Processor().flatten(_input);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    if(ctx === null) {\n      return callback(null, flattened);\n    }\n\n    // compact result (force @graph option to true, skip expansion)\n    options.graph = true;\n    options.skipExpansion = true;\n    jsonld.compact(flattened, ctx, options, function(err, compacted) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not compact flattened output.',\n          'jsonld.FlattenError', {cause: err}));\n      }\n      callback(null, compacted);\n    });\n  });\n};\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the JSON-LD input to frame.\n * @param frame the JSON-LD frame to use.\n * @param [options] the framing options.\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [embed] default @embed flag: '@last', '@always', '@never', '@link'\n *            (default: '@last').\n *          [explicit] default @explicit flag (default: false).\n *          [requireAll] default @requireAll flag (default: true).\n *          [omitDefault] default @omitDefault flag (default: false).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, framed) called once the operation completes.\n */\njsonld.frame = function(input, frame, options, callback) {\n  if(arguments.length < 2) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not frame, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n  if(!('embed' in options)) {\n    options.embed = '@last';\n  }\n  options.explicit = options.explicit || false;\n  if(!('requireAll' in options)) {\n    options.requireAll = true;\n  }\n  options.omitDefault = options.omitDefault || false;\n\n  jsonld.nextTick(function() {\n    // if frame is a string, attempt to dereference remote document\n    if(typeof frame === 'string') {\n      var done = function(err, remoteDoc) {\n        if(err) {\n          return callback(err);\n        }\n        try {\n          if(!remoteDoc.document) {\n            throw new JsonLdError(\n              'No remote document found at the given URL.',\n              'jsonld.NullRemoteDocument');\n          }\n          if(typeof remoteDoc.document === 'string') {\n            remoteDoc.document = JSON.parse(remoteDoc.document);\n          }\n        } catch(ex) {\n          return callback(new JsonLdError(\n            'Could not retrieve a JSON-LD document from the URL. URL ' +\n            'dereferencing not implemented.', 'jsonld.LoadDocumentError', {\n              code: 'loading document failed',\n              cause: ex,\n              remoteDoc: remoteDoc\n          }));\n        }\n        doFrame(remoteDoc);\n      };\n      var promise = options.documentLoader(frame, done);\n      if(promise && 'then' in promise) {\n        promise.then(done.bind(null, null), done);\n      }\n      return;\n    }\n    // nothing to load\n    doFrame({contextUrl: null, documentUrl: null, document: frame});\n  });\n\n  function doFrame(remoteFrame) {\n    // preserve frame context and add any Link header context\n    var frame = remoteFrame.document;\n    var ctx;\n    if(frame) {\n      ctx = frame['@context'];\n      if(remoteFrame.contextUrl) {\n        if(!ctx) {\n          ctx = remoteFrame.contextUrl;\n        } else if(_isArray(ctx)) {\n          ctx.push(remoteFrame.contextUrl);\n        } else {\n          ctx = [ctx, remoteFrame.contextUrl];\n        }\n        frame['@context'] = ctx;\n      } else {\n        ctx = ctx || {};\n      }\n    } else {\n      ctx = {};\n    }\n\n    // expand input\n    jsonld.expand(input, options, function(err, expanded) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not expand input before framing.',\n          'jsonld.FrameError', {cause: err}));\n      }\n\n      // expand frame\n      var opts = _clone(options);\n      opts.isFrame = true;\n      opts.keepFreeFloatingNodes = true;\n      jsonld.expand(frame, opts, function(err, expandedFrame) {\n        if(err) {\n          return callback(new JsonLdError(\n            'Could not expand frame before framing.',\n            'jsonld.FrameError', {cause: err}));\n        }\n\n        var framed;\n        try {\n          // do framing\n          framed = new Processor().frame(expanded, expandedFrame, opts);\n        } catch(ex) {\n          return callback(ex);\n        }\n\n        // compact result (force @graph option to true, skip expansion,\n        // check for linked embeds)\n        opts.graph = true;\n        opts.skipExpansion = true;\n        opts.link = {};\n        jsonld.compact(framed, ctx, opts, function(err, compacted, ctx) {\n          if(err) {\n            return callback(new JsonLdError(\n              'Could not compact framed output.',\n              'jsonld.FrameError', {cause: err}));\n          }\n          // get graph alias\n          var graph = _compactIri(ctx, '@graph');\n          // remove @preserve from results\n          opts.link = {};\n          compacted[graph] = _removePreserve(ctx, compacted[graph], opts);\n          callback(null, compacted);\n        });\n      });\n    });\n  }\n};\n\n/**\n * **Experimental**\n *\n * Links a JSON-LD document's nodes in memory.\n *\n * @param input the JSON-LD document to link.\n * @param ctx the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, linked) called once the operation completes.\n */\njsonld.link = function(input, ctx, options, callback) {\n  // API matches running frame with a wildcard frame and embed: '@link'\n  // get arguments\n  var frame = {};\n  if(ctx) {\n    frame['@context'] = ctx;\n  }\n  frame['@embed'] = '@link';\n  jsonld.frame(input, frame, options, callback);\n};\n\n/**\n * **Deprecated**\n *\n * Performs JSON-LD objectification.\n *\n * @param input the JSON-LD document to objectify.\n * @param ctx the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, linked) called once the operation completes.\n */\njsonld.objectify = function(input, ctx, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, _input) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before linking.',\n        'jsonld.LinkError', {cause: err}));\n    }\n\n    var flattened;\n    try {\n      // flatten the graph\n      flattened = new Processor().flatten(_input);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    // compact result (force @graph option to true, skip expansion)\n    options.graph = true;\n    options.skipExpansion = true;\n    jsonld.compact(flattened, ctx, options, function(err, compacted, ctx) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not compact flattened output before linking.',\n          'jsonld.LinkError', {cause: err}));\n      }\n      // get graph alias\n      var graph = _compactIri(ctx, '@graph');\n      var top = compacted[graph][0];\n\n      var recurse = function(subject) {\n        // can't replace just a string\n        if(!_isObject(subject) && !_isArray(subject)) {\n          return;\n        }\n\n        // bottom out recursion on re-visit\n        if(_isObject(subject)) {\n          if(recurse.visited[subject['@id']]) {\n            return;\n          }\n          recurse.visited[subject['@id']] = true;\n        }\n\n        // each array element *or* object key\n        for(var k in subject) {\n          var obj = subject[k];\n          var isid = (jsonld.getContextValue(ctx, k, '@type') === '@id');\n\n          // can't replace a non-object or non-array unless it's an @id\n          if(!_isArray(obj) && !_isObject(obj) && !isid) {\n            continue;\n          }\n\n          if(_isString(obj) && isid) {\n            subject[k] = obj = top[obj];\n            recurse(obj);\n          } else if(_isArray(obj)) {\n            for(var i = 0; i < obj.length; ++i) {\n              if(_isString(obj[i]) && isid) {\n                obj[i] = top[obj[i]];\n              } else if(_isObject(obj[i]) && '@id' in obj[i]) {\n                obj[i] = top[obj[i]['@id']];\n              }\n              recurse(obj[i]);\n            }\n          } else if(_isObject(obj)) {\n            var sid = obj['@id'];\n            subject[k] = obj = top[sid];\n            recurse(obj);\n          }\n        }\n      };\n      recurse.visited = {};\n      recurse(top);\n\n      compacted.of_type = {};\n      for(var s in top) {\n        if(!('@type' in top[s])) {\n          continue;\n        }\n        var types = top[s]['@type'];\n        if(!_isArray(types)) {\n          types = [types];\n        }\n        for(var t = 0; t < types.length; ++t) {\n          if(!(types[t] in compacted.of_type)) {\n            compacted.of_type[types[t]] = [];\n          }\n          compacted.of_type[types[t]].push(top[s]);\n        }\n      }\n      callback(null, compacted);\n    });\n  });\n};\n\n/**\n * Performs RDF dataset normalization on the given input. The input is JSON-LD\n * unless the 'inputFormat' option is used. The output is an RDF dataset\n * unless the 'format' option is used.\n *\n * @param input the input to normalize as JSON-LD or as a format specified by\n *          the 'inputFormat' option.\n * @param [options] the options to use:\n *          [algorithm] the normalization algorithm to use, `URDNA2015` or\n *            `URGNA2012` (default: `URGNA2012`).\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [inputFormat] the format if input is not JSON-LD:\n *            'application/nquads' for N-Quads.\n *          [format] the format if output is a string:\n *            'application/nquads' for N-Quads.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, normalized) called once the operation completes.\n */\njsonld.normalize = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not normalize, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('algorithm' in options)) {\n    options.algorithm = 'URGNA2012';\n  }\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  if('inputFormat' in options) {\n    if(options.inputFormat !== 'application/nquads') {\n      return callback(new JsonLdError(\n        'Unknown normalization input format.',\n        'jsonld.NormalizeError'));\n    }\n    var parsedInput = _parseNQuads(input);\n    // do normalization\n    new Processor().normalize(parsedInput, options, callback);\n  } else {\n    // convert to RDF dataset then do normalization\n    var opts = _clone(options);\n    delete opts.format;\n    opts.produceGeneralizedRdf = false;\n    jsonld.toRDF(input, opts, function(err, dataset) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not convert input to RDF dataset before normalization.',\n          'jsonld.NormalizeError', {cause: err}));\n      }\n      // do normalization\n      new Processor().normalize(dataset, options, callback);\n    });\n  }\n};\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset a serialized string of RDF in a format specified by the\n *          format option or an RDF dataset to convert.\n * @param [options] the options to use:\n *          [format] the format if dataset param must first be parsed:\n *            'application/nquads' for N-Quads (default).\n *          [rdfParser] a custom RDF-parser to use to parse the dataset.\n *          [useRdfType] true to use rdf:type, false to use @type\n *            (default: false).\n *          [useNativeTypes] true to convert XSD types into native types\n *            (boolean, integer, double), false not to (default: false).\n * @param callback(err, output) called once the operation completes.\n */\njsonld.fromRDF = function(dataset, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not convert from RDF, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('useRdfType' in options)) {\n    options.useRdfType = false;\n  }\n  if(!('useNativeTypes' in options)) {\n    options.useNativeTypes = false;\n  }\n\n  if(!('format' in options) && _isString(dataset)) {\n    // set default format to nquads\n    if(!('format' in options)) {\n      options.format = 'application/nquads';\n    }\n  }\n\n  jsonld.nextTick(function() {\n    // handle special format\n    var rdfParser;\n    if(options.format) {\n      // check supported formats\n      rdfParser = options.rdfParser || _rdfParsers[options.format];\n      if(!rdfParser) {\n        return callback(new JsonLdError(\n          'Unknown input format.',\n          'jsonld.UnknownFormat', {format: options.format}));\n      }\n    } else {\n      // no-op parser, assume dataset already parsed\n      rdfParser = function() {\n        return dataset;\n      };\n    }\n\n    var callbackCalled = false;\n    try {\n      // rdf parser may be async or sync, always pass callback\n      dataset = rdfParser(dataset, function(err, dataset) {\n        callbackCalled = true;\n        if(err) {\n          return callback(err);\n        }\n        fromRDF(dataset, options, callback);\n      });\n    } catch(e) {\n      if(!callbackCalled) {\n        return callback(e);\n      }\n      throw e;\n    }\n    // handle synchronous or promise-based parser\n    if(dataset) {\n      // if dataset is actually a promise\n      if('then' in dataset) {\n        return dataset.then(function(dataset) {\n          fromRDF(dataset, options, callback);\n        }, callback);\n      }\n      // parser is synchronous\n      fromRDF(dataset, options, callback);\n    }\n\n    function fromRDF(dataset, options, callback) {\n      // convert from RDF\n      new Processor().fromRDF(dataset, options, callback);\n    }\n  });\n};\n\n/**\n * Outputs the RDF dataset found in the given JSON-LD object.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [format] the format to use to output a string:\n *            'application/nquads' for N-Quads.\n *          [produceGeneralizedRdf] true to output generalized RDF, false\n *            to produce only standard RDF (default: false).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, dataset) called once the operation completes.\n */\njsonld.toRDF = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not convert to RDF, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, expanded) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before serialization to RDF.',\n        'jsonld.RdfError', {cause: err}));\n    }\n\n    var dataset;\n    try {\n      // output RDF dataset\n      dataset = Processor.prototype.toRDF(expanded, options);\n      if(options.format) {\n        if(options.format === 'application/nquads') {\n          return callback(null, _toNQuads(dataset));\n        }\n        throw new JsonLdError(\n          'Unknown output format.',\n          'jsonld.UnknownFormat', {format: options.format});\n      }\n    } catch(ex) {\n      return callback(ex);\n    }\n    callback(null, dataset);\n  });\n};\n\n/**\n * **Experimental**\n *\n * Recursively flattens the nodes in the given JSON-LD input into a map of\n * node ID => node.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [namer] (deprecated)\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, nodeMap) called once the operation completes.\n */\njsonld.createNodeMap = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not create node map, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, _input) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before creating node map.',\n        'jsonld.CreateNodeMapError', {cause: err}));\n    }\n\n    var nodeMap;\n    try {\n      nodeMap = new Processor().createNodeMap(_input, options);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    callback(null, nodeMap);\n  });\n};\n\n/**\n * **Experimental**\n *\n * Merges two or more JSON-LD documents into a single flattened document.\n *\n * @param docs the JSON-LD documents to merge together.\n * @param ctx the context to use to compact the merged result, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [namer] (deprecated).\n *          [mergeNodes] true to merge properties for nodes with the same ID,\n *            false to ignore new properties for nodes with the same ID once\n *            the ID has been defined; note that this may not prevent merging\n *            new properties where a node is in the `object` position\n *            (default: true).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, merged) called once the operation completes.\n */\njsonld.merge = function(docs, ctx, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not merge, too few arguments.'));\n    });\n  }\n  if(!_isArray(docs)) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not merge, \"docs\" must be an array.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if(typeof ctx === 'function') {\n    callback = ctx;\n    ctx = null;\n    options = {};\n  }\n  options = options || {};\n\n  // expand all documents\n  var expanded = [];\n  var error = null;\n  var count = docs.length;\n  for(var i = 0; i < docs.length; ++i) {\n    var opts = {};\n    for(var key in options) {\n      opts[key] = options[key];\n    }\n    jsonld.expand(docs[i], opts, expandComplete);\n  }\n\n  function expandComplete(err, _input) {\n    if(error) {\n      return;\n    }\n    if(err) {\n      error = err;\n      return callback(new JsonLdError(\n        'Could not expand input before flattening.',\n        'jsonld.FlattenError', {cause: err}));\n    }\n    expanded.push(_input);\n    if(--count === 0) {\n      merge(expanded);\n    }\n  }\n\n  function merge(expanded) {\n    var mergeNodes = true;\n    if('mergeNodes' in options) {\n      mergeNodes = options.mergeNodes;\n    }\n\n    var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');\n    var graphs = {'@default': {}};\n\n    var defaultGraph;\n    try {\n      for(var i = 0; i < expanded.length; ++i) {\n        // uniquely relabel blank nodes\n        var doc = expanded[i];\n        doc = jsonld.relabelBlankNodes(doc, {\n          issuer: new IdentifierIssuer('_:b' + i + '-')\n        });\n\n        // add nodes to the shared node map graphs if merging nodes, to a\n        // separate graph set if not\n        var _graphs = (mergeNodes || i === 0) ? graphs : {'@default': {}};\n        _createNodeMap(doc, _graphs, '@default', issuer);\n\n        if(_graphs !== graphs) {\n          // merge document graphs but don't merge existing nodes\n          for(var graphName in _graphs) {\n            var _nodeMap = _graphs[graphName];\n            if(!(graphName in graphs)) {\n              graphs[graphName] = _nodeMap;\n              continue;\n            }\n            var nodeMap = graphs[graphName];\n            for(var key in _nodeMap) {\n              if(!(key in nodeMap)) {\n                nodeMap[key] = _nodeMap[key];\n              }\n            }\n          }\n        }\n      }\n\n      // add all non-default graphs to default graph\n      defaultGraph = _mergeNodeMaps(graphs);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    // produce flattened output\n    var flattened = [];\n    var keys = Object.keys(defaultGraph).sort();\n    for(var ki = 0; ki < keys.length; ++ki) {\n      var node = defaultGraph[keys[ki]];\n      // only add full subjects to top-level\n      if(!_isSubjectReference(node)) {\n        flattened.push(node);\n      }\n    }\n\n    if(ctx === null) {\n      return callback(null, flattened);\n    }\n\n    // compact result (force @graph option to true, skip expansion)\n    options.graph = true;\n    options.skipExpansion = true;\n    jsonld.compact(flattened, ctx, options, function(err, compacted) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not compact merged output.',\n          'jsonld.MergeError', {cause: err}));\n      }\n      callback(null, compacted);\n    });\n  }\n};\n\n/**\n * Relabels all blank nodes in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [namer] (deprecated).\n */\njsonld.relabelBlankNodes = function(input, options) {\n  options = options || {};\n  var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');\n  return _labelBlankNodes(issuer, input);\n};\n\n/**\n * Prepends a base IRI to the given relative IRI.\n *\n * @param base the base IRI.\n * @param iri the relative IRI.\n *\n * @return the absolute IRI.\n */\njsonld.prependBase = function(base, iri) {\n  return _prependBase(base, iri);\n};\n\n/**\n * The default document loader for external documents. If the environment\n * is node.js, a callback-continuation-style document loader is used; otherwise,\n * a promises-style document loader is used.\n *\n * @param url the URL to load.\n * @param callback(err, remoteDoc) called once the operation completes,\n *          if using a non-promises API.\n *\n * @return a promise, if using a promises API.\n */\njsonld.documentLoader = function(url, callback) {\n  var err = new JsonLdError(\n    'Could not retrieve a JSON-LD document from the URL. URL ' +\n    'dereferencing not implemented.', 'jsonld.LoadDocumentError',\n    {code: 'loading document failed'});\n  if(_nodejs) {\n    return callback(err, {contextUrl: null, documentUrl: url, document: null});\n  }\n  return jsonld.promisify(function(callback) {\n    callback(err);\n  });\n};\n\n/**\n * Deprecated default document loader. Use or override jsonld.documentLoader\n * instead.\n */\njsonld.loadDocument = function(url, callback) {\n  var promise = jsonld.documentLoader(url, callback);\n  if(promise && 'then' in promise) {\n    promise.then(callback.bind(null, null), callback);\n  }\n};\n\n/* Promises API */\n\n/**\n * Creates a new promises API object.\n *\n * @param [options] the options to use:\n *          [api] an object to attach the API to.\n *          [version] 'json-ld-1.0' to output a standard JSON-LD 1.0 promises\n *            API, 'jsonld.js' to output the same with augmented proprietary\n *            methods (default: 'jsonld.js')\n *\n * @return the promises API object.\n */\njsonld.promises = function(options) {\n  options = options || {};\n  var slice = Array.prototype.slice;\n  var promisify = jsonld.promisify;\n\n  // handle 'api' option as version, set defaults\n  var api = options.api || {};\n  var version = options.version || 'jsonld.js';\n  if(typeof options.api === 'string') {\n    if(!options.version) {\n      version = options.api;\n    }\n    api = {};\n  }\n\n  // The Web IDL test harness will check the number of parameters defined in\n  // the functions below. The number of parameters must exactly match the\n  // required (non-optional) parameters of the JsonLdProcessor interface as\n  // defined here:\n  // https://www.w3.org/TR/json-ld-api/#the-jsonldprocessor-interface\n\n  api.expand = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not expand, too few arguments.');\n    }\n    return promisify.apply(null, [jsonld.expand].concat(slice.call(arguments)));\n  };\n  api.compact = function(input, ctx) {\n    if(arguments.length < 2) {\n      throw new TypeError('Could not compact, too few arguments.');\n    }\n    var compact = function(input, ctx, options, callback) {\n      if(typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n      options = options || {};\n      // ensure only one value is returned in callback\n      jsonld.compact(input, ctx, options, function(err, compacted) {\n        callback(err, compacted);\n      });\n    };\n    return promisify.apply(null, [compact].concat(slice.call(arguments)));\n  };\n  api.flatten = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not flatten, too few arguments.');\n    }\n    return promisify.apply(\n      null, [jsonld.flatten].concat(slice.call(arguments)));\n  };\n  api.frame = function(input, frame) {\n    if(arguments.length < 2) {\n      throw new TypeError('Could not frame, too few arguments.');\n    }\n    return promisify.apply(null, [jsonld.frame].concat(slice.call(arguments)));\n  };\n  api.fromRDF = function(dataset) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not convert from RDF, too few arguments.');\n    }\n    return promisify.apply(\n      null, [jsonld.fromRDF].concat(slice.call(arguments)));\n  };\n  api.toRDF = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not convert to RDF, too few arguments.');\n    }\n    return promisify.apply(null, [jsonld.toRDF].concat(slice.call(arguments)));\n  };\n  api.normalize = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not normalize, too few arguments.');\n    }\n    return promisify.apply(\n      null, [jsonld.normalize].concat(slice.call(arguments)));\n  };\n\n  if(version === 'jsonld.js') {\n    api.link = function(input, ctx) {\n      if(arguments.length < 2) {\n        throw new TypeError('Could not link, too few arguments.');\n      }\n      return promisify.apply(\n        null, [jsonld.link].concat(slice.call(arguments)));\n    };\n    api.objectify = function(input) {\n      return promisify.apply(\n        null, [jsonld.objectify].concat(slice.call(arguments)));\n    };\n    api.createNodeMap = function(input) {\n      return promisify.apply(\n        null, [jsonld.createNodeMap].concat(slice.call(arguments)));\n    };\n    api.merge = function(input) {\n      return promisify.apply(\n        null, [jsonld.merge].concat(slice.call(arguments)));\n    };\n  }\n\n  try {\n    jsonld.Promise = global.Promise || require('es6-promise').Promise;\n  } catch(e) {\n    var f = function() {\n      throw new Error('Unable to find a Promise implementation.');\n    };\n    for(var method in api) {\n      api[method] = f;\n    }\n  }\n\n  return api;\n};\n\n/**\n * Converts a node.js async op into a promise w/boxed resolved value(s).\n *\n * @param op the operation to convert.\n *\n * @return the promise.\n */\njsonld.promisify = function(op) {\n  if(!jsonld.Promise) {\n    try {\n      jsonld.Promise = global.Promise || require('es6-promise').Promise;\n    } catch(e) {\n      throw new Error('Unable to find a Promise implementation.');\n    }\n  }\n  var args = Array.prototype.slice.call(arguments, 1);\n  return new jsonld.Promise(function(resolve, reject) {\n    op.apply(null, args.concat(function(err, value) {\n      if(!err) {\n        resolve(value);\n      } else {\n        reject(err);\n      }\n    }));\n  });\n};\n\n// extend jsonld.promises w/jsonld.js methods\njsonld.promises({api: jsonld.promises});\n\n/* WebIDL API */\n\nfunction JsonLdProcessor() {}\nJsonLdProcessor.prototype = jsonld.promises({version: 'json-ld-1.0'});\nJsonLdProcessor.prototype.toString = function() {\n  if(this instanceof JsonLdProcessor) {\n    return '[object JsonLdProcessor]';\n  }\n  return '[object JsonLdProcessorPrototype]';\n};\njsonld.JsonLdProcessor = JsonLdProcessor;\n\n// IE8 has Object.defineProperty but it only\n// works on DOM nodes -- so feature detection\n// requires try/catch :-(\nvar canDefineProperty = !!Object.defineProperty;\nif(canDefineProperty) {\n  try {\n    Object.defineProperty({}, 'x', {});\n  } catch(e) {\n    canDefineProperty = false;\n  }\n}\n\nif(canDefineProperty) {\n  Object.defineProperty(JsonLdProcessor, 'prototype', {\n    writable: false,\n    enumerable: false\n  });\n  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {\n    writable: true,\n    enumerable: false,\n    configurable: true,\n    value: JsonLdProcessor\n  });\n}\n\n// setup browser global JsonLdProcessor\nif(_browser && typeof global.JsonLdProcessor === 'undefined') {\n  if(canDefineProperty) {\n    Object.defineProperty(global, 'JsonLdProcessor', {\n      writable: true,\n      enumerable: false,\n      configurable: true,\n      value: JsonLdProcessor\n    });\n  } else {\n    global.JsonLdProcessor = JsonLdProcessor;\n  }\n}\n\n/* Utility API */\n\n// define setImmediate and nextTick\n//// nextTick implementation with browser-compatible fallback ////\n// from https://github.com/caolan/async/blob/master/lib/async.js\n\n// capture the global reference to guard against fakeTimer mocks\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\n\nvar _delay = _setImmediate ? function(fn) {\n  // not a direct alias (for IE10 compatibility)\n  _setImmediate(fn);\n} : function(fn) {\n  setTimeout(fn, 0);\n};\n\nif(typeof process === 'object' && typeof process.nextTick === 'function') {\n  jsonld.nextTick = process.nextTick;\n} else {\n  jsonld.nextTick = _delay;\n}\njsonld.setImmediate = _setImmediate ? _delay : jsonld.nextTick;\n\n/**\n * Parses a link header. The results will be key'd by the value of \"rel\".\n *\n * Link: <http://json-ld.org/contexts/person.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"\n *\n * Parses as: {\n *   'http://www.w3.org/ns/json-ld#context': {\n *     target: http://json-ld.org/contexts/person.jsonld,\n *     type: 'application/ld+json'\n *   }\n * }\n *\n * If there is more than one \"rel\" with the same IRI, then entries in the\n * resulting map for that \"rel\" will be arrays.\n *\n * @param header the link header to parse.\n */\njsonld.parseLinkHeader = function(header) {\n  var rval = {};\n  // split on unbracketed/unquoted commas\n  var entries = header.match(/(?:<[^>]*?>|\"[^\"]*?\"|[^,])+/g);\n  var rLinkHeader = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\n  for(var i = 0; i < entries.length; ++i) {\n    var match = entries[i].match(rLinkHeader);\n    if(!match) {\n      continue;\n    }\n    var result = {target: match[1]};\n    var params = match[2];\n    var rParams = /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n    while(match = rParams.exec(params)) {\n      result[match[1]] = (match[2] === undefined) ? match[3] : match[2];\n    }\n    var rel = result['rel'] || '';\n    if(_isArray(rval[rel])) {\n      rval[rel].push(result);\n    } else if(rel in rval) {\n      rval[rel] = [rval[rel], result];\n    } else {\n      rval[rel] = result;\n    }\n  }\n  return rval;\n};\n\n/**\n * Creates a simple queue for requesting documents.\n */\njsonld.RequestQueue = function() {\n  this._requests = {};\n};\njsonld.RequestQueue.prototype.wrapLoader = function(loader) {\n  this._loader = loader;\n  this._usePromise = (loader.length === 1);\n  return this.add.bind(this);\n};\njsonld.RequestQueue.prototype.add = function(url, callback) {\n  var self = this;\n\n  // callback must be given if not using promises\n  if(!callback && !self._usePromise) {\n    throw new Error('callback must be specified.');\n  }\n\n  // Promise-based API\n  if(self._usePromise) {\n    return new jsonld.Promise(function(resolve, reject) {\n      var load = self._requests[url];\n      if(!load) {\n        // load URL then remove from queue\n        load = self._requests[url] = self._loader(url)\n          .then(function(remoteDoc) {\n            delete self._requests[url];\n            return remoteDoc;\n          }).catch(function(err) {\n            delete self._requests[url];\n            throw err;\n          });\n      }\n      // resolve/reject promise once URL has been loaded\n      load.then(function(remoteDoc) {\n        resolve(remoteDoc);\n      }).catch(function(err) {\n        reject(err);\n      });\n    });\n  }\n\n  // callback-based API\n  if(url in self._requests) {\n    self._requests[url].push(callback);\n  } else {\n    self._requests[url] = [callback];\n    self._loader(url, function(err, remoteDoc) {\n      var callbacks = self._requests[url];\n      delete self._requests[url];\n      for(var i = 0; i < callbacks.length; ++i) {\n        callbacks[i](err, remoteDoc);\n      }\n    });\n  }\n};\n\n/**\n * Creates a simple document cache that retains documents for a short\n * period of time.\n *\n * FIXME: Implement simple HTTP caching instead.\n *\n * @param size the maximum size of the cache.\n */\njsonld.DocumentCache = function(size) {\n  this.order = [];\n  this.cache = {};\n  this.size = size || 50;\n  this.expires = 30 * 1000;\n};\njsonld.DocumentCache.prototype.get = function(url) {\n  if(url in this.cache) {\n    var entry = this.cache[url];\n    if(entry.expires >= +new Date()) {\n      return entry.ctx;\n    }\n    delete this.cache[url];\n    this.order.splice(this.order.indexOf(url), 1);\n  }\n  return null;\n};\njsonld.DocumentCache.prototype.set = function(url, ctx) {\n  if(this.order.length === this.size) {\n    delete this.cache[this.order.shift()];\n  }\n  this.order.push(url);\n  this.cache[url] = {ctx: ctx, expires: (+new Date() + this.expires)};\n};\n\n/**\n * Creates an active context cache.\n *\n * @param size the maximum size of the cache.\n */\njsonld.ActiveContextCache = function(size) {\n  this.order = [];\n  this.cache = {};\n  this.size = size || 100;\n};\njsonld.ActiveContextCache.prototype.get = function(activeCtx, localCtx) {\n  var key1 = JSON.stringify(activeCtx);\n  var key2 = JSON.stringify(localCtx);\n  var level1 = this.cache[key1];\n  if(level1 && key2 in level1) {\n    return level1[key2];\n  }\n  return null;\n};\njsonld.ActiveContextCache.prototype.set = function(\n  activeCtx, localCtx, result) {\n  if(this.order.length === this.size) {\n    var entry = this.order.shift();\n    delete this.cache[entry.activeCtx][entry.localCtx];\n  }\n  var key1 = JSON.stringify(activeCtx);\n  var key2 = JSON.stringify(localCtx);\n  this.order.push({activeCtx: key1, localCtx: key2});\n  if(!(key1 in this.cache)) {\n    this.cache[key1] = {};\n  }\n  this.cache[key1][key2] = _clone(result);\n};\n\n/**\n * Default JSON-LD cache.\n */\njsonld.cache = {\n  activeCtx: new jsonld.ActiveContextCache()\n};\n\n/**\n * Document loaders.\n */\njsonld.documentLoaders = {};\n\n/**\n * Creates a built-in jquery document loader.\n *\n * @param $ the jquery instance to use.\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          usePromise: true to use a promises API, false for a\n *            callback-continuation-style API; defaults to true if Promise\n *            is globally defined, false if not.\n *\n * @return the jquery document loader.\n */\njsonld.documentLoaders.jquery = function($, options) {\n  options = options || {};\n  var queue = new jsonld.RequestQueue();\n\n  // use option or, by default, use Promise when its defined\n  var usePromise = ('usePromise' in options ?\n    options.usePromise : (typeof Promise !== 'undefined'));\n  if(usePromise) {\n    return queue.wrapLoader(function(url) {\n      return jsonld.promisify(loader, url);\n    });\n  }\n  return queue.wrapLoader(loader);\n\n  function loader(url, callback) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    if(options.secure && url.indexOf('https') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    $.ajax({\n      url: url,\n      accepts: {\n        json: 'application/ld+json, application/json'\n      },\n      // ensure Accept header is very specific for JSON-LD/JSON\n      headers: {\n        'Accept': 'application/ld+json, application/json'\n      },\n      dataType: 'json',\n      crossDomain: true,\n      success: function(data, textStatus, jqXHR) {\n        var doc = {contextUrl: null, documentUrl: url, document: data};\n\n        // handle Link Header\n        var contentType = jqXHR.getResponseHeader('Content-Type');\n        var linkHeader = jqXHR.getResponseHeader('Link');\n        if(linkHeader && contentType !== 'application/ld+json') {\n          // only 1 related link header permitted\n          linkHeader = jsonld.parseLinkHeader(linkHeader)[LINK_HEADER_REL];\n          if(_isArray(linkHeader)) {\n            return callback(new JsonLdError(\n              'URL could not be dereferenced, it has more than one ' +\n              'associated HTTP Link Header.',\n              'jsonld.InvalidUrl',\n              {code: 'multiple context link headers', url: url}), doc);\n          }\n          if(linkHeader) {\n            doc.contextUrl = linkHeader.target;\n          }\n        }\n\n        callback(null, doc);\n      },\n      error: function(jqXHR, textStatus, err) {\n        callback(new JsonLdError(\n          'URL could not be dereferenced, an error occurred.',\n          'jsonld.LoadDocumentError',\n          {code: 'loading document failed', url: url, cause: err}),\n          {contextUrl: null, documentUrl: url, document: null});\n      }\n    });\n  }\n};\n\n/**\n * Creates a built-in node document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          strictSSL: true to require SSL certificates to be valid,\n *            false not to (default: true).\n *          maxRedirects: the maximum number of redirects to permit, none by\n *            default.\n *          request: the object which will make the request, default is\n *            provided by `https://www.npmjs.com/package/request`.\n *          headers: an array of headers which will be passed as request\n *            headers for the requested document. Accept is not allowed.\n *          usePromise: true to use a promises API, false for a\n *            callback-continuation-style API; false by default.\n *\n * @return the node document loader.\n */\njsonld.documentLoaders.node = function(options) {\n  options = options || {};\n  var strictSSL = ('strictSSL' in options) ? options.strictSSL : true;\n  var maxRedirects = ('maxRedirects' in options) ? options.maxRedirects : -1;\n  var request = ('request' in options) ? options.request : require('request');\n  var acceptHeader = 'application/ld+json, application/json';\n  var http = require('http');\n  // TODO: disable cache until HTTP caching implemented\n  //var cache = new jsonld.DocumentCache();\n\n  var queue = new jsonld.RequestQueue();\n  if(options.usePromise) {\n    return queue.wrapLoader(function(url) {\n      return jsonld.promisify(loadDocument, url, []);\n    });\n  }\n  var headers = options.headers || {};\n  if('Accept' in headers || 'accept' in headers) {\n    throw new RangeError(\n      'Accept header may not be specified as an option; only \"' +\n      acceptHeader + '\" is supported.');\n  }\n  return queue.wrapLoader(function(url, callback) {\n    loadDocument(url, [], callback);\n  });\n\n  function loadDocument(url, redirects, callback) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    if(options.secure && url.indexOf('https') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    // TODO: disable cache until HTTP caching implemented\n    var doc = null;//cache.get(url);\n    if(doc !== null) {\n      return callback(null, doc);\n    }\n    var headers = {'Accept': acceptHeader};\n    for(var k in options.headers) { headers[k] = options.headers[k]; }\n    request({\n      url: url,\n      headers: headers,\n      strictSSL: strictSSL,\n      followRedirect: false\n    }, handleResponse);\n\n    function handleResponse(err, res, body) {\n      doc = {contextUrl: null, documentUrl: url, document: body || null};\n\n      // handle error\n      if(err) {\n        return callback(new JsonLdError(\n          'URL could not be dereferenced, an error occurred.',\n          'jsonld.LoadDocumentError',\n          {code: 'loading document failed', url: url, cause: err}), doc);\n      }\n      var statusText = http.STATUS_CODES[res.statusCode];\n      if(res.statusCode >= 400) {\n        return callback(new JsonLdError(\n          'URL could not be dereferenced: ' + statusText,\n          'jsonld.InvalidUrl', {\n            code: 'loading document failed',\n            url: url,\n            httpStatusCode: res.statusCode\n          }), doc);\n      }\n\n      // handle Link Header\n      if(res.headers.link &&\n        res.headers['content-type'] !== 'application/ld+json') {\n        // only 1 related link header permitted\n        var linkHeader = jsonld.parseLinkHeader(\n          res.headers.link)[LINK_HEADER_REL];\n        if(_isArray(linkHeader)) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced, it has more than one associated ' +\n            'HTTP Link Header.',\n            'jsonld.InvalidUrl',\n            {code: 'multiple context link headers', url: url}), doc);\n        }\n        if(linkHeader) {\n          doc.contextUrl = linkHeader.target;\n        }\n      }\n\n      // handle redirect\n      if(res.statusCode >= 300 && res.statusCode < 400 &&\n        res.headers.location) {\n        if(redirects.length === maxRedirects) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced; there were too many redirects.',\n            'jsonld.TooManyRedirects', {\n              code: 'loading document failed',\n              url: url,\n              httpStatusCode: res.statusCode,\n              redirects: redirects\n            }), doc);\n        }\n        if(redirects.indexOf(url) !== -1) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced; infinite redirection was detected.',\n            'jsonld.InfiniteRedirectDetected', {\n              code: 'recursive context inclusion',\n              url: url,\n              httpStatusCode: res.statusCode,\n              redirects: redirects\n            }), doc);\n        }\n        redirects.push(url);\n        return loadDocument(res.headers.location, redirects, callback);\n      }\n      // cache for each redirected URL\n      redirects.push(url);\n      // TODO: disable cache until HTTP caching implemented\n      /*for(var i = 0; i < redirects.length; ++i) {\n        cache.set(\n          redirects[i],\n          {contextUrl: null, documentUrl: redirects[i], document: body});\n      }*/\n      callback(err, doc);\n    }\n  }\n};\n\n/**\n * Creates a built-in XMLHttpRequest document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          usePromise: true to use a promises API, false for a\n *            callback-continuation-style API; defaults to true if Promise\n *            is globally defined, false if not.\n *          [xhr]: the XMLHttpRequest API to use.\n *\n * @return the XMLHttpRequest document loader.\n */\njsonld.documentLoaders.xhr = function(options) {\n  options = options || {};\n  var rlink = /(^|(\\r\\n))link:/i;\n  var queue = new jsonld.RequestQueue();\n\n  // use option or, by default, use Promise when its defined\n  var usePromise = ('usePromise' in options ?\n    options.usePromise : (typeof Promise !== 'undefined'));\n  if(usePromise) {\n    return queue.wrapLoader(function(url) {\n      return jsonld.promisify(loader, url);\n    });\n  }\n  return queue.wrapLoader(loader);\n\n  function loader(url, callback) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    if(options.secure && url.indexOf('https') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    var xhr = options.xhr || XMLHttpRequest;\n    var req = new xhr();\n    req.onload = function() {\n      if(req.status >= 400) {\n        return callback(new JsonLdError(\n          'URL could not be dereferenced: ' + req.statusText,\n          'jsonld.LoadDocumentError', {\n            code: 'loading document failed',\n            url: url,\n            httpStatusCode: req.status\n          }), {contextUrl: null, documentUrl: url, document: null});\n      }\n\n      var doc = {contextUrl: null, documentUrl: url, document: req.response};\n\n      // handle Link Header (avoid unsafe header warning by existence testing)\n      var contentType = req.getResponseHeader('Content-Type');\n      var linkHeader;\n      if(rlink.test(req.getAllResponseHeaders())) {\n        linkHeader = req.getResponseHeader('Link');\n      }\n      if(linkHeader && contentType !== 'application/ld+json') {\n        // only 1 related link header permitted\n        linkHeader = jsonld.parseLinkHeader(linkHeader)[LINK_HEADER_REL];\n        if(_isArray(linkHeader)) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced, it has more than one ' +\n            'associated HTTP Link Header.',\n            'jsonld.InvalidUrl',\n            {code: 'multiple context link headers', url: url}), doc);\n        }\n        if(linkHeader) {\n          doc.contextUrl = linkHeader.target;\n        }\n      }\n\n      callback(null, doc);\n    };\n    req.onerror = function() {\n      callback(new JsonLdError(\n        'URL could not be dereferenced, an error occurred.',\n        'jsonld.LoadDocumentError',\n        {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    };\n    req.open('GET', url, true);\n    req.setRequestHeader('Accept', 'application/ld+json, application/json');\n    req.send();\n  }\n};\n\n/**\n * Assigns the default document loader for external document URLs to a built-in\n * default. Supported types currently include: 'jquery' and 'node'.\n *\n * To use the jquery document loader, the first parameter must be a reference\n * to the main jquery object.\n *\n * @param type the type to set.\n * @param [params] the parameters required to use the document loader.\n */\njsonld.useDocumentLoader = function(type) {\n  if(!(type in jsonld.documentLoaders)) {\n    throw new JsonLdError(\n      'Unknown document loader type: \"' + type + '\"',\n      'jsonld.UnknownDocumentLoader',\n      {type: type});\n  }\n\n  // set document loader\n  jsonld.documentLoader = jsonld.documentLoaders[type].apply(\n    jsonld, Array.prototype.slice.call(arguments, 1));\n};\n\n/**\n * Processes a local context, resolving any URLs as necessary, and returns a\n * new active context in its callback.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param [options] the options to use:\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, ctx) called once the operation completes.\n */\njsonld.processContext = function(activeCtx, localCtx) {\n  // get arguments\n  var options = {};\n  var callbackArg = 2;\n  if(arguments.length > 3) {\n    options = arguments[2] || {};\n    callbackArg += 1;\n  }\n  var callback = arguments[callbackArg];\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // return initial context early for null context\n  if(localCtx === null) {\n    return callback(null, _getInitialContext(options));\n  }\n\n  // retrieve URLs in localCtx\n  localCtx = _clone(localCtx);\n  if(!(_isObject(localCtx) && '@context' in localCtx)) {\n    localCtx = {'@context': localCtx};\n  }\n  _retrieveContextUrls(localCtx, options, function(err, ctx) {\n    if(err) {\n      return callback(err);\n    }\n    try {\n      // process context\n      ctx = new Processor().processContext(activeCtx, ctx, options);\n    } catch(ex) {\n      return callback(ex);\n    }\n    callback(null, ctx);\n  });\n};\n\n/**\n * Returns true if the given subject has the given property.\n *\n * @param subject the subject to check.\n * @param property the property to look for.\n *\n * @return true if the subject has the given property, false if not.\n */\njsonld.hasProperty = function(subject, property) {\n  var rval = false;\n  if(property in subject) {\n    var value = subject[property];\n    rval = (!_isArray(value) || value.length > 0);\n  }\n  return rval;\n};\n\n/**\n * Determines if the given value is a property of the given subject.\n *\n * @param subject the subject to check.\n * @param property the property to check.\n * @param value the value to check.\n *\n * @return true if the value exists, false if not.\n */\njsonld.hasValue = function(subject, property, value) {\n  var rval = false;\n  if(jsonld.hasProperty(subject, property)) {\n    var val = subject[property];\n    var isList = _isList(val);\n    if(_isArray(val) || isList) {\n      if(isList) {\n        val = val['@list'];\n      }\n      for(var i = 0; i < val.length; ++i) {\n        if(jsonld.compareValues(value, val[i])) {\n          rval = true;\n          break;\n        }\n      }\n    } else if(!_isArray(value)) {\n      // avoid matching the set of values with an array value parameter\n      rval = jsonld.compareValues(value, val);\n    }\n  }\n  return rval;\n};\n\n/**\n * Adds a value to a subject. If the value is an array, all values in the\n * array will be added.\n *\n * @param subject the subject to add the value to.\n * @param property the property that relates the value to the subject.\n * @param value the value to add.\n * @param [options] the options to use:\n *        [propertyIsArray] true if the property is always an array, false\n *          if not (default: false).\n *        [allowDuplicate] true to allow duplicates, false not to (uses a\n *          simple shallow comparison of subject ID or value) (default: true).\n */\njsonld.addValue = function(subject, property, value, options) {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n  if(!('allowDuplicate' in options)) {\n    options.allowDuplicate = true;\n  }\n\n  if(_isArray(value)) {\n    if(value.length === 0 && options.propertyIsArray &&\n      !(property in subject)) {\n      subject[property] = [];\n    }\n    for(var i = 0; i < value.length; ++i) {\n      jsonld.addValue(subject, property, value[i], options);\n    }\n  } else if(property in subject) {\n    // check if subject already has value if duplicates not allowed\n    var hasValue = (!options.allowDuplicate &&\n      jsonld.hasValue(subject, property, value));\n\n    // make property an array if value not present or always an array\n    if(!_isArray(subject[property]) &&\n      (!hasValue || options.propertyIsArray)) {\n      subject[property] = [subject[property]];\n    }\n\n    // add new value\n    if(!hasValue) {\n      subject[property].push(value);\n    }\n  } else {\n    // add new value as set or single value\n    subject[property] = options.propertyIsArray ? [value] : value;\n  }\n};\n\n/**\n * Gets all of the values for a subject's property as an array.\n *\n * @param subject the subject.\n * @param property the property.\n *\n * @return all of the values for a subject's property as an array.\n */\njsonld.getValues = function(subject, property) {\n  var rval = subject[property] || [];\n  if(!_isArray(rval)) {\n    rval = [rval];\n  }\n  return rval;\n};\n\n/**\n * Removes a property from a subject.\n *\n * @param subject the subject.\n * @param property the property.\n */\njsonld.removeProperty = function(subject, property) {\n  delete subject[property];\n};\n\n/**\n * Removes a value from a subject.\n *\n * @param subject the subject.\n * @param property the property that relates the value to the subject.\n * @param value the value to remove.\n * @param [options] the options to use:\n *          [propertyIsArray] true if the property is always an array, false\n *            if not (default: false).\n */\njsonld.removeValue = function(subject, property, value, options) {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n\n  // filter out value\n  var values = jsonld.getValues(subject, property).filter(function(e) {\n    return !jsonld.compareValues(e, value);\n  });\n\n  if(values.length === 0) {\n    jsonld.removeProperty(subject, property);\n  } else if(values.length === 1 && !options.propertyIsArray) {\n    subject[property] = values[0];\n  } else {\n    subject[property] = values;\n  }\n};\n\n/**\n * Compares two JSON-LD values for equality. Two JSON-LD values will be\n * considered equal if:\n *\n * 1. They are both primitives of the same type and value.\n * 2. They are both @values with the same @value, @type, @language,\n *   and @index, OR\n * 3. They both have @ids they are the same.\n *\n * @param v1 the first value.\n * @param v2 the second value.\n *\n * @return true if v1 and v2 are considered equal, false if not.\n */\njsonld.compareValues = function(v1, v2) {\n  // 1. equal primitives\n  if(v1 === v2) {\n    return true;\n  }\n\n  // 2. equal @values\n  if(_isValue(v1) && _isValue(v2) &&\n    v1['@value'] === v2['@value'] &&\n    v1['@type'] === v2['@type'] &&\n    v1['@language'] === v2['@language'] &&\n    v1['@index'] === v2['@index']) {\n    return true;\n  }\n\n  // 3. equal @ids\n  if(_isObject(v1) && ('@id' in v1) && _isObject(v2) && ('@id' in v2)) {\n    return v1['@id'] === v2['@id'];\n  }\n\n  return false;\n};\n\n/**\n * Gets the value for the given active context key and type, null if none is\n * set.\n *\n * @param ctx the active context.\n * @param key the context key.\n * @param [type] the type of value to get (eg: '@id', '@type'), if not\n *          specified gets the entire entry for a key, null if not found.\n *\n * @return the value.\n */\njsonld.getContextValue = function(ctx, key, type) {\n  var rval = null;\n\n  // return null for invalid key\n  if(key === null) {\n    return rval;\n  }\n\n  // get default language\n  if(type === '@language' && (type in ctx)) {\n    rval = ctx[type];\n  }\n\n  // get specific entry information\n  if(ctx.mappings[key]) {\n    var entry = ctx.mappings[key];\n\n    if(_isUndefined(type)) {\n      // return whole entry\n      rval = entry;\n    } else if(type in entry) {\n      // return entry value for type\n      rval = entry[type];\n    }\n  }\n\n  return rval;\n};\n\n/** Registered RDF dataset parsers hashed by content-type. */\nvar _rdfParsers = {};\n\n/**\n * Registers an RDF dataset parser by content-type, for use with\n * jsonld.fromRDF. An RDF dataset parser will always be given two parameters,\n * a string of input and a callback. An RDF dataset parser can be synchronous\n * or asynchronous.\n *\n * If the parser function returns undefined or null then it will be assumed to\n * be asynchronous w/a continuation-passing style and the callback parameter\n * given to the parser MUST be invoked.\n *\n * If it returns a Promise, then it will be assumed to be asynchronous, but the\n * callback parameter MUST NOT be invoked. It should instead be ignored.\n *\n * If it returns an RDF dataset, it will be assumed to be synchronous and the\n * callback parameter MUST NOT be invoked. It should instead be ignored.\n *\n * @param contentType the content-type for the parser.\n * @param parser(input, callback(err, dataset)) the parser function (takes a\n *          string as a parameter and either returns null/undefined and uses\n *          the given callback, returns a Promise, or returns an RDF dataset).\n */\njsonld.registerRDFParser = function(contentType, parser) {\n  _rdfParsers[contentType] = parser;\n};\n\n/**\n * Unregisters an RDF dataset parser by content-type.\n *\n * @param contentType the content-type for the parser.\n */\njsonld.unregisterRDFParser = function(contentType) {\n  delete _rdfParsers[contentType];\n};\n\nif(_nodejs) {\n  // needed for serialization of XML literals\n  if(typeof XMLSerializer === 'undefined') {\n    var XMLSerializer = null;\n  }\n  if(typeof Node === 'undefined') {\n    var Node = {\n      ELEMENT_NODE: 1,\n      ATTRIBUTE_NODE: 2,\n      TEXT_NODE: 3,\n      CDATA_SECTION_NODE: 4,\n      ENTITY_REFERENCE_NODE: 5,\n      ENTITY_NODE: 6,\n      PROCESSING_INSTRUCTION_NODE: 7,\n      COMMENT_NODE: 8,\n      DOCUMENT_NODE: 9,\n      DOCUMENT_TYPE_NODE: 10,\n      DOCUMENT_FRAGMENT_NODE: 11,\n      NOTATION_NODE:12\n    };\n  }\n}\n\n// constants\nvar XSD_BOOLEAN = 'http://www.w3.org/2001/XMLSchema#boolean';\nvar XSD_DOUBLE = 'http://www.w3.org/2001/XMLSchema#double';\nvar XSD_INTEGER = 'http://www.w3.org/2001/XMLSchema#integer';\nvar XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string';\n\nvar RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nvar RDF_LIST = RDF + 'List';\nvar RDF_FIRST = RDF + 'first';\nvar RDF_REST = RDF + 'rest';\nvar RDF_NIL = RDF + 'nil';\nvar RDF_TYPE = RDF + 'type';\nvar RDF_PLAIN_LITERAL = RDF + 'PlainLiteral';\nvar RDF_XML_LITERAL = RDF + 'XMLLiteral';\nvar RDF_OBJECT = RDF + 'object';\nvar RDF_LANGSTRING = RDF + 'langString';\n\nvar LINK_HEADER_REL = 'http://www.w3.org/ns/json-ld#context';\nvar MAX_CONTEXT_URLS = 10;\n\n/**\n * A JSON-LD Error.\n *\n * @param msg the error message.\n * @param type the error type.\n * @param details the error details.\n */\nvar JsonLdError = function(msg, type, details) {\n  if(_nodejs) {\n    Error.call(this);\n    Error.captureStackTrace(this, this.constructor);\n  } else if(typeof Error !== 'undefined') {\n    this.stack = (new Error()).stack;\n  }\n  this.name = type || 'jsonld.Error';\n  this.message = msg || 'An unspecified JSON-LD error occurred.';\n  this.details = details || {};\n};\nif(_nodejs) {\n  require('util').inherits(JsonLdError, Error);\n} else if(typeof Error !== 'undefined') {\n  JsonLdError.prototype = new Error();\n}\n\n/**\n * Constructs a new JSON-LD Processor.\n */\nvar Processor = function() {};\n\n/**\n * Recursively compacts an element using the given active context. All values\n * must be in expanded form before this method is called.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the compacted property associated with the element\n *          to compact, null for none.\n * @param element the element to compact.\n * @param options the compaction options.\n *\n * @return the compacted value.\n */\nProcessor.prototype.compact = function(\n  activeCtx, activeProperty, element, options) {\n  // recursively compact array\n  if(_isArray(element)) {\n    var rval = [];\n    for(var i = 0; i < element.length; ++i) {\n      // compact, dropping any null values\n      var compacted = this.compact(\n        activeCtx, activeProperty, element[i], options);\n      if(compacted !== null) {\n        rval.push(compacted);\n      }\n    }\n    if(options.compactArrays && rval.length === 1) {\n      // use single element if no container is specified\n      var container = jsonld.getContextValue(\n        activeCtx, activeProperty, '@container');\n      if(container === null) {\n        rval = rval[0];\n      }\n    }\n    return rval;\n  }\n\n  // recursively compact object\n  if(_isObject(element)) {\n    if(options.link && '@id' in element && element['@id'] in options.link) {\n      // check for a linked element to reuse\n      var linked = options.link[element['@id']];\n      for(var i = 0; i < linked.length; ++i) {\n        if(linked[i].expanded === element) {\n          return linked[i].compacted;\n        }\n      }\n    }\n\n    // do value compaction on @values and subject references\n    if(_isValue(element) || _isSubjectReference(element)) {\n      var rval = _compactValue(activeCtx, activeProperty, element);\n      if(options.link && _isSubjectReference(element)) {\n        // store linked element\n        if(!(element['@id'] in options.link)) {\n          options.link[element['@id']] = [];\n        }\n        options.link[element['@id']].push({expanded: element, compacted: rval});\n      }\n      return rval;\n    }\n\n    // FIXME: avoid misuse of active property as an expanded property?\n    var insideReverse = (activeProperty === '@reverse');\n\n    var rval = {};\n\n    if(options.link && '@id' in element) {\n      // store linked element\n      if(!(element['@id'] in options.link)) {\n        options.link[element['@id']] = [];\n      }\n      options.link[element['@id']].push({expanded: element, compacted: rval});\n    }\n\n    // process element keys in order\n    var keys = Object.keys(element).sort();\n    for(var ki = 0; ki < keys.length; ++ki) {\n      var expandedProperty = keys[ki];\n      var expandedValue = element[expandedProperty];\n\n      // compact @id and @type(s)\n      if(expandedProperty === '@id' || expandedProperty === '@type') {\n        var compactedValue;\n\n        // compact single @id\n        if(_isString(expandedValue)) {\n          compactedValue = _compactIri(\n            activeCtx, expandedValue, null,\n            {vocab: (expandedProperty === '@type')});\n        } else {\n          // expanded value must be a @type array\n          compactedValue = [];\n          for(var vi = 0; vi < expandedValue.length; ++vi) {\n            compactedValue.push(_compactIri(\n              activeCtx, expandedValue[vi], null, {vocab: true}));\n          }\n        }\n\n        // use keyword alias and add value\n        var alias = _compactIri(activeCtx, expandedProperty);\n        var isArray = (_isArray(compactedValue) && expandedValue.length === 0);\n        jsonld.addValue(\n          rval, alias, compactedValue, {propertyIsArray: isArray});\n        continue;\n      }\n\n      // handle @reverse\n      if(expandedProperty === '@reverse') {\n        // recursively compact expanded value\n        var compactedValue = this.compact(\n          activeCtx, '@reverse', expandedValue, options);\n\n        // handle double-reversed properties\n        for(var compactedProperty in compactedValue) {\n          if(activeCtx.mappings[compactedProperty] &&\n            activeCtx.mappings[compactedProperty].reverse) {\n            var value = compactedValue[compactedProperty];\n            var container = jsonld.getContextValue(\n              activeCtx, compactedProperty, '@container');\n            var useArray = (container === '@set' || !options.compactArrays);\n            jsonld.addValue(\n              rval, compactedProperty, value, {propertyIsArray: useArray});\n            delete compactedValue[compactedProperty];\n          }\n        }\n\n        if(Object.keys(compactedValue).length > 0) {\n          // use keyword alias and add value\n          var alias = _compactIri(activeCtx, expandedProperty);\n          jsonld.addValue(rval, alias, compactedValue);\n        }\n\n        continue;\n      }\n\n      // handle @index property\n      if(expandedProperty === '@index') {\n        // drop @index if inside an @index container\n        var container = jsonld.getContextValue(\n          activeCtx, activeProperty, '@container');\n        if(container === '@index') {\n          continue;\n        }\n\n        // use keyword alias and add value\n        var alias = _compactIri(activeCtx, expandedProperty);\n        jsonld.addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // skip array processing for keywords that aren't @graph or @list\n      if(expandedProperty !== '@graph' && expandedProperty !== '@list' &&\n        _isKeyword(expandedProperty)) {\n        // use keyword alias and add value as is\n        var alias = _compactIri(activeCtx, expandedProperty);\n        jsonld.addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // Note: expanded value must be an array due to expansion algorithm.\n\n      // preserve empty arrays\n      if(expandedValue.length === 0) {\n        var itemActiveProperty = _compactIri(\n          activeCtx, expandedProperty, expandedValue, {vocab: true},\n          insideReverse);\n        jsonld.addValue(\n          rval, itemActiveProperty, expandedValue, {propertyIsArray: true});\n      }\n\n      // recusively process array values\n      for(var vi = 0; vi < expandedValue.length; ++vi) {\n        var expandedItem = expandedValue[vi];\n\n        // compact property and get container type\n        var itemActiveProperty = _compactIri(\n          activeCtx, expandedProperty, expandedItem, {vocab: true},\n          insideReverse);\n        var container = jsonld.getContextValue(\n          activeCtx, itemActiveProperty, '@container');\n\n        // get @list value if appropriate\n        var isList = _isList(expandedItem);\n        var list = null;\n        if(isList) {\n          list = expandedItem['@list'];\n        }\n\n        // recursively compact expanded item\n        var compactedItem = this.compact(\n          activeCtx, itemActiveProperty, isList ? list : expandedItem, options);\n\n        // handle @list\n        if(isList) {\n          // ensure @list value is an array\n          if(!_isArray(compactedItem)) {\n            compactedItem = [compactedItem];\n          }\n\n          if(container !== '@list') {\n            // wrap using @list alias\n            var wrapper = {};\n            wrapper[_compactIri(activeCtx, '@list')] = compactedItem;\n            compactedItem = wrapper;\n\n            // include @index from expanded @list, if any\n            if('@index' in expandedItem) {\n              compactedItem[_compactIri(activeCtx, '@index')] =\n                expandedItem['@index'];\n            }\n          } else if(itemActiveProperty in rval) {\n            // can't use @list container for more than 1 list\n            throw new JsonLdError(\n              'JSON-LD compact error; property has a \"@list\" @container ' +\n              'rule but there is more than a single @list that matches ' +\n              'the compacted term in the document. Compaction might mix ' +\n              'unwanted items into the list.',\n              'jsonld.SyntaxError', {code: 'compaction to list of lists'});\n          }\n        }\n\n        // handle language and index maps\n        if(container === '@language' || container === '@index') {\n          // get or create the map object\n          var mapObject;\n          if(itemActiveProperty in rval) {\n            mapObject = rval[itemActiveProperty];\n          } else {\n            rval[itemActiveProperty] = mapObject = {};\n          }\n\n          // if container is a language map, simplify compacted value to\n          // a simple string\n          if(container === '@language' && _isValue(compactedItem)) {\n            compactedItem = compactedItem['@value'];\n          }\n\n          // add compact value to map object using key from expanded value\n          // based on the container type\n          jsonld.addValue(mapObject, expandedItem[container], compactedItem);\n        } else {\n          // use an array if: compactArrays flag is false,\n          // @container is @set or @list , value is an empty\n          // array, or key is @graph\n          var isArray = (!options.compactArrays || container === '@set' ||\n            container === '@list' ||\n            (_isArray(compactedItem) && compactedItem.length === 0) ||\n            expandedProperty === '@list' || expandedProperty === '@graph');\n\n          // add compact value\n          jsonld.addValue(\n            rval, itemActiveProperty, compactedItem,\n            {propertyIsArray: isArray});\n        }\n      }\n    }\n\n    return rval;\n  }\n\n  // only primitives remain which are already compact\n  return element;\n};\n\n/**\n * Recursively expands an element using the given context. Any context in\n * the element will be removed. All context URLs must have been retrieved\n * before calling this method.\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element, null for none.\n * @param element the element to expand.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n *\n * @return the expanded value.\n */\nProcessor.prototype.expand = function(\n  activeCtx, activeProperty, element, options, insideList) {\n  var self = this;\n\n  // nothing to expand\n  if(element === null || element === undefined) {\n    return null;\n  }\n\n  if(!_isArray(element) && !_isObject(element)) {\n    // drop free-floating scalars that are not in lists\n    if(!insideList && (activeProperty === null ||\n      _expandIri(activeCtx, activeProperty, {vocab: true}) === '@graph')) {\n      return null;\n    }\n\n    // expand element according to value expansion rules\n    return _expandValue(activeCtx, activeProperty, element);\n  }\n\n  // recursively expand array\n  if(_isArray(element)) {\n    var rval = [];\n    var container = jsonld.getContextValue(\n      activeCtx, activeProperty, '@container');\n    insideList = insideList || container === '@list';\n    for(var i = 0; i < element.length; ++i) {\n      // expand element\n      var e = self.expand(activeCtx, activeProperty, element[i], options);\n      if(insideList && (_isArray(e) || _isList(e))) {\n        // lists of lists are illegal\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; lists of lists are not permitted.',\n          'jsonld.SyntaxError', {code: 'list of lists'});\n      }\n      // drop null values\n      if(e !== null) {\n        if(_isArray(e)) {\n          rval = rval.concat(e);\n        } else {\n          rval.push(e);\n        }\n      }\n    }\n    return rval;\n  }\n\n  // recursively expand object:\n\n  // if element has a context, process it\n  if('@context' in element) {\n    activeCtx = self.processContext(activeCtx, element['@context'], options);\n  }\n\n  // expand the active property\n  var expandedActiveProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true});\n\n  var rval = {};\n  var keys = Object.keys(element).sort();\n  for(var ki = 0; ki < keys.length; ++ki) {\n    var key = keys[ki];\n    var value = element[key];\n    var expandedValue;\n\n    // skip @context\n    if(key === '@context') {\n      continue;\n    }\n\n    // expand property\n    var expandedProperty = _expandIri(activeCtx, key, {vocab: true});\n\n    // drop non-absolute IRI keys that aren't keywords\n    if(expandedProperty === null ||\n      !(_isAbsoluteIri(expandedProperty) || _isKeyword(expandedProperty))) {\n      continue;\n    }\n\n    if(_isKeyword(expandedProperty)) {\n      if(expandedActiveProperty === '@reverse') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a keyword cannot be used as a @reverse ' +\n          'property.', 'jsonld.SyntaxError',\n          {code: 'invalid reverse property map', value: value});\n      }\n      if(expandedProperty in rval) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; colliding keywords detected.',\n          'jsonld.SyntaxError',\n          {code: 'colliding keywords', keyword: expandedProperty});\n      }\n    }\n\n    // syntax error if @id is not a string\n    if(expandedProperty === '@id' && !_isString(value)) {\n      if(!options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@id\" value must a string.',\n          'jsonld.SyntaxError', {code: 'invalid @id value', value: value});\n      }\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@id\" value must be a string or an ' +\n          'object.', 'jsonld.SyntaxError',\n          {code: 'invalid @id value', value: value});\n      }\n    }\n\n    if(expandedProperty === '@type') {\n      _validateTypeValue(value);\n    }\n\n    // @graph must be an array or an object\n    if(expandedProperty === '@graph' &&\n      !(_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@graph\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError', {code: 'invalid @graph value', value: value});\n    }\n\n    // @value must not be an object or an array\n    if(expandedProperty === '@value' &&\n      (_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@value\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError',\n        {code: 'invalid value object value', value: value});\n    }\n\n    // @language must be a string\n    if(expandedProperty === '@language') {\n      if(value === null) {\n        // drop null @language values, they expand as if they didn't exist\n        continue;\n      }\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@language\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language-tagged string', value: value});\n      }\n      // ensure language value is lowercase\n      value = value.toLowerCase();\n    }\n\n    // @index must be a string\n    if(expandedProperty === '@index') {\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@index\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @index value', value: value});\n      }\n    }\n\n    // @reverse must be an object\n    if(expandedProperty === '@reverse') {\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@reverse\" value must be an object.',\n          'jsonld.SyntaxError', {code: 'invalid @reverse value', value: value});\n      }\n\n      expandedValue = self.expand(activeCtx, '@reverse', value, options);\n\n      // properties double-reversed\n      if('@reverse' in expandedValue) {\n        for(var property in expandedValue['@reverse']) {\n          jsonld.addValue(\n            rval, property, expandedValue['@reverse'][property],\n            {propertyIsArray: true});\n        }\n      }\n\n      // FIXME: can this be merged with code below to simplify?\n      // merge in all reversed properties\n      var reverseMap = rval['@reverse'] || null;\n      for(var property in expandedValue) {\n        if(property === '@reverse') {\n          continue;\n        }\n        if(reverseMap === null) {\n          reverseMap = rval['@reverse'] = {};\n        }\n        jsonld.addValue(reverseMap, property, [], {propertyIsArray: true});\n        var items = expandedValue[property];\n        for(var ii = 0; ii < items.length; ++ii) {\n          var item = items[ii];\n          if(_isValue(item) || _isList(item)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n              '@value or an @list.', 'jsonld.SyntaxError',\n              {code: 'invalid reverse property value', value: expandedValue});\n          }\n          jsonld.addValue(\n            reverseMap, property, item, {propertyIsArray: true});\n        }\n      }\n\n      continue;\n    }\n\n    var container = jsonld.getContextValue(activeCtx, key, '@container');\n\n    if(container === '@language' && _isObject(value)) {\n      // handle language map container (skip if value is not an object)\n      expandedValue = _expandLanguageMap(value);\n    } else if(container === '@index' && _isObject(value)) {\n      // handle index container (skip if value is not an object)\n      expandedValue = (function _expandIndexMap(activeProperty) {\n        var rval = [];\n        var keys = Object.keys(value).sort();\n        for(var ki = 0; ki < keys.length; ++ki) {\n          var key = keys[ki];\n          var val = value[key];\n          if(!_isArray(val)) {\n            val = [val];\n          }\n          val = self.expand(activeCtx, activeProperty, val, options, false);\n          for(var vi = 0; vi < val.length; ++vi) {\n            var item = val[vi];\n            if(!('@index' in item)) {\n              item['@index'] = key;\n            }\n            rval.push(item);\n          }\n        }\n        return rval;\n      })(key);\n    } else {\n      // recurse into @list or @set\n      var isList = (expandedProperty === '@list');\n      if(isList || expandedProperty === '@set') {\n        var nextActiveProperty = activeProperty;\n        if(isList && expandedActiveProperty === '@graph') {\n          nextActiveProperty = null;\n        }\n        expandedValue = self.expand(\n          activeCtx, nextActiveProperty, value, options, isList);\n        if(isList && _isList(expandedValue)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; lists of lists are not permitted.',\n            'jsonld.SyntaxError', {code: 'list of lists'});\n        }\n      } else {\n        // recursively expand value with key as new active property\n        expandedValue = self.expand(activeCtx, key, value, options, false);\n      }\n    }\n\n    // drop null values if property is not @value\n    if(expandedValue === null && expandedProperty !== '@value') {\n      continue;\n    }\n\n    // convert expanded value to @list if container specifies it\n    if(expandedProperty !== '@list' && !_isList(expandedValue) &&\n      container === '@list') {\n      // ensure expanded value is an array\n      expandedValue = (_isArray(expandedValue) ?\n        expandedValue : [expandedValue]);\n      expandedValue = {'@list': expandedValue};\n    }\n\n    // FIXME: can this be merged with code above to simplify?\n    // merge in reverse properties\n    if(activeCtx.mappings[key] && activeCtx.mappings[key].reverse) {\n      var reverseMap = rval['@reverse'] = rval['@reverse'] || {};\n      if(!_isArray(expandedValue)) {\n        expandedValue = [expandedValue];\n      }\n      for(var ii = 0; ii < expandedValue.length; ++ii) {\n        var item = expandedValue[ii];\n        if(_isValue(item) || _isList(item)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n            '@value or an @list.', 'jsonld.SyntaxError',\n            {code: 'invalid reverse property value', value: expandedValue});\n        }\n        jsonld.addValue(\n          reverseMap, expandedProperty, item, {propertyIsArray: true});\n      }\n      continue;\n    }\n\n    // add value for property\n    // use an array except for certain keywords\n    var useArray =\n      ['@index', '@id', '@type', '@value', '@language'].indexOf(\n        expandedProperty) === -1;\n    jsonld.addValue(\n      rval, expandedProperty, expandedValue, {propertyIsArray: useArray});\n  }\n\n  // get property count on expanded output\n  keys = Object.keys(rval);\n  var count = keys.length;\n\n  if('@value' in rval) {\n    // @value must only have @language or @type\n    if('@type' in rval && '@language' in rval) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may not ' +\n        'contain both \"@type\" and \"@language\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    var validCount = count - 1;\n    if('@type' in rval) {\n      validCount -= 1;\n    }\n    if('@index' in rval) {\n      validCount -= 1;\n    }\n    if('@language' in rval) {\n      validCount -= 1;\n    }\n    if(validCount !== 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may only ' +\n        'have an \"@index\" property and at most one other property ' +\n        'which can be \"@type\" or \"@language\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    // drop null @values\n    if(rval['@value'] === null) {\n      rval = null;\n    } else if('@language' in rval && !_isString(rval['@value'])) {\n      // if @language is present, @value must be a string\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; only strings may be language-tagged.',\n        'jsonld.SyntaxError',\n        {code: 'invalid language-tagged value', element: rval});\n    } else if('@type' in rval && (!_isAbsoluteIri(rval['@type']) ||\n      rval['@type'].indexOf('_:') === 0)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" and \"@type\" ' +\n        'must have an absolute IRI for the value of \"@type\".',\n        'jsonld.SyntaxError', {code: 'invalid typed value', element: rval});\n    }\n  } else if('@type' in rval && !_isArray(rval['@type'])) {\n    // convert @type to an array\n    rval['@type'] = [rval['@type']];\n  } else if('@set' in rval || '@list' in rval) {\n    // handle @set and @list\n    if(count > 1 && !(count === 2 && '@index' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; if an element has the property \"@set\" ' +\n        'or \"@list\", then it can have at most one other property that is ' +\n        '\"@index\".', 'jsonld.SyntaxError',\n        {code: 'invalid set or list object', element: rval});\n    }\n    // optimize away @set\n    if('@set' in rval) {\n      rval = rval['@set'];\n      keys = Object.keys(rval);\n      count = keys.length;\n    }\n  } else if(count === 1 && '@language' in rval) {\n    // drop objects with only @language\n    rval = null;\n  }\n\n  // drop certain top-level objects that do not occur in lists\n  if(_isObject(rval) &&\n    !options.keepFreeFloatingNodes && !insideList &&\n    (activeProperty === null || expandedActiveProperty === '@graph')) {\n    // drop empty object, top-level @value/@list, or object with only @id\n    if(count === 0 || '@value' in rval || '@list' in rval ||\n      (count === 1 && '@id' in rval)) {\n      rval = null;\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Creates a JSON-LD node map (node ID => node).\n *\n * @param input the expanded JSON-LD to create a node map of.\n * @param [options] the options to use:\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [namer] (deprecated).\n *\n * @return the node map.\n */\nProcessor.prototype.createNodeMap = function(input, options) {\n  options = options || {};\n\n  // produce a map of all subjects and name each bnode\n  var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');\n  var graphs = {'@default': {}};\n  _createNodeMap(input, graphs, '@default', issuer);\n\n  // add all non-default graphs to default graph\n  return _mergeNodeMaps(graphs);\n};\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\nProcessor.prototype.flatten = function(input) {\n  var defaultGraph = this.createNodeMap(input);\n\n  // produce flattened output\n  var flattened = [];\n  var keys = Object.keys(defaultGraph).sort();\n  for(var ki = 0; ki < keys.length; ++ki) {\n    var node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n  return flattened;\n};\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the expanded JSON-LD to frame.\n * @param frame the expanded JSON-LD frame to use.\n * @param options the framing options.\n *\n * @return the framed output.\n */\nProcessor.prototype.frame = function(input, frame, options) {\n  // create framing state\n  var state = {\n    options: options,\n    graphs: {'@default': {}, '@merged': {}},\n    subjectStack: [],\n    link: {}\n  };\n\n  // produce a map of all graphs and name each bnode\n  // FIXME: currently uses subjects from @merged graph only\n  var issuer = new IdentifierIssuer('_:b');\n  _createNodeMap(input, state.graphs, '@merged', issuer);\n  state.subjects = state.graphs['@merged'];\n\n  // frame the subjects\n  var framed = [];\n  _frame(state, Object.keys(state.subjects).sort(), frame, framed, null);\n  return framed;\n};\n\n/**\n * Performs normalization on the given RDF dataset.\n *\n * @param dataset the RDF dataset to normalize.\n * @param options the normalization options.\n * @param callback(err, normalized) called once the operation completes.\n */\nProcessor.prototype.normalize = function(dataset, options, callback) {\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015(options).main(dataset, callback);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    return new URGNA2012(options).main(dataset, callback);\n  }\n  callback(new Error(\n    'Invalid RDF Dataset Normalization algorithm: ' + options.algorithm));\n};\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset the RDF dataset.\n * @param options the RDF serialization options.\n * @param callback(err, output) called once the operation completes.\n */\nProcessor.prototype.fromRDF = function(dataset, options, callback) {\n  var defaultGraph = {};\n  var graphMap = {'@default': defaultGraph};\n  var referencedOnce = {};\n\n  for(var name in dataset) {\n    var graph = dataset[name];\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n    var nodeMap = graphMap[name];\n    for(var ti = 0; ti < graph.length; ++ti) {\n      var triple = graph[ti];\n\n      // get subject, predicate, object\n      var s = triple.subject.value;\n      var p = triple.predicate.value;\n      var o = triple.object;\n\n      if(!(s in nodeMap)) {\n        nodeMap[s] = {'@id': s};\n      }\n      var node = nodeMap[s];\n\n      var objectIsId = (o.type === 'IRI' || o.type === 'blank node');\n      if(objectIsId && !(o.value in nodeMap)) {\n        nodeMap[o.value] = {'@id': o.value};\n      }\n\n      if(p === RDF_TYPE && !options.useRdfType && objectIsId) {\n        jsonld.addValue(node, '@type', o.value, {propertyIsArray: true});\n        continue;\n      }\n\n      var value = _RDFToObject(o, options.useNativeTypes);\n      jsonld.addValue(node, p, value, {propertyIsArray: true});\n\n      // object may be an RDF list/partial list node but we can't know easily\n      // until all triples are read\n      if(objectIsId) {\n        if(o.value === RDF_NIL) {\n          // track rdf:nil uniquely per graph\n          var object = nodeMap[o.value];\n          if(!('usages' in object)) {\n            object.usages = [];\n          }\n          object.usages.push({\n            node: node,\n            property: p,\n            value: value\n          });\n        } else if(o.value in referencedOnce) {\n          // object referenced more than once\n          referencedOnce[o.value] = false;\n        } else {\n          // keep track of single reference\n          referencedOnce[o.value] = {\n            node: node,\n            property: p,\n            value: value\n          };\n        }\n      }\n    }\n  }\n\n  // convert linked lists to @list arrays\n  for(var name in graphMap) {\n    var graphObject = graphMap[name];\n\n    // no @lists to be converted, continue\n    if(!(RDF_NIL in graphObject)) {\n      continue;\n    }\n\n    // iterate backwards through each RDF list\n    var nil = graphObject[RDF_NIL];\n    for(var i = 0; i < nil.usages.length; ++i) {\n      var usage = nil.usages[i];\n      var node = usage.node;\n      var property = usage.property;\n      var head = usage.value;\n      var list = [];\n      var listNodes = [];\n\n      // ensure node is a well-formed list node; it must:\n      // 1. Be referenced only once.\n      // 2. Have an array for rdf:first that has 1 item.\n      // 3. Have an array for rdf:rest that has 1 item.\n      // 4. Have no keys other than: @id, rdf:first, rdf:rest, and,\n      //   optionally, @type where the value is rdf:List.\n      var nodeKeyCount = Object.keys(node).length;\n      while(property === RDF_REST &&\n        _isObject(referencedOnce[node['@id']]) &&\n        _isArray(node[RDF_FIRST]) && node[RDF_FIRST].length === 1 &&\n        _isArray(node[RDF_REST]) && node[RDF_REST].length === 1 &&\n        (nodeKeyCount === 3 || (nodeKeyCount === 4 && _isArray(node['@type']) &&\n          node['@type'].length === 1 && node['@type'][0] === RDF_LIST))) {\n        list.push(node[RDF_FIRST][0]);\n        listNodes.push(node['@id']);\n\n        // get next node, moving backwards through list\n        usage = referencedOnce[node['@id']];\n        node = usage.node;\n        property = usage.property;\n        head = usage.value;\n        nodeKeyCount = Object.keys(node).length;\n\n        // if node is not a blank node, then list head found\n        if(node['@id'].indexOf('_:') !== 0) {\n          break;\n        }\n      }\n\n      // the list is nested in another list\n      if(property === RDF_FIRST) {\n        // empty list\n        if(node['@id'] === RDF_NIL) {\n          // can't convert rdf:nil to a @list object because it would\n          // result in a list of lists which isn't supported\n          continue;\n        }\n\n        // preserve list head\n        head = graphObject[head['@id']][RDF_REST][0];\n        list.pop();\n        listNodes.pop();\n      }\n\n      // transform list into @list object\n      delete head['@id'];\n      head['@list'] = list.reverse();\n      for(var j = 0; j < listNodes.length; ++j) {\n        delete graphObject[listNodes[j]];\n      }\n    }\n\n    delete nil.usages;\n  }\n\n  var result = [];\n  var subjects = Object.keys(defaultGraph).sort();\n  for(var i = 0; i < subjects.length; ++i) {\n    var subject = subjects[i];\n    var node = defaultGraph[subject];\n    if(subject in graphMap) {\n      var graph = node['@graph'] = [];\n      var graphObject = graphMap[subject];\n      var subjects_ = Object.keys(graphObject).sort();\n      for(var si = 0; si < subjects_.length; ++si) {\n        var node_ = graphObject[subjects_[si]];\n        // only add full subjects to top-level\n        if(!_isSubjectReference(node_)) {\n          graph.push(node_);\n        }\n      }\n    }\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      result.push(node);\n    }\n  }\n\n  callback(null, result);\n};\n\n/**\n * Outputs an RDF dataset for the expanded JSON-LD input.\n *\n * @param input the expanded JSON-LD input.\n * @param options the RDF serialization options.\n *\n * @return the RDF dataset.\n */\nProcessor.prototype.toRDF = function(input, options) {\n  // create node map for default graph (and any named graphs)\n  var issuer = new IdentifierIssuer('_:b');\n  var nodeMap = {'@default': {}};\n  _createNodeMap(input, nodeMap, '@default', issuer);\n\n  var dataset = {};\n  var graphNames = Object.keys(nodeMap).sort();\n  for(var i = 0; i < graphNames.length; ++i) {\n    var graphName = graphNames[i];\n    // skip relative IRIs\n    if(graphName === '@default' || _isAbsoluteIri(graphName)) {\n      dataset[graphName] = _graphToRDF(nodeMap[graphName], issuer, options);\n    }\n  }\n  return dataset;\n};\n\n/**\n * Processes a local context and returns a new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param options the context processing options.\n *\n * @return the new active context.\n */\nProcessor.prototype.processContext = function(activeCtx, localCtx, options) {\n  // normalize local context to an array of @context objects\n  if(_isObject(localCtx) && '@context' in localCtx &&\n    _isArray(localCtx['@context'])) {\n    localCtx = localCtx['@context'];\n  }\n  var ctxs = _isArray(localCtx) ? localCtx : [localCtx];\n\n  // no contexts in array, clone existing context\n  if(ctxs.length === 0) {\n    return activeCtx.clone();\n  }\n\n  // process each context in order, update active context\n  // on each iteration to ensure proper caching\n  var rval = activeCtx;\n  for(var i = 0; i < ctxs.length; ++i) {\n    var ctx = ctxs[i];\n\n    // reset to initial context\n    if(ctx === null) {\n      rval = activeCtx = _getInitialContext(options);\n      continue;\n    }\n\n    // dereference @context key if present\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // context must be an object by now, all URLs retrieved before this call\n    if(!_isObject(ctx)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context must be an object.',\n        'jsonld.SyntaxError', {code: 'invalid local context', context: ctx});\n    }\n\n    // get context from cache if available\n    if(jsonld.cache.activeCtx) {\n      var cached = jsonld.cache.activeCtx.get(activeCtx, ctx);\n      if(cached) {\n        rval = activeCtx = cached;\n        continue;\n      }\n    }\n\n    // update active context and clone new one before updating\n    activeCtx = rval;\n    rval = rval.clone();\n\n    // define context mappings for keys in local context\n    var defined = {};\n\n    // handle @base\n    if('@base' in ctx) {\n      var base = ctx['@base'];\n\n      // clear base\n      if(base === null) {\n        base = null;\n      } else if(!_isString(base)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      } else if(base !== '' && !_isAbsoluteIri(base)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be an absolute IRI or the empty string.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      }\n\n      if(base !== null) {\n        base = jsonld.url.parse(base || '');\n      }\n      rval['@base'] = base;\n      defined['@base'] = true;\n    }\n\n    // handle @vocab\n    if('@vocab' in ctx) {\n      var value = ctx['@vocab'];\n      if(value === null) {\n        delete rval['@vocab'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else if(!_isAbsoluteIri(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be an absolute IRI.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else {\n        rval['@vocab'] = value;\n      }\n      defined['@vocab'] = true;\n    }\n\n    // handle @language\n    if('@language' in ctx) {\n      var value = ctx['@language'];\n      if(value === null) {\n        delete rval['@language'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@language\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError',\n          {code: 'invalid default language', context: ctx});\n      } else {\n        rval['@language'] = value.toLowerCase();\n      }\n      defined['@language'] = true;\n    }\n\n    // process all other keys\n    for(var key in ctx) {\n      _createTermDefinition(rval, ctx, key, defined);\n    }\n\n    // cache result\n    if(jsonld.cache.activeCtx) {\n      jsonld.cache.activeCtx.set(activeCtx, ctx, rval);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Expands a language map.\n *\n * @param languageMap the language map to expand.\n *\n * @return the expanded language map.\n */\nfunction _expandLanguageMap(languageMap) {\n  var rval = [];\n  var keys = Object.keys(languageMap).sort();\n  for(var ki = 0; ki < keys.length; ++ki) {\n    var key = keys[ki];\n    var val = languageMap[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n    for(var vi = 0; vi < val.length; ++vi) {\n      var item = val[vi];\n      if(item === null) {\n          // null values are allowed (8.5) but ignored (3.1)\n          continue;\n      }\n      if(!_isString(item)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; language map values must be strings.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language map value', languageMap: languageMap});\n      }\n      rval.push({\n        '@value': item,\n        '@language': key.toLowerCase()\n      });\n    }\n  }\n  return rval;\n}\n\n/**\n * Labels the blank nodes in the given value using the given IdentifierIssuer.\n *\n * @param issuer the IdentifierIssuer to use.\n * @param element the element with blank nodes to rename.\n *\n * @return the element.\n */\nfunction _labelBlankNodes(issuer, element) {\n  if(_isArray(element)) {\n    for(var i = 0; i < element.length; ++i) {\n      element[i] = _labelBlankNodes(issuer, element[i]);\n    }\n  } else if(_isList(element)) {\n    element['@list'] = _labelBlankNodes(issuer, element['@list']);\n  } else if(_isObject(element)) {\n    // relabel blank node\n    if(_isBlankNode(element)) {\n      element['@id'] = issuer.getId(element['@id']);\n    }\n\n    // recursively apply to all keys\n    var keys = Object.keys(element).sort();\n    for(var ki = 0; ki < keys.length; ++ki) {\n      var key = keys[ki];\n      if(key !== '@id') {\n        element[key] = _labelBlankNodes(issuer, element[key]);\n      }\n    }\n  }\n\n  return element;\n}\n\n/**\n * Expands the given value by using the coercion and keyword rules in the\n * given context.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the active property the value is associated with.\n * @param value the value to expand.\n *\n * @return the expanded value.\n */\nfunction _expandValue(activeCtx, activeProperty, value) {\n  // nothing to expand\n  if(value === null || value === undefined) {\n    return null;\n  }\n\n  // special-case expand @id and @type (skips '@id' expansion)\n  var expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});\n  if(expandedProperty === '@id') {\n    return _expandIri(activeCtx, value, {base: true});\n  } else if(expandedProperty === '@type') {\n    return _expandIri(activeCtx, value, {vocab: true, base: true});\n  }\n\n  // get type definition from context\n  var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n\n  // do @id expansion (automatic for @graph)\n  if(type === '@id' || (expandedProperty === '@graph' && _isString(value))) {\n    return {'@id': _expandIri(activeCtx, value, {base: true})};\n  }\n  // do @id expansion w/vocab\n  if(type === '@vocab') {\n    return {'@id': _expandIri(activeCtx, value, {vocab: true, base: true})};\n  }\n\n  // do not expand keyword values\n  if(_isKeyword(expandedProperty)) {\n    return value;\n  }\n\n  var rval = {};\n\n  if(type !== null) {\n    // other type\n    rval['@type'] = type;\n  } else if(_isString(value)) {\n    // check for language tagging for strings\n    var language = jsonld.getContextValue(\n      activeCtx, activeProperty, '@language');\n    if(language !== null) {\n      rval['@language'] = language;\n    }\n  }\n  // do conversion of values that aren't basic JSON types to strings\n  if(['boolean', 'number', 'string'].indexOf(typeof value) === -1) {\n    value = value.toString();\n  }\n  rval['@value'] = value;\n\n  return rval;\n}\n\n/**\n * Creates an array of RDF triples for the given graph.\n *\n * @param graph the graph to create RDF triples for.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param options the RDF serialization options.\n *\n * @return the array of RDF triples for the given graph.\n */\nfunction _graphToRDF(graph, issuer, options) {\n  var rval = [];\n\n  var ids = Object.keys(graph).sort();\n  for(var i = 0; i < ids.length; ++i) {\n    var id = ids[i];\n    var node = graph[id];\n    var properties = Object.keys(node).sort();\n    for(var pi = 0; pi < properties.length; ++pi) {\n      var property = properties[pi];\n      var items = node[property];\n      if(property === '@type') {\n        property = RDF_TYPE;\n      } else if(_isKeyword(property)) {\n        continue;\n      }\n\n      for(var ii = 0; ii < items.length; ++ii) {\n        var item = items[ii];\n\n        // RDF subject\n        var subject = {};\n        subject.type = (id.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n        subject.value = id;\n\n        // skip relative IRI subjects\n        if(!_isAbsoluteIri(id)) {\n          continue;\n        }\n\n        // RDF predicate\n        var predicate = {};\n        predicate.type = (property.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n        predicate.value = property;\n\n        // skip relative IRI predicates\n        if(!_isAbsoluteIri(property)) {\n          continue;\n        }\n\n        // skip blank node predicates unless producing generalized RDF\n        if(predicate.type === 'blank node' && !options.produceGeneralizedRdf) {\n          continue;\n        }\n\n        // convert @list to triples\n        if(_isList(item)) {\n          _listToRDF(item['@list'], issuer, subject, predicate, rval);\n        } else {\n          // convert value or node object to triple\n          var object = _objectToRDF(item);\n          // skip null objects (they are relative IRIs)\n          if(object) {\n            rval.push({subject: subject, predicate: predicate, object: object});\n          }\n        }\n      }\n    }\n  }\n\n  return rval;\n}\n\n/**\n * Converts a @list value into linked list of blank node RDF triples\n * (an RDF collection).\n *\n * @param list the @list value.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param subject the subject for the head of the list.\n * @param predicate the predicate for the head of the list.\n * @param triples the array of triples to append to.\n */\nfunction _listToRDF(list, issuer, subject, predicate, triples) {\n  var first = {type: 'IRI', value: RDF_FIRST};\n  var rest = {type: 'IRI', value: RDF_REST};\n  var nil = {type: 'IRI', value: RDF_NIL};\n\n  for(var i = 0; i < list.length; ++i) {\n    var item = list[i];\n\n    var blankNode = {type: 'blank node', value: issuer.getId()};\n    triples.push({subject: subject, predicate: predicate, object: blankNode});\n\n    subject = blankNode;\n    predicate = first;\n    var object = _objectToRDF(item);\n\n    // skip null objects (they are relative IRIs)\n    if(object) {\n      triples.push({subject: subject, predicate: predicate, object: object});\n    }\n\n    predicate = rest;\n  }\n\n  triples.push({subject: subject, predicate: predicate, object: nil});\n}\n\n/**\n * Converts a JSON-LD value object to an RDF literal or a JSON-LD string or\n * node object to an RDF resource.\n *\n * @param item the JSON-LD value or node object.\n *\n * @return the RDF literal or RDF resource.\n */\nfunction _objectToRDF(item) {\n  var object = {};\n\n  // convert value object to RDF\n  if(_isValue(item)) {\n    object.type = 'literal';\n    var value = item['@value'];\n    var datatype = item['@type'] || null;\n\n    // convert to XSD datatypes as appropriate\n    if(_isBoolean(value)) {\n      object.value = value.toString();\n      object.datatype = datatype || XSD_BOOLEAN;\n    } else if(_isDouble(value) || datatype === XSD_DOUBLE) {\n      if(!_isDouble(value)) {\n        value = parseFloat(value);\n      }\n      // canonical double representation\n      object.value = value.toExponential(15).replace(/(\\d)0*e\\+?/, '$1E');\n      object.datatype = datatype || XSD_DOUBLE;\n    } else if(_isNumber(value)) {\n      object.value = value.toFixed(0);\n      object.datatype = datatype || XSD_INTEGER;\n    } else if('@language' in item) {\n      object.value = value;\n      object.datatype = datatype || RDF_LANGSTRING;\n      object.language = item['@language'];\n    } else {\n      object.value = value;\n      object.datatype = datatype || XSD_STRING;\n    }\n  } else {\n    // convert string/node object to RDF\n    var id = _isObject(item) ? item['@id'] : item;\n    object.type = (id.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n    object.value = id;\n  }\n\n  // skip relative IRIs\n  if(object.type === 'IRI' && !_isAbsoluteIri(object.value)) {\n    return null;\n  }\n\n  return object;\n}\n\n/**\n * Converts an RDF triple object to a JSON-LD object.\n *\n * @param o the RDF triple object to convert.\n * @param useNativeTypes true to output native types, false not to.\n *\n * @return the JSON-LD object.\n */\nfunction _RDFToObject(o, useNativeTypes) {\n  // convert IRI/blank node object to JSON-LD\n  if(o.type === 'IRI' || o.type === 'blank node') {\n    return {'@id': o.value};\n  }\n\n  // convert literal to JSON-LD\n  var rval = {'@value': o.value};\n\n  // add language\n  if(o.language) {\n    rval['@language'] = o.language;\n  } else {\n    var type = o.datatype;\n    if(!type) {\n      type = XSD_STRING;\n    }\n    // use native types for certain xsd types\n    if(useNativeTypes) {\n      if(type === XSD_BOOLEAN) {\n        if(rval['@value'] === 'true') {\n          rval['@value'] = true;\n        } else if(rval['@value'] === 'false') {\n          rval['@value'] = false;\n        }\n      } else if(_isNumeric(rval['@value'])) {\n        if(type === XSD_INTEGER) {\n          var i = parseInt(rval['@value'], 10);\n          if(i.toFixed(0) === rval['@value']) {\n            rval['@value'] = i;\n          }\n        } else if(type === XSD_DOUBLE) {\n          rval['@value'] = parseFloat(rval['@value']);\n        }\n      }\n      // do not add native type\n      if([XSD_BOOLEAN, XSD_INTEGER, XSD_DOUBLE, XSD_STRING]\n        .indexOf(type) === -1) {\n        rval['@type'] = type;\n      }\n    } else if(type !== XSD_STRING) {\n      rval['@type'] = type;\n    }\n  }\n\n  return rval;\n}\n\n/**\n * Compares two RDF triples for equality.\n *\n * @param t1 the first triple.\n * @param t2 the second triple.\n *\n * @return true if the triples are the same, false if not.\n */\nfunction _compareRDFTriples(t1, t2) {\n  var attrs = ['subject', 'predicate', 'object'];\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(t1[attr].type !== t2[attr].type || t1[attr].value !== t2[attr].value) {\n      return false;\n    }\n  }\n  if(t1.object.language !== t2.object.language) {\n    return false;\n  }\n  if(t1.object.datatype !== t2.object.datatype) {\n    return false;\n  }\n  return true;\n}\n\n/////////////////////////////// DEFINE URDNA2015 //////////////////////////////\n\nvar URDNA2015 = (function() {\n\nvar POSITIONS = {'subject': 's', 'object': 'o', 'name': 'g'};\n\nvar Normalize = function(options) {\n  options = options || {};\n  this.name = 'URDNA2015';\n  this.options = options;\n  this.blankNodeInfo = {};\n  this.hashToBlankNodes = {};\n  this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n  this.quads = [];\n  this.schedule = {};\n  if('maxCallStackDepth' in options) {\n    this.schedule.MAX_DEPTH = options.maxCallStackDepth;\n  } else {\n    this.schedule.MAX_DEPTH = 500;\n  }\n  if('maxTotalCallStackDepth' in options) {\n    this.schedule.MAX_TOTAL_DEPTH = options.maxCallStackDepth;\n  } else {\n    this.schedule.MAX_TOTAL_DEPTH = 0xFFFFFFFF;\n  }\n  this.schedule.depth = 0;\n  this.schedule.totalDepth = 0;\n  if('timeSlice' in options) {\n    this.schedule.timeSlice = options.timeSlice;\n  } else {\n    // milliseconds\n    this.schedule.timeSlice = 10;\n  }\n};\n\n// do some work in a time slice, but in serial\nNormalize.prototype.doWork = function(fn, callback) {\n  var schedule = this.schedule;\n\n  if(schedule.totalDepth >= schedule.MAX_TOTAL_DEPTH) {\n    return callback(new Error(\n      'Maximum total call stack depth exceeded; normalization aborting.'));\n  }\n\n  (function work() {\n    if(schedule.depth === schedule.MAX_DEPTH) {\n      // stack too deep, run on next tick\n      schedule.depth = 0;\n      schedule.running = false;\n      return jsonld.nextTick(work);\n    }\n\n    // if not yet running, force run\n    var now = new Date().getTime();\n    if(!schedule.running) {\n      schedule.start = new Date().getTime();\n      schedule.deadline = schedule.start + schedule.timeSlice;\n    }\n\n    // TODO: should also include an estimate of expectedWorkTime\n    if(now < schedule.deadline) {\n      schedule.running = true;\n      schedule.depth++;\n      schedule.totalDepth++;\n      return fn(function(err, result) {\n        schedule.depth--;\n        schedule.totalDepth--;\n        callback(err, result);\n      });\n    }\n\n    // not enough time left in this slice, run after letting browser\n    // do some other things\n    schedule.depth = 0;\n    schedule.running = false;\n    jsonld.setImmediate(work);\n  })();\n};\n\n// asynchronously loop\nNormalize.prototype.forEach = function(iterable, fn, callback) {\n  var self = this;\n  var iterator;\n  var idx = 0;\n  var length;\n  if(_isArray(iterable)) {\n    length = iterable.length;\n    iterator = function() {\n      if(idx === length) {\n        return false;\n      }\n      iterator.value = iterable[idx++];\n      iterator.key = idx;\n      return true;\n    };\n  } else {\n    var keys = Object.keys(iterable);\n    length = keys.length;\n    iterator = function() {\n      if(idx === length) {\n        return false;\n      }\n      iterator.key = keys[idx++];\n      iterator.value = iterable[iterator.key];\n      return true;\n    };\n  }\n\n  (function iterate(err, result) {\n    if(err) {\n      return callback(err);\n    }\n    if(iterator()) {\n      return self.doWork(function() {\n        fn(iterator.value, iterator.key, iterate);\n      });\n    }\n    callback();\n  })();\n};\n\n// asynchronous waterfall\nNormalize.prototype.waterfall = function(fns, callback) {\n  var self = this;\n  self.forEach(fns, function(fn, idx, callback) {\n    self.doWork(fn, callback);\n  }, callback);\n};\n\n// asynchronous while\nNormalize.prototype.whilst = function(condition, fn, callback) {\n  var self = this;\n  (function loop(err) {\n    if(err) {\n      return callback(err);\n    }\n    if(!condition()) {\n      return callback();\n    }\n    self.doWork(fn, loop);\n  })();\n};\n\n// 4.4) Normalization Algorithm\nNormalize.prototype.main = function(dataset, callback) {\n  var self = this;\n  self.schedule.start = new Date().getTime();\n  var result;\n\n  // handle invalid output format\n  if(self.options.format) {\n    if(self.options.format !== 'application/nquads') {\n      return callback(new JsonLdError(\n        'Unknown output format.',\n        'jsonld.UnknownFormat', {format: self.options.format}));\n    }\n  }\n\n  // 1) Create the normalization state.\n\n  // Note: Optimize by generating non-normalized blank node map concurrently.\n  var nonNormalized = {};\n\n  self.waterfall([\n    function(callback) {\n      // 2) For every quad in input dataset:\n      self.forEach(dataset, function(triples, graphName, callback) {\n        if(graphName === '@default') {\n          graphName = null;\n        }\n        self.forEach(triples, function(quad, idx, callback) {\n          if(graphName !== null) {\n            if(graphName.indexOf('_:') === 0) {\n              quad.name = {type: 'blank node', value: graphName};\n            } else {\n              quad.name = {type: 'IRI', value: graphName};\n            }\n          }\n          self.quads.push(quad);\n\n          // 2.1) For each blank node that occurs in the quad, add a reference\n          // to the quad using the blank node identifier in the blank node to\n          // quads map, creating a new entry if necessary.\n          self.forEachComponent(quad, function(component) {\n            if(component.type !== 'blank node') {\n              return;\n            }\n            var id = component.value;\n            if(id in self.blankNodeInfo) {\n              self.blankNodeInfo[id].quads.push(quad);\n            } else {\n              nonNormalized[id] = true;\n              self.blankNodeInfo[id] = {quads: [quad]};\n            }\n          });\n          callback();\n        }, callback);\n      }, callback);\n    },\n    function(callback) {\n      // 3) Create a list of non-normalized blank node identifiers\n      // non-normalized identifiers and populate it using the keys from the\n      // blank node to quads map.\n      // Note: We use a map here and it was generated during step 2.\n\n      // 4) Initialize simple, a boolean flag, to true.\n      var simple = true;\n\n      // 5) While simple is true, issue canonical identifiers for blank nodes:\n      self.whilst(function() { return simple; }, function(callback) {\n        // 5.1) Set simple to false.\n        simple = false;\n\n        // 5.2) Clear hash to blank nodes map.\n        self.hashToBlankNodes = {};\n\n        self.waterfall([\n          function(callback) {\n            // 5.3) For each blank node identifier identifier in non-normalized\n            // identifiers:\n            self.forEach(nonNormalized, function(value, id, callback) {\n              // 5.3.1) Create a hash, hash, according to the Hash First Degree\n              // Quads algorithm.\n              self.hashFirstDegreeQuads(id, function(err, hash) {\n                if(err) {\n                  return callback(err);\n                }\n                // 5.3.2) Add hash and identifier to hash to blank nodes map,\n                // creating a new entry if necessary.\n                if(hash in self.hashToBlankNodes) {\n                  self.hashToBlankNodes[hash].push(id);\n                } else {\n                  self.hashToBlankNodes[hash] = [id];\n                }\n                callback();\n              });\n            }, callback);\n          },\n          function(callback) {\n            // 5.4) For each hash to identifier list mapping in hash to blank\n            // nodes map, lexicographically-sorted by hash:\n            var hashes = Object.keys(self.hashToBlankNodes).sort();\n            self.forEach(hashes, function(hash, i, callback) {\n              // 5.4.1) If the length of identifier list is greater than 1,\n              // continue to the next mapping.\n              var idList = self.hashToBlankNodes[hash];\n              if(idList.length > 1) {\n                return callback();\n              }\n\n              // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n              // issuer and the single blank node identifier in identifier\n              // list, identifier, to issue a canonical replacement identifier\n              // for identifier.\n              // TODO: consider changing `getId` to `issue`\n              var id = idList[0];\n              self.canonicalIssuer.getId(id);\n\n              // 5.4.3) Remove identifier from non-normalized identifiers.\n              delete nonNormalized[id];\n\n              // 5.4.4) Remove hash from the hash to blank nodes map.\n              delete self.hashToBlankNodes[hash];\n\n              // 5.4.5) Set simple to true.\n              simple = true;\n              callback();\n            }, callback);\n          }\n        ], callback);\n      }, callback);\n    },\n    function(callback) {\n      // 6) For each hash to identifier list mapping in hash to blank nodes map,\n      // lexicographically-sorted by hash:\n      var hashes = Object.keys(self.hashToBlankNodes).sort();\n      self.forEach(hashes, function(hash, idx, callback) {\n        // 6.1) Create hash path list where each item will be a result of\n        // running the Hash N-Degree Quads algorithm.\n        var hashPathList = [];\n\n        // 6.2) For each blank node identifier identifier in identifier list:\n        var idList = self.hashToBlankNodes[hash];\n        self.waterfall([\n          function(callback) {\n            self.forEach(idList, function(id, idx, callback) {\n              // 6.2.1) If a canonical identifier has already been issued for\n              // identifier, continue to the next identifier.\n              if(self.canonicalIssuer.hasId(id)) {\n                return callback();\n              }\n\n              // 6.2.2) Create temporary issuer, an identifier issuer\n              // initialized with the prefix _:b.\n              var issuer = new IdentifierIssuer('_:b');\n\n              // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n              // issuer and identifier, to issue a new temporary blank node\n              // identifier for identifier.\n              issuer.getId(id);\n\n              // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n              // temporary issuer, and append the result to the hash path list.\n              self.hashNDegreeQuads(id, issuer, function(err, result) {\n                if(err) {\n                  return callback(err);\n                }\n                hashPathList.push(result);\n                callback();\n              });\n            }, callback);\n          },\n          function(callback) {\n            // 6.3) For each result in the hash path list,\n            // lexicographically-sorted by the hash in result:\n            hashPathList.sort(function(a, b) {\n              return (a.hash < b.hash) ? -1 : ((a.hash > b.hash) ? 1 : 0);\n            });\n            self.forEach(hashPathList, function(result, idx, callback) {\n              // 6.3.1) For each blank node identifier, existing identifier,\n              // that was issued a temporary identifier by identifier issuer\n              // in result, issue a canonical identifier, in the same order,\n              // using the Issue Identifier algorithm, passing canonical\n              // issuer and existing identifier.\n              for(var existing in result.issuer.existing) {\n                self.canonicalIssuer.getId(existing);\n              }\n              callback();\n            }, callback);\n          }\n        ], callback);\n      }, callback);\n    }, function(callback) {\n      /* Note: At this point all blank nodes in the set of RDF quads have been\n      assigned canonical identifiers, which have been stored in the canonical\n      issuer. Here each quad is updated by assigning each of its blank nodes\n      its new identifier. */\n\n      // 7) For each quad, quad, in input dataset:\n      var normalized = [];\n      self.waterfall([\n        function(callback) {\n          self.forEach(self.quads, function(quad, idx, callback) {\n            // 7.1) Create a copy, quad copy, of quad and replace any existing\n            // blank node identifiers using the canonical identifiers\n            // previously issued by canonical issuer.\n            // Note: We optimize away the copy here.\n            self.forEachComponent(quad, function(component) {\n              if(component.type === 'blank node' &&\n                component.value.indexOf(self.canonicalIssuer.prefix) !== 0) {\n                component.value = self.canonicalIssuer.getId(component.value);\n              }\n            });\n            // 7.2) Add quad copy to the normalized dataset.\n            normalized.push(_toNQuad(quad));\n            callback();\n          }, callback);\n        },\n        function(callback) {\n          // sort normalized output\n          normalized.sort();\n\n          // 8) Return the normalized dataset.\n          if(self.options.format === 'application/nquads') {\n            result = normalized.join('');\n            return callback();\n          }\n\n          result = _parseNQuads(normalized.join(''));\n          callback();\n        }\n      ], callback);\n    }\n  ], function(err) {\n    callback(err, result);\n  });\n};\n\n// 4.6) Hash First Degree Quads\nNormalize.prototype.hashFirstDegreeQuads = function(id, callback) {\n  var self = this;\n\n  // return cached hash\n  var info = self.blankNodeInfo[id];\n  if('hash' in info) {\n    return callback(null, info.hash);\n  }\n\n  // 1) Initialize nquads to an empty list. It will be used to store quads in\n  // N-Quads format.\n  var nquads = [];\n\n  // 2) Get the list of quads quads associated with the reference blank node\n  // identifier in the blank node to quads map.\n  var quads = info.quads;\n\n  // 3) For each quad quad in quads:\n  self.forEach(quads, function(quad, idx, callback) {\n    // 3.1) Serialize the quad in N-Quads format with the following special\n    // rule:\n\n    // 3.1.1) If any component in quad is an blank node, then serialize it\n    // using a special identifier as follows:\n    var copy = {predicate: quad.predicate};\n    self.forEachComponent(quad, function(component, key) {\n      // 3.1.2) If the blank node's existing blank node identifier matches the\n      // reference blank node identifier then use the blank node identifier _:a,\n      // otherwise, use the blank node identifier _:z.\n      copy[key] = self.modifyFirstDegreeComponent(id, component, key);\n    });\n    nquads.push(_toNQuad(copy));\n    callback();\n  }, function(err) {\n    if(err) {\n      return callback(err);\n    }\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    info.hash = NormalizeHash.hashNQuads(self.name, nquads);\n    callback(null, info.hash);\n  });\n};\n\n// helper for modifying component during Hash First Degree Quads\nNormalize.prototype.modifyFirstDegreeComponent = function(id, component) {\n  if(component.type !== 'blank node') {\n    return component;\n  }\n  component = _clone(component);\n  component.value = (component.value === id ? '_:a' : '_:z');\n  return component;\n};\n\n// 4.7) Hash Related Blank Node\nNormalize.prototype.hashRelatedBlankNode = function(\n  related, quad, issuer, position, callback) {\n  var self = this;\n\n  // 1) Set the identifier to use for related, preferring first the canonical\n  // identifier for related if issued, second the identifier issued by issuer\n  // if issued, and last, if necessary, the result of the Hash First Degree\n  // Quads algorithm, passing related.\n  var id;\n  self.waterfall([\n    function(callback) {\n      if(self.canonicalIssuer.hasId(related)) {\n        id = self.canonicalIssuer.getId(related);\n        return callback();\n      }\n      if(issuer.hasId(related)) {\n        id = issuer.getId(related);\n        return callback();\n      }\n      self.hashFirstDegreeQuads(related, function(err, hash) {\n        if(err) {\n          return callback(err);\n        }\n        id = hash;\n        callback();\n      });\n    }\n  ], function(err) {\n    if(err) {\n      return callback(err);\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    var md = new NormalizeHash(self.name);\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(self.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    return callback(null, md.digest());\n  });\n};\n\n// helper for getting a related predicate\nNormalize.prototype.getRelatedPredicate = function(quad) {\n  return '<' + quad.predicate.value + '>';\n};\n\n// 4.8) Hash N-Degree Quads\nNormalize.prototype.hashNDegreeQuads = function(id, issuer, callback) {\n  var self = this;\n\n  // 1) Create a hash to related blank nodes map for storing hashes that\n  // identify related blank nodes.\n  // Note: 2) and 3) handled within `createHashToRelated`\n  var hashToRelated;\n  var md = new NormalizeHash(self.name);\n  self.waterfall([\n    function(callback) {\n      self.createHashToRelated(id, issuer, function(err, result) {\n        if(err) {\n          return callback(err);\n        }\n        hashToRelated = result;\n        callback();\n      });\n    },\n    function(callback) {\n      // 4) Create an empty string, data to hash.\n      // Note: We created a hash object `md` above instead.\n\n      // 5) For each related hash to blank node list mapping in hash to related\n      // blank nodes map, sorted lexicographically by related hash:\n      var hashes = Object.keys(hashToRelated).sort();\n      self.forEach(hashes, function(hash, idx, callback) {\n        // 5.1) Append the related hash to the data to hash.\n        md.update(hash);\n\n        // 5.2) Create a string chosen path.\n        var chosenPath = '';\n\n        // 5.3) Create an unset chosen issuer variable.\n        var chosenIssuer;\n\n        // 5.4) For each permutation of blank node list:\n        var permutator = new Permutator(hashToRelated[hash]);\n        self.whilst(\n          function() { return permutator.hasNext(); },\n          function(nextPermutation) {\n          var permutation = permutator.next();\n\n          // 5.4.1) Create a copy of issuer, issuer copy.\n          var issuerCopy = issuer.clone();\n\n          // 5.4.2) Create a string path.\n          var path = '';\n\n          // 5.4.3) Create a recursion list, to store blank node identifiers\n          // that must be recursively processed by this algorithm.\n          var recursionList = [];\n\n          self.waterfall([\n            function(callback) {\n              // 5.4.4) For each related in permutation:\n              self.forEach(permutation, function(related, idx, callback) {\n                // 5.4.4.1) If a canonical identifier has been issued for\n                // related, append it to path.\n                if(self.canonicalIssuer.hasId(related)) {\n                  path += self.canonicalIssuer.getId(related);\n                } else {\n                  // 5.4.4.2) Otherwise:\n                  // 5.4.4.2.1) If issuer copy has not issued an identifier for\n                  // related, append related to recursion list.\n                  if(!issuerCopy.hasId(related)) {\n                    recursionList.push(related);\n                  }\n                  // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n                  // issuer copy and related and append the result to path.\n                  path += issuerCopy.getId(related);\n                }\n\n                // 5.4.4.3) If chosen path is not empty and the length of path\n                // is greater than or equal to the length of chosen path and\n                // path is lexicographically greater than chosen path, then\n                // skip to the next permutation.\n                if(chosenPath.length !== 0 &&\n                  path.length >= chosenPath.length && path > chosenPath) {\n                  // FIXME: may cause inaccurate total depth calculation\n                  return nextPermutation();\n                }\n                callback();\n              }, callback);\n            },\n            function(callback) {\n              // 5.4.5) For each related in recursion list:\n              self.forEach(recursionList, function(related, idx, callback) {\n                // 5.4.5.1) Set result to the result of recursively executing\n                // the Hash N-Degree Quads algorithm, passing related for\n                // identifier and issuer copy for path identifier issuer.\n                self.hashNDegreeQuads(\n                  related, issuerCopy, function(err, result) {\n                  if(err) {\n                    return callback(err);\n                  }\n\n                  // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n                  // copy and related and append the result to path.\n                  path += issuerCopy.getId(related);\n\n                  // 5.4.5.3) Append <, the hash in result, and > to path.\n                  path += '<' + result.hash + '>';\n\n                  // 5.4.5.4) Set issuer copy to the identifier issuer in\n                  // result.\n                  issuerCopy = result.issuer;\n\n                  // 5.4.5.5) If chosen path is not empty and the length of path\n                  // is greater than or equal to the length of chosen path and\n                  // path is lexicographically greater than chosen path, then\n                  // skip to the next permutation.\n                  if(chosenPath.length !== 0 &&\n                    path.length >= chosenPath.length && path > chosenPath) {\n                    // FIXME: may cause inaccurate total depth calculation\n                    return nextPermutation();\n                  }\n                  callback();\n                });\n              }, callback);\n            },\n            function(callback) {\n              // 5.4.6) If chosen path is empty or path is lexicographically\n              // less than chosen path, set chosen path to path and chosen\n              // issuer to issuer copy.\n              if(chosenPath.length === 0 || path < chosenPath) {\n                chosenPath = path;\n                chosenIssuer = issuerCopy;\n              }\n              callback();\n            }\n          ], nextPermutation);\n        }, function(err) {\n          if(err) {\n            return callback(err);\n          }\n\n          // 5.5) Append chosen path to data to hash.\n          md.update(chosenPath);\n\n          // 5.6) Replace issuer, by reference, with chosen issuer.\n          issuer = chosenIssuer;\n          callback();\n        });\n      }, callback);\n    }\n  ], function(err) {\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    callback(err, {hash: md.digest(), issuer: issuer});\n  });\n};\n\n// helper for creating hash to related blank nodes map\nNormalize.prototype.createHashToRelated = function(id, issuer, callback) {\n  var self = this;\n\n  // 1) Create a hash to related blank nodes map for storing hashes that\n  // identify related blank nodes.\n  var hashToRelated = {};\n\n  // 2) Get a reference, quads, to the list of quads in the blank node to\n  // quads map for the key identifier.\n  var quads = self.blankNodeInfo[id].quads;\n\n  // 3) For each quad in quads:\n  self.forEach(quads, function(quad, idx, callback) {\n    // 3.1) For each component in quad, if component is the subject, object,\n    // and graph name and it is a blank node that is not identified by\n    // identifier:\n    self.forEach(quad, function(component, key, callback) {\n      if(key === 'predicate' ||\n        !(component.type === 'blank node' && component.value !== id)) {\n        return callback();\n      }\n      // 3.1.1) Set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for component as\n      // related, quad, path identifier issuer as issuer, and position as\n      // either s, o, or g based on whether component is a subject, object,\n      // graph name, respectively.\n      var related = component.value;\n      var position = POSITIONS[key];\n      self.hashRelatedBlankNode(\n        related, quad, issuer, position, function(err, hash) {\n        if(err) {\n          return callback(err);\n        }\n        // 3.1.2) Add a mapping of hash to the blank node identifier for\n        // component to hash to related blank nodes map, adding an entry as\n        // necessary.\n        if(hash in hashToRelated) {\n          hashToRelated[hash].push(related);\n        } else {\n          hashToRelated[hash] = [related];\n        }\n        callback();\n      });\n    }, callback);\n  }, function(err) {\n    callback(err, hashToRelated);\n  });\n};\n\n// helper that iterates over quad components (skips predicate)\nNormalize.prototype.forEachComponent = function(quad, op) {\n  for(var key in quad) {\n    // skip `predicate`\n    if(key === 'predicate') {\n      continue;\n    }\n    op(quad[key], key, quad);\n  }\n};\n\nreturn Normalize;\n\n})(); // end of define URDNA2015\n\n/////////////////////////////// DEFINE URGNA2012 //////////////////////////////\n\nvar URGNA2012 = (function() {\n\nvar Normalize = function(options) {\n  URDNA2015.call(this, options);\n  this.name = 'URGNA2012';\n};\nNormalize.prototype = new URDNA2015();\n\n// helper for modifying component during Hash First Degree Quads\nNormalize.prototype.modifyFirstDegreeComponent = function(id, component, key) {\n  if(component.type !== 'blank node') {\n    return component;\n  }\n  component = _clone(component);\n  if(key === 'name') {\n    component.value = '_:g';\n  } else {\n    component.value = (component.value === id ? '_:a' : '_:z');\n  }\n  return component;\n};\n\n// helper for getting a related predicate\nNormalize.prototype.getRelatedPredicate = function(quad) {\n  return quad.predicate.value;\n};\n\n// helper for creating hash to related blank nodes map\nNormalize.prototype.createHashToRelated = function(id, issuer, callback) {\n  var self = this;\n\n  // 1) Create a hash to related blank nodes map for storing hashes that\n  // identify related blank nodes.\n  var hashToRelated = {};\n\n  // 2) Get a reference, quads, to the list of quads in the blank node to\n  // quads map for the key identifier.\n  var quads = self.blankNodeInfo[id].quads;\n\n  // 3) For each quad in quads:\n  self.forEach(quads, function(quad, idx, callback) {\n    // 3.1) If the quad's subject is a blank node that does not match\n    // identifier, set hash to the result of the Hash Related Blank Node\n    // algorithm, passing the blank node identifier for subject as related,\n    // quad, path identifier issuer as issuer, and p as position.\n    var position;\n    var related;\n    if(quad.subject.type === 'blank node' && quad.subject.value !== id) {\n      related = quad.subject.value;\n      position = 'p';\n    } else if(quad.object.type === 'blank node' && quad.object.value !== id) {\n      // 3.2) Otherwise, if quad's object is a blank node that does not match\n      // identifier, to the result of the Hash Related Blank Node algorithm,\n      // passing the blank node identifier for object as related, quad, path\n      // identifier issuer as issuer, and r as position.\n      related = quad.object.value;\n      position = 'r';\n    } else {\n      // 3.3) Otherwise, continue to the next quad.\n      return callback();\n    }\n    // 3.4) Add a mapping of hash to the blank node identifier for the\n    // component that matched (subject or object) to hash to related blank\n    // nodes map, adding an entry as necessary.\n    self.hashRelatedBlankNode(\n      related, quad, issuer, position, function(err, hash) {\n      if(hash in hashToRelated) {\n        hashToRelated[hash].push(related);\n      } else {\n        hashToRelated[hash] = [related];\n      }\n      callback();\n    });\n  }, function(err) {\n    callback(err, hashToRelated);\n  });\n};\n\nreturn Normalize;\n\n})(); // end of define URGNA2012\n\n/**\n * Recursively flattens the subjects in the given JSON-LD expanded input\n * into a node map.\n *\n * @param input the JSON-LD expanded input.\n * @param graphs a map of graph name to subject map.\n * @param graph the name of the current graph.\n * @param issuer the blank node identifier issuer.\n * @param name the name assigned to the current input if it is a bnode.\n * @param list the list to append to, null for none.\n */\nfunction _createNodeMap(input, graphs, graph, issuer, name, list) {\n  // recurse through array\n  if(_isArray(input)) {\n    for(var i = 0; i < input.length; ++i) {\n      _createNodeMap(input[i], graphs, graph, issuer, undefined, list);\n    }\n    return;\n  }\n\n  // add non-object to list\n  if(!_isObject(input)) {\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // add values to list\n  if(_isValue(input)) {\n    if('@type' in input) {\n      var type = input['@type'];\n      // rename @type blank node\n      if(type.indexOf('_:') === 0) {\n        input['@type'] = type = issuer.getId(type);\n      }\n    }\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // Note: At this point, input must be a subject.\n\n  // spec requires @type to be named first, so assign names early\n  if('@type' in input) {\n    var types = input['@type'];\n    for(var i = 0; i < types.length; ++i) {\n      var type = types[i];\n      if(type.indexOf('_:') === 0) {\n        issuer.getId(type);\n      }\n    }\n  }\n\n  // get name for subject\n  if(_isUndefined(name)) {\n    name = _isBlankNode(input) ? issuer.getId(input['@id']) : input['@id'];\n  }\n\n  // add subject reference to list\n  if(list) {\n    list.push({'@id': name});\n  }\n\n  // create new subject or merge into existing one\n  var subjects = graphs[graph];\n  var subject = subjects[name] = subjects[name] || {};\n  subject['@id'] = name;\n  var properties = Object.keys(input).sort();\n  for(var pi = 0; pi < properties.length; ++pi) {\n    var property = properties[pi];\n\n    // skip @id\n    if(property === '@id') {\n      continue;\n    }\n\n    // handle reverse properties\n    if(property === '@reverse') {\n      var referencedNode = {'@id': name};\n      var reverseMap = input['@reverse'];\n      for(var reverseProperty in reverseMap) {\n        var items = reverseMap[reverseProperty];\n        for(var ii = 0; ii < items.length; ++ii) {\n          var item = items[ii];\n          var itemName = item['@id'];\n          if(_isBlankNode(item)) {\n            itemName = issuer.getId(itemName);\n          }\n          _createNodeMap(item, graphs, graph, issuer, itemName);\n          jsonld.addValue(\n            subjects[itemName], reverseProperty, referencedNode,\n            {propertyIsArray: true, allowDuplicate: false});\n        }\n      }\n      continue;\n    }\n\n    // recurse into graph\n    if(property === '@graph') {\n      // add graph subjects map entry\n      if(!(name in graphs)) {\n        graphs[name] = {};\n      }\n      var g = (graph === '@merged') ? graph : name;\n      _createNodeMap(input[property], graphs, g, issuer);\n      continue;\n    }\n\n    // copy non-@type keywords\n    if(property !== '@type' && _isKeyword(property)) {\n      if(property === '@index' && property in subject &&\n        (input[property] !== subject[property] ||\n        input[property]['@id'] !== subject[property]['@id'])) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; conflicting @index property detected.',\n          'jsonld.SyntaxError',\n          {code: 'conflicting indexes', subject: subject});\n      }\n      subject[property] = input[property];\n      continue;\n    }\n\n    // iterate over objects\n    var objects = input[property];\n\n    // if property is a bnode, assign it a new id\n    if(property.indexOf('_:') === 0) {\n      property = issuer.getId(property);\n    }\n\n    // ensure property is added for empty arrays\n    if(objects.length === 0) {\n      jsonld.addValue(subject, property, [], {propertyIsArray: true});\n      continue;\n    }\n    for(var oi = 0; oi < objects.length; ++oi) {\n      var o = objects[oi];\n\n      if(property === '@type') {\n        // rename @type blank nodes\n        o = (o.indexOf('_:') === 0) ? issuer.getId(o) : o;\n      }\n\n      // handle embedded subject or subject reference\n      if(_isSubject(o) || _isSubjectReference(o)) {\n        // relabel blank node @id\n        var id = _isBlankNode(o) ? issuer.getId(o['@id']) : o['@id'];\n\n        // add reference and recurse\n        jsonld.addValue(\n          subject, property, {'@id': id},\n          {propertyIsArray: true, allowDuplicate: false});\n        _createNodeMap(o, graphs, graph, issuer, id);\n      } else if(_isList(o)) {\n        // handle @list\n        var _list = [];\n        _createNodeMap(o['@list'], graphs, graph, issuer, name, _list);\n        o = {'@list': _list};\n        jsonld.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else {\n        // handle @value\n        _createNodeMap(o, graphs, graph, issuer, name);\n        jsonld.addValue(\n          subject, property, o, {propertyIsArray: true, allowDuplicate: false});\n      }\n    }\n  }\n}\n\nfunction _mergeNodeMaps(graphs) {\n  // add all non-default graphs to default graph\n  var defaultGraph = graphs['@default'];\n  var graphNames = Object.keys(graphs).sort();\n  for(var i = 0; i < graphNames.length; ++i) {\n    var graphName = graphNames[i];\n    if(graphName === '@default') {\n      continue;\n    }\n    var nodeMap = graphs[graphName];\n    var subject = defaultGraph[graphName];\n    if(!subject) {\n      defaultGraph[graphName] = subject = {\n        '@id': graphName,\n        '@graph': []\n      };\n    } else if(!('@graph' in subject)) {\n      subject['@graph'] = [];\n    }\n    var graph = subject['@graph'];\n    var ids = Object.keys(nodeMap).sort();\n    for(var ii = 0; ii < ids.length; ++ii) {\n      var node = nodeMap[ids[ii]];\n      // only add full subjects\n      if(!_isSubjectReference(node)) {\n        graph.push(node);\n      }\n    }\n  }\n  return defaultGraph;\n}\n\n/**\n * Frames subjects according to the given frame.\n *\n * @param state the current framing state.\n * @param subjects the subjects to filter.\n * @param frame the frame.\n * @param parent the parent subject or top-level array.\n * @param property the parent property, initialized to null.\n */\nfunction _frame(state, subjects, frame, parent, property) {\n  // validate the frame\n  _validateFrame(frame);\n  frame = frame[0];\n\n  // get flags for current frame\n  var options = state.options;\n  var flags = {\n    embed: _getFrameFlag(frame, options, 'embed'),\n    explicit: _getFrameFlag(frame, options, 'explicit'),\n    requireAll: _getFrameFlag(frame, options, 'requireAll')\n  };\n\n  // filter out subjects that match the frame\n  var matches = _filterSubjects(state, subjects, frame, flags);\n\n  // add matches to output\n  var ids = Object.keys(matches).sort();\n  for(var idx = 0; idx < ids.length; ++idx) {\n    var id = ids[idx];\n    var subject = matches[id];\n\n    if(flags.embed === '@link' && id in state.link) {\n      // TODO: may want to also match an existing linked subject against\n      // the current frame ... so different frames could produce different\n      // subjects that are only shared in-memory when the frames are the same\n\n      // add existing linked subject\n      _addFrameOutput(parent, property, state.link[id]);\n      continue;\n    }\n\n    /* Note: In order to treat each top-level match as a compartmentalized\n    result, clear the unique embedded subjects map when the property is null,\n    which only occurs at the top-level. */\n    if(property === null) {\n      state.uniqueEmbeds = {};\n    }\n\n    // start output for subject\n    var output = {};\n    output['@id'] = id;\n    state.link[id] = output;\n\n    // if embed is @never or if a circular reference would be created by an\n    // embed, the subject cannot be embedded, just add the reference;\n    // note that a circular reference won't occur when the embed flag is\n    // `@link` as the above check will short-circuit before reaching this point\n    if(flags.embed === '@never' ||\n      _createsCircularReference(subject, state.subjectStack)) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the last match should be embedded\n    if(flags.embed === '@last') {\n      // remove any existing embed\n      if(id in state.uniqueEmbeds) {\n        _removeEmbed(state, id);\n      }\n      state.uniqueEmbeds[id] = {parent: parent, property: property};\n    }\n\n    // push matching subject onto stack to enable circular embed checks\n    state.subjectStack.push(subject);\n\n    // iterate over subject properties\n    var props = Object.keys(subject).sort();\n    for(var i = 0; i < props.length; i++) {\n      var prop = props[i];\n\n      // copy keywords to output\n      if(_isKeyword(prop)) {\n        output[prop] = _clone(subject[prop]);\n        continue;\n      }\n\n      // explicit is on and property isn't in the frame, skip processing\n      if(flags.explicit && !(prop in frame)) {\n        continue;\n      }\n\n      // add objects\n      var objects = subject[prop];\n      for(var oi = 0; oi < objects.length; ++oi) {\n        var o = objects[oi];\n\n        // recurse into list\n        if(_isList(o)) {\n          // add empty list\n          var list = {'@list': []};\n          _addFrameOutput(output, prop, list);\n\n          // add list objects\n          var src = o['@list'];\n          for(var n in src) {\n            o = src[n];\n            if(_isSubjectReference(o)) {\n              var subframe = (prop in frame ?\n                frame[prop][0]['@list'] : _createImplicitFrame(flags));\n              // recurse into subject reference\n              _frame(state, [o['@id']], subframe, list, '@list');\n            } else {\n              // include other values automatically\n              _addFrameOutput(list, '@list', _clone(o));\n            }\n          }\n          continue;\n        }\n\n        if(_isSubjectReference(o)) {\n          // recurse into subject reference\n          var subframe = (prop in frame ?\n            frame[prop] : _createImplicitFrame(flags));\n          _frame(state, [o['@id']], subframe, output, prop);\n        } else {\n          // include other values automatically\n          _addFrameOutput(output, prop, _clone(o));\n        }\n      }\n    }\n\n    // handle defaults\n    var props = Object.keys(frame).sort();\n    for(var i = 0; i < props.length; ++i) {\n      var prop = props[i];\n\n      // skip keywords\n      if(_isKeyword(prop)) {\n        continue;\n      }\n\n      // if omit default is off, then include default values for properties\n      // that appear in the next frame but are not in the matching subject\n      var next = frame[prop][0];\n      var omitDefaultOn = _getFrameFlag(next, options, 'omitDefault');\n      if(!omitDefaultOn && !(prop in output)) {\n        var preserve = '@null';\n        if('@default' in next) {\n          preserve = _clone(next['@default']);\n        }\n        if(!_isArray(preserve)) {\n          preserve = [preserve];\n        }\n        output[prop] = [{'@preserve': preserve}];\n      }\n    }\n\n    // add output to parent\n    _addFrameOutput(parent, property, output);\n\n    // pop matching subject from circular ref-checking stack\n    state.subjectStack.pop();\n  }\n}\n\n/**\n * Creates an implicit frame when recursing through subject matches. If\n * a frame doesn't have an explicit frame for a particular property, then\n * a wildcard child frame will be created that uses the same flags that the\n * parent frame used.\n *\n * @param flags the current framing flags.\n *\n * @return the implicit frame.\n */\nfunction _createImplicitFrame(flags) {\n  var frame = {};\n  for(var key in flags) {\n    if(flags[key] !== undefined) {\n      frame['@' + key] = [flags[key]];\n    }\n  }\n  return [frame];\n}\n\n/**\n * Checks the current subject stack to see if embedding the given subject\n * would cause a circular reference.\n *\n * @param subjectToEmbed the subject to embed.\n * @param subjectStack the current stack of subjects.\n *\n * @return true if a circular reference would be created, false if not.\n */\nfunction _createsCircularReference(subjectToEmbed, subjectStack) {\n  for(var i = subjectStack.length - 1; i >= 0; --i) {\n    if(subjectStack[i]['@id'] === subjectToEmbed['@id']) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Gets the frame flag value for the given flag name.\n *\n * @param frame the frame.\n * @param options the framing options.\n * @param name the flag name.\n *\n * @return the flag value.\n */\nfunction _getFrameFlag(frame, options, name) {\n  var flag = '@' + name;\n  var rval = (flag in frame ? frame[flag][0] : options[name]);\n  if(name === 'embed') {\n    // default is \"@last\"\n    // backwards-compatibility support for \"embed\" maps:\n    // true => \"@last\"\n    // false => \"@never\"\n    if(rval === true) {\n      rval = '@last';\n    } else if(rval === false) {\n      rval = '@never';\n    } else if(rval !== '@always' && rval !== '@never' && rval !== '@link') {\n      rval = '@last';\n    }\n  }\n  return rval;\n}\n\n/**\n * Validates a JSON-LD frame, throwing an exception if the frame is invalid.\n *\n * @param frame the frame to validate.\n */\nfunction _validateFrame(frame) {\n  if(!_isArray(frame) || frame.length !== 1 || !_isObject(frame[0])) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a JSON-LD frame must be a single object.',\n      'jsonld.SyntaxError', {frame: frame});\n  }\n}\n\n/**\n * Returns a map of all of the subjects that match a parsed frame.\n *\n * @param state the current framing state.\n * @param subjects the set of subjects to filter.\n * @param frame the parsed frame.\n * @param flags the frame flags.\n *\n * @return all of the matched subjects.\n */\nfunction _filterSubjects(state, subjects, frame, flags) {\n  // filter subjects in @id order\n  var rval = {};\n  for(var i = 0; i < subjects.length; ++i) {\n    var id = subjects[i];\n    var subject = state.subjects[id];\n    if(_filterSubject(subject, frame, flags)) {\n      rval[id] = subject;\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given subject matches the given frame.\n *\n * @param subject the subject to check.\n * @param frame the frame to check.\n * @param flags the frame flags.\n *\n * @return true if the subject matches, false if not.\n */\nfunction _filterSubject(subject, frame, flags) {\n  // check @type (object value means 'any' type, fall through to ducktyping)\n  if('@type' in frame &&\n    !(frame['@type'].length === 1 && _isObject(frame['@type'][0]))) {\n    var types = frame['@type'];\n    for(var i = 0; i < types.length; ++i) {\n      // any matching @type is a match\n      if(jsonld.hasValue(subject, '@type', types[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // check ducktype\n  var wildcard = true;\n  var matchesSome = false;\n  for(var key in frame) {\n    if(_isKeyword(key)) {\n      // skip non-@id and non-@type\n      if(key !== '@id' && key !== '@type') {\n        continue;\n      }\n      wildcard = false;\n\n      // check @id for a specific @id value\n      if(key === '@id' && _isString(frame[key])) {\n        if(subject[key] !== frame[key]) {\n          return false;\n        }\n        matchesSome = true;\n        continue;\n      }\n    }\n\n    wildcard = false;\n\n    if(key in subject) {\n      // frame[key] === [] means do not match if property is present\n      if(_isArray(frame[key]) && frame[key].length === 0 &&\n        subject[key] !== undefined) {\n        return false;\n      }\n      matchesSome = true;\n      continue;\n    }\n\n    // all properties must match to be a duck unless a @default is specified\n    var hasDefault = (_isArray(frame[key]) && _isObject(frame[key][0]) &&\n      '@default' in frame[key][0]);\n    if(flags.requireAll && !hasDefault) {\n      return false;\n    }\n  }\n\n  // return true if wildcard or subject matches some properties\n  return wildcard || matchesSome;\n}\n\n/**\n * Removes an existing embed.\n *\n * @param state the current framing state.\n * @param id the @id of the embed to remove.\n */\nfunction _removeEmbed(state, id) {\n  // get existing embed\n  var embeds = state.uniqueEmbeds;\n  var embed = embeds[id];\n  var parent = embed.parent;\n  var property = embed.property;\n\n  // create reference to replace embed\n  var subject = {'@id': id};\n\n  // remove existing embed\n  if(_isArray(parent)) {\n    // replace subject with reference\n    for(var i = 0; i < parent.length; ++i) {\n      if(jsonld.compareValues(parent[i], subject)) {\n        parent[i] = subject;\n        break;\n      }\n    }\n  } else {\n    // replace subject with reference\n    var useArray = _isArray(parent[property]);\n    jsonld.removeValue(parent, property, subject, {propertyIsArray: useArray});\n    jsonld.addValue(parent, property, subject, {propertyIsArray: useArray});\n  }\n\n  // recursively remove dependent dangling embeds\n  var removeDependents = function(id) {\n    // get embed keys as a separate array to enable deleting keys in map\n    var ids = Object.keys(embeds);\n    for(var i = 0; i < ids.length; ++i) {\n      var next = ids[i];\n      if(next in embeds && _isObject(embeds[next].parent) &&\n        embeds[next].parent['@id'] === id) {\n        delete embeds[next];\n        removeDependents(next);\n      }\n    }\n  };\n  removeDependents(id);\n}\n\n/**\n * Adds framing output to the given parent.\n *\n * @param parent the parent to add to.\n * @param property the parent property.\n * @param output the output to add.\n */\nfunction _addFrameOutput(parent, property, output) {\n  if(_isObject(parent)) {\n    jsonld.addValue(parent, property, output, {propertyIsArray: true});\n  } else {\n    parent.push(output);\n  }\n}\n\n/**\n * Removes the @preserve keywords as the last step of the framing algorithm.\n *\n * @param ctx the active context used to compact the input.\n * @param input the framed, compacted output.\n * @param options the compaction options used.\n *\n * @return the resulting output.\n */\nfunction _removePreserve(ctx, input, options) {\n  // recurse through arrays\n  if(_isArray(input)) {\n    var output = [];\n    for(var i = 0; i < input.length; ++i) {\n      var result = _removePreserve(ctx, input[i], options);\n      // drop nulls from arrays\n      if(result !== null) {\n        output.push(result);\n      }\n    }\n    input = output;\n  } else if(_isObject(input)) {\n    // remove @preserve\n    if('@preserve' in input) {\n      if(input['@preserve'] === '@null') {\n        return null;\n      }\n      return input['@preserve'];\n    }\n\n    // skip @values\n    if(_isValue(input)) {\n      return input;\n    }\n\n    // recurse through @lists\n    if(_isList(input)) {\n      input['@list'] = _removePreserve(ctx, input['@list'], options);\n      return input;\n    }\n\n    // handle in-memory linked nodes\n    var idAlias = _compactIri(ctx, '@id');\n    if(idAlias in input) {\n      var id = input[idAlias];\n      if(id in options.link) {\n        var idx = options.link[id].indexOf(input);\n        if(idx === -1) {\n          // prevent circular visitation\n          options.link[id].push(input);\n        } else {\n          // already visited\n          return options.link[id][idx];\n        }\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    // recurse through properties\n    for(var prop in input) {\n      var result = _removePreserve(ctx, input[prop], options);\n      var container = jsonld.getContextValue(ctx, prop, '@container');\n      if(options.compactArrays && _isArray(result) && result.length === 1 &&\n        container === null) {\n        result = result[0];\n      }\n      input[prop] = result;\n    }\n  }\n  return input;\n}\n\n/**\n * Compares two strings first based on length and then lexicographically.\n *\n * @param a the first string.\n * @param b the second string.\n *\n * @return -1 if a < b, 1 if a > b, 0 if a == b.\n */\nfunction _compareShortestLeast(a, b) {\n  if(a.length < b.length) {\n    return -1;\n  }\n  if(b.length < a.length) {\n    return 1;\n  }\n  if(a === b) {\n    return 0;\n  }\n  return (a < b) ? -1 : 1;\n}\n\n/**\n * Picks the preferred compaction term from the given inverse context entry.\n *\n * @param activeCtx the active context.\n * @param iri the IRI to pick the term for.\n * @param value the value to pick the term for.\n * @param containers the preferred containers.\n * @param typeOrLanguage either '@type' or '@language'.\n * @param typeOrLanguageValue the preferred value for '@type' or '@language'.\n *\n * @return the preferred term.\n */\nfunction _selectTerm(\n  activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue) {\n  if(typeOrLanguageValue === null) {\n    typeOrLanguageValue = '@null';\n  }\n\n  // preferences for the value of @type or @language\n  var prefs = [];\n\n  // determine prefs for @id based on whether or not value compacts to a term\n  if((typeOrLanguageValue === '@id' || typeOrLanguageValue === '@reverse') &&\n    _isSubjectReference(value)) {\n    // prefer @reverse first\n    if(typeOrLanguageValue === '@reverse') {\n      prefs.push('@reverse');\n    }\n    // try to compact value to a term\n    var term = _compactIri(activeCtx, value['@id'], null, {vocab: true});\n    if(term in activeCtx.mappings &&\n      activeCtx.mappings[term] &&\n      activeCtx.mappings[term]['@id'] === value['@id']) {\n      // prefer @vocab\n      prefs.push.apply(prefs, ['@vocab', '@id']);\n    } else {\n      // prefer @id\n      prefs.push.apply(prefs, ['@id', '@vocab']);\n    }\n  } else {\n    prefs.push(typeOrLanguageValue);\n  }\n  prefs.push('@none');\n\n  var containerMap = activeCtx.inverse[iri];\n  for(var ci = 0; ci < containers.length; ++ci) {\n    // if container not available in the map, continue\n    var container = containers[ci];\n    if(!(container in containerMap)) {\n      continue;\n    }\n\n    var typeOrLanguageValueMap = containerMap[container][typeOrLanguage];\n    for(var pi = 0; pi < prefs.length; ++pi) {\n      // if type/language option not available in the map, continue\n      var pref = prefs[pi];\n      if(!(pref in typeOrLanguageValueMap)) {\n        continue;\n      }\n\n      // select term\n      return typeOrLanguageValueMap[pref];\n    }\n  }\n\n  return null;\n}\n\n/**\n * Compacts an IRI or keyword into a term or prefix if it can be. If the\n * IRI has an associated value it may be passed.\n *\n * @param activeCtx the active context to use.\n * @param iri the IRI to compact.\n * @param value the value to check or null.\n * @param relativeTo options for how to compact IRIs:\n *          vocab: true to split after @vocab, false not to.\n * @param reverse true if a reverse property is being compacted, false if not.\n *\n * @return the compacted term, prefix, keyword alias, or the original IRI.\n */\nfunction _compactIri(activeCtx, iri, value, relativeTo, reverse) {\n  // can't compact null\n  if(iri === null) {\n    return iri;\n  }\n\n  // default value and parent to null\n  if(_isUndefined(value)) {\n    value = null;\n  }\n  // default reverse to false\n  if(_isUndefined(reverse)) {\n    reverse = false;\n  }\n  relativeTo = relativeTo || {};\n\n  var inverseCtx = activeCtx.getInverse();\n\n  // if term is a keyword, it can only be compacted to a simple alias\n  if(_isKeyword(iri)) {\n    if(iri in inverseCtx) {\n      return inverseCtx[iri]['@none']['@type']['@none'];\n    }\n    return iri;\n  }\n\n  // use inverse context to pick a term if iri is relative to vocab\n  if(relativeTo.vocab && iri in inverseCtx) {\n    var defaultLanguage = activeCtx['@language'] || '@none';\n\n    // prefer @index if available in value\n    var containers = [];\n    if(_isObject(value) && '@index' in value) {\n      containers.push('@index');\n    }\n\n    // defaults for term selection based on type/language\n    var typeOrLanguage = '@language';\n    var typeOrLanguageValue = '@null';\n\n    if(reverse) {\n      typeOrLanguage = '@type';\n      typeOrLanguageValue = '@reverse';\n      containers.push('@set');\n    } else if(_isList(value)) {\n      // choose the most specific term that works for all elements in @list\n      // only select @list containers if @index is NOT in value\n      if(!('@index' in value)) {\n        containers.push('@list');\n      }\n      var list = value['@list'];\n      var commonLanguage = (list.length === 0) ? defaultLanguage : null;\n      var commonType = null;\n      for(var i = 0; i < list.length; ++i) {\n        var item = list[i];\n        var itemLanguage = '@none';\n        var itemType = '@none';\n        if(_isValue(item)) {\n          if('@language' in item) {\n            itemLanguage = item['@language'];\n          } else if('@type' in item) {\n            itemType = item['@type'];\n          } else {\n            // plain literal\n            itemLanguage = '@null';\n          }\n        } else {\n          itemType = '@id';\n        }\n        if(commonLanguage === null) {\n          commonLanguage = itemLanguage;\n        } else if(itemLanguage !== commonLanguage && _isValue(item)) {\n          commonLanguage = '@none';\n        }\n        if(commonType === null) {\n          commonType = itemType;\n        } else if(itemType !== commonType) {\n          commonType = '@none';\n        }\n        // there are different languages and types in the list, so choose\n        // the most generic term, no need to keep iterating the list\n        if(commonLanguage === '@none' && commonType === '@none') {\n          break;\n        }\n      }\n      commonLanguage = commonLanguage || '@none';\n      commonType = commonType || '@none';\n      if(commonType !== '@none') {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = commonType;\n      } else {\n        typeOrLanguageValue = commonLanguage;\n      }\n    } else {\n      if(_isValue(value)) {\n        if('@language' in value && !('@index' in value)) {\n          containers.push('@language');\n          typeOrLanguageValue = value['@language'];\n        } else if('@type' in value) {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = value['@type'];\n        }\n      } else {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = '@id';\n      }\n      containers.push('@set');\n    }\n\n    // do term selection\n    containers.push('@none');\n    var term = _selectTerm(\n      activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue);\n    if(term !== null) {\n      return term;\n    }\n  }\n\n  // no term match, use @vocab if available\n  if(relativeTo.vocab) {\n    if('@vocab' in activeCtx) {\n      // determine if vocab is a prefix of the iri\n      var vocab = activeCtx['@vocab'];\n      if(iri.indexOf(vocab) === 0 && iri !== vocab) {\n        // use suffix as relative iri if it is not a term in the active context\n        var suffix = iri.substr(vocab.length);\n        if(!(suffix in activeCtx.mappings)) {\n          return suffix;\n        }\n      }\n    }\n  }\n\n  // no term or @vocab match, check for possible CURIEs\n  var choice = null;\n  var idx = 0;\n  var partialMatches = [];\n  var iriMap = activeCtx.fastCurieMap;\n  // check for partial matches of against `iri`, which means look until\n  // iri.length - 1, not full length\n  var maxPartialLength = iri.length - 1;\n  for(; idx < maxPartialLength && iri[idx] in iriMap; ++idx) {\n    iriMap = iriMap[iri[idx]];\n    if('' in iriMap) {\n      partialMatches.push(iriMap[''][0]);\n    }\n  }\n  // check partial matches in reverse order to prefer longest ones first\n  for(var i = partialMatches.length - 1; i >= 0; --i) {\n    var entry = partialMatches[i];\n    var terms = entry.terms;\n    for(var ti = 0; ti < terms.length; ++ti) {\n      // a CURIE is usable if:\n      // 1. it has no mapping, OR\n      // 2. value is null, which means we're not compacting an @value, AND\n      //   the mapping matches the IRI\n      var curie = terms[ti] + ':' + iri.substr(entry.iri.length);\n      var isUsableCurie = (!(curie in activeCtx.mappings) ||\n        (value === null && activeCtx.mappings[curie]['@id'] === iri));\n\n      // select curie if it is shorter or the same length but lexicographically\n      // less than the current choice\n      if(isUsableCurie && (choice === null ||\n        _compareShortestLeast(curie, choice) < 0)) {\n        choice = curie;\n      }\n    }\n  }\n\n  // return chosen curie\n  if(choice !== null) {\n    return choice;\n  }\n\n  // compact IRI relative to base\n  if(!relativeTo.vocab) {\n    return _removeBase(activeCtx['@base'], iri);\n  }\n\n  // return IRI as is\n  return iri;\n}\n\n/**\n * Performs value compaction on an object with '@value' or '@id' as the only\n * property.\n *\n * @param activeCtx the active context.\n * @param activeProperty the active property that points to the value.\n * @param value the value to compact.\n *\n * @return the compaction result.\n */\nfunction _compactValue(activeCtx, activeProperty, value) {\n  // value is a @value\n  if(_isValue(value)) {\n    // get context rules\n    var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n    var language = jsonld.getContextValue(\n      activeCtx, activeProperty, '@language');\n    var container = jsonld.getContextValue(\n      activeCtx, activeProperty, '@container');\n\n    // whether or not the value has an @index that must be preserved\n    var preserveIndex = (('@index' in value) &&\n      container !== '@index');\n\n    // if there's no @index to preserve ...\n    if(!preserveIndex) {\n      // matching @type or @language specified in context, compact value\n      if(value['@type'] === type || value['@language'] === language) {\n        return value['@value'];\n      }\n    }\n\n    // return just the value of @value if all are true:\n    // 1. @value is the only key or @index isn't being preserved\n    // 2. there is no default language or @value is not a string or\n    //   the key has a mapping with a null @language\n    var keyCount = Object.keys(value).length;\n    var isValueOnlyKey = (keyCount === 1 ||\n      (keyCount === 2 && ('@index' in value) && !preserveIndex));\n    var hasDefaultLanguage = ('@language' in activeCtx);\n    var isValueString = _isString(value['@value']);\n    var hasNullMapping = (activeCtx.mappings[activeProperty] &&\n      activeCtx.mappings[activeProperty]['@language'] === null);\n    if(isValueOnlyKey &&\n      (!hasDefaultLanguage || !isValueString || hasNullMapping)) {\n      return value['@value'];\n    }\n\n    var rval = {};\n\n    // preserve @index\n    if(preserveIndex) {\n      rval[_compactIri(activeCtx, '@index')] = value['@index'];\n    }\n\n    if('@type' in value) {\n      // compact @type IRI\n      rval[_compactIri(activeCtx, '@type')] = _compactIri(\n        activeCtx, value['@type'], null, {vocab: true});\n    } else if('@language' in value) {\n      // alias @language\n      rval[_compactIri(activeCtx, '@language')] = value['@language'];\n    }\n\n    // alias @value\n    rval[_compactIri(activeCtx, '@value')] = value['@value'];\n\n    return rval;\n  }\n\n  // value is a subject reference\n  var expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});\n  var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n  var compacted = _compactIri(\n    activeCtx, value['@id'], null, {vocab: type === '@vocab'});\n\n  // compact to scalar\n  if(type === '@id' || type === '@vocab' || expandedProperty === '@graph') {\n    return compacted;\n  }\n\n  var rval = {};\n  rval[_compactIri(activeCtx, '@id')] = compacted;\n  return rval;\n}\n\n/**\n * Creates a term definition during context processing.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context being processed.\n * @param term the term in the local context to define the mapping for.\n * @param defined a map of defining/defined keys to detect cycles and prevent\n *          double definitions.\n */\nfunction _createTermDefinition(activeCtx, localCtx, term, defined) {\n  if(term in defined) {\n    // term already defined\n    if(defined[term]) {\n      return;\n    }\n    // cycle detected\n    throw new JsonLdError(\n      'Cyclical context definition detected.',\n      'jsonld.CyclicalContext',\n      {code: 'cyclic IRI mapping', context: localCtx, term: term});\n  }\n\n  // now defining term\n  defined[term] = false;\n\n  if(_isKeyword(term)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; keywords cannot be overridden.',\n      'jsonld.SyntaxError',\n      {code: 'keyword redefinition', context: localCtx, term: term});\n  }\n\n  if(term === '') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a term cannot be an empty string.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // remove old mapping\n  if(activeCtx.mappings[term]) {\n    delete activeCtx.mappings[term];\n  }\n\n  // get context term value\n  var value = localCtx[term];\n\n  // clear context entry\n  if(value === null || (_isObject(value) && value['@id'] === null)) {\n    activeCtx.mappings[term] = null;\n    defined[term] = true;\n    return;\n  }\n\n  // convert short-hand value to object w/@id\n  if(_isString(value)) {\n    value = {'@id': value};\n  }\n\n  if(!_isObject(value)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context property values must be ' +\n      'strings or objects.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // create new mapping\n  var mapping = activeCtx.mappings[term] = {};\n  mapping.reverse = false;\n\n  if('@reverse' in value) {\n    if('@id' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @id.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    var reverse = value['@reverse'];\n    if(!_isString(reverse)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    // expand and add @id mapping\n    var id = _expandIri(\n      activeCtx, reverse, {vocab: true, base: false}, localCtx, defined);\n    if(!_isAbsoluteIri(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be an ' +\n        'absolute IRI or a blank node identifier.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    mapping['@id'] = id;\n    mapping.reverse = true;\n  } else if('@id' in value) {\n    var id = value['@id'];\n    if(!_isString(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @id value must be an array ' +\n        'of strings or a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    if(id !== term) {\n      // expand and add @id mapping\n      id = _expandIri(\n        activeCtx, id, {vocab: true, base: false}, localCtx, defined);\n      if(!_isAbsoluteIri(id) && !_isKeyword(id)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a @context @id value must be an ' +\n          'absolute IRI, a blank node identifier, or a keyword.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx});\n      }\n      mapping['@id'] = id;\n    }\n  }\n\n  // always compute whether term has a colon as an optimization for\n  // _compactIri\n  var colon = term.indexOf(':');\n  mapping._termHasColon = (colon !== -1);\n\n  if(!('@id' in mapping)) {\n    // see if the term has a prefix\n    if(mapping._termHasColon) {\n      var prefix = term.substr(0, colon);\n      if(prefix in localCtx) {\n        // define parent prefix\n        _createTermDefinition(activeCtx, localCtx, prefix, defined);\n      }\n\n      if(activeCtx.mappings[prefix]) {\n        // set @id based on prefix parent\n        var suffix = term.substr(colon + 1);\n        mapping['@id'] = activeCtx.mappings[prefix]['@id'] + suffix;\n      } else {\n        // term is an absolute IRI\n        mapping['@id'] = term;\n      }\n    } else {\n      // non-IRIs *must* define @ids if @vocab is not available\n      if(!('@vocab' in activeCtx)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @context terms must define an @id.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx, term: term});\n      }\n      // prepend vocab to term\n      mapping['@id'] = activeCtx['@vocab'] + term;\n    }\n  }\n\n  // IRI mapping now defined\n  defined[term] = true;\n\n  if('@type' in value) {\n    var type = value['@type'];\n    if(!_isString(type)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an @context @type values must be a string.',\n        'jsonld.SyntaxError',\n        {code: 'invalid type mapping', context: localCtx});\n    }\n\n    if(type !== '@id' && type !== '@vocab') {\n      // expand @type to full IRI\n      type = _expandIri(\n        activeCtx, type, {vocab: true, base: false}, localCtx, defined);\n      if(!_isAbsoluteIri(type)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an ' +\n          'absolute IRI.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n      if(type.indexOf('_:') === 0) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type values must be an IRI, ' +\n          'not a blank node identifier.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    }\n\n    // add @type to mapping\n    mapping['@type'] = type;\n  }\n\n  if('@container' in value) {\n    var container = value['@container'];\n    if(container !== '@list' && container !== '@set' &&\n      container !== '@index' && container !== '@language') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value must be ' +\n        'one of the following: @list, @set, @index, or @language.',\n        'jsonld.SyntaxError',\n        {code: 'invalid container mapping', context: localCtx});\n    }\n    if(mapping.reverse && container !== '@index' && container !== '@set' &&\n      container !== null) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value for a @reverse ' +\n        'type definition must be @index or @set.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n\n    // add @container to mapping\n    mapping['@container'] = container;\n  }\n\n  if('@language' in value && !('@type' in value)) {\n    var language = value['@language'];\n    if(language !== null && !_isString(language)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @language value must be ' +\n        'a string or null.', 'jsonld.SyntaxError',\n        {code: 'invalid language mapping', context: localCtx});\n    }\n\n    // add @language to mapping\n    if(language !== null) {\n      language = language.toLowerCase();\n    }\n    mapping['@language'] = language;\n  }\n\n  // disallow aliasing @context and @preserve\n  var id = mapping['@id'];\n  if(id === '@context' || id === '@preserve') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context and @preserve cannot be aliased.',\n      'jsonld.SyntaxError', {code: 'invalid keyword alias', context: localCtx});\n  }\n}\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param localCtx the local context being processed (only given if called\n *          during context processing).\n * @param defined a map for tracking cycles in context definitions (only given\n *          if called during context processing).\n *\n * @return the expanded value.\n */\nfunction _expandIri(activeCtx, value, relativeTo, localCtx, defined) {\n  // already expanded\n  if(value === null || _isKeyword(value)) {\n    return value;\n  }\n\n  // ensure value is interpreted as a string\n  value = String(value);\n\n  // define term dependency if not defined\n  if(localCtx && value in localCtx && defined[value] !== true) {\n    _createTermDefinition(activeCtx, localCtx, value, defined);\n  }\n\n  relativeTo = relativeTo || {};\n  if(relativeTo.vocab) {\n    var mapping = activeCtx.mappings[value];\n\n    // value is explicitly ignored with a null mapping\n    if(mapping === null) {\n      return null;\n    }\n\n    if(mapping) {\n      // value is a term\n      return mapping['@id'];\n    }\n  }\n\n  // split value into prefix:suffix\n  var colon = value.indexOf(':');\n  if(colon !== -1) {\n    var prefix = value.substr(0, colon);\n    var suffix = value.substr(colon + 1);\n\n    // do not expand blank nodes (prefix of '_') or already-absolute\n    // IRIs (suffix of '//')\n    if(prefix === '_' || suffix.indexOf('//') === 0) {\n      return value;\n    }\n\n    // prefix dependency not defined, define it\n    if(localCtx && prefix in localCtx) {\n      _createTermDefinition(activeCtx, localCtx, prefix, defined);\n    }\n\n    // use mapping if prefix is defined\n    var mapping = activeCtx.mappings[prefix];\n    if(mapping) {\n      return mapping['@id'] + suffix;\n    }\n\n    // already absolute IRI\n    return value;\n  }\n\n  // prepend vocab\n  if(relativeTo.vocab && '@vocab' in activeCtx) {\n    return activeCtx['@vocab'] + value;\n  }\n\n  // prepend base\n  var rval = value;\n  if(relativeTo.base) {\n    rval = jsonld.prependBase(activeCtx['@base'], rval);\n  }\n\n  return rval;\n}\n\nfunction _prependBase(base, iri) {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n  // already an absolute IRI\n  if(iri.indexOf(':') !== -1) {\n    return iri;\n  }\n\n  // parse base if it is a string\n  if(_isString(base)) {\n    base = jsonld.url.parse(base || '');\n  }\n\n  // parse given IRI\n  var rel = jsonld.url.parse(iri);\n\n  // per RFC3986 5.2.2\n  var transform = {\n    protocol: base.protocol || ''\n  };\n\n  if(rel.authority !== null) {\n    transform.authority = rel.authority;\n    transform.path = rel.path;\n    transform.query = rel.query;\n  } else {\n    transform.authority = base.authority;\n\n    if(rel.path === '') {\n      transform.path = base.path;\n      if(rel.query !== null) {\n        transform.query = rel.query;\n      } else {\n        transform.query = base.query;\n      }\n    } else {\n      if(rel.path.indexOf('/') === 0) {\n        // IRI represents an absolute path\n        transform.path = rel.path;\n      } else {\n        // merge paths\n        var path = base.path;\n\n        // append relative path to the end of the last directory from base\n        if(rel.path !== '') {\n          path = path.substr(0, path.lastIndexOf('/') + 1);\n          if(path.length > 0 && path.substr(-1) !== '/') {\n            path += '/';\n          }\n          path += rel.path;\n        }\n\n        transform.path = path;\n      }\n      transform.query = rel.query;\n    }\n  }\n\n  // remove slashes and dots in path\n  transform.path = _removeDotSegments(transform.path, !!transform.authority);\n\n  // construct URL\n  var rval = transform.protocol;\n  if(transform.authority !== null) {\n    rval += '//' + transform.authority;\n  }\n  rval += transform.path;\n  if(transform.query !== null) {\n    rval += '?' + transform.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n}\n\n/**\n * Removes a base IRI from the given absolute IRI.\n *\n * @param base the base IRI.\n * @param iri the absolute IRI.\n *\n * @return the relative IRI if relative to base, otherwise the absolute IRI.\n */\nfunction _removeBase(base, iri) {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n\n  if(_isString(base)) {\n    base = jsonld.url.parse(base || '');\n  }\n\n  // establish base root\n  var root = '';\n  if(base.href !== '') {\n    root += (base.protocol || '') + '//' + (base.authority || '');\n  } else if(iri.indexOf('//')) {\n    // support network-path reference with empty base\n    root += '//';\n  }\n\n  // IRI not relative to base\n  if(iri.indexOf(root) !== 0) {\n    return iri;\n  }\n\n  // remove root from IRI and parse remainder\n  var rel = jsonld.url.parse(iri.substr(root.length));\n\n  // remove path segments that match (do not remove last segment unless there\n  // is a hash or query)\n  var baseSegments = base.normalizedPath.split('/');\n  var iriSegments = rel.normalizedPath.split('/');\n  var last = (rel.fragment || rel.query) ? 0 : 1;\n  while(baseSegments.length > 0 && iriSegments.length > last) {\n    if(baseSegments[0] !== iriSegments[0]) {\n      break;\n    }\n    baseSegments.shift();\n    iriSegments.shift();\n  }\n\n  // use '../' for each non-matching base segment\n  var rval = '';\n  if(baseSegments.length > 0) {\n    // don't count the last segment (if it ends with '/' last path doesn't\n    // count and if it doesn't end with '/' it isn't a path)\n    baseSegments.pop();\n    for(var i = 0; i < baseSegments.length; ++i) {\n      rval += '../';\n    }\n  }\n\n  // prepend remaining segments\n  rval += iriSegments.join('/');\n\n  // add query and hash\n  if(rel.query !== null) {\n    rval += '?' + rel.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n}\n\n/**\n * Gets the initial context.\n *\n * @param options the options to use:\n *          [base] the document base IRI.\n *\n * @return the initial context.\n */\nfunction _getInitialContext(options) {\n  var base = jsonld.url.parse(options.base || '');\n  return {\n    '@base': base,\n    mappings: {},\n    inverse: null,\n    getInverse: _createInverseContext,\n    clone: _cloneActiveContext\n  };\n\n  /**\n   * Generates an inverse context for use in the compaction algorithm, if\n   * not already generated for the given active context.\n   *\n   * @return the inverse context.\n   */\n  function _createInverseContext() {\n    var activeCtx = this;\n\n    // lazily create inverse\n    if(activeCtx.inverse) {\n      return activeCtx.inverse;\n    }\n    var inverse = activeCtx.inverse = {};\n\n    // variables for building fast CURIE map\n    var fastCurieMap = activeCtx.fastCurieMap = {};\n    var irisToTerms = {};\n\n    // handle default language\n    var defaultLanguage = activeCtx['@language'] || '@none';\n\n    // create term selections for each mapping in the context, ordered by\n    // shortest and then lexicographically least\n    var mappings = activeCtx.mappings;\n    var terms = Object.keys(mappings).sort(_compareShortestLeast);\n    for(var i = 0; i < terms.length; ++i) {\n      var term = terms[i];\n      var mapping = mappings[term];\n      if(mapping === null) {\n        continue;\n      }\n\n      var container = mapping['@container'] || '@none';\n\n      // iterate over every IRI in the mapping\n      var ids = mapping['@id'];\n      if(!_isArray(ids)) {\n        ids = [ids];\n      }\n      for(var ii = 0; ii < ids.length; ++ii) {\n        var iri = ids[ii];\n        var entry = inverse[iri];\n        var isKeyword = _isKeyword(iri);\n\n        if(!entry) {\n          // initialize entry\n          inverse[iri] = entry = {};\n\n          if(!isKeyword && !mapping._termHasColon) {\n            // init IRI to term map and fast CURIE prefixes\n            irisToTerms[iri] = [term];\n            var fastCurieEntry = {iri: iri, terms: irisToTerms[iri]};\n            if(iri[0] in fastCurieMap) {\n              fastCurieMap[iri[0]].push(fastCurieEntry);\n            } else {\n              fastCurieMap[iri[0]] = [fastCurieEntry];\n            }\n          }\n        } else if(!isKeyword && !mapping._termHasColon) {\n          // add IRI to term match\n          irisToTerms[iri].push(term);\n        }\n\n        // add new entry\n        if(!entry[container]) {\n          entry[container] = {\n            '@language': {},\n            '@type': {}\n          };\n        }\n        entry = entry[container];\n\n        if(mapping.reverse) {\n          // term is preferred for values using @reverse\n          _addPreferredTerm(mapping, term, entry['@type'], '@reverse');\n        } else if('@type' in mapping) {\n          // term is preferred for values using specific type\n          _addPreferredTerm(mapping, term, entry['@type'], mapping['@type']);\n        } else if('@language' in mapping) {\n          // term is preferred for values using specific language\n          var language = mapping['@language'] || '@null';\n          _addPreferredTerm(mapping, term, entry['@language'], language);\n        } else {\n          // term is preferred for values w/default language or no type and\n          // no language\n          // add an entry for the default language\n          _addPreferredTerm(mapping, term, entry['@language'], defaultLanguage);\n\n          // add entries for no type and no language\n          _addPreferredTerm(mapping, term, entry['@type'], '@none');\n          _addPreferredTerm(mapping, term, entry['@language'], '@none');\n        }\n      }\n    }\n\n    // build fast CURIE map\n    for(var key in fastCurieMap) {\n      _buildIriMap(fastCurieMap, key, 1);\n    }\n\n    return inverse;\n  }\n\n  /**\n   * Runs a recursive algorithm to build a lookup map for quickly finding\n   * potential CURIEs.\n   *\n   * @param iriMap the map to build.\n   * @param key the current key in the map to work on.\n   * @param idx the index into the IRI to compare.\n   */\n  function _buildIriMap(iriMap, key, idx) {\n    var entries = iriMap[key];\n    var next = iriMap[key] = {};\n\n    var iri;\n    var letter;\n    for(var i = 0; i < entries.length; ++i) {\n      iri = entries[i].iri;\n      if(idx >= iri.length) {\n        letter = '';\n      } else {\n        letter = iri[idx];\n      }\n      if(letter in next) {\n        next[letter].push(entries[i]);\n      } else {\n        next[letter] = [entries[i]];\n      }\n    }\n\n    for(var key in next) {\n      if(key === '') {\n        continue;\n      }\n      _buildIriMap(next, key, idx + 1);\n    }\n  }\n\n  /**\n   * Adds the term for the given entry if not already added.\n   *\n   * @param mapping the term mapping.\n   * @param term the term to add.\n   * @param entry the inverse context typeOrLanguage entry to add to.\n   * @param typeOrLanguageValue the key in the entry to add to.\n   */\n  function _addPreferredTerm(mapping, term, entry, typeOrLanguageValue) {\n    if(!(typeOrLanguageValue in entry)) {\n      entry[typeOrLanguageValue] = term;\n    }\n  }\n\n  /**\n   * Clones an active context, creating a child active context.\n   *\n   * @return a clone (child) of the active context.\n   */\n  function _cloneActiveContext() {\n    var child = {};\n    child['@base'] = this['@base'];\n    child.mappings = _clone(this.mappings);\n    child.clone = this.clone;\n    child.inverse = null;\n    child.getInverse = this.getInverse;\n    if('@language' in this) {\n      child['@language'] = this['@language'];\n    }\n    if('@vocab' in this) {\n      child['@vocab'] = this['@vocab'];\n    }\n    return child;\n  }\n}\n\n/**\n * Returns whether or not the given value is a keyword.\n *\n * @param v the value to check.\n *\n * @return true if the value is a keyword, false if not.\n */\nfunction _isKeyword(v) {\n  if(!_isString(v)) {\n    return false;\n  }\n  switch(v) {\n  case '@base':\n  case '@context':\n  case '@container':\n  case '@default':\n  case '@embed':\n  case '@explicit':\n  case '@graph':\n  case '@id':\n  case '@index':\n  case '@language':\n  case '@list':\n  case '@omitDefault':\n  case '@preserve':\n  case '@requireAll':\n  case '@reverse':\n  case '@set':\n  case '@type':\n  case '@value':\n  case '@vocab':\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\nfunction _isObject(v) {\n  return (Object.prototype.toString.call(v) === '[object Object]');\n}\n\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\nfunction _isEmptyObject(v) {\n  return _isObject(v) && Object.keys(v).length === 0;\n}\n\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\nfunction _isArray(v) {\n  return Array.isArray(v);\n}\n\n/**\n * Throws an exception if the given value is not a valid @type value.\n *\n * @param v the value to check.\n */\nfunction _validateTypeValue(v) {\n  // can be a string or an empty object\n  if(_isString(v) || _isEmptyObject(v)) {\n    return;\n  }\n\n  // must be an array\n  var isValid = false;\n  if(_isArray(v)) {\n    // must contain only strings\n    isValid = true;\n    for(var i = 0; i < v.length; ++i) {\n      if(!(_isString(v[i]))) {\n        isValid = false;\n        break;\n      }\n    }\n  }\n\n  if(!isValid) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; \"@type\" value must a string, an array of ' +\n      'strings, or an empty object.', 'jsonld.SyntaxError',\n      {code: 'invalid type value', value: v});\n  }\n}\n\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\nfunction _isString(v) {\n  return (typeof v === 'string' ||\n    Object.prototype.toString.call(v) === '[object String]');\n}\n\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\nfunction _isNumber(v) {\n  return (typeof v === 'number' ||\n    Object.prototype.toString.call(v) === '[object Number]');\n}\n\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\nfunction _isDouble(v) {\n  return _isNumber(v) && String(v).indexOf('.') !== -1;\n}\n\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\nfunction _isNumeric(v) {\n  return !isNaN(parseFloat(v)) && isFinite(v);\n}\n\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\nfunction _isBoolean(v) {\n  return (typeof v === 'boolean' ||\n    Object.prototype.toString.call(v) === '[object Boolean]');\n}\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\nfunction _isUndefined(v) {\n  return (typeof v === 'undefined');\n}\n\n/**\n * Returns true if the given value is a subject with properties.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject with properties, false if not.\n */\nfunction _isSubject(v) {\n  // Note: A value is a subject if all of these hold true:\n  // 1. It is an Object.\n  // 2. It is not a @value, @set, or @list.\n  // 3. It has more than 1 key OR any existing key is not @id.\n  var rval = false;\n  if(_isObject(v) &&\n    !(('@value' in v) || ('@set' in v) || ('@list' in v))) {\n    var keyCount = Object.keys(v).length;\n    rval = (keyCount > 1 || !('@id' in v));\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given value is a subject reference.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject reference, false if not.\n */\nfunction _isSubjectReference(v) {\n  // Note: A value is a subject reference if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has a single key: @id.\n  return (_isObject(v) && Object.keys(v).length === 1 && ('@id' in v));\n}\n\n/**\n * Returns true if the given value is a @value.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @value, false if not.\n */\nfunction _isValue(v) {\n  // Note: A value is a @value if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @value property.\n  return _isObject(v) && ('@value' in v);\n}\n\n/**\n * Returns true if the given value is a @list.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @list, false if not.\n */\nfunction _isList(v) {\n  // Note: A value is a @list if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @list property.\n  return _isObject(v) && ('@list' in v);\n}\n\n/**\n * Returns true if the given value is a blank node.\n *\n * @param v the value to check.\n *\n * @return true if the value is a blank node, false if not.\n */\nfunction _isBlankNode(v) {\n  // Note: A value is a blank node if all of these hold true:\n  // 1. It is an Object.\n  // 2. If it has an @id key its value begins with '_:'.\n  // 3. It has no keys OR is not a @value, @set, or @list.\n  var rval = false;\n  if(_isObject(v)) {\n    if('@id' in v) {\n      rval = (v['@id'].indexOf('_:') === 0);\n    } else {\n      rval = (Object.keys(v).length === 0 ||\n        !(('@value' in v) || ('@set' in v) || ('@list' in v)));\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given value is an absolute IRI, false if not.\n *\n * @param v the value to check.\n *\n * @return true if the value is an absolute IRI, false if not.\n */\nfunction _isAbsoluteIri(v) {\n  return _isString(v) && v.indexOf(':') !== -1;\n}\n\n/**\n * Clones an object, array, or string/number. If a typed JavaScript object\n * is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\nfunction _clone(value) {\n  if(value && typeof value === 'object') {\n    var rval;\n    if(_isArray(value)) {\n      rval = [];\n      for(var i = 0; i < value.length; ++i) {\n        rval[i] = _clone(value[i]);\n      }\n    } else if(_isObject(value)) {\n      rval = {};\n      for(var key in value) {\n        rval[key] = _clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n    return rval;\n  }\n  return value;\n}\n\n/**\n * Finds all @context URLs in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param urls a map of URLs (url => false/@contexts).\n * @param replace true to replace the URLs in the given input with the\n *           @contexts from the urls map, false not to.\n * @param base the base IRI to use to resolve relative IRIs.\n *\n * @return true if new URLs to retrieve were found, false if not.\n */\nfunction _findContextUrls(input, urls, replace, base) {\n  var count = Object.keys(urls).length;\n  if(_isArray(input)) {\n    for(var i = 0; i < input.length; ++i) {\n      _findContextUrls(input[i], urls, replace, base);\n    }\n    return (count < Object.keys(urls).length);\n  } else if(_isObject(input)) {\n    for(var key in input) {\n      if(key !== '@context') {\n        _findContextUrls(input[key], urls, replace, base);\n        continue;\n      }\n\n      // get @context\n      var ctx = input[key];\n\n      // array @context\n      if(_isArray(ctx)) {\n        var length = ctx.length;\n        for(var i = 0; i < length; ++i) {\n          var _ctx = ctx[i];\n          if(_isString(_ctx)) {\n            _ctx = jsonld.prependBase(base, _ctx);\n            // replace w/@context if requested\n            if(replace) {\n              _ctx = urls[_ctx];\n              if(_isArray(_ctx)) {\n                // add flattened context\n                Array.prototype.splice.apply(ctx, [i, 1].concat(_ctx));\n                i += _ctx.length - 1;\n                length = ctx.length;\n              } else {\n                ctx[i] = _ctx;\n              }\n            } else if(!(_ctx in urls)) {\n              // @context URL found\n              urls[_ctx] = false;\n            }\n          }\n        }\n      } else if(_isString(ctx)) {\n        // string @context\n        ctx = jsonld.prependBase(base, ctx);\n        // replace w/@context if requested\n        if(replace) {\n          input[key] = urls[ctx];\n        } else if(!(ctx in urls)) {\n          // @context URL found\n          urls[ctx] = false;\n        }\n      }\n    }\n    return (count < Object.keys(urls).length);\n  }\n  return false;\n}\n\n/**\n * Retrieves external @context URLs using the given document loader. Every\n * instance of @context in the input that refers to a URL will be replaced\n * with the JSON @context found at that URL.\n *\n * @param input the JSON-LD input with possible contexts.\n * @param options the options to use:\n *          documentLoader(url, callback(err, remoteDoc)) the document loader.\n * @param callback(err, input) called once the operation completes.\n */\nfunction _retrieveContextUrls(input, options, callback) {\n  // if any error occurs during URL resolution, quit\n  var error = null;\n\n  // recursive document loader\n  var documentLoader = options.documentLoader;\n  var retrieve = function(input, cycles, documentLoader, base, callback) {\n    if(Object.keys(cycles).length > MAX_CONTEXT_URLS) {\n      error = new JsonLdError(\n        'Maximum number of @context URLs exceeded.',\n        'jsonld.ContextUrlError',\n        {code: 'loading remote context failed', max: MAX_CONTEXT_URLS});\n      return callback(error);\n    }\n\n    // for tracking the URLs to retrieve\n    var urls = {};\n\n    // finished will be called once the URL queue is empty\n    var finished = function() {\n      // replace all URLs in the input\n      _findContextUrls(input, urls, true, base);\n      callback(null, input);\n    };\n\n    // find all URLs in the given input\n    if(!_findContextUrls(input, urls, false, base)) {\n      // no new URLs in input\n      return finished();\n    }\n\n    // queue all unretrieved URLs\n    var queue = [];\n    for(var url in urls) {\n      if(urls[url] === false) {\n        queue.push(url);\n      }\n    }\n\n    // retrieve URLs in queue\n    var count = queue.length;\n    for(var i = 0; i < queue.length; ++i) {\n      (function(url) {\n        // check for context URL cycle\n        if(url in cycles) {\n          error = new JsonLdError(\n            'Cyclical @context URLs detected.',\n            'jsonld.ContextUrlError',\n            {code: 'recursive context inclusion', url: url});\n          return callback(error);\n        }\n        var _cycles = _clone(cycles);\n        _cycles[url] = true;\n        var done = function(err, remoteDoc) {\n          // short-circuit if there was an error with another URL\n          if(error) {\n            return;\n          }\n\n          var ctx = remoteDoc ? remoteDoc.document : null;\n\n          // parse string context as JSON\n          if(!err && _isString(ctx)) {\n            try {\n              ctx = JSON.parse(ctx);\n            } catch(ex) {\n              err = ex;\n            }\n          }\n\n          // ensure ctx is an object\n          if(err) {\n            err = new JsonLdError(\n              'Dereferencing a URL did not result in a valid JSON-LD object. ' +\n              'Possible causes are an inaccessible URL perhaps due to ' +\n              'a same-origin policy (ensure the server uses CORS if you are ' +\n              'using client-side JavaScript), too many redirects, a ' +\n              'non-JSON response, or more than one HTTP Link Header was ' +\n              'provided for a remote context.',\n              'jsonld.InvalidUrl',\n              {code: 'loading remote context failed', url: url, cause: err});\n          } else if(!_isObject(ctx)) {\n            err = new JsonLdError(\n              'Dereferencing a URL did not result in a JSON object. The ' +\n              'response was valid JSON, but it was not a JSON object.',\n              'jsonld.InvalidUrl',\n              {code: 'invalid remote context', url: url, cause: err});\n          }\n          if(err) {\n            error = err;\n            return callback(error);\n          }\n\n          // use empty context if no @context key is present\n          if(!('@context' in ctx)) {\n            ctx = {'@context': {}};\n          } else {\n            ctx = {'@context': ctx['@context']};\n          }\n\n          // append context URL to context if given\n          if(remoteDoc.contextUrl) {\n            if(!_isArray(ctx['@context'])) {\n              ctx['@context'] = [ctx['@context']];\n            }\n            ctx['@context'].push(remoteDoc.contextUrl);\n          }\n\n          // recurse\n          retrieve(ctx, _cycles, documentLoader, url, function(err, ctx) {\n            if(err) {\n              return callback(err);\n            }\n            urls[url] = ctx['@context'];\n            count -= 1;\n            if(count === 0) {\n              finished();\n            }\n          });\n        };\n        var promise = documentLoader(url, done);\n        if(promise && 'then' in promise) {\n          promise.then(done.bind(null, null), done);\n        }\n      }(queue[i]));\n    }\n  };\n  retrieve(input, {}, documentLoader, options.base, callback);\n}\n\n// define js 1.8.5 Object.keys method if not present\nif(!Object.keys) {\n  Object.keys = function(o) {\n    if(o !== Object(o)) {\n      throw new TypeError('Object.keys called on non-object');\n    }\n    var rval = [];\n    for(var p in o) {\n      if(Object.prototype.hasOwnProperty.call(o, p)) {\n        rval.push(p);\n      }\n    }\n    return rval;\n  };\n}\n\n/**\n * Parses RDF in the form of N-Quads.\n *\n * @param input the N-Quads input to parse.\n *\n * @return an RDF dataset.\n */\nfunction _parseNQuads(input) {\n  // define partial regexes\n  var iri = '(?:<([^:]+:[^>]*)>)';\n  var bnode = '(_:(?:[A-Za-z0-9]+))';\n  var plain = '\"([^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"';\n  var datatype = '(?:\\\\^\\\\^' + iri + ')';\n  var language = '(?:@([a-z]+(?:-[a-z0-9]+)*))';\n  var literal = '(?:' + plain + '(?:' + datatype + '|' + language + ')?)';\n  var comment = '(?:#.*)?';\n  var ws = '[ \\\\t]+';\n  var wso = '[ \\\\t]*';\n  var eoln = /(?:\\r\\n)|(?:\\n)|(?:\\r)/g;\n  var empty = new RegExp('^' + wso + comment + '$');\n\n  // define quad part regexes\n  var subject = '(?:' + iri + '|' + bnode + ')' + ws;\n  var property = iri + ws;\n  var object = '(?:' + iri + '|' + bnode + '|' + literal + ')' + wso;\n  var graphName = '(?:\\\\.|(?:(?:' + iri + '|' + bnode + ')' + wso + '\\\\.))';\n\n  // full quad regex\n  var quad = new RegExp(\n    '^' + wso + subject + property + object + graphName + wso + comment + '$');\n\n  // build RDF dataset\n  var dataset = {};\n\n  // split N-Quad input into lines\n  var lines = input.split(eoln);\n  var lineNumber = 0;\n  for(var li = 0; li < lines.length; ++li) {\n    var line = lines[li];\n    lineNumber++;\n\n    // skip empty lines\n    if(empty.test(line)) {\n      continue;\n    }\n\n    // parse quad\n    var match = line.match(quad);\n    if(match === null) {\n      throw new JsonLdError(\n        'Error while parsing N-Quads; invalid quad.',\n        'jsonld.ParseError', {line: lineNumber});\n    }\n\n    // create RDF triple\n    var triple = {};\n\n    // get subject\n    if(!_isUndefined(match[1])) {\n      triple.subject = {type: 'IRI', value: match[1]};\n    } else {\n      triple.subject = {type: 'blank node', value: match[2]};\n    }\n\n    // get predicate\n    triple.predicate = {type: 'IRI', value: match[3]};\n\n    // get object\n    if(!_isUndefined(match[4])) {\n      triple.object = {type: 'IRI', value: match[4]};\n    } else if(!_isUndefined(match[5])) {\n      triple.object = {type: 'blank node', value: match[5]};\n    } else {\n      triple.object = {type: 'literal'};\n      if(!_isUndefined(match[7])) {\n        triple.object.datatype = match[7];\n      } else if(!_isUndefined(match[8])) {\n        triple.object.datatype = RDF_LANGSTRING;\n        triple.object.language = match[8];\n      } else {\n        triple.object.datatype = XSD_STRING;\n      }\n      var unescaped = match[6]\n        .replace(/\\\\\"/g, '\"')\n        .replace(/\\\\t/g, '\\t')\n        .replace(/\\\\n/g, '\\n')\n        .replace(/\\\\r/g, '\\r')\n        .replace(/\\\\\\\\/g, '\\\\');\n      triple.object.value = unescaped;\n    }\n\n    // get graph name ('@default' is used for the default graph)\n    var name = '@default';\n    if(!_isUndefined(match[9])) {\n      name = match[9];\n    } else if(!_isUndefined(match[10])) {\n      name = match[10];\n    }\n\n    // initialize graph in dataset\n    if(!(name in dataset)) {\n      dataset[name] = [triple];\n    } else {\n      // add triple if unique to its graph\n      var unique = true;\n      var triples = dataset[name];\n      for(var ti = 0; unique && ti < triples.length; ++ti) {\n        if(_compareRDFTriples(triples[ti], triple)) {\n          unique = false;\n        }\n      }\n      if(unique) {\n        triples.push(triple);\n      }\n    }\n  }\n\n  return dataset;\n}\n\n// register the N-Quads RDF parser\njsonld.registerRDFParser('application/nquads', _parseNQuads);\n\n/**\n * Converts an RDF dataset to N-Quads.\n *\n * @param dataset the RDF dataset to convert.\n *\n * @return the N-Quads string.\n */\nfunction _toNQuads(dataset) {\n  var quads = [];\n  for(var graphName in dataset) {\n    var triples = dataset[graphName];\n    for(var ti = 0; ti < triples.length; ++ti) {\n      var triple = triples[ti];\n      if(graphName === '@default') {\n        graphName = null;\n      }\n      quads.push(_toNQuad(triple, graphName));\n    }\n  }\n  return quads.sort().join('');\n}\n\n/**\n * Converts an RDF triple and graph name to an N-Quad string (a single quad).\n *\n * @param triple the RDF triple or quad to convert (a triple or quad may be\n *          passed, if a triple is passed then `graphName` should be given\n *          to specify the name of the graph the triple is in, `null` for\n *          the default graph).\n * @param graphName the name of the graph containing the triple, null for\n *          the default graph.\n *\n * @return the N-Quad string.\n */\nfunction _toNQuad(triple, graphName) {\n  var s = triple.subject;\n  var p = triple.predicate;\n  var o = triple.object;\n  var g = graphName || null;\n  if('name' in triple && triple.name) {\n    g = triple.name.value;\n  }\n\n  var quad = '';\n\n  // subject is an IRI\n  if(s.type === 'IRI') {\n    quad += '<' + s.value + '>';\n  } else {\n    quad += s.value;\n  }\n  quad += ' ';\n\n  // predicate is an IRI\n  if(p.type === 'IRI') {\n    quad += '<' + p.value + '>';\n  } else {\n    quad += p.value;\n  }\n  quad += ' ';\n\n  // object is IRI, bnode, or literal\n  if(o.type === 'IRI') {\n    quad += '<' + o.value + '>';\n  } else if(o.type === 'blank node') {\n    quad += o.value;\n  } else {\n    var escaped = o.value\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/\\\"/g, '\\\\\"');\n    quad += '\"' + escaped + '\"';\n    if(o.datatype === RDF_LANGSTRING) {\n      if(o.language) {\n        quad += '@' + o.language;\n      }\n    } else if(o.datatype !== XSD_STRING) {\n      quad += '^^<' + o.datatype + '>';\n    }\n  }\n\n  // graph\n  if(g !== null && g !== undefined) {\n    if(g.indexOf('_:') !== 0) {\n      quad += ' <' + g + '>';\n    } else {\n      quad += ' ' + g;\n    }\n  }\n\n  quad += ' .\\n';\n  return quad;\n}\n\n/**\n * Parses the RDF dataset found via the data object from the RDFa API.\n *\n * @param data the RDFa API data object.\n *\n * @return the RDF dataset.\n */\nfunction _parseRdfaApiData(data) {\n  var dataset = {};\n  dataset['@default'] = [];\n\n  var subjects = data.getSubjects();\n  for(var si = 0; si < subjects.length; ++si) {\n    var subject = subjects[si];\n    if(subject === null) {\n      continue;\n    }\n\n    // get all related triples\n    var triples = data.getSubjectTriples(subject);\n    if(triples === null) {\n      continue;\n    }\n    var predicates = triples.predicates;\n    for(var predicate in predicates) {\n      // iterate over objects\n      var objects = predicates[predicate].objects;\n      for(var oi = 0; oi < objects.length; ++oi) {\n        var object = objects[oi];\n\n        // create RDF triple\n        var triple = {};\n\n        // add subject\n        if(subject.indexOf('_:') === 0) {\n          triple.subject = {type: 'blank node', value: subject};\n        } else {\n          triple.subject = {type: 'IRI', value: subject};\n        }\n\n        // add predicate\n        if(predicate.indexOf('_:') === 0) {\n          triple.predicate = {type: 'blank node', value: predicate};\n        } else {\n          triple.predicate = {type: 'IRI', value: predicate};\n        }\n\n        // serialize XML literal\n        var value = object.value;\n        if(object.type === RDF_XML_LITERAL) {\n          // initialize XMLSerializer\n          if(!XMLSerializer) {\n            _defineXMLSerializer();\n          }\n          var serializer = new XMLSerializer();\n          value = '';\n          for(var x = 0; x < object.value.length; x++) {\n            if(object.value[x].nodeType === Node.ELEMENT_NODE) {\n              value += serializer.serializeToString(object.value[x]);\n            } else if(object.value[x].nodeType === Node.TEXT_NODE) {\n              value += object.value[x].nodeValue;\n            }\n          }\n        }\n\n        // add object\n        triple.object = {};\n\n        // object is an IRI\n        if(object.type === RDF_OBJECT) {\n          if(object.value.indexOf('_:') === 0) {\n            triple.object.type = 'blank node';\n          } else {\n            triple.object.type = 'IRI';\n          }\n        } else {\n          // object is a literal\n          triple.object.type = 'literal';\n          if(object.type === RDF_PLAIN_LITERAL) {\n            if(object.language) {\n              triple.object.datatype = RDF_LANGSTRING;\n              triple.object.language = object.language;\n            } else {\n              triple.object.datatype = XSD_STRING;\n            }\n          } else {\n            triple.object.datatype = object.type;\n          }\n        }\n        triple.object.value = value;\n\n        // add triple to dataset in default graph\n        dataset['@default'].push(triple);\n      }\n    }\n  }\n\n  return dataset;\n}\n\n// register the RDFa API RDF parser\njsonld.registerRDFParser('rdfa-api', _parseRdfaApiData);\n\n/**\n * Creates a new IdentifierIssuer. A IdentifierIssuer issues unique\n * identifiers, keeping track of any previously issued identifiers.\n *\n * @param prefix the prefix to use ('<prefix><counter>').\n */\nfunction IdentifierIssuer(prefix) {\n  this.prefix = prefix;\n  this.counter = 0;\n  this.existing = {};\n}\njsonld.IdentifierIssuer = IdentifierIssuer;\n// backwards-compability\njsonld.UniqueNamer = IdentifierIssuer;\n\n/**\n * Copies this IdentifierIssuer.\n *\n * @return a copy of this IdentifierIssuer.\n */\nIdentifierIssuer.prototype.clone = function() {\n  var copy = new IdentifierIssuer(this.prefix);\n  copy.counter = this.counter;\n  copy.existing = _clone(this.existing);\n  return copy;\n};\n\n/**\n * Gets the new identifier for the given old identifier, where if no old\n * identifier is given a new identifier will be generated.\n *\n * @param [old] the old identifier to get the new identifier for.\n *\n * @return the new identifier.\n */\nIdentifierIssuer.prototype.getId = function(old) {\n  // return existing old identifier\n  if(old && old in this.existing) {\n    return this.existing[old];\n  }\n\n  // get next identifier\n  var identifier = this.prefix + this.counter;\n  this.counter += 1;\n\n  // save mapping\n  if(old) {\n    this.existing[old] = identifier;\n  }\n\n  return identifier;\n};\n// alias\nIdentifierIssuer.prototype.getName = IdentifierIssuer.prototype.getName;\n\n/**\n * Returns true if the given old identifer has already been assigned a new\n * identifier.\n *\n * @param old the old identifier to check.\n *\n * @return true if the old identifier has been assigned a new identifier, false\n *   if not.\n */\nIdentifierIssuer.prototype.hasId = function(old) {\n  return (old in this.existing);\n};\n// alias\nIdentifierIssuer.prototype.isNamed = IdentifierIssuer.prototype.hasId;\n\n/**\n * A Permutator iterates over all possible permutations of the given array\n * of elements.\n *\n * @param list the array of elements to iterate over.\n */\nvar Permutator = function(list) {\n  // original array\n  this.list = list.sort();\n  // indicates whether there are more permutations\n  this.done = false;\n  // directional info for permutation algorithm\n  this.left = {};\n  for(var i = 0; i < list.length; ++i) {\n    this.left[list[i]] = true;\n  }\n};\n\n/**\n * Returns true if there is another permutation.\n *\n * @return true if there is another permutation, false if not.\n */\nPermutator.prototype.hasNext = function() {\n  return !this.done;\n};\n\n/**\n * Gets the next permutation. Call hasNext() to ensure there is another one\n * first.\n *\n * @return the next permutation.\n */\nPermutator.prototype.next = function() {\n  // copy current permutation\n  var rval = this.list.slice();\n\n  /* Calculate the next permutation using the Steinhaus-Johnson-Trotter\n   permutation algorithm. */\n\n  // get largest mobile element k\n  // (mobile: element is greater than the one it is looking at)\n  var k = null;\n  var pos = 0;\n  var length = this.list.length;\n  for(var i = 0; i < length; ++i) {\n    var element = this.list[i];\n    var left = this.left[element];\n    if((k === null || element > k) &&\n      ((left && i > 0 && element > this.list[i - 1]) ||\n      (!left && i < (length - 1) && element > this.list[i + 1]))) {\n      k = element;\n      pos = i;\n    }\n  }\n\n  // no more permutations\n  if(k === null) {\n    this.done = true;\n  } else {\n    // swap k and the element it is looking at\n    var swap = this.left[k] ? pos - 1 : pos + 1;\n    this.list[pos] = this.list[swap];\n    this.list[swap] = k;\n\n    // reverse the direction of all elements larger than k\n    for(var i = 0; i < length; ++i) {\n      if(this.list[i] > k) {\n        this.left[this.list[i]] = !this.left[this.list[i]];\n      }\n    }\n  }\n\n  return rval;\n};\n\n//////////////////////// DEFINE NORMALIZATION HASH API ////////////////////////\n\n/**\n * Creates a new NormalizeHash for use by the given normalization algorithm.\n *\n * @param algorithm the RDF Dataset Normalization algorithm to use:\n *          'URDNA2015' or 'URGNA2012'.\n */\nvar NormalizeHash = function(algorithm) {\n  if(!(this instanceof NormalizeHash)) {\n    return new NormalizeHash(algorithm);\n  }\n  if(['URDNA2015', 'URGNA2012'].indexOf(algorithm) === -1) {\n    throw new Error(\n      'Invalid RDF Dataset Normalization algorithm: ' + algorithm);\n  }\n  NormalizeHash._init.call(this, algorithm);\n};\nNormalizeHash.hashNQuads = function(algorithm, nquads) {\n  var md = new NormalizeHash(algorithm);\n  for(var i = 0; i < nquads.length; ++i) {\n    md.update(nquads[i]);\n  }\n  return md.digest();\n};\n\n// switch definition of NormalizeHash based on environment\n(function(_nodejs) {\n\nif(_nodejs) {\n  // define NormalizeHash using native crypto lib\n  var crypto = require('crypto');\n  NormalizeHash._init = function(algorithm) {\n    if(algorithm === 'URDNA2015') {\n      algorithm = 'sha256';\n    } else {\n      // assume URGNA2012\n      algorithm = 'sha1';\n    }\n    this.md = crypto.createHash(algorithm);\n  };\n  NormalizeHash.prototype.update = function(msg) {\n    return this.md.update(msg, 'utf8');\n  };\n  NormalizeHash.prototype.digest = function() {\n    return this.md.digest('hex');\n  };\n  return;\n}\n\n// define NormalizeHash using JavaScript\nNormalizeHash._init = function(algorithm) {\n  if(algorithm === 'URDNA2015') {\n    algorithm = new sha256.Algorithm();\n  } else {\n    // assume URGNA2012\n    algorithm = new sha1.Algorithm();\n  }\n  this.md = new MessageDigest(algorithm);\n};\nNormalizeHash.prototype.update = function(msg) {\n  return this.md.update(msg);\n};\nNormalizeHash.prototype.digest = function() {\n  return this.md.digest().toHex();\n};\n\n/////////////////////////// DEFINE MESSAGE DIGEST API /////////////////////////\n\n/**\n * Creates a new MessageDigest.\n *\n * @param algorithm the algorithm to use.\n */\nvar MessageDigest = function(algorithm) {\n  if(!(this instanceof MessageDigest)) {\n    return new MessageDigest(algorithm);\n  }\n\n  this._algorithm = algorithm;\n\n  // create shared padding as needed\n  if(!MessageDigest._padding ||\n    MessageDigest._padding.length < this._algorithm.blockSize) {\n    MessageDigest._padding = String.fromCharCode(128);\n    var c = String.fromCharCode(0x00);\n    var n = 64;\n    while(n > 0) {\n      if(n & 1) {\n        MessageDigest._padding += c;\n      }\n      n >>>= 1;\n      if(n > 0) {\n        c += c;\n      }\n    }\n  }\n\n  // start digest automatically for first time\n  this.start();\n};\n\n/**\n * Starts the digest.\n *\n * @return this digest object.\n */\nMessageDigest.prototype.start = function() {\n  // up to 56-bit message length for convenience\n  this.messageLength = 0;\n\n  // full message length\n  this.fullMessageLength = [];\n  var int32s = this._algorithm.messageLengthSize / 4;\n  for(var i = 0; i < int32s; ++i) {\n    this.fullMessageLength.push(0);\n  }\n\n  // input buffer\n  this._input = new MessageDigest.ByteBuffer();\n\n  // get starting state\n  this.state = this._algorithm.start();\n\n  return this;\n};\n\n/**\n * Updates the digest with the given message input. The input must be\n * a string of characters.\n *\n * @param msg the message input to update with (ByteBuffer or string).\n *\n * @return this digest object.\n */\nMessageDigest.prototype.update = function(msg) {\n  // encode message as a UTF-8 encoded binary string\n  msg = new MessageDigest.ByteBuffer(unescape(encodeURIComponent(msg)));\n\n  // update message length\n  this.messageLength += msg.length();\n  var len = msg.length();\n  len = [(len / 0x100000000) >>> 0, len >>> 0];\n  for(var i = this.fullMessageLength.length - 1; i >= 0; --i) {\n    this.fullMessageLength[i] += len[1];\n    len[1] = len[0] + ((this.fullMessageLength[i] / 0x100000000) >>> 0);\n    this.fullMessageLength[i] = this.fullMessageLength[i] >>> 0;\n    len[0] = ((len[1] / 0x100000000) >>> 0);\n  }\n\n  // add bytes to input buffer\n  this._input.putBytes(msg.bytes());\n\n  // digest blocks\n  while(this._input.length() >= this._algorithm.blockSize) {\n    this.state = this._algorithm.digest(this.state, this._input);\n  }\n\n  // compact input buffer every 2K or if empty\n  if(this._input.read > 2048 || this._input.length() === 0) {\n    this._input.compact();\n  }\n\n  return this;\n};\n\n/**\n * Produces the digest.\n *\n * @return a byte buffer containing the digest value.\n */\nMessageDigest.prototype.digest = function() {\n  /* Note: Here we copy the remaining bytes in the input buffer and add the\n  appropriate padding. Then we do the final update on a copy of the state so\n  that if the user wants to get intermediate digests they can do so. */\n\n  /* Determine the number of bytes that must be added to the message to\n  ensure its length is appropriately congruent. In other words, the data to\n  be digested must be a multiple of `blockSize`. This data includes the\n  message, some padding, and the length of the message. Since the length of\n  the message will be encoded as `messageLengthSize` bytes, that means that\n  the last segment of the data must have `blockSize` - `messageLengthSize`\n  bytes of message and padding. Therefore, the length of the message plus the\n  padding must be congruent to X mod `blockSize` because\n  `blockSize` - `messageLengthSize` = X.\n\n  For example, SHA-1 is congruent to 448 mod 512 and SHA-512 is congruent to\n  896 mod 1024. SHA-1 uses a `blockSize` of 64 bytes (512 bits) and a\n  `messageLengthSize` of 8 bytes (64 bits). SHA-512 uses a `blockSize` of\n  128 bytes (1024 bits) and a `messageLengthSize` of 16 bytes (128 bits).\n\n  In order to fill up the message length it must be filled with padding that\n  begins with 1 bit followed by all 0 bits. Padding must *always* be present,\n  so if the message length is already congruent, then `blockSize` padding bits\n  must be added. */\n\n  // create final block\n  var finalBlock = new MessageDigest.ByteBuffer();\n  finalBlock.putBytes(this._input.bytes());\n\n  // compute remaining size to be digested (include message length size)\n  var remaining = (\n    this.fullMessageLength[this.fullMessageLength.length - 1] +\n    this._algorithm.messageLengthSize);\n\n  // add padding for overflow blockSize - overflow\n  // _padding starts with 1 byte with first bit is set (byte value 128), then\n  // there may be up to (blockSize - 1) other pad bytes\n  var overflow = remaining & (this._algorithm.blockSize - 1);\n  finalBlock.putBytes(MessageDigest._padding.substr(\n    0, this._algorithm.blockSize - overflow));\n\n  // serialize message length in bits in big-endian order; since length\n  // is stored in bytes we multiply by 8 (left shift by 3 and merge in\n  // remainder from )\n  var messageLength = new MessageDigest.ByteBuffer();\n  for(var i = 0; i < this.fullMessageLength.length; ++i) {\n    messageLength.putInt32((this.fullMessageLength[i] << 3) |\n      (this.fullMessageLength[i + 1] >>> 28));\n  }\n\n  // write the length of the message (algorithm-specific)\n  this._algorithm.writeMessageLength(finalBlock, messageLength);\n\n  // digest final block\n  var state = this._algorithm.digest(this.state.copy(), finalBlock);\n\n  // write state to buffer\n  var rval = new MessageDigest.ByteBuffer();\n  state.write(rval);\n  return rval;\n};\n\n/**\n * Creates a simple byte buffer for message digest operations.\n *\n * @param data the data to put in the buffer.\n */\nMessageDigest.ByteBuffer = function(data) {\n  if(typeof data === 'string') {\n    this.data = data;\n  } else {\n    this.data = '';\n  }\n  this.read = 0;\n};\n\n/**\n * Puts a 32-bit integer into this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n */\nMessageDigest.ByteBuffer.prototype.putInt32 = function(i) {\n  this.data += (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Gets a 32-bit integer from this buffer in big-endian order and\n * advances the read pointer by 4.\n *\n * @return the word.\n */\nMessageDigest.ByteBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Puts the given bytes into this buffer.\n *\n * @param bytes the bytes as a binary-encoded string.\n */\nMessageDigest.ByteBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n};\n\n/**\n * Gets the bytes in this buffer.\n *\n * @return a string full of UTF-8 encoded characters.\n */\nMessageDigest.ByteBuffer.prototype.bytes = function() {\n  return this.data.slice(this.read);\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nMessageDigest.ByteBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Compacts this buffer.\n */\nMessageDigest.ByteBuffer.prototype.compact = function() {\n  this.data = this.data.slice(this.read);\n  this.read = 0;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nMessageDigest.ByteBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n///////////////////////////// DEFINE SHA-1 ALGORITHM //////////////////////////\n\nvar sha1 = {\n  // used for word storage\n  _w: null\n};\n\nsha1.Algorithm = function() {\n  this.name = 'sha1',\n  this.blockSize = 64;\n  this.digestLength = 20;\n  this.messageLengthSize = 8;\n};\n\nsha1.Algorithm.prototype.start = function() {\n  if(!sha1._w) {\n    sha1._w = new Array(80);\n  }\n  return sha1._createState();\n};\n\nsha1.Algorithm.prototype.writeMessageLength = function(\n  finalBlock, messageLength) {\n  // message length is in bits and in big-endian order; simply append\n  finalBlock.putBytes(messageLength.bytes());\n};\n\nsha1.Algorithm.prototype.digest = function(s, input) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = input.length();\n  var _w = sha1._w;\n  while(len >= 64) {\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // the _w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = input.getInt32();\n      _w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (_w[i - 3] ^ _w[i - 8] ^ _w[i - 14] ^ _w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      _w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (_w[i - 3] ^ _w[i - 8] ^ _w[i - 14] ^ _w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      _w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      _w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      _w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      _w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n\n  return s;\n};\n\nsha1._createState = function() {\n  var state = {\n    h0: 0x67452301,\n    h1: 0xEFCDAB89,\n    h2: 0x98BADCFE,\n    h3: 0x10325476,\n    h4: 0xC3D2E1F0\n  };\n  state.copy = function() {\n    var rval = sha1._createState();\n    rval.h0 = state.h0;\n    rval.h1 = state.h1;\n    rval.h2 = state.h2;\n    rval.h3 = state.h3;\n    rval.h4 = state.h4;\n    return rval;\n  };\n  state.write = function(buffer) {\n    buffer.putInt32(state.h0);\n    buffer.putInt32(state.h1);\n    buffer.putInt32(state.h2);\n    buffer.putInt32(state.h3);\n    buffer.putInt32(state.h4);\n  };\n  return state;\n};\n\n//////////////////////////// DEFINE SHA-256 ALGORITHM /////////////////////////\n\nvar sha256 = {\n  // shared state\n  _k: null,\n  _w: null\n};\n\nsha256.Algorithm = function() {\n  this.name = 'sha256',\n  this.blockSize = 64;\n  this.digestLength = 32;\n  this.messageLengthSize = 8;\n};\n\nsha256.Algorithm.prototype.start = function() {\n  if(!sha256._k) {\n    sha256._init();\n  }\n  return sha256._createState();\n};\n\nsha256.Algorithm.prototype.writeMessageLength = function(\n  finalBlock, messageLength) {\n  // message length is in bits and in big-endian order; simply append\n  finalBlock.putBytes(messageLength.bytes());\n};\n\nsha256.Algorithm.prototype.digest = function(s, input) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = input.length();\n  var _k = sha256._k;\n  var _w = sha256._w;\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      _w[i] = input.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = _w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = _w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      _w[i] = (t1 + _w[i - 7] + t2 + _w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + _w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      e = (d + t1) | 0;\n      d = c;\n      c = b;\n      b = a;\n      a = (t1 + t2) | 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n\n  return s;\n};\n\nsha256._createState = function() {\n  var state = {\n    h0: 0x6A09E667,\n    h1: 0xBB67AE85,\n    h2: 0x3C6EF372,\n    h3: 0xA54FF53A,\n    h4: 0x510E527F,\n    h5: 0x9B05688C,\n    h6: 0x1F83D9AB,\n    h7: 0x5BE0CD19\n  };\n  state.copy = function() {\n    var rval = sha256._createState();\n    rval.h0 = state.h0;\n    rval.h1 = state.h1;\n    rval.h2 = state.h2;\n    rval.h3 = state.h3;\n    rval.h4 = state.h4;\n    rval.h5 = state.h5;\n    rval.h6 = state.h6;\n    rval.h7 = state.h7;\n    return rval;\n  };\n  state.write = function(buffer) {\n    buffer.putInt32(state.h0);\n    buffer.putInt32(state.h1);\n    buffer.putInt32(state.h2);\n    buffer.putInt32(state.h3);\n    buffer.putInt32(state.h4);\n    buffer.putInt32(state.h5);\n    buffer.putInt32(state.h6);\n    buffer.putInt32(state.h7);\n  };\n  return state;\n};\n\nsha256._init = function() {\n  // create K table for SHA-256\n  sha256._k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // used for word storage\n  sha256._w = new Array(64);\n};\n\n})(_nodejs); // end definition of NormalizeHash\n\nif(!XMLSerializer) {\n\nvar _defineXMLSerializer = function() {\n  XMLSerializer = require('xmldom').XMLSerializer;\n};\n\n} // end _defineXMLSerializer\n\n// define URL parser\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n// with local jsonld.js modifications\njsonld.url = {};\njsonld.url.parsers = {\n  simple: {\n    // RFC 3986 basic parts\n    keys: ['href','scheme','authority','path','query','fragment'],\n    regex: /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/\n  },\n  full: {\n    keys: ['href','protocol','scheme','authority','auth','user','password','hostname','port','path','directory','file','query','fragment'],\n    regex: /^(([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(?:(((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\njsonld.url.parse = function(str, parser) {\n  var parsed = {};\n  var o = jsonld.url.parsers[parser || 'full'];\n  var m = o.regex.exec(str);\n  var i = o.keys.length;\n  while(i--) {\n    parsed[o.keys[i]] = (m[i] === undefined) ? null : m[i];\n  }\n  parsed.normalizedPath = _removeDotSegments(parsed.path, !!parsed.authority);\n  return parsed;\n};\n\n/**\n * Removes dot segments from a URL path.\n *\n * @param path the path to remove dot segments from.\n * @param hasAuthority true if the URL has an authority, false if not.\n */\nfunction _removeDotSegments(path, hasAuthority) {\n  var rval = '';\n\n  if(path.indexOf('/') === 0) {\n    rval = '/';\n  }\n\n  // RFC 3986 5.2.4 (reworked)\n  var input = path.split('/');\n  var output = [];\n  while(input.length > 0) {\n    if(input[0] === '.' || (input[0] === '' && input.length > 1)) {\n      input.shift();\n      continue;\n    }\n    if(input[0] === '..') {\n      input.shift();\n      if(hasAuthority ||\n        (output.length > 0 && output[output.length - 1] !== '..')) {\n        output.pop();\n      } else {\n        // leading relative URL '..'\n        output.push('..');\n      }\n      continue;\n    }\n    output.push(input.shift());\n  }\n\n  return rval + output.join('/');\n}\n\nif(_nodejs) {\n  // use node document loader by default\n  jsonld.useDocumentLoader('node');\n} else if(typeof XMLHttpRequest !== 'undefined') {\n  // use xhr document loader by default\n  jsonld.useDocumentLoader('xhr');\n}\n\nif(_nodejs) {\n  jsonld.use = function(extension) {\n    switch(extension) {\n      // TODO: Deprecated as of 0.4.0. Remove at some point.\n      case 'request':\n        // use node JSON-LD request extension\n        jsonld.request = require('jsonld-request');\n        break;\n      default:\n        throw new JsonLdError(\n          'Unknown extension.',\n          'jsonld.UnknownExtension', {extension: extension});\n    }\n  };\n\n  // expose version\n  var _module = {exports: {}, filename: __dirname};\n  require('pkginfo')(_module, 'version');\n  jsonld.version = _module.exports.version;\n}\n\n// end of jsonld API factory\nreturn jsonld;\n};\n\n// external APIs:\n\n// used to generate a new jsonld API instance\nvar factory = function() {\n  return wrapper(function() {\n    return factory();\n  });\n};\n\nif(!_nodejs && (typeof define === 'function' && define.amd)) {\n  // export AMD API\n  define([], function() {\n    // now that module is defined, wrap main jsonld API instance\n    wrapper(factory);\n    return factory;\n  });\n} else {\n  // wrap the main jsonld API instance\n  wrapper(factory);\n\n  if(typeof require === 'function' &&\n    typeof module !== 'undefined' && module.exports) {\n    // export CommonJS/nodejs API\n    module.exports = factory;\n  }\n\n  if(_browser) {\n    // export simple browser API\n    if(typeof jsonld === 'undefined') {\n      jsonld = jsonldjs = factory;\n    } else {\n      jsonldjs = factory;\n    }\n  }\n}\n\nreturn factory;\n\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsonld/js/jsonld.js\n// module id = 430\n// module chunks = 2","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// vertx (ignored)\n// module id = 431\n// module chunks = 2","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 432\n// module chunks = 2","//imports\nvar _ = require('./utils');\nvar async = require('./utils');\nvar QuadIndex = require('./quad_index').QuadIndex;\nvar Pattern = require('./quad_index').Pattern;\nvar RDFModel = require('./rdf_model');\nvar AbstractQueryTree = require('./abstract_query_tree').AbstractQueryTree;\n\nCallbacks = {};\n\nCallbacks.ANYTHING = {\n    'token': 'var',\n    'value': '_'\n};\n\nCallbacks.added = 'added';\nCallbacks.deleted = 'deleted';\nCallbacks.eventsFlushed = 'eventsFlushed';\n\nCallbacks.CallbacksBackend = function() {\n    this.aqt = new AbstractQueryTree();\n    this.engine = arguments[0];\n    this.indexMap = {};\n    this.observersMap = {};\n    this.queriesIndexMap = {};\n    this.emptyNotificationsMap = {};\n    this.queriesList = [];\n    this.pendingQueries = [];\n    this.matchedQueries = [];\n    this.updateInProgress = null;\n    this.indices = ['SPOG', 'GP', 'OGS', 'POG', 'GSP', 'OS'];\n    this.componentOrders = {\n\tSPOG: ['subject', 'predicate', 'object', 'graph'],\n\tGP: ['graph', 'predicate', 'subject', 'object'],\n\tOGS: ['object', 'graph', 'subject', 'predicate'],\n\tPOG: ['predicate', 'object', 'graph', 'subject'],\n\tGSP: ['graph', 'subject', 'predicate', 'object'],\n\tOS: ['object', 'subject', 'predicate', 'graph']\n    };\n\n    this.callbackCounter = 0;\n    this.callbacksMap = {};\n    this.callbacksInverseMap = {};\n\n    this.queryCounter = 0;\n    this.queriesMap = {};\n    this.queriesCallbacksMap = {};\n    this.queriesInverseMap = {};\n\n    for(var i=0; i<this.indices.length; i++) {\n\tvar indexKey = this.indices[i];\n\tthis.indexMap[indexKey] = {};\n\tthis.queriesIndexMap[indexKey] = {};\n    }\n};\n\nCallbacks.CallbacksBackend.prototype.startGraphModification = function() {\n    if(this.ongoingModification !== true) {\n\tthis.pendingQueries = [].concat(this.queriesList);\n\tthis.matchedQueries = [];\n\n\tif (this.updateInProgress == null) {\n\t    this.updateInProgress = {};\n\t    this.updateInProgress[Callbacks['added']] = [];\n\t    this.updateInProgress[Callbacks['deleted']] = [];\n\t}\n    }\n};\n\nCallbacks.CallbacksBackend.prototype.nextGraphModification = function(event, quad) {\n    this.updateInProgress[event].push(quad);\n};\n\nCallbacks.CallbacksBackend.prototype.endGraphModification = function(callback) {\n    if(this.ongoingModification !== true) {\n\tvar that = this;\n\tif (this.updateInProgress != null) {\n\t    var tmp = that.updateInProgress;\n\t    that.updateInProgress = null;\n\t    this.sendNotification(Callbacks['deleted'], tmp[Callbacks['deleted']], function () {\n\t\tthat.sendNotification(Callbacks['added'], tmp[Callbacks['added']], function () {\n\t\t    that.sendEmptyNotification(Callbacks['eventsFlushed'], null, function () {\n\t\t\tthat.dispatchQueries(function () {\n\t\t\t    callback(true);\n\t\t\t});\n\t\t    });\n\t\t});\n\t    });\n\t} else {\n\t    callback(true);\n\t}\n    } else {\n\tcallback(true);\n    }\n};\n\nCallbacks.CallbacksBackend.prototype.cancelGraphModification = function() {\n    if(this.ongoingModification !== true) {\n\tthis.updateInProgress = null;\n    }\n};\n\nCallbacks.CallbacksBackend.prototype.sendNotification = function(event, quadsPairs, doneCallback) {\n    var notificationsMap = {};\n    for(var i=0; i<quadsPairs.length; i++) {\n\tvar quadPair = quadsPairs[i];\n\tfor(var indexKey in this.indexMap) {\n\t    var index = this.indexMap[indexKey];\n\t    var order = this.componentOrders[indexKey];\n\t    this._searchCallbacksInIndex(index, order, event, quadPair, notificationsMap);\n\t    if(this.pendingQueries.length != 0) {\n\t\tindex = this.queriesIndexMap[indexKey];\n\t\tthis._searchQueriesInIndex(index, order, quadPair);\n\t    }\n\t}\n    }\n\n    this.dispatchNotifications(notificationsMap);\n\n    if(doneCallback != null)\n\tdoneCallback(true);\n};\n\nCallbacks.CallbacksBackend.prototype.sendEmptyNotification = function(event, value, doneCallback) {\n    var callbacks = this.emptyNotificationsMap[event] || [];\n    for(var i=0; i<callbacks.length; i++) {\n\tcallbacks[i](event, value);\n    }\n    doneCallback();\n};\n\nCallbacks.CallbacksBackend.prototype.dispatchNotifications = function(notificationsMap) {\n    for(var callbackId in notificationsMap) {\n\tvar callback = this.callbacksMap[callbackId];\n\tvar deleted = notificationsMap[callbackId][Callbacks['deleted']];\n\tif(deleted!=null) {\n\t    try {\n\t\tcallback(Callbacks['deleted'],deleted);\n\t    }catch(e){}\n\t}\n\tfor(var event in notificationsMap[callbackId]) {\n\t    if(event!=Callbacks['deleted']) {\n\t\ttry{\n\t\t    callback(event, notificationsMap[callbackId][event]);\n\t\t}catch(e){}\n\n\t    }\n\t}\n    }\n};\n\nCallbacks.CallbacksBackend.prototype._searchCallbacksInIndex = function(index, order, event, quadPair, notificationsMap) {\n    var quadPairNomalized = quadPair[1];\n    var quadPair = quadPair[0];\n\n    for(var i=0; i<(order.length+1); i++) {\n\tvar matched = index['_'] || [];\n\n\tvar filteredIds = [];\n\tfor(var j=0; j<matched.length; j++) {\n\t    var callbackId = matched[j];\n\t    if(this.callbacksMap[callbackId] != null) {\n\t\tnotificationsMap[callbackId] = notificationsMap[callbackId] || {};\n\t\tnotificationsMap[callbackId][event] = notificationsMap[callbackId][event] || [];\n\t\tnotificationsMap[callbackId][event].push(quadPair);\n\t\tfilteredIds.push(callbackId);\n\t    }\n\t}\n\tindex['_'] = filteredIds;\n\tvar component = order[i];\n\tif(index[''+quadPairNomalized[component]] != null) {\n\t    index = index[''+quadPairNomalized[component]];\n\t} else {\n\t    break;\n\t}\n    }\n};\n\nCallbacks.CallbacksBackend.prototype.subscribeEmpty = function(event, callback) {\n    var callbacks = this.emptyNotificationsMap[event] || [];\n    callbacks.push(callback);\n    this.emptyNotificationsMap[event] = callbacks;\n};\n\nCallbacks.CallbacksBackend.prototype.unsubscribeEmpty = function(event, callback) {\n    var callbacks = this.emptyNotificationsMap[event];\n    if(callbacks != null) {\n\tcallbacks = _.reject(callbacks, function(cb){ return cb === callback });\n    }\n    this.emptyNotificationsMap[event] = callbacks;\n};\n\nCallbacks.CallbacksBackend.prototype.subscribe = function(s,p,o,g,callback, doneCallback) {\n    var quad = this._tokenizeComponents(s,p,o,g);\n    var queryEnv = {blanks:{}, outCache:{}};\n    this.engine.registerNsInEnvironment(null, queryEnv);\n    var that = this;\n    this.engine.normalizeQuad(quad, queryEnv, true, function(normalized){\n\tvar pattern =  new Pattern(normalized);\n\tvar indexKey = that._indexForPattern(pattern);\n\tvar indexOrder = that.componentOrders[indexKey];\n\tvar index = that.indexMap[indexKey];\n\tfor(var i=0; i<indexOrder.length; i++) {\n\t    var component = indexOrder[i];\n\t    var quadValue = normalized[component];\n\t    if(quadValue === '_') {\n\t\tif(index['_'] == null) {\n\t\t    index['_'] = [];\n\t\t}\n\t\tthat.callbackCounter++;\n\t\tindex['_'].push(that.callbackCounter);\n\t\tthat.callbacksMap[that.callbackCounter] = callback;\n\t\tthat.callbacksInverseMap[callback] = that.callbackCounter;\n\t\tbreak;\n\t    } else {\n\t\tif(i===indexOrder.length-1) {\n\t\t    index[quadValue] = index[quadValue] || {'_':[]};\n\t\t    that.callbackCounter++;\n\t\t    index[quadValue]['_'].push(that.callbackCounter);\n\t\t    that.callbacksMap[that.callbackCounter] = callback;\n\t\t    that.callbacksInverseMap[callback] = that.callbackCounter;\n\t\t} else {\n\t\t    index[quadValue] = index[quadValue] || {};\n\t\t    index = index[quadValue];\n\t\t}\n\t    }\n\t}\n\tif(doneCallback != null)\n\t    doneCallback(true);\n    });\n};\n\nCallbacks.CallbacksBackend.prototype.unsubscribe = function(callback) {\n    var id = this.callbacksInverseMap[callback];\n    if(id != null) {\n\tdelete this.callbacksInverseMap[callback];\n\tdelete this.callbacksMap[id];\n    }\n};\n\nCallbacks.CallbacksBackend.prototype._tokenizeComponents = function(s, p, o, g) {\n    var pattern = {};\n\n    if(s == null) {\n\tpattern['subject'] = Callbacks.ANYTHING;\n    } else {\n\tif(s.indexOf(\"_:\") == 0) {\n\t    pattern['subject'] = {'token': 'blank', 'value':s};\n\t} else {\n\t    pattern['subject'] = {'token': 'uri', 'value':s};\n\t}\n    }\n\n    if(p == null) {\n\tpattern['predicate'] = Callbacks.ANYTHING;\n    } else {\n\tpattern['predicate'] = {'token': 'uri', 'value':p};\n    }\n\n    if(o == null) {\n\tpattern['object'] = Callbacks.ANYTHING;\n    } else {\n\tpattern['object'] = {'token': 'uri', 'value':o};\n    }\n\n    if(g == null) {\n\tpattern['graph'] = Callbacks.ANYTHING;\n    } else {\n\tpattern['graph'] = {'token': 'uri', 'value':g};\n    }\n\n    return pattern;\n};\n\nCallbacks.CallbacksBackend.prototype._indexForPattern = function(pattern) {\n    var indexKey = pattern.indexKey;\n    var matchingIndices = this.indices;\n\n    for(var i=0; i<matchingIndices.length; i++) {\n\tvar index = matchingIndices[i];\n\tvar indexComponents = this.componentOrders[index];\n\tfor(var j=0; j<indexComponents.length; j++) {\n\t    if(_.include(indexKey, indexComponents[j])===false) {\n\t\tbreak;\n\t    }\n\t    if(j==indexKey.length-1) {\n\t\treturn index;\n\t    }\n\t}\n    }\n\n    return 'SPOG'; // If no other match, we return the most generic index\n};\n\nCallbacks.CallbacksBackend.prototype.observeNode = function() {\n    var uri,graphUri,callback,doneCallback;\n\n    if(arguments.length === 4) {\n\turi = arguments[0];\n\tgraphUri = arguments[1];\n\tcallback = arguments[2];\n\tdoneCallback = arguments[3];\n    } else {\n\turi = arguments[0];\n\tgraphUri = this.engine.lexicon.defaultGraphUri;\n\tcallback = arguments[1];\n\tdoneCallback = arguments[2];\n    }\n    var query = \"CONSTRUCT { <\" + uri + \"> ?p ?o } WHERE { GRAPH <\" + graphUri + \"> { <\" + uri + \"> ?p ?o } }\";\n    var that = this;\n    var queryEnv = {blanks:{}, outCache:{}};\n    this.engine.registerNsInEnvironment(null, queryEnv);\n    var bindings = [];\n    this.engine.execute(query,  function(err, graph){\n\tif(!err) {\n\t    var node = graph;\n\t    var mustFlush = false;\n\t    var observer = function(event, triples){\n\t\tif(event === 'eventsFlushed' && mustFlush ) {\n\t\t    mustFlush = false;\n\t\t    try {\n\t\t\tcallback(node);\n\t\t    }catch(e){}\n\t\t} else if(event !== 'eventsFlushed') {\n\t\t    mustFlush = true;\n\t\t    for(var i = 0; i<triples.length; i++) {\n\t\t\tvar triple = triples[i];\n\t\t\tvar s = RDFModel.buildRDFResource(triple.subject,bindings,that.engine,queryEnv);\n\t\t\tvar p = RDFModel.buildRDFResource(triple.predicate,bindings,that.engine,queryEnv);\n\t\t\tvar o = RDFModel.buildRDFResource(triple.object,bindings,that.engine,queryEnv);\n\t\t\tif(s!=null && p!=null && o!=null) {\n\t\t\t    triple = new RDFModel.Triple(s,p,o);\n\t\t\t    if(event === Callbacks['added']) {\n\t\t\t\tnode.add(triple);\n\t\t\t    } else if(event === Callbacks['deleted']) {\n\t\t\t\tnode.remove(triple);\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t}\n\t    };\n\t    that.observersMap[callback] = observer;\n\t    that.subscribeEmpty(Callbacks['eventsFlushed'], observer);\n\t    that.subscribe(uri,null,null,null,observer,function(){\n\t\ttry {\n\t\t    callback(node);\n\t\t}catch(e){}\n\n\t\tif(doneCallback)\n\t\t    doneCallback(true)\n\t    });\n\t} else {\n\t    if(doneCallback)\n\t\tdoneCallback(false);\n\t}\n    });\n};\n\nCallbacks.CallbacksBackend.prototype.stopObservingNode = function(callback) {\n    var observer = this.observersMap[callback];\n    if(observer) {\n\tthis.unsubscribe(observer);\n\tthis.unsubscribeEmpty(Callbacks['eventsFlushed'],observer);\n\treturn true;\n    } else {\n\treturn false;\n    }\n};\n\n// Queries\n\nCallbacks.CallbacksBackend.prototype.observeQuery = function(query, callback, endCallback) {\n    var queryParsed = this.aqt.parseQueryString(query);\n    var parsedTree = this.aqt.parseSelect(queryParsed.units[0]);\n    var patterns = this.aqt.collectBasicTriples(parsedTree);\n    var that = this;\n    var queryEnv = {blanks:{}, outCache:{}};\n    this.engine.registerNsInEnvironment(null, queryEnv);\n    var counter = this.queryCounter;\n    this.queryCounter++;\n    this.queriesMap[counter] = query;\n    this.queriesInverseMap[query] = counter;\n    this.queriesList.push(counter);\n    this.queriesCallbacksMap[counter] = callback;\n\n    async.eachSeries(patterns, function(quad, k) {\n\tif(quad.graph == null) {\n\t    quad.graph = that.engine.lexicon.defaultGraphUriTerm;\n\t}\n\n\tthat.engine.normalizeQuad(quad, queryEnv, true, function(normalized) {\n\t    var pattern =  new Pattern(normalized);\n\t    var indexKey = that._indexForPattern(pattern);\n\t    var indexOrder = that.componentOrders[indexKey];\n\t    var index = that.queriesIndexMap[indexKey];\n\n\t    for(var j=0; j<indexOrder.length; j++) {\n\t\tvar component = indexOrder[j];\n\t\tvar quadValue = normalized[component];\n\t\tif(typeof(quadValue) === 'string') {\n\t\t    if(index['_'] == null) {\n\t\t\tindex['_'] = [];\n\t\t    }\n\t\t    index['_'].push(counter);\n\t\t    break;\n\t\t} else {\n\t\t    if(j===indexOrder.length-1) {\n\t\t\tindex[quadValue] = index[quadValue] || {'_':[]};\n\t\t\tindex[quadValue]['_'].push(counter);\n\t\t    } else {\n\t\t\tindex[quadValue] = index[quadValue] || {};\n\t\t\tindex = index[quadValue];\n\t\t    }\n\t\t}\n\t    }\n\t    k();\n\t});\n\n    }, function(){\n\tthat.engine.execute(query, function(err, results){\n\t    if(!err){\n\t\tcallback(results);\n\t    } else {\n\t\tconsole.log(\"ERROR in query callback \"+results);\n\t    }\n\t});\n\n\tif(endCallback != null)\n\t    endCallback();\n    });\n};\n\nCallbacks.CallbacksBackend.prototype.stopObservingQuery = function(query) {\n    var id = this.queriesInverseMap[query];\n    if(id != null) {\n\tdelete this.queriesInverseMap[query];\n\tdelete this.queriesMap[id];\n\tthis.queriesList = _.reject(this.queriesList, function(queryId){ return queryId === id });\n    }\n};\n\nCallbacks.CallbacksBackend.prototype._searchQueriesInIndex = function(index, order, quadPair) {\n    var quadPairNomalized = quadPair[1];\n    var quadPair = quadPair[0];\n\n    for(var i=0; i<(order.length+1); i++) {\n\tvar matched = index['_'] || [];\n\n\tvar filteredIds = [];\n\tfor(var j=0; j<matched.length; j++) {\n\t    var queryId = matched[j];\n\t    if(_.include(this.pendingQueries,queryId)) {\n\t\t_.remove(this.pendingQueries,function(pendingQueryId){ return pendingQueryId === queryId });\n\t\tthis.matchedQueries.push(queryId);\n\t    }\n\t    // removing IDs for queries no longer being observed\n\t    if(this.queriesMap[queryId] != null) {\n\t\tfilteredIds.push(queryId);\n\t    }\n\t}\n\tindex['_'] = filteredIds;\n\n\tvar component = order[i];\n\tif(index[''+quadPairNomalized[component]] != null) {\n\t    index = index[''+quadPairNomalized[component]];\n\t} else {\n\t    break;\n\t}\n    }\n};\n\nCallbacks.CallbacksBackend.prototype.dispatchQueries = function(callback) {\n    var that = this;\n    var query, queryCallback;\n    var toDispatchMap = {};\n\n    async.eachSeries(this.matchedQueries, function(queryId,k) {\n\t// avoid duplicate notifications\n\tif(toDispatchMap[queryId] == null) {\n\t    toDispatchMap[queryId] = true;\n\t    query = that.queriesMap[queryId];\n\t    queryCallback = that.queriesCallbacksMap[queryId];\n\n\t    that.engine.execute(query,\n\t\tfunction(err, results){\n\t\t    if(!err) {\n\t\t\ttry{\n\t\t\t    queryCallback(results);\n\t\t\t}catch(e){}\n\t\t    }\n\t\t    k();\n\t\t});\n\t} else {\n\t    k();\n\t}\n    }, function(){\n\tcallback();\n    });\n};\n\nCallbacks.CallbacksBackend.added = Callbacks.added;\nCallbacks.CallbacksBackend.deleted = Callbacks.deleted;\nCallbacks.CallbacksBackend.eventsFlushed = Callbacks.eventsFlushed;\n\nmodule.exports = Callbacks;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/graph_callbacks.js\n// module id = 434\n// module chunks = 2","\n// imports\nvar QuadIndex = require(\"./quad_index\").QuadIndex;\nvar utils = require('./utils');\n\n/*\n * \"perfect\" indices for RDF indexing\n *\n * SPOG (?, ?, ?, ?), (s, ?, ?, ?), (s, p, ?, ?), (s, p, o, ?), (s, p, o, g)\n * GP   (?, ?, ?, g), (?, p, ?, g)\n * OGS  (?, ?, o, ?), (?, ?, o, g), (s, ?, o, g)\n * POG  (?, p, ?, ?), (?, p, o, ?), (?, p, o, g)\n * GSP  (s, ?, ?, g), (s, p, ?, g)\n * OS   (s, ?, o, ?)\n *\n * @param configuration['treeOrder'] Tree order for the indices that are going to be created\n * @return The newly created backend.\n */\nQuadBackend = function (configuration, callback) {\n    this.indexMap = {};\n    this.treeOrder = configuration['treeOrder'];\n    this.indices = (configuration[\"index\"] || QuadBackend.allIndices);\n    this.componentOrders = QuadBackend.componentOrders;\n    var that = this;\n\n    utils.eachSeries(this.indices,function(indexKey, k){\n        new QuadIndex({\n            order:that.treeOrder,\n            componentOrder:that.componentOrders[indexKey]\n        },function (tree) {\n            that.indexMap[indexKey] = tree;\n            k();\n        });\n    },function(){\n        callback(that);\n    });\n};\n\nQuadBackend.allIndices = ['SPOG', 'GP', 'OGS', 'POG', 'GSP', 'OS'];\nQuadBackend.componentOrders = {\n    SPOG:['subject', 'predicate', 'object', 'graph'],\n    GP:['graph', 'predicate', 'subject', 'object'],\n    OGS:['object', 'graph', 'subject', 'predicate'],\n    POG:['predicate', 'object', 'graph', 'subject'],\n    GSP:['graph', 'subject', 'predicate', 'object'],\n    OS:['object', 'subject', 'predicate', 'graph']\n};\n\n\nQuadBackend.prototype._indexForPattern = function (pattern) {\n    var indexKey = pattern.indexKey;\n\n    for (var i = 0; i < QuadBackend.allIndices.length; i++) {\n        var index = QuadBackend.allIndices[i];\n        var indexComponents = QuadBackend.componentOrders[index];\n        for (var j = 0; j < indexComponents.length; j++) {\n            if (utils.include(indexKey, indexComponents[j]) === false) {\n                break;\n            }\n            if (j == indexKey.length - 1) {\n                return index;\n            }\n        }\n    }\n\n    return 'SPOG'; // If no other match, we return the more generic index\n};\n\n\nQuadBackend.prototype.index = function (quad, callback) {\n    var that = this;\n    utils.eachSeries(this.indices, function (indexKey, k) {\n        var index = that.indexMap[indexKey];\n        index.insert(quad, function () {\n            k();\n        })\n    }, function () {\n        callback(true);\n    });\n};\n\nQuadBackend.prototype.range = function (pattern, callback) {\n    var indexKey = this._indexForPattern(pattern);\n    var index = this.indexMap[indexKey];\n    if(index != null) {\n        index.range(pattern, function (quads) {\n            callback(quads);\n        });\n    }\n};\n\nQuadBackend.prototype.search = function (quad, callback) {\n    var index = this.indexMap['SPOG'];\n    if(index != null) {\n        index.search(quad, function (result) {\n            callback(result != null);\n        });\n    }\n};\n\n\nQuadBackend.prototype.delete = function (quad, callback) {\n    var that = this;\n    utils.eachSeries(this.indices, function (indexKey, k) {\n        var index = that.indexMap[indexKey];\n        index.delete(quad, function () {\n            k();\n        });\n    }, function () {\n        callback(true);\n    });\n};\n\nQuadBackend.prototype.clear = function(callback) {\n    var that = this;\n    utils.eachSeries(this.indices, function (indexKey, k) {\n        new QuadIndex({\n            order: that.treeOrder,\n            componentOrder: that.componentOrders[indexKey]\n        }, function (tree) {\n            that.indexMap[indexKey] = tree;\n            k();\n        });\n    }, function () {\n        callback(true);\n    });\n};\n\nmodule.exports.QuadBackend = QuadBackend;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/quad_backend.js\n// module id = 435\n// module chunks = 2","\n// imports\nvar utils = require('./utils');\n\n/*\n * \"perfect\" indices for RDF indexing\n *\n * SPOG (?, ?, ?, ?), (s, ?, ?, ?), (s, p, ?, ?), (s, p, o, ?), (s, p, o, g)\n * GP   (?, ?, ?, g), (?, p, ?, g)\n * OGS  (?, ?, o, ?), (?, ?, o, g), (s, ?, o, g)\n * POG  (?, p, ?, ?), (?, p, o, ?), (?, p, o, g)\n * GSP  (s, ?, ?, g), (s, p, ?, g)\n * OS   (s, ?, o, ?)\n *\n * @param configuration['dbName'] Name for the IndexedDB\n * @return The newly created backend.\n */\nPersistentQuadBackend = function (configuration, callback) {\n    var that = this;\n\n    if (arguments !== 0) {\n\n        utils.registerIndexedDB(that);\n\n        this.indexMap = {};\n        this.indices = ['S','P','O','G','SP','SO','SG','PO','PG','OG','SPO','SPG','SOG','POG','SPOG']\n        this.componentOrders = {\n            S: ['subject','predicate','object','graph'],\n            P: ['predicate','subject','object','graph'],\n            O: ['object','subject','predicate','graph'],\n            G: ['graph','subject','predicate','object'],\n            SP: ['subject','predicate','object','graph'],\n            SO: ['subject', 'object','predicate','graph'],\n            SG: ['subject', 'graph','predicate','object'],\n            PO: ['predicate','object','subject','graph'],\n            PG: ['predicate', 'graph','subject','object'],\n            OG: ['object','graph','subject','predicate'],\n            SPO: ['subject','predicate','object','graph'],\n            SPG: ['subject', 'predicate', 'graph','object'],\n            SOG: ['subject', 'object', 'graph','predicate'],\n            POG: ['predicate', 'object', 'graph','subject'],\n            SPOG: ['subject', 'predicate', 'object', 'graph']\n        };\n        this.componentOrdersMap  = {};\n        for(var index in this.componentOrders) {\n            var indexComponents = this.componentOrders[index];\n            var key = indexComponents.slice(0,index.length).sort().join(\".\");\n            this.componentOrdersMap[key] = index;\n        }\n\n        that.dbName = configuration['name'] || \"rdfstorejs\";\n        var request = that.indexedDB.open(this.dbName+\"_db\", 1);\n        request.onerror = function(event) {\n            callback(null,new Error(\"Error opening IndexedDB: \" + event.target.errorCode));\n        };\n        request.onsuccess = function(event) {\n            that.db = event.target.result;\n            callback(that);\n        };\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(that.dbName, { keyPath: 'SPOG'});\n            utils.each(that.indices, function(index){\n                if(index !== 'SPOG') {\n                    objectStore.createIndex(index,index,{unique: false});\n                }\n            });\n        };\n    }\n};\n\n\nPersistentQuadBackend.prototype.index = function (quad, callback) {\n    var that = this;\n    utils.each(this.indices, function(index){\n        quad[index] = that._genMinIndexKey(quad, index);\n    });\n\n    var transaction = that.db.transaction([that.dbName],\"readwrite\");\n    transaction.oncomplete = function(event) {\n        //callback(true)\n    };\n    transaction.onerror = function(event) {\n        callback(null, new Error(event.target.statusCode));\n    };\n    var objectStore = transaction.objectStore(that.dbName);\n    var request = objectStore.add(quad);\n    request.onsuccess = function(event) {\n        callback(true)\n    };\n};\n\nPersistentQuadBackend.prototype.range = function (pattern, callback) {\n    var that = this;\n    var objectStore = that.db.transaction([that.dbName]).objectStore(that.dbName);\n    var indexKey = this._indexForPattern(pattern);\n    var minIndexKeyValue = this._genMinIndexKey(pattern,indexKey);\n    var maxIndexKeyValue = this._genMaxIndexKey(pattern,indexKey);\n    var keyRange = that.IDBKeyRange.bound(minIndexKeyValue, maxIndexKeyValue, false, false);\n    var quads = [];\n    var cursorSource;\n\n    if(indexKey === 'SPOG') {\n        cursorSource = objectStore;\n    } else {\n        cursorSource = objectStore.index(indexKey);\n    }\n\n    cursorSource.openCursor(keyRange).onsuccess = function(event) {\n        var cursor = event.target.result;\n        if (cursor) {\n            quads.push(cursor.value);\n            cursor.continue();\n        } else {\n            callback(quads);\n        }\n    }\n};\n\nPersistentQuadBackend.prototype.search = function (quad, callback) {\n    var that = this;\n    var objectStore = that.db.transaction([that.dbName]).objectStore(that.dbName);\n    var indexKey = this._genMinIndexKey(quad, 'SPOG');\n    var request = objectStore.get(indexKey);\n    request.onerror = function(event) {\n        callback(null, new Error(event.target.statusCode));\n    };\n    request.onsuccess = function(event) {\n        callback(event.target.result != null);\n    };\n};\n\n\nPersistentQuadBackend.prototype.delete = function (quad, callback) {\n    var that = this;\n    var indexKey = that._genMinIndexKey(quad, 'SPOG');\n    var request = that.db.transaction([that.dbName], \"readwrite\")\n        .objectStore(that.dbName)\n        .delete(indexKey);\n    request.onsuccess = function() {\n        callback(true);\n    };\n    request.onerror = function(event) {\n        callback(null, new Error(event.target.statusCode));\n    };\n};\n\nPersistentQuadBackend.prototype._genMinIndexKey = function(quad,index) {\n    var indexComponents = this.componentOrders[index];\n    return utils.map(indexComponents, function(component){\n        if(typeof(quad[component]) === 'string' || quad[component] == null) {\n            return \"0\";\n        } else {\n            return quad[component];\n        }\n    }).join('.');\n};\n\nPersistentQuadBackend.prototype._genMaxIndexKey = function(quad,index) {\n    var indexComponents = this.componentOrders[index];\n    var acum = [];\n    var foundFirstMissing = false;\n    for(var i=0; i<indexComponents.length; i++){\n        var component = indexComponents[i];\n        var componentValue = quad[component];\n        if(typeof(componentValue) === 'string') {\n            acum[i] = 'z';\n        } else {\n            acum[i] = componentValue;\n        }\n    }\n    return utils.map(acum, function(componentValue){\n        return \"\"+componentValue\n    }).join('.');\n};\n\n\nPersistentQuadBackend.prototype._indexForPattern = function (pattern) {\n    var that = this;\n    var indexKey = pattern.indexKey;\n    var indexKeyString = indexKey.sort().join(\".\");\n    var index = that.componentOrdersMap[indexKeyString];\n    if(index == null) {\n        throw new Error(\"Error, cannot find index for indexKey \"+indexKeyString);\n    } else {\n        return index;\n    }\n};\n\n\nPersistentQuadBackend.prototype.clear = function(callback) {\n    var that = this;\n    var transaction = that.db.transaction([that.dbName],\"readwrite\"), request;\n    request = transaction.objectStore(that.dbName).clear();\n    request.onsuccess = function(){ callback(); };\n    request.onerror = function(){ callback(); };\n};\n\nmodule.exports.PersistentQuadBackend = PersistentQuadBackend;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/persistent_quad_backend.js\n// module id = 436\n// module chunks = 2","var Tree = require('./btree').Tree;\nvar utils = require('./utils');\nvar async = utils;\nvar InMemoryLexicon = require('./lexicon').Lexicon;\n\n/**\n * Temporal implementation of the lexicon\n */\n\n\nPersistentLexicon = function(callback, dbName){\n    var that = this;\n\n    utils.registerIndexedDB(that);\n\n    this.defaultGraphOid = 0;\n    this.defaultGraphUri = \"https://github.com/antoniogarrote/rdfstore-js#default_graph\";\n    this.defaultGraphUriTerm = {\"token\":\"uri\",\"prefix\":null,\"suffix\":null,\"value\":this.defaultGraphUri};\n    this.oidCounter = 1;\n\n    that.dbName = dbName || \"rdfstorejs\";\n    var request = that.indexedDB.open(this.dbName+\"_lexicon\", 1);\n    request.onerror = function(event) {\n        callback(null,new Error(\"Error opening IndexedDB: \" + event.target.errorCode));\n    };\n    request.onsuccess = function(event) {\n        that.db = event.target.result;\n        callback(that);\n    };\n    request.onupgradeneeded = function(event) {\n        that.db = event.target.result;\n\n        // graphs\n        var graphStore = that.db.createObjectStore('knownGraphs', { keyPath: 'oid'});\n        graphStore.createIndex(\"uriToken\",\"uriToken\",{unique: true});\n        // uris,literal,blanks mapping\n        var uriStore = that.db.createObjectStore('components', { keyPath: 'id', autoIncrement : true });\n        uriStore.createIndex(\"value\",\"value\",{unique: true});\n\n        //setTimeout(function(){ callback(that); },0);\n    };\n\n};\n\n/**\n * Registers a new graph in the lexicon list of known graphs.\n * @param oid\n * @param uriToken\n * @param callback\n */\nPersistentLexicon.prototype.registerGraph = function(oid, uriToken, callback){\n    if(oid != this.defaultGraphOid) {\n        var transaction = this.db.transaction(['knownGraphs'], 'readwrite');\n        transaction.onerror = function (event) {\n            callback(null, new Error(event.target.statusCode));\n        };\n        var objectStore = transaction.objectStore('knownGraphs');\n        var request = objectStore.get(uriToken)\n        request.onsuccess = function(event) {\n            var graphData = event.target.result;\n            if(graphData) {\n                // found graph -> return\n                callback(true)\n            } else {\n                var request = objectStore.add({oid: oid, uriToken: uriToken});\n                request.onsuccess = function (_) {\n                    callback(true);\n                };\n            }\n        }\n    } else {\n        callback();\n    }\n};\n\n/**\n * Returns the list of known graphs OIDs or URIs.\n * @param returnUris\n * @param callback\n */\nPersistentLexicon.prototype.registeredGraphs = function(returnUris, callback) {\n    var graphs = [];\n    var objectStore = this.db.transaction(['knownGraphs'],'readwrite').objectStore(\"knownGraphs\");\n\n    var request = objectStore.openCursor();\n    request.onsuccess = function(event) {\n        var cursor = event.target.result;\n        if(cursor) {\n            if(returnUris === true) {\n                graphs.push(cursor.value.uriToken);\n            } else {\n                graphs.push(cursor.value.oid);\n            }\n            cursor.continue();\n        } else {\n            callback(graphs);\n        }\n    };\n    request.onerror = function(event) {\n        callback(null,new Error(\"Error retrieving data from the cursor: \" + event.target.errorCode));\n    };\n};\n\n/**\n * Registers a URI in the lexicon. It returns the allocated OID for the URI.\n * As a side effect it increases the cost counter for that URI if it is already registered.\n * @param uri\n * @param callback\n * @returns URI's OID.\n */\nPersistentLexicon.prototype.registerUri = function(uri, callback) {\n    var that = this;\n    if(uri === this.defaultGraphUri) {\n        callback(this.defaultGraphOid);\n    } else{\n        var objectStore = that.db.transaction([\"components\"],\"readwrite\").objectStore(\"components\");\n        var request = objectStore.index(\"value\").get(\"_u:\"+uri);\n        request.onsuccess = function(event) {\n            var uriData = event.target.result;\n            if(uriData) {\n                // found in index -> update\n                uriData.counter++;\n                var oid = uriData.id;\n                var requestUpdate = objectStore.put(uriData);\n                requestUpdate.onsuccess =function (_) {\n                    callback(oid);\n                };\n                requestUpdate.onerror = function (event) {\n                    callback(null, new Error(\"Error updating the URI data\" + event.target.errorCode));\n                };\n            } else {\n                // not found -> create\n                var requestAdd = objectStore.add({value: \"_u:\"+uri, counter:0, uri:true});\n                requestAdd.onsuccess = function(event){\n                    callback(event.target.result);\n                };\n                requestAdd.onerror = function(event){\n                    callback(null, new Error(\"Error inserting the URI data\"+event.target.errorCode));\n                };\n            }\n        };\n        request.onerror = function(event) {\n            callback(null, new Error(\"Error retrieving the URI data\"+event.target.errorCode));\n        };\n    }\n};\n\n/**\n * Returns the OID associated to the URI.\n * If the URI hasn't been  associated in the lexicon, -1 is returned.\n * @param uri\n * @param callback\n */\nPersistentLexicon.prototype.resolveUri = function(uri,callback) {\n    if(uri === this.defaultGraphUri) {\n        callback(this.defaultGraphOid);\n    } else {\n        var objectStore = this.db.transaction([\"components\"]).objectStore(\"components\");\n        var request = objectStore.index(\"value\").get(\"_u:\"+uri);\n        request.onsuccess = function(event) {\n            if(event.target.result != null) {\n                callback(event.target.result.id);\n            } else\n                callback(-1);\n        };\n        request.onerror = function(event) {\n            callback(null, new Error(\"Error retrieving uri data \"+event.target.errorCode));\n        }\n    }\n};\n\n/**\n * Returns the cost associated to the URI.\n * If the URI hasn't been associated in the lexicon, -1 is returned.\n * @param uri\n * @returns {*}\n */\nPersistentLexicon.prototype.resolveUriCost = function(uri, callback) {\n    if(uri === this.defaultGraphUri) {\n        callback(0);\n    } else {\n        var objectStore = that.db.transaction([\"components\"]).objectStore(\"components\");\n        var request = objectStore.index(\"value\").get(\"_u:\"+uri);\n        request.onsuccess = function(event) {\n            if(event.target.result != null)\n                callback(event.target.result.cost);\n            else\n                callback(-1);\n        };\n        request.onerror = function(event) {\n            callback(null, new Error(\"Error retrieving uri data \"+event.target.errorCode));\n        };\n    }\n};\n\n/**\n * Register a new blank node in the lexicon.\n * @param label\n * @returns {string}\n */\nPersistentLexicon.prototype.registerBlank = function(callback) {\n    var oidStr = guid();\n    var that = this;\n\n    var objectStore = that.db.transaction([\"components\"],\"readwrite\").objectStore(\"components\");\n    var requestAdd = objectStore.add({value: \"_b:\"+oidStr, counter:0, label:true});\n    requestAdd.onsuccess = function(event){\n        callback(event.target.result);\n    };\n    requestAdd.onerror = function(event){\n        callback(null, new Error(\"Error inserting the URI data\"+event.target.errorCode));\n    };\n};\n\n/**\n * Resolves a blank node OID\n * @param oid\n * @param callback\n */\n//PersistentLexicon.prototype.resolveBlank = function(oid,callback) {\n//    var that = this;\n//    var objectStore = that.db.transaction([\"blanks\"]).objectStore(\"blanks\");\n//    var request = objectStore.get(oid);\n//    request.onsuccess = function(event) {\n//        if(event.target.result != null)\n//            callback(event.target.result.id);\n//        else {\n//            // we register it if it doesn't exist\n//        }\n//    };\n//    request.onerror = function(event) {\n//        callback(null, new Error(\"Error retrieving blank data \"+event.target.errorCode));\n//    }\n//\n//    this.oidBlanks.search(label, function(oidData){\n//        if(oidData != null) {\n//            callback(oidData);\n//        } else {\n//            // ??\n//            var oid = that.oidCounter;\n//            this.oidCounter++;\n//            callback(\"\"+oid);\n//            //\n//        }\n//    });\n//};\n\n/**\n * Blank nodes don't have an associated cost.\n * @param label\n * @param callback\n * @returns {number}\n */\nPersistentLexicon.prototype.resolveBlankCost = function(label, callback) {\n    callback(0);\n};\n\n/**\n * Registers a new literal in the index.\n * @param literal\n * @param callback\n * @returns the OID of the newly registered literal\n */\nPersistentLexicon.prototype.registerLiteral = function(literal, callback) {\n    var that = this;\n\n    var objectStore = that.db.transaction([\"components\"],\"readwrite\").objectStore(\"components\");\n    var request = objectStore.index(\"value\").get(\"_l:\"+literal);\n    request.onsuccess = function(event) {\n        var literalData = event.target.result;\n        if(literalData) {\n            // found in index -> update\n            literalData.counter++;\n            var oid = literalData.id;\n            var requestUpdate = objectStore.put(literalData);\n            requestUpdate.onsuccess =function (event) {\n                callback(oid);\n            };\n            requestUpdate.onerror = function (event) {\n                callback(null, new Error(\"Error updating the literal data\" + event.target.errorCode));\n            };\n        } else {\n            // not found -> create\n            var requestAdd = objectStore.add({value: \"_l:\"+literal, counter:0, literal:true});\n            requestAdd.onsuccess = function(event){\n                callback(event.target.result);\n            };\n            requestAdd.onerror =function(event){\n                callback(null, new Error(\"Error inserting the literal data\"+event.target.errorCode));\n            };\n        }\n    };\n    request.onerror = function(event) {\n        callback(null, new Error(\"Error retrieving the literal data\"+event.target.errorCode));\n    };\n};\n\n/**\n * Returns the OID of the resolved literal or -1 if no literal is found.\n * @param literal\n * @param callback\n */\nPersistentLexicon.prototype.resolveLiteral = function (literal,callback) {\n    var objectStore = that.db.transaction([\"components\"]).objectStore(\"components\");\n    var request = objectStore.index(\"value\").get(\"_l:\"+literal);\n    request.onsuccess = function(event) {\n        if(event.target.result != null) {\n            callback(event.target.result.id);\n        } else\n            callback(-1);\n    };\n    request.onerror = function(event) {\n        callback(null, new Error(\"Error retrieving literal data \"+event.target.errorCode));\n    }\n};\n\n/**\n * Returns the cost associated to the literal or -1 if no literal is found.\n * @param literal\n * @param callback\n */\nPersistentLexicon.prototype.resolveLiteralCost = function (literal,callback) {\n    var objectStore = that.db.transaction([\"components\"]).objectStore(\"components\");\n    var request = objectStore.index(\"components\").get(literal);\n    request.onsuccess = function(event) {\n        if(event.target.result != null)\n            callback(event.target.result.cost);\n        else\n            callback(-1);\n    };\n    request.onerror = function(event) {\n        callback(null, new Error(\"Error retrieving literal data \"+event.target.errorCode));\n    };\n};\n\n\n/**\n * Transforms a literal string into a token object.\n * @param literalString\n * @returns A token object with the parsed literal.\n */\nPersistentLexicon.prototype.parseLiteral = function(literalString) {\n    return InMemoryLexicon.prototype.parseLiteral(literalString);\n};\n\n/**\n * Parses a literal URI string into a token object\n * @param uriString\n * @returns A token object with the parsed URI.\n */\nPersistentLexicon.prototype.parseUri = function(uriString) {\n    return InMemoryLexicon.prototype.parseUri(uriString);\n};\n\n/**\n * Retrieves a token containing the URI, literal or blank node associated\n * to the provided OID.\n * If no value is found, null is returned.\n * @param oid\n * @param callback\n * @returns parsed token or null if not found.\n */\nPersistentLexicon.prototype.retrieve = function(oid, callback) {\n    var that = this, transaction, request;\n\n    if(oid === this.defaultGraphOid) {\n        callback({\n            token: \"uri\",\n            value:this.defaultGraphUri,\n            prefix: null,\n            suffix: null,\n            defaultGraph: true\n        });\n    } else {\n        transaction = that.db.transaction([\"components\"]);\n        request = transaction.objectStore(\"components\").get(oid);\n        request.onsuccess = function(event) {\n            if(event.target.result != null) {\n                if(event.target.result.label != null) {\n                    var label = \"_:\" + event.target.result.id;\n                    callback({token: \"blank\", value: label});\n                } else if(event.target.result.uri != null) {\n                    callback(that.parseUri(event.target.result.value.slice(3,event.target.result.value.length)));\n                } else if(event.target.result.literal != null) {\n                    callback(that.parseLiteral(event.target.result.value.slice(3,event.target.result.value.length)));\n                } else {\n                    console.log(event.target.result);\n                    callback(null,new Error(\"Unknown type of component \"+event.target.result));\n                }\n            } else {\n                callback(null,null);\n            }\n        };\n        request.onerror = function(event) {\n            callback(null, new Error(\"Error searching in blanks data \"+event.target.errorCode));\n        };\n    }\n};\n\n/**\n * Empties the PersistentLexicon and restarts the counters.\n * @param callback\n */\nPersistentLexicon.prototype.clear = function(callback) {\n    var that = this;\n    this.defaultGraphOid = 0;\n    this.defaultGraphUri = \"https://github.com/antoniogarrote/rdfstore-js#default_graph\";\n    this.defaultGraphUriTerm = {\"token\":\"uri\",\"prefix\":null,\"suffix\":null,\"value\":this.defaultGraphUri};\n\n    var transaction = that.db.transaction([\"components\"],\"readwrite\"), request;\n    var components = transaction.objectStore(\"components\");\n\n    var k = function() {\n        if(callback != null)\n            callback();\n    };\n\n    request = components.clear();\n    request.onsuccess = k;\n    request.onerror = k;\n};\n\n/**\n * Removes the values associated to the subject, predicate, object and graph\n * values of the provided quad.\n * @param quad\n * @param key\n * @param callback\n */\nPersistentLexicon.prototype.unregister = function (quad, key, callback) {\n    var that = this;\n    async.seq(function(k){\n        that._unregisterTerm(quad.subject.token, key.subject,k);\n    }, function(k){\n        that._unregisterTerm(quad.predicate.token, key.predicate,k);\n    }, function(k){\n        that._unregisterTerm(quad.object.token, key.object, k);\n    }, function(k){\n        if (quad.graph != null) {\n            that._unregisterTerm(quad.graph.token, key.graph, k);\n        } else {\n            k();\n        }\n    })(function(){\n        callback(true);\n    });\n};\n\n/**\n * Unregisters a value, either URI, literal or blank.\n * @param kind\n * @param oid\n * @param callback\n * @private\n */\nPersistentLexicon.prototype._unregisterTerm = function (kind, oid, callback) {\n    var that = this, request;\n    var transaction = that.db.transaction([\"components\", \"knownGraphs\"],\"readwrite\");\n    if (kind === 'uri') {\n        if (oid != this.defaultGraphOid) {\n            var removeKnownGraphs = function() {\n                var request = transaction.objectStore(\"knownGraphs\").delete(oid);\n                request.onsuccess = function() { callback(); };\n            };\n            request = transaction.objectStore(\"components\").delete(oid);\n            request.onsuccess = removeKnownGraphs();\n        } else {\n            callback();\n        }\n    } else {\n        request = transaction.objectStore(\"components\").delete(oid);\n        request.onsuccess = function() { callback(); };\n    }\n};\n\nmodule.exports = {\n    PersistentLexicon: PersistentLexicon\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rdfstore/src/persistent_lexicon.js\n// module id = 437\n// module chunks = 2"],"sourceRoot":""}