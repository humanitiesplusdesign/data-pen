webpackHotUpdate(1,{

/***/ "./app/services/project-service/project-service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_angular__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_angular___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_angular__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__models_citable__ = __webpack_require__(\"./app/models/citable.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__project__ = __webpack_require__(\"./app/services/project-service/project.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__primary_endpoint_configuration__ = __webpack_require__(\"./app/services/project-service/primary-endpoint-configuration.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__remote_endpoint_configuration__ = __webpack_require__(\"./app/services/project-service/remote-endpoint-configuration.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__schema__ = __webpack_require__(\"./app/services/project-service/schema.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_collection_utils__ = __webpack_require__(\"./app/components/collection-utils.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_misc_utils__ = __webpack_require__(\"./app/components/misc-utils.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__models_rdf__ = __webpack_require__(\"./app/models/rdf.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__data_model__ = __webpack_require__(\"./app/services/project-service/data-model.ts\");\n/* unused harmony export ProjectService */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ProjectWorkerService; });\n\n\n\n\n\n\n\n\n\n\n\n\nvar s = fi.seco.sparql;\nvar ProjectService = function () {\n    function ProjectService(workerService, fibraService, fibraSparqlService, $localStorage) {\n        this.workerService = workerService;\n        this.fibraService = fibraService;\n        this.fibraSparqlService = fibraSparqlService;\n        this.$localStorage = $localStorage;\n        if (!$localStorage.projectSources) $localStorage.projectSources = [];else $localStorage.projectSources.forEach(function (ps) {\n            if (!ps.sparqlEndpoint) {\n                ps.sparqlEndpoint = ps['endpoint'];\n                ps.updateEndpoint = ps['endpoint'];\n                ps.graphStoreEndpoint = ps['endpoint'];\n            }\n        });\n    }\n    ProjectService.orderCitables = function (citables) {\n        citables.sort(function (a, b) {\n            return (a['order'] ? a['order'] : Number.MAX_VALUE) - (b['order'] ? b['order'] : Number.MAX_VALUE);\n        });\n        citables.forEach(function (rh) {\n            return delete rh['order'];\n        });\n    };\n    ProjectService.prototype.getCurrentProject = function () {\n        return this.fibraService.getState().project;\n    };\n    ProjectService.prototype.setCurrentProject = function (project) {\n        return this.fibraService.dispatchAction(this.fibraService.setProject(project));\n    };\n    ProjectService.prototype.getProjectSources = function () {\n        return this.$localStorage.projectSources;\n    };\n    ProjectService.prototype.listPrimaryEndpointConfigurations = function (source) {\n        return this.workerService.call('projectWorkerService', 'listPrimaryEndpointConfigurations', [source]);\n    };\n    ProjectService.prototype.loadPrimaryEndpointConfiguration = function (source, templateId) {\n        return this.workerService.call('projectWorkerService', 'loadPrimaryEndpointConfiguration', [source, templateId]);\n    };\n    ProjectService.prototype.listArchiveEndpointConfigurations = function (source) {\n        return this.workerService.call('projectWorkerService', 'listArchiveEndpointConfigurations', [source]);\n    };\n    ProjectService.prototype.listAuthorityEndpointConfigurations = function (source) {\n        return this.workerService.call('projectWorkerService', 'listAuthorityEndpointConfigurations', [source]);\n    };\n    ProjectService.prototype.loadRemoteEndpointConfiguration = function (source, templateId) {\n        return this.workerService.call('projectWorkerService', 'loadRemoteEndpointConfiguration', [source, templateId]);\n    };\n    ProjectService.prototype.listSchemas = function (source) {\n        return this.workerService.call('projectWorkerService', 'listSchemas', [source]);\n    };\n    ProjectService.prototype.loadSchema = function (source, id) {\n        return this.workerService.call('projectWorkerService', 'loadSchema', [source, id]);\n    };\n    ProjectService.prototype.listProjects = function (source) {\n        return this.workerService.call('projectWorkerService', 'listProjects', [source]);\n    };\n    ProjectService.prototype.loadProject = function (source, projectId, loadFull) {\n        return this.workerService.call('projectWorkerService', 'loadProject', [source, projectId, loadFull]);\n    };\n    ProjectService.prototype.deleteCitable = function (updateEndpoint, citable) {\n        return this.deleteObject(updateEndpoint, citable.id, citable.source.graph);\n    };\n    ProjectService.prototype.deleteObjects = function (updateEndpoint, ids, graph) {\n        var dq = graph ? ProjectService.deleteQuery.replace(/# STARTGRAPH/g, 'GRAPH <' + graph + '> {').replace(/# ENDGRAPH/g, '}') : ProjectService.deleteQuery.replace(/.*# STARTGRAPH\\n/g, '').replace(/.*# ENDGRAPH\\n/g, '');\n        dq = dq.replace(/# PATTERNS/g, ids.reduce(function (acc, id, index) {\n            return acc + ' <' + id + '> ?p' + index + ' ?o' + index + ' .';\n        }, ''));\n        return this.fibraSparqlService.update(updateEndpoint, dq);\n    };\n    ProjectService.prototype.deleteObject = function (updateEndpoint, id, graph) {\n        return this.deleteObjects(updateEndpoint, [id], graph);\n    };\n    ProjectService.prototype.saveCitable = function (updateEndpoint, graphStoreEndpoint, ps) {\n        var _this = this;\n        var m = new __WEBPACK_IMPORTED_MODULE_6__components_collection_utils__[\"d\" /* Map */]();\n        var prefixes = {};\n        ps.toTurtle(m, prefixes);\n        return this.deleteObjects(updateEndpoint, m.keys(), ps.source.graph).then(function () {\n            return _this.fibraSparqlService.post(graphStoreEndpoint, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__components_misc_utils__[\"c\" /* toTurtle */])(prefixes, m), ps.source.graph);\n        });\n    };\n    return ProjectService;\n}();\n\nProjectService.deleteQuery = \"DELETE {\\n# STARTGRAPH\\n  # PATTERNS\\n# ENDGRAPH\\n}\\nWHERE {\\n# STARTGRAPH\\n  # PATTERNS\\n# ENDGRAPH\\n}\";\nvar ProjectWorkerService = function () {\n    function ProjectWorkerService(fibraSparqlService, $q) {\n        this.fibraSparqlService = fibraSparqlService;\n        this.$q = $q;\n    }\n    ProjectWorkerService.prototype.loadPrimaryEndpointConfiguration = function (source, templateId) {\n        return this.runSingleQuery(source, __WEBPACK_IMPORTED_MODULE_3__primary_endpoint_configuration__[\"a\" /* PrimaryEndpointConfiguration */].primaryEndpointConfigurationQuery, templateId, new __WEBPACK_IMPORTED_MODULE_3__primary_endpoint_configuration__[\"a\" /* PrimaryEndpointConfiguration */](templateId, source));\n    };\n    ProjectWorkerService.prototype.listPrimaryEndpointConfigurations = function (source) {\n        return this.runListQuery(source, __WEBPACK_IMPORTED_MODULE_3__primary_endpoint_configuration__[\"a\" /* PrimaryEndpointConfiguration */].listPrimaryEndpointConfigurationsQuery, function (id) {\n            return new __WEBPACK_IMPORTED_MODULE_3__primary_endpoint_configuration__[\"a\" /* PrimaryEndpointConfiguration */](id, source);\n        });\n    };\n    ProjectWorkerService.prototype.loadRemoteEndpointConfiguration = function (source, templateId) {\n        return this.runSingleQuery(source, __WEBPACK_IMPORTED_MODULE_4__remote_endpoint_configuration__[\"a\" /* RemoteEndpointConfiguration */].remoteEndpointConfigurationQuery, templateId, new __WEBPACK_IMPORTED_MODULE_4__remote_endpoint_configuration__[\"a\" /* RemoteEndpointConfiguration */](templateId, source));\n    };\n    ProjectWorkerService.prototype.listArchiveEndpointConfigurations = function (source) {\n        return this.runListQuery(source, __WEBPACK_IMPORTED_MODULE_4__remote_endpoint_configuration__[\"a\" /* RemoteEndpointConfiguration */].listArchiveEndpointConfigurationsQuery, function (id) {\n            return new __WEBPACK_IMPORTED_MODULE_4__remote_endpoint_configuration__[\"a\" /* RemoteEndpointConfiguration */](id, source);\n        });\n    };\n    ProjectWorkerService.prototype.listAuthorityEndpointConfigurations = function (source) {\n        return this.runListQuery(source, __WEBPACK_IMPORTED_MODULE_4__remote_endpoint_configuration__[\"a\" /* RemoteEndpointConfiguration */].listAuthorityEndpointConfigurationsQuery, function (id) {\n            return new __WEBPACK_IMPORTED_MODULE_4__remote_endpoint_configuration__[\"a\" /* RemoteEndpointConfiguration */](id, source);\n        });\n    };\n    ProjectWorkerService.prototype.listProjects = function (source) {\n        return this.runListQuery(source, __WEBPACK_IMPORTED_MODULE_2__project__[\"a\" /* Project */].listProjectsQuery, function (id) {\n            return new __WEBPACK_IMPORTED_MODULE_2__project__[\"a\" /* Project */](id, source);\n        });\n    };\n    ProjectWorkerService.prototype.listSchemas = function (source) {\n        return this.runListQuery(source, __WEBPACK_IMPORTED_MODULE_5__schema__[\"a\" /* Schema */].listSchemasQuery, function (id) {\n            return new __WEBPACK_IMPORTED_MODULE_5__schema__[\"a\" /* Schema */](id, source);\n        });\n    };\n    ProjectWorkerService.prototype.loadSchema = function (source, id) {\n        return this.runSingleQuery(source, __WEBPACK_IMPORTED_MODULE_5__schema__[\"a\" /* Schema */].schemaQuery, id, new __WEBPACK_IMPORTED_MODULE_5__schema__[\"a\" /* Schema */](id, source));\n    };\n    ProjectWorkerService.prototype.loadDataModel = function (schemas) {\n        var _this = this;\n        var dataModel = new __WEBPACK_IMPORTED_MODULE_9__data_model__[\"a\" /* DataModel */]();\n        var classes = new __WEBPACK_IMPORTED_MODULE_6__components_collection_utils__[\"a\" /* EMap */](function (id) {\n            var cl = new __WEBPACK_IMPORTED_MODULE_9__data_model__[\"b\" /* Class */](__WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].namedNode(id));\n            dataModel.classMap.set(id, cl);\n            return cl;\n        });\n        var properties = new __WEBPACK_IMPORTED_MODULE_6__components_collection_utils__[\"a\" /* EMap */](function (id) {\n            var pr = new __WEBPACK_IMPORTED_MODULE_9__data_model__[\"c\" /* Property */](__WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].namedNode(id));\n            dataModel.propertyMap.set(id, pr);\n            return pr;\n        });\n        var promises = [];\n        schemas.forEach(function (schema) {\n            promises.push(_this.fibraSparqlService.query(schema.endpoint, schema.classQuery).then(function (response) {\n                var conf = {\n                    bindingTypes: { types: 'uniqueArray' },\n                    bindingConverters: {\n                        superClasses: function (binding) {\n                            return classes.goc(binding.value);\n                        },\n                        subClasses: function (binding) {\n                            return classes.goc(binding.value);\n                        },\n                        types: function (binding) {\n                            return classes.goc(binding.value);\n                        },\n                        labels: function (binding) {\n                            return __WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].nodeFromBinding(binding);\n                        },\n                        descriptions: function (binding) {\n                            return __WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].nodeFromBinding(binding);\n                        }\n                    }\n                };\n                var tracker = new s.UniqueObjectTracker();\n                response.results.bindings.forEach(function (binding) {\n                    return s.SparqlService.bindingsToObject(binding, classes.goc(binding['id'].value), conf, tracker);\n                });\n            }));\n            promises.push(_this.fibraSparqlService.query(schema.endpoint, schema.propertyQuery).then(function (response) {\n                var conf = {\n                    bindingTypes: { types: 'uniqueArray' },\n                    bindingConverters: {\n                        superProperties: function (binding) {\n                            return properties.goc(binding.value);\n                        },\n                        subProperties: function (binding) {\n                            return properties.goc(binding.value);\n                        },\n                        inverseProperty: function (binding) {\n                            return properties.goc(binding.value);\n                        },\n                        types: function (binding) {\n                            return classes.goc(binding.value);\n                        },\n                        domains: function (binding) {\n                            return classes.goc(binding.value);\n                        },\n                        ranges: function (binding) {\n                            return classes.goc(binding.value);\n                        },\n                        labels: function (binding) {\n                            return __WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].nodeFromBinding(binding);\n                        },\n                        descriptions: function (binding) {\n                            return __WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].nodeFromBinding(binding);\n                        }\n                    }\n                };\n                var tracker = new s.UniqueObjectTracker();\n                response.results.bindings.forEach(function (binding) {\n                    return s.SparqlService.bindingsToObject(binding, properties.goc(binding['id'].value), conf, tracker);\n                });\n            }));\n        });\n        return this.$q.all(promises).then(function () {\n            classes.values().forEach(function (cl) {\n                cl.buildAsNodes();\n                cl.superClasses.filter(function (spr) {\n                    return !spr.subClasses.find(function (opr) {\n                        return opr === cl;\n                    });\n                }).forEach(function (spr) {\n                    return spr.subClasses.push(cl);\n                });\n                cl.subClasses.filter(function (spr) {\n                    return !spr.superClasses.find(function (opr) {\n                        return opr === cl;\n                    });\n                }).forEach(function (spr) {\n                    return spr.superClasses.push(cl);\n                });\n            });\n            classes.values().forEach(function (cl) {\n                if (cl.superClasses.length === 0) dataModel.rootClasses.push(cl);\n            });\n            properties.values().forEach(function (pr) {\n                pr.buildAsNodes();\n                if (pr.inverseProperty) pr.inverseProperty.inverseProperty = pr;\n                pr.superProperties.filter(function (spr) {\n                    return !spr.subProperties.find(function (opr) {\n                        return opr === pr;\n                    });\n                }).forEach(function (spr) {\n                    return spr.subProperties.push(pr);\n                });\n                pr.subProperties.filter(function (spr) {\n                    return !spr.superProperties.find(function (opr) {\n                        return opr === pr;\n                    });\n                }).forEach(function (spr) {\n                    return spr.superProperties.push(pr);\n                });\n                pr.domains.forEach(function (dc) {\n                    return dc.properties.push(pr);\n                });\n                pr.ranges.forEach(function (rc) {\n                    return rc.inverseProperties.push(pr);\n                });\n            });\n            properties.values().forEach(function (pr) {\n                if (pr.superProperties.length === 0) dataModel.rootProperties.push(pr);\n            });\n            return dataModel;\n        });\n    };\n    ProjectWorkerService.prototype.loadProject = function (source, id, loadFull) {\n        var _this = this;\n        var q = this.runSingleQuery(source, __WEBPACK_IMPORTED_MODULE_2__project__[\"a\" /* Project */].projectQuery, id, new __WEBPACK_IMPORTED_MODULE_2__project__[\"a\" /* Project */](id, source));\n        if (!loadFull) return q;else return q.then(function (p) {\n            var promises = [];\n            promises.push(_this.$q.all(p.schemas.map(function (schema) {\n                return _this.loadSchema(schema.source, schema.id);\n            })).then(function (schemas) {\n                p.schemas = schemas;\n                return _this.loadDataModel(schemas).then(function (dm) {\n                    return p.dataModel = dm;\n                });\n            }));\n            var narche = [];\n            var nauthe = [];\n            p.archiveEndpoints.forEach(function (ae) {\n                return promises.push(_this.loadRemoteEndpointConfiguration(ae.source, ae.id).then(function (ae2) {\n                    return narche.push(ae2);\n                }));\n            });\n            p.authorityEndpoints.forEach(function (ae) {\n                return promises.push(_this.loadRemoteEndpointConfiguration(ae.source, ae.id).then(function (ae2) {\n                    return nauthe.push(ae2);\n                }));\n            });\n            return _this.$q.all(promises).then(function () {\n                p.archiveEndpoints = narche;\n                p.authorityEndpoints = nauthe;\n                return p;\n            });\n        });\n    };\n    ProjectWorkerService.prototype.runSingleQuery = function (source, tq, id, ps) {\n        tq = source.graph ? tq.replace(/# STARTGRAPH/g, 'GRAPH <' + source.graph + '> {').replace(/# ENDGRAPH/g, '}') : tq.replace(/.*# STARTGRAPH\\n/g, '').replace(/.*# ENDGRAPH\\n/g, '');\n        tq = tq.replace(/<ID>/g, '<' + id + '>');\n        var deferred = this.$q.defer();\n        this.fibraSparqlService.query(source.sparqlEndpoint, tq).then(function (response) {\n            var conf = {\n                bindingTypes: { rightsHolders: 'uniqueArray', schemas: 'uniqueArray', authorityEndpoints: 'uniqueArray', archiveEndpoints: 'uniqueArray' },\n                bindingConverters: {\n                    types: function (binding) {\n                        return __WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].nodeFromBinding(binding);\n                    },\n                    labels: function (binding) {\n                        return __WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].nodeFromBinding(binding);\n                    },\n                    descriptions: function (binding) {\n                        return __WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].nodeFromBinding(binding);\n                    },\n                    schemas: function (binding) {\n                        return new __WEBPACK_IMPORTED_MODULE_5__schema__[\"a\" /* Schema */](binding.value, __WEBPACK_IMPORTED_MODULE_1__models_citable__[\"a\" /* CitableSource */].clone(source));\n                    },\n                    authorityEndpoints: function (binding) {\n                        return new __WEBPACK_IMPORTED_MODULE_4__remote_endpoint_configuration__[\"a\" /* RemoteEndpointConfiguration */](binding.value, __WEBPACK_IMPORTED_MODULE_1__models_citable__[\"a\" /* CitableSource */].clone(source));\n                    },\n                    archiveEndpoints: function (binding) {\n                        return new __WEBPACK_IMPORTED_MODULE_4__remote_endpoint_configuration__[\"a\" /* RemoteEndpointConfiguration */](binding.value, __WEBPACK_IMPORTED_MODULE_1__models_citable__[\"a\" /* CitableSource */].clone(source));\n                    },\n                    rightsHolders_labels: function (binding) {\n                        return __WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].nodeFromBinding(binding);\n                    },\n                    rightsHolders_descriptions: function (binding) {\n                        return __WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].nodeFromBinding(binding);\n                    },\n                    rightsHolders: function (binding) {\n                        return new __WEBPACK_IMPORTED_MODULE_1__models_citable__[\"b\" /* Citable */](binding.value, source);\n                    }\n                }\n            };\n            var tracker = new s.UniqueObjectTracker();\n            response.results.bindings.forEach(function (b) {\n                return s.SparqlService.bindingsToObject(b, ps, conf, tracker);\n            });\n            ProjectService.orderCitables(ps.rightsHolders);\n            deferred.resolve(ps);\n        });\n        return deferred.promise;\n    };\n    ProjectWorkerService.prototype.runListQuery = function (source, lq, oc) {\n        lq = source.graph ? lq.replace(/# STARTGRAPH/g, 'GRAPH <' + source.graph + '> {').replace(/# ENDGRAPH/g, '}') : lq.replace(/.*# STARTGRAPH\\n/g, '').replace(/.*# ENDGRAPH\\n/g, '');\n        return this.fibraSparqlService.query(source.sparqlEndpoint, lq).then(function (response) {\n            var projects = new __WEBPACK_IMPORTED_MODULE_6__components_collection_utils__[\"a\" /* EMap */](oc);\n            var conf = {\n                bindingTypes: { rightsHolders: 'uniqueArray', schemas: 'uniqueArray', authorityEndpoints: 'uniqueArray', archiveEndpoints: 'uniqueArray' },\n                bindingConverters: {\n                    types: function (binding) {\n                        return __WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].nodeFromBinding(binding);\n                    },\n                    labels: function (binding) {\n                        return __WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].nodeFromBinding(binding);\n                    },\n                    descriptions: function (binding) {\n                        return __WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].nodeFromBinding(binding);\n                    },\n                    schemas: function (binding) {\n                        return new __WEBPACK_IMPORTED_MODULE_5__schema__[\"a\" /* Schema */](binding.value, __WEBPACK_IMPORTED_MODULE_1__models_citable__[\"a\" /* CitableSource */].clone(source));\n                    },\n                    authorityEndpoints: function (binding) {\n                        return new __WEBPACK_IMPORTED_MODULE_4__remote_endpoint_configuration__[\"a\" /* RemoteEndpointConfiguration */](binding.value, __WEBPACK_IMPORTED_MODULE_1__models_citable__[\"a\" /* CitableSource */].clone(source));\n                    },\n                    archiveEndpoints: function (binding) {\n                        return new __WEBPACK_IMPORTED_MODULE_4__remote_endpoint_configuration__[\"a\" /* RemoteEndpointConfiguration */](binding.value, __WEBPACK_IMPORTED_MODULE_1__models_citable__[\"a\" /* CitableSource */].clone(source));\n                    },\n                    rightsHolders_labels: function (binding) {\n                        return __WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].nodeFromBinding(binding);\n                    },\n                    rightsHolders_descriptions: function (binding) {\n                        return __WEBPACK_IMPORTED_MODULE_8__models_rdf__[\"b\" /* DataFactory */].nodeFromBinding(binding);\n                    },\n                    rightsHolders: function (binding) {\n                        return new __WEBPACK_IMPORTED_MODULE_1__models_citable__[\"b\" /* Citable */](binding.value, source);\n                    }\n                }\n            };\n            var tracker = new s.UniqueObjectTracker();\n            response.results.bindings.forEach(function (binding) {\n                return s.SparqlService.bindingsToObject(binding, projects.goc(binding['id'].value), conf, tracker);\n            });\n            projects.values().forEach(function (p) {\n                return ProjectService.orderCitables(p.rightsHolders);\n            });\n            return projects.values();\n        });\n    };\n    return ProjectWorkerService;\n}();\n\n__WEBPACK_IMPORTED_MODULE_0_angular__[\"module\"]('fibra.services.project-service', ['fibra.services.fibra-service', 'fibra.services.fibra-sparql-service']).config(function ($provide) {\n    $provide.service('projectService', ProjectService);\n    $provide.service('projectWorkerService', ProjectWorkerService);\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ "./app/services/worker-service/worker-service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_angular__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_angular___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_angular__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__prototype_mapping_configuration__ = __webpack_require__(\"./app/services/worker-service/prototype-mapping-configuration.ts\");\n/* unused harmony export WorkerServiceConfiguration */\n/* unused harmony export WorkerService */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return WorkerWorkerService; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return StateWorkerService; });\n\n\n\n\nvar WorkerServiceConfiguration = function () {\n    function WorkerServiceConfiguration(appName, workerThreads, importScripts) {\n        this.appName = appName;\n        this.workerThreads = workerThreads;\n        this.importScripts = importScripts;\n    }\n    return WorkerServiceConfiguration;\n}();\n\nvar WorkerService = function () {\n    function WorkerService(workerServiceConfiguration, workerServicePrototypeMappingConfiguration, $rootScope, $window, $q) {\n        var _this = this;\n        this.workerServicePrototypeMappingConfiguration = workerServicePrototypeMappingConfiguration;\n        this.$q = $q;\n        this.currentWorker = 0;\n        this.deferreds = [];\n        var path = $window.location.protocol + '//' + $window.location.host;\n        var importScripts = workerServiceConfiguration.importScripts.map(function (s) {\n            return s.indexOf('http') !== 0 ? path + (s.indexOf('/') !== 0 ? $window.location.pathname : '') + s : s;\n        });\n        var blobURL = $window.URL.createObjectURL(new Blob([WorkerService.workerTemplate.replace(/<APP_NAME>/g, workerServiceConfiguration.appName).replace(/<IMPORT_SCRIPTS>/g, importScripts.join('\\',\\''))], { type: 'application/javascript' }));\n        this.workers = [];\n        for (var i = 0; i < workerServiceConfiguration.workerThreads; i++) {\n            this.workers.push(new Worker(blobURL));\n            this.workers[i].addEventListener('message', function (e) {\n                var eventId = e.data.event;\n                if (eventId === 'broadcast') {\n                    $rootScope.$broadcast(e.data.name, _this.restorePrototypes(e.data.args));\n                    $rootScope.$apply();\n                } else {\n                    var deferred = _this.deferreds[e.data.id];\n                    if (deferred) {\n                        if (eventId === 'success') {\n                            delete _this.deferreds[e.data.id];\n                            deferred.resolve(_this.restorePrototypes(e.data.data));\n                        } else if (eventId === 'failure') {\n                            delete _this.deferreds[e.data.id];\n                            deferred.reject(_this.restorePrototypes(e.data.data));\n                        } else deferred.notify(_this.restorePrototypes(e.data.data));\n                    }\n                }\n            });\n        }\n    }\n    WorkerService.stripMarks = function (args) {\n        if (!args || !args.__mark || typeof args !== 'object') return;\n        delete args.__mark;\n        if (args instanceof Array) args.forEach(function (arg) {\n            return WorkerService.stripMarks(arg);\n        });else {\n            for (var key in args) if (args.hasOwnProperty(key)) WorkerService.stripMarks(args[key]);\n        }\n    };\n    WorkerService.stripPrototypes = function (args) {\n        if (!args || !args.__className || typeof args !== 'object') return;\n        delete args.__className;\n        if (args instanceof Array) args.forEach(function (arg) {\n            return WorkerService.stripPrototypes(arg);\n        });else {\n            for (var key in args) if (args.hasOwnProperty(key)) WorkerService.stripPrototypes(args[key]);\n        }\n    };\n    WorkerService.savePrototypes = function (args) {\n        WorkerService.stripPrototypes(args);\n        this.savePrototypesInternal(args);\n        return args;\n    };\n    WorkerService.savePrototypesInternal = function (args) {\n        if (!args || args.__className || typeof args !== 'object') return;\n        if (args instanceof Array) args.forEach(function (arg) {\n            return WorkerService.savePrototypesInternal(arg);\n        });else {\n            if (args.constructor.__name || args.constructor.name !== 'Object') {\n                var currentPrototype = Object.getPrototypeOf(args);\n                out: while (currentPrototype !== Object.prototype) {\n                    for (var _i = 0, _a = Object.getOwnPropertyNames(currentPrototype); _i < _a.length; _i++) {\n                        var prop = _a[_i];\n                        if (prop !== 'constructor' && typeof args.__proto__[prop] === 'function') {\n                            args.__className = args.constructor.__name ? args.constructor.__name : args.constructor.name;\n                            break out;\n                        }\n                    }\n                    currentPrototype = Object.getPrototypeOf(currentPrototype);\n                }\n                if (!args.__className) args.__className = 'Object';\n            }\n            for (var key in args) if (args.hasOwnProperty(key)) WorkerService.savePrototypesInternal(args[key]);\n        }\n    };\n    WorkerService.prototype.$broadcast = function (name, args) {\n        this.workers.forEach(function (w) {\n            return w.postMessage({ name: name, args: WorkerService.savePrototypes(args) });\n        });\n    };\n    WorkerService.prototype.callAll = function (service, method, args, canceller) {\n        var _this = this;\n        if (args === void 0) {\n            args = [];\n        }\n        var deferred = this.$q.defer();\n        this.deferreds.push(deferred);\n        var id = this.deferreds.length - 1;\n        var message = {\n            id: id,\n            service: service,\n            method: method,\n            args: WorkerService.savePrototypes(args)\n        };\n        if (canceller) canceller.then(function () {\n            _this.workers.forEach(function (worker) {\n                return worker.postMessage({\n                    id: id,\n                    cancel: true\n                });\n            });\n            delete _this.deferreds[id];\n        });\n        this.workers.forEach(function (worker) {\n            return worker.postMessage(message);\n        });\n        return deferred.promise;\n    };\n    WorkerService.prototype.call = function (service, method, args, canceller) {\n        var _this = this;\n        if (args === void 0) {\n            args = [];\n        }\n        var deferred = this.$q.defer();\n        this.deferreds.push(deferred);\n        var id = this.deferreds.length - 1;\n        var worker = this.workers[this.currentWorker];\n        this.currentWorker = (this.currentWorker + 1) % this.workers.length;\n        if (canceller) canceller.then(function () {\n            worker.postMessage({\n                id: id,\n                cancel: true\n            });\n            delete _this.deferreds[id];\n        });\n        worker.postMessage({\n            id: id,\n            service: service,\n            method: method,\n            args: WorkerService.savePrototypes(args)\n        });\n        return deferred.promise;\n    };\n    WorkerService.prototype.restorePrototypes = function (args) {\n        this.restorePrototypesInternal(args);\n        WorkerService.stripMarks(args);\n        return args;\n    };\n    WorkerService.prototype.restorePrototypesInternal = function (args) {\n        var _this = this;\n        if (!args || args.__mark || typeof args !== 'object') return;\n        args.__mark = true;\n        if (args instanceof Array) args.forEach(function (arg) {\n            return _this.restorePrototypesInternal(arg);\n        });else {\n            if (args.__className) {\n                var prototype = this.workerServicePrototypeMappingConfiguration[args.__className];\n                if (!prototype) throw 'Unknown prototype ' + args.__className;\n                args.__proto__ = prototype;\n                delete args.__className;\n            }\n            for (var key in args) if (args.hasOwnProperty(key)) this.restorePrototypesInternal(args[key]);\n        }\n    };\n    return WorkerService;\n}();\n\nWorkerService.workerTemplate = \"\\n    var window = self\\n    window.history = {}\\n    window.Node = function () {}\\n    //self.setImmediate = function(fn) { return window.setTimeout(fn, 0) }\\n    window.document = {\\n      readyState: 'complete',\\n      cookie: '',\\n      querySelector: function (selector) {\\n        if (selector=='html') return { innerHTML: '', getAttribute: function() {}} // angular-hot-loader patch\\n      },\\n      addEventListener: function() {},\\n      createElement: function() {\\n        return {\\n          pathname: '',\\n          setAttribute: function(key, value) {}\\n        };\\n      },\\n    };\\n    importScripts('<IMPORT_SCRIPTS>')\\n    window.angular.module('<APP_NAME>').run(['workerWorkerService', function(workerWorkerService) {\\n      self.addEventListener('message', function(e) { workerWorkerService.onMessage(e.data) })\\n    }])\\n    window.angular.bootstrap(null, ['<APP_NAME>'])\\n    window = undefined\\n    self.history = undefined\\n    self.Node = undefined\\n    setTimeout(function() { // angular init needs this\\n      self.document = undefined\\n    }, 0)\\n  \";\nvar WorkerWorkerService = function () {\n    function WorkerWorkerService(workerServicePrototypeMappingConfiguration, $injector, $q, $rootScope) {\n        this.workerServicePrototypeMappingConfiguration = workerServicePrototypeMappingConfiguration;\n        this.$injector = $injector;\n        this.$q = $q;\n        this.$rootScope = $rootScope;\n        this.cancellers = [];\n    }\n    WorkerWorkerService.stripFunctions = function (obj) {\n        var ret = {};\n        for (var key in obj) if (typeof obj[key] === 'object') ret[key] = WorkerWorkerService.stripFunctions(obj[key]);else if (typeof obj[key] !== 'function') ret[key] = obj[key];\n        return ret;\n    };\n    WorkerWorkerService.prototype.$broadcast = function (name, args) {\n        try {\n            self.postMessage({ event: 'broadcast', name: name, args: WorkerService.savePrototypes(args) });\n        } catch (e) {\n            console.log(args, e);\n            throw e;\n        }\n    };\n    WorkerWorkerService.prototype.onMessage = function (message) {\n        var _this = this;\n        if (message.id === undefined) {\n            this.$rootScope.$broadcast(message.name, this.restorePrototypes(message.args));\n            this.$rootScope.$apply();\n        } else if (message.cancel) {\n            var canceller = this.cancellers[message.id];\n            delete this.cancellers[message.id];\n            if (canceller) canceller.resolve();\n        } else {\n            var service = this.$injector.get(message.service);\n            var canceller = this.$q.defer();\n            this.cancellers[message.id] = canceller;\n            var promise = service[message.method].apply(service, this.restorePrototypes(message.args).concat(canceller.promise));\n            if (!promise || !promise.then) {\n                var deferred = this.$q.defer();\n                deferred.resolve(promise);\n                promise = deferred.promise;\n            }\n            promise.then(function (success) {\n                delete _this.cancellers[message.id];\n                self.postMessage({ event: 'success', id: message.id, data: WorkerService.savePrototypes(success) });\n            }, function (error) {\n                delete _this.cancellers[message.id];\n                if (error instanceof Error) {\n                    self.postMessage({ event: 'failure', id: message.id, data: { name: error.name, message: error.message, stack: error.stack } });\n                    throw error;\n                }\n                self.postMessage({ event: 'failure', id: message.id, data: WorkerService.savePrototypes(WorkerWorkerService.stripFunctions(error)) });\n            }, function (update) {\n                return self.postMessage({ event: 'update', id: message.id, data: WorkerService.savePrototypes(update) });\n            });\n        }\n    };\n    WorkerWorkerService.prototype.restorePrototypes = function (args) {\n        this.restorePrototypesInternal(args);\n        WorkerService.stripMarks(args);\n        return args;\n    };\n    WorkerWorkerService.prototype.restorePrototypesInternal = function (args) {\n        var _this = this;\n        if (!args || args.__mark || typeof args !== 'object') return;\n        args.__mark = true;\n        if (args instanceof Array) args.forEach(function (arg) {\n            return _this.restorePrototypesInternal(arg);\n        });else {\n            if (args.__className) {\n                var prototype = this.workerServicePrototypeMappingConfiguration[args.__className];\n                if (!prototype) throw 'Unknown prototype ' + args.__className;\n                args.__proto__ = prototype;\n                delete args.__className;\n            }\n            for (var key in args) if (args.hasOwnProperty(key)) this.restorePrototypesInternal(args[key]);\n        }\n    };\n    return WorkerWorkerService;\n}();\n\nvar StateWorkerService = function () {\n    function StateWorkerService() {}\n    StateWorkerService.prototype.setState = function (state) {\n        this.state = state;\n    };\n    return StateWorkerService;\n}();\n\n__WEBPACK_IMPORTED_MODULE_0_angular__[\"module\"]('fibra.services.worker-service', ['fibra.services.worker-service-prototype-mapping-configuration']).config(function ($provide) {\n    $provide.service('stateWorkerService', StateWorkerService);\n    $provide.service('workerService', WorkerService);\n    $provide.service('workerWorkerService', WorkerWorkerService);\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })

})