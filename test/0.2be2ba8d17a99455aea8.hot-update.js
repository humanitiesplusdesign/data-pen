webpackHotUpdate(0,{

/***/ "./app/components/construct-view/explore-component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__services_sparql_item_service__ = __webpack_require__(\"./app/services/sparql-item-service.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__sunburst__ = __webpack_require__(\"./app/components/construct-view/sunburst.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__property_popover__ = __webpack_require__(\"./app/components/construct-view/property-popover.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_d3__ = __webpack_require__(\"./app/bower_components/d3/d3.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__models_rdf__ = __webpack_require__(\"./app/models/rdf.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_angular__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_angular___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_angular__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__actions_verify__ = __webpack_require__(\"./app/actions/verify.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__actions_types__ = __webpack_require__(\"./app/actions/types.ts\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__actions_items__ = __webpack_require__(\"./app/actions/items.ts\");\n/* unused harmony export ExploreComponent */\n\n\n\n\n\n\n\n\n\n\n\nvar ExploreComponentController = function () {\n    function ExploreComponentController($element, $compile, $window, $scope, $timeout, sparqlItemService, fibraService, $ngRedux, $q) {\n        var _this = this;\n        this.$element = $element;\n        this.$compile = $compile;\n        this.$window = $window;\n        this.$scope = $scope;\n        this.$timeout = $timeout;\n        this.sparqlItemService = sparqlItemService;\n        this.fibraService = fibraService;\n        this.$ngRedux = $ngRedux;\n        this.$q = $q;\n        this.primaryItems = [];\n        this.secondaryItems = [];\n        this.tertiaryItems = [];\n        this.untypedItems = [];\n        this.removedUntypedItems = [];\n        this.allItems = [];\n        this.radiusInitial = 1;\n        this.radius = 8;\n        this.radiusBounce = 15;\n        this.gridOffset = 50; // Should be even\n        this.chargeForce = __WEBPACK_IMPORTED_MODULE_3_d3__[\"forceCollide\"](this.gridOffset / 1.5);\n        this.chargeForce2 = __WEBPACK_IMPORTED_MODULE_3_d3__[\"forceCollide\"](this.gridOffset / 1.5);\n        this.svgBackgroundColor = '#EEE';\n        this.lastClickX = 0;\n        this.lastClickY = 0;\n        var unsub1 = $ngRedux.connect(this.mapVerifyToThis, __WEBPACK_IMPORTED_MODULE_6__actions_verify__)(this);\n        var unsub2 = $ngRedux.connect(this.mapTypesToThis, __WEBPACK_IMPORTED_MODULE_7__actions_types__)(this);\n        var unsub3 = $ngRedux.connect(this.mapItemsToThis, __WEBPACK_IMPORTED_MODULE_8__actions_items__)(this);\n        this.unsubscribe = function () {\n            unsub1();\n            unsub2();\n            unsub3();\n        };\n        this.sunburst = new __WEBPACK_IMPORTED_MODULE_1__sunburst__[\"a\" /* Sunburst */]($element, $compile, $scope, sparqlItemService, fibraService);\n        this.propertyPopover = new __WEBPACK_IMPORTED_MODULE_2__property_popover__[\"a\" /* PropertyPopover */]($element, $scope, fibraService, $compile);\n        this.fibraService.on('change', function () {\n            // this.verifyItem = this.fibraService.getState().construct.verifyItem\n            return _this.queryAndBuild();\n        });\n        this.itemService = sparqlItemService;\n        this.links = [];\n        this.$scope.layout = {\n            'choice': 'force',\n            'links': 'hide'\n        };\n        this.$scope.$watch('layout.choice', this.updateExplore.bind(this, false));\n        this.$scope.$watch('layout.links', this.updateExplore.bind(this, false));\n    }\n    ExploreComponentController.prototype.$onChanges = function (chngsObj) {\n        if (this.svgSel) {\n            this.updateExplore(false, false);\n        }\n    };\n    ExploreComponentController.prototype.$postLink = function () {\n        var _this = this;\n        this.svgSel = __WEBPACK_IMPORTED_MODULE_3_d3__[\"select\"](this.$element[0]).select('svg');\n        this.svgSel.append('rect').classed('background', true).style('fill', this.svgBackgroundColor).on('click', function () {\n            _this.lastClickX = __WEBPACK_IMPORTED_MODULE_3_d3__[\"event\"].offsetX;\n            _this.lastClickY = __WEBPACK_IMPORTED_MODULE_3_d3__[\"event\"].offsetY;\n            _this.fibraService.dispatchAction(_this.createDisplayItem());\n        });\n        // Create link g\n        this.svgSel.append('g').attr('class', 'links');\n        this.sunburst.addSunburstGroup(this.svgSel);\n        this.radius = 8;\n        this.tooltip = __WEBPACK_IMPORTED_MODULE_3_d3__[\"select\"]('body').append('div').style('position', 'absolute').style('z-index', '20').style('background-color', 'gray').style('color', 'white').style('padding', '3px').style('border-radius', '2px').style('visibility', 'hidden');\n        this.edittip = __WEBPACK_IMPORTED_MODULE_3_d3__[\"select\"]('body').append('div').attr('id', 'edittip').style('position', 'absolute').style('z-index', '40').style('background-color', 'white').style('color', 'gray').style('border', '1px solid gray').style('padding', '3px').style('border-radius', '2px').style('visibility', 'hidden');\n        this.updateSizing();\n        this.queryAndBuild();\n    };\n    // currently broken on deleting a link\n    ExploreComponentController.prototype.highlightLinks = function (d, i) {\n        __WEBPACK_IMPORTED_MODULE_3_d3__[\"selectAll\"]('line').classed('relevant', false);\n        for (var j = 0; j < this.links.length; j++) {\n            var linksource = this.links[j].source;\n            var linktarget = this.links[j].target;\n            if (linksource.index === i || linktarget.index === i) __WEBPACK_IMPORTED_MODULE_3_d3__[\"select\"]('#link-' + j).classed('relevant', true);\n        }\n    };\n    ExploreComponentController.prototype.$onDestroy = function () {\n        this.unsubscribe();\n    };\n    ExploreComponentController.prototype.queryAndBuild = function () {\n        var _this = this;\n        var prom = this.sparqlItemService.getItems(this.fibraService.getState().construct.items, false).then(function (items) {\n            // If we are showing property popovers, hide 'em.\n            _this.propertyPopover.hidePopover();\n            // Lock previous items\n            _this.lockExisting(_this.primaryItems);\n            _this.lockExisting(_this.secondaryItems);\n            _this.lockExisting(_this.tertiaryItems);\n            var displayTypes = _this.types.displayTypes;\n            var currentUntyped = _this.filterItemsByType(items, __WEBPACK_IMPORTED_MODULE_4__models_rdf__[\"d\" /* OWL */].Thing.value);\n            _this.removedUntypedItems = _this.untypedItems.filter(function (it) {\n                return currentUntyped.indexOf(it) === -1;\n            });\n            _this.untypedItems = _this.mergeNodes(_this.untypedItems, _this.filterItemsByType(items, __WEBPACK_IMPORTED_MODULE_4__models_rdf__[\"d\" /* OWL */].Thing.value));\n            if (displayTypes[0]) _this.primaryItems = _this.mergeNodes(_this.primaryItems, _this.filterItemsByType(items, displayTypes[0].id));\n            if (displayTypes[1]) _this.secondaryItems = _this.mergeNodes(_this.secondaryItems, _this.filterItemsByType(items, displayTypes[1].id));\n            if (displayTypes[2]) _this.tertiaryItems = _this.mergeNodes(_this.tertiaryItems, _this.filterItemsByType(items, displayTypes[2].id));\n            _this.allItems = _this.primaryItems.concat(_this.secondaryItems).concat(_this.tertiaryItems).concat(_this.untypedItems);\n            _this.properties = [];\n            if (_this.primaryItems[0] && _this.primaryItems[0].localProperties) {\n                for (var _i = 0, _a = _this.primaryItems[0].localProperties; _i < _a.length; _i++) {\n                    var p = _a[_i];\n                    _this.properties.push({ key: p.toCanonical(), value: p.label });\n                }\n            }\n            _this.links = _this.mergeLinks(_this.links);\n            return 'ok';\n        }).then(function () {\n            return _this.updateExplore();\n        });\n        this.fibraService.dispatchAction(this.fibraService.placeHolderAction(prom));\n        return prom;\n    };\n    ExploreComponentController.prototype.lockExisting = function (nodes) {\n        nodes.forEach(function (node) {\n            node.fx = node.gx;\n            node.fy = node.gy;\n        });\n    };\n    ExploreComponentController.prototype.filterItemsByType = function (items, type) {\n        return items.filter(function (it) {\n            var typeProp = it.localProperties.concat(it.remoteProperties).filter(function (pr) {\n                return pr.value === 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';\n            });\n            if (typeProp[0]) {\n                return typeProp[0].values.map(function (v) {\n                    return v.value.value;\n                }).indexOf(type) !== -1;\n            } else {\n                return false;\n            }\n        });\n    };\n    ExploreComponentController.prototype.updateSizing = function () {\n        // allow item_info_tip to expand somehow\n        // add delete and alter ability to sparql-item.pug\n        // fix how links sit on top of nodes\n        var viewport_width = window.innerWidth;\n        var viewport_height = window.innerHeight;\n        this.exploreWidth = viewport_width;\n        this.exploreHeight = viewport_height - 36;\n        __WEBPACK_IMPORTED_MODULE_3_d3__[\"select\"](this.$element[0]).select('#explorecontainer').style('height', this.exploreHeight + 'px');\n        // move table down so top is at bottom of viewport\n        __WEBPACK_IMPORTED_MODULE_3_d3__[\"select\"](this.$element[0]).select('#exploretable').style('height', viewport_height - 50 + 'px');\n        this.svgSel.style('width', viewport_width + 'px').style('height', viewport_height - 36 + 'px');\n        this.svgSel.select('rect.background').style('width', viewport_width + 'px').style('height', viewport_height - 36 + 'px');\n        var svg_width = +this.svgSel.style('width').replace('px', '');\n        var svg_height = +this.svgSel.style('height').replace('px', '');\n    };\n    ExploreComponentController.prototype.appendNodes = function (enterSelection, className) {\n        var _this = this;\n        var appendSelection = enterSelection.append('g').attr('id', function (d, i) {\n            return 'node-' + i + '-' + className;\n        }).attr('class', 'node').classed(className, true).append('circle').classed('node-circle', true).classed(className, true).attr('id', function (d, i) {\n            return 'node-circle-' + i + '-' + className;\n        }).attr('r', this.radiusInitial + 'px').call(__WEBPACK_IMPORTED_MODULE_3_d3__[\"drag\"]().on('start', function (d, i) {\n            if (!_this.linkMode) {\n                d.fx = d.x;\n                d.fy = d.y;\n            } else {\n                _this.dragline = _this.svgSel.append('line').attr('class', 'dragLine');\n            }\n        }).on('drag', function (d, i, group) {\n            if (!_this.linkMode) {\n                __WEBPACK_IMPORTED_MODULE_3_d3__[\"select\"](group[i]).classed('fixed', true);\n                d.x = __WEBPACK_IMPORTED_MODULE_3_d3__[\"event\"].x;\n                d.y = __WEBPACK_IMPORTED_MODULE_3_d3__[\"event\"].y;\n            } else {\n                _this.dragline.attr('x1', d.x).attr('y1', d.y).attr('x2', __WEBPACK_IMPORTED_MODULE_3_d3__[\"event\"].x).attr('y2', __WEBPACK_IMPORTED_MODULE_3_d3__[\"event\"].y);\n            }\n            _this.updateExplore(false, false);\n        }).on('end', function (d, i, group) {\n            if (!_this.linkMode) {\n                if (!__WEBPACK_IMPORTED_MODULE_3_d3__[\"select\"](group[i]).classed('fixed')) {\n                    d.fx = undefined;\n                    d.fy = undefined;\n                }\n            } else {\n                var lineX_1 = +_this.dragline.attr('x2');\n                var lineY_1 = +_this.dragline.attr('y2');\n                var nodeDrop_1 = false;\n                __WEBPACK_IMPORTED_MODULE_3_d3__[\"selectAll\"]('.node').each(function (f, j) {\n                    if (Math.abs(lineX_1 - f.x) < _this.radius && Math.abs(lineY_1 - f.y) < _this.radius) {\n                        nodeDrop_1 = true;\n                        _this.fibraService.dispatchAction(_this.itemProperty(f, [new __WEBPACK_IMPORTED_MODULE_0__services_sparql_item_service__[\"a\" /* PropertyAndValue */](__WEBPACK_IMPORTED_MODULE_4__models_rdf__[\"a\" /* SKOS */].related, __WEBPACK_IMPORTED_MODULE_4__models_rdf__[\"b\" /* DataFactory */].instance.nodeFromNode(d))], [])).then(function (state) {\n                            _this.dragline.remove();\n                            _this.queryAndBuild();\n                            return state;\n                        });\n                    }\n                });\n                if (!nodeDrop_1) {\n                    _this.dragline.remove();\n                }\n            }\n        })).on('mouseover', function (d, i) {\n            _this.highlightLinks(d, i);\n            _this.tooltip.style('top', __WEBPACK_IMPORTED_MODULE_3_d3__[\"event\"].pageY - 10 + 'px').style('left', __WEBPACK_IMPORTED_MODULE_3_d3__[\"event\"].pageX + 10 + 'px').style('visibility', 'visible').text(d.label);\n        }).on('mouseout', function (d, i) {\n            _this.svgSel.selectAll('line').classed('relevant', false);\n            _this.tooltip.style('visibility', 'hidden');\n        }).on('click', function (d, i, group) {\n            var localSelected = d.selected;\n            // Unselect everything\n            _this.svgSel.selectAll('.node').each(function (n) {\n                n.selected = false;\n            });\n            // Flip this one\n            d.selected = !localSelected;\n            _this.updateExplore(false);\n            if (d.selected) {\n                _this.svgSel.select('g.sunburst-overlay').datum(d).each(_this.sunburst.buildSunburst.bind(_this)).style('display', 'block');\n            } else {\n                _this.svgSel.select('.sunburst-overlay').style('display', 'none');\n            }\n            _this.highlightLinks(d, i);\n        });\n        appendSelection.transition().attr('r', this.radius + this.radiusBounce + 'px').transition().attr('r', this.radius + 'px');\n        return appendSelection;\n    };\n    ExploreComponentController.prototype.snapToGrid = function (x, y, primary) {\n        if (primary === void 0) {\n            primary = true;\n        }\n        var sx, sy;\n        // Snap to gridOffset with further offset for multiples\n        if (primary) {\n            sx = Math.round(x / this.gridOffset) * this.gridOffset;\n            sy = Math.round(y / this.gridOffset) * this.gridOffset;\n        } else {\n            sx = Math.round(x / this.gridOffset) * this.gridOffset - this.gridOffset / 2;\n            sy = Math.round(y / this.gridOffset) * this.gridOffset - this.gridOffset / 2;\n        }\n        return [sx, sy];\n    };\n    ExploreComponentController.prototype.tickTransformNodes = function (sel, primary) {\n        var _this = this;\n        if (primary === void 0) {\n            primary = true;\n        }\n        sel.attr('transform', function (d, i) {\n            var x = d.x,\n                y = d.y;\n            if (d.x < _this.radius) x = _this.radius;\n            if (d.y < _this.radius) y = _this.radius;\n            var _a = [x, y],\n                gx = _a[0],\n                gy = _a[1];\n            if (_this.$scope.layout.choice === 'forcegrid') {\n                _b = _this.snapToGrid(x, y, primary), gx = _b[0], gy = _b[1];\n            }\n            d.gx = gx;\n            d.gy = gy;\n            return 'translate(' + gx + ', ' + gy + ')';\n            var _b;\n        });\n        if (sel.filter(function (d) {\n            return d.selected;\n        }).node()) {\n            var sbFunc_1 = this.sunburst.buildSunburst;\n            var svgSel_1 = this.svgSel;\n            var tickSunburst = function (d, i, g) {\n                svgSel_1.select('g.sunburst-overlay').datum(d).each(sbFunc_1.bind(this));\n            };\n            sel.filter(function (d) {\n                return d.selected;\n            }).each(tickSunburst.bind(this));\n        }\n    };\n    ExploreComponentController.prototype.genericTick = function (primaryNodes, secondaryNodes, untypedNodes, linkLines, transition) {\n        if (transition === void 0) {\n            transition = false;\n        }\n        var lPrimaryNodes = primaryNodes;\n        var lSecondaryNodes = secondaryNodes;\n        var lUntypedNodes = untypedNodes;\n        var lLinkLines = linkLines;\n        if (transition) {\n            lPrimaryNodes = lPrimaryNodes.transition();\n            lSecondaryNodes = lSecondaryNodes.transition();\n            lUntypedNodes = lUntypedNodes.transition();\n            lLinkLines = lLinkLines.transition();\n        }\n        this.tickTransformNodes(lPrimaryNodes, true);\n        this.tickTransformNodes(lSecondaryNodes, false);\n        this.tickTransformNodes(lUntypedNodes, false);\n        this.svgSel.selectAll('.node-circle').classed('selected-circle', function (d) {\n            return d.selected;\n        }).style('cursor', this.linkMode ? 'crosshair' : 'initial');\n        this.svgSel.selectAll('.node-circle').classed('labeled', function (d) {\n            return d.label ? true : false;\n        }).classed('verified', function (d) {\n            return d.localProperties.filter(function (p) {\n                return p.value === 'http://www.w3.org/2002/07/owl#sameAs';\n            }).length > 0;\n        });\n        lLinkLines.attr('x1', function (d) {\n            return d.source.gx;\n        }).attr('y1', function (d) {\n            return d.source.gy;\n        }).attr('x2', function (d) {\n            return d.target.gx;\n        }).attr('y2', function (d) {\n            return d.target.gy;\n        });\n    };\n    ExploreComponentController.prototype.updateExplore = function (runSim, transition) {\n        var _this = this;\n        if (runSim === void 0) {\n            runSim = true;\n        }\n        if (transition === void 0) {\n            transition = false;\n        }\n        var untypedNodes = this.svgSel.selectAll('circle.untyped').data(this.untypedItems, function (d) {\n            return d.value;\n        });\n        var primaryNodes = this.svgSel.selectAll('circle.primary').data(this.primaryItems, function (d) {\n            return d.value;\n        });\n        var secondaryNodes = this.svgSel.selectAll('circle.secondary').data(this.secondaryItems, function (d) {\n            return d.value;\n        });\n        primaryNodes.exit().remove();\n        secondaryNodes.exit().remove();\n        untypedNodes.exit().remove();\n        // Untyped nodes should come in one at a time based on a user's click event. For these\n        // we also want append the user interface for setting type and label.\n        untypedNodes.enter().each(function (datum, i, g) {\n            datum.x = _this.lastClickX;\n            datum.y = _this.lastClickY;\n            datum.fx = _this.lastClickX;\n            datum.fy = _this.lastClickY;\n            datum.gx = _this.lastClickX;\n            datum.gy = _this.lastClickY;\n        }).each(this.propertyPopover.addPopover.bind(this, this.$scope, this.svgSel));\n        // If a node went from being untyped to being primary or secondary, bring along its position\n        // Also handle position getting set from a drop (pull position from state)\n        var applyOldPosition = function (datum) {\n            // Get position from state if it was set there.\n            datum.x = _this.fibraService.getState().construct.itemIndex[datum.value].x;\n            datum.y = _this.fibraService.getState().construct.itemIndex[datum.value].y;\n            datum.fx = _this.fibraService.getState().construct.itemIndex[datum.value].x;\n            datum.fy = _this.fibraService.getState().construct.itemIndex[datum.value].y;\n            datum.gx = _this.fibraService.getState().construct.itemIndex[datum.value].x;\n            datum.gx = _this.fibraService.getState().construct.itemIndex[datum.value].y;\n            // Or if node was already here, get position from old node\n            var oldNode = _this.removedUntypedItems.filter(function (it) {\n                return it.value === datum.value;\n            })[0];\n            if (oldNode) {\n                datum.x = oldNode.x;\n                datum.y = oldNode.y;\n                datum.fx = oldNode.fx;\n                datum.fy = oldNode.fy;\n                datum.gx = oldNode.gx;\n                datum.gy = oldNode.gy;\n            }\n        };\n        primaryNodes.enter().each(applyOldPosition);\n        secondaryNodes.enter().each(applyOldPosition);\n        primaryNodes = primaryNodes.merge(this.appendNodes(primaryNodes.enter(), 'primary'));\n        secondaryNodes = secondaryNodes.merge(this.appendNodes(secondaryNodes.enter(), 'secondary'));\n        untypedNodes = untypedNodes.merge(this.appendNodes(untypedNodes.enter(), 'untyped'));\n        var linkLines = this.svgSel.select('g.links').selectAll('line').data(this.links);\n        linkLines.exit().remove();\n        linkLines = linkLines.enter().append('line').attr('id', function (d, i) {\n            return 'link-' + i;\n        }).on('mouseover', function (d, i) {\n            _this.tooltip.style('top', __WEBPACK_IMPORTED_MODULE_3_d3__[\"event\"].pageY - 10 + 'px').style('left', __WEBPACK_IMPORTED_MODULE_3_d3__[\"event\"].pageX + 10 + 'px').style('visibility', 'visible').text(d.property.label);\n        }).on('mouseout', function (d, i) {\n            _this.tooltip.style('visibility', 'hidden');\n        }).merge(linkLines).style('visibility', this.$scope.layout.links === 'show' ? 'visible' : 'hidden');\n        // Add sunburst again so it stays on top\n        this.sunburst.addSunburstGroup(this.svgSel);\n        this.genericTick(primaryNodes, secondaryNodes, untypedNodes, linkLines, transition);\n        return this.$q.resolve('ok');\n    };\n    ExploreComponentController.prototype.mapVerifyToThis = function (state) {\n        return {\n            verify: state.verify\n        };\n    };\n    ExploreComponentController.prototype.mapTypesToThis = function (state) {\n        return {\n            types: state.types\n        };\n    };\n    ExploreComponentController.prototype.mapItemsToThis = function (state) {\n        return {\n            items: state.items\n        };\n    };\n    ExploreComponentController.prototype.mergeNodes = function (oldNodes, nodes) {\n        var newNodes = [];\n        // Check if old nodes are still in the mix\n        for (var i = 0; i < oldNodes.length; i++) {\n            for (var j = 0; j < nodes.length; j++) {\n                if (oldNodes[i].toCanonical() === nodes[j].toCanonical()) {\n                    newNodes.push(oldNodes[i]);\n                    // We need to grab new node information like labels and props in case it's changed\n                    oldNodes[i].label = nodes[j].label;\n                    oldNodes[i].localProperties = nodes[j].localProperties;\n                }\n            }\n        }\n        // Add the new nodes\n        for (var i = 0; i < nodes.length; i++) {\n            var check = false;\n            for (var j = 0; j < newNodes.length; j++) {\n                if (newNodes[j].toCanonical() === nodes[i].toCanonical()) check = true;\n            }\n            if (!check) {\n                newNodes.push(nodes[i]);\n            }\n        }\n        return newNodes;\n    };\n    ExploreComponentController.prototype.mergeLinks = function (oldLinks) {\n        var newLinks = [];\n        var items = this.primaryItems.concat(this.secondaryItems);\n        var sameAs = new __WEBPACK_IMPORTED_MODULE_4__models_rdf__[\"e\" /* ENodeMap */]();\n        for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n            var item = items_1[_i];\n            sameAs.set(item, item);\n            var sameAsProp = item.localProperties.filter(function (p) {\n                return __WEBPACK_IMPORTED_MODULE_4__models_rdf__[\"d\" /* OWL */].sameAs.equals(p);\n            })[0];\n            if (sameAsProp && sameAsProp.values) for (var _a = 0, _b = sameAsProp.values; _a < _b.length; _a++) {\n                var n = _b[_a];\n                sameAs.set(n.value, item);\n            }\n        }\n        // Iterate over item property values to see if they match the id of any\n        // of the items displayed. Also check if they match sameAs values...\n        for (var _c = 0, items_2 = items; _c < items_2.length; _c++) {\n            var item = items_2[_c];\n            for (var _d = 0, _e = item.localProperties; _d < _e.length; _d++) {\n                var p = _e[_d];\n                for (var _f = 0, _g = p.values; _f < _g.length; _f++) {\n                    var v = _g[_f];\n                    if (sameAs.has(v.value) && item !== sameAs.get(v.value) && items.indexOf(sameAs.get(v.value)) !== -1) {\n                        newLinks.push({\n                            source: item,\n                            target: sameAs.get(v.value),\n                            property: p\n                        });\n                    }\n                }\n            }\n        }\n        return newLinks;\n    };\n    return ExploreComponentController;\n}();\nvar ExploreComponent = function () {\n    function ExploreComponent() {\n        this.bindings = {\n            linkMode: '<'\n        };\n        this.controller = ExploreComponentController; // (new (...args: any[]) => angular.IController) = ExploreComponentController\n        this.template = __webpack_require__(\"./app/components/construct-view/explore.pug\")();\n    }\n    return ExploreComponent;\n}();\n\n__WEBPACK_IMPORTED_MODULE_5_angular__[\"module\"]('fibra.components.explore', ['fibra.services']).component('explore', new ExploreComponent());//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ "./app/components/construct-view/sunburst.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(\"./app/bower_components/d3/d3.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Sunburst; });\n\n\n\nvar Sunburst = function () {\n    function Sunburst($element, $compile, $scope, sparqlItemService, fibraService, displayItem, displayItems) {\n        var _this = this;\n        this.$element = $element;\n        this.$compile = $compile;\n        this.$scope = $scope;\n        this.sparqlItemService = sparqlItemService;\n        this.fibraService = fibraService;\n        this.displayItem = displayItem;\n        this.displayItems = displayItems;\n        this.sbRadius = 200;\n        this.lessRadius = this.sbRadius * this.sbRadius / 3 - 12 * 12;\n        this.sbArc = __WEBPACK_IMPORTED_MODULE_0_d3__[\"arc\"]().startAngle(function (d) {\n            return d.x0;\n        }).endAngle(function (d) {\n            return d.x1;\n        }).innerRadius(function (d) {\n            return Math.sqrt(d.y0 - _this.lessRadius);\n        }).outerRadius(function (d) {\n            return Math.sqrt(d.y1 - _this.lessRadius);\n        });\n        this.sbPart = __WEBPACK_IMPORTED_MODULE_0_d3__[\"partition\"]().size([2 * Math.PI, this.sbRadius * this.sbRadius]);\n        this.item_info_tip_displayed = false;\n        this.sbTooltip = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"]('body').append('div').style('position', 'absolute').style('z-index', '20').style('background-color', 'gray').style('color', 'white').style('padding', '3px').style('border-radius', '2px').style('visibility', 'hidden');\n        this.item_info_tip = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"]('body').append('div').attr('id', 'item_info_tip').style('position', 'absolute').style('z-index', '20').style('background-color', 'white').style('padding', '3px').style('visibility', 'hidden');\n        // Typescript messes with `this` depending on caller. Override.\n        this.buildSunburst = this.buildSunburst.bind(this);\n    }\n    Sunburst.prototype.addSunburstGroup = function (sel) {\n        var _this = this;\n        this.sel = sel;\n        if (this.sbGroup) this.sbGroup.remove();\n        this.sbGroup = sel.append('g').classed('sunburst-overlay', true);\n        // Handle info overlay\n        this.sel.on('click', function () {\n            if (_this.item_info_tip_displayed) {\n                _this.item_info_tip.style('visibility', 'hidden');\n                _this.item_info_tip_displayed = false;\n            }\n        });\n    };\n    Sunburst.prototype.buildSunburst = function (d, i, g) {\n        var _this = this;\n        this.original_data = d;\n        this.sbGroup.attr('transform', function (d) {\n            return 'translate(' + d.gx + ',' + d.gy + ')';\n        });\n        // Group by property type -> property value\n        var hier = __WEBPACK_IMPORTED_MODULE_0_d3__[\"hierarchy\"](d, function (node) {\n            if (node.localProperties) {\n                // Root node\n                return node.localProperties.concat(node.remoteProperties);\n            } else {\n                // Property node\n                return node.values ? node.values.map(function (n) {\n                    return n.value;\n                }) : undefined;\n            }\n        });\n        hier.sum(function (d) {\n            return d.values === undefined && d.localProperties === undefined ? 1 : 0;\n        });\n        var part = this.sbPart(hier);\n        var paths = this.sbGroup.selectAll(\"path\").data(hier.descendants(), function (d) {\n            return d.data;\n        });\n        paths.exit().remove();\n        paths.enter().filter(function (d) {\n            return d.depth > 0;\n        }).append(\"path\").classed(\"sunburst-cell\", true).on('mouseover', function (d, i) {\n            _this.sbTooltip.style('top', __WEBPACK_IMPORTED_MODULE_0_d3__[\"event\"].pageY - 10 + 'px').style('left', __WEBPACK_IMPORTED_MODULE_0_d3__[\"event\"].pageX + 10 + 'px').style('visibility', 'visible').text(d.depth === 2 ? d.data.label + \" (click to add)\" : d.data.label + \" (click to add all children)\");\n        }).on('mouseout', function () {\n            _this.sbTooltip.style('visibility', 'hidden');\n        }).on('click', function (d, i) {\n            if (d.depth === 2) {\n                // Leaf\n                _this.fibraService.dispatchAction(_this.displayItem(d.data));\n            } else {\n                // Property\n                _this.fibraService.dispatchAction(_this.displayItems(d.children.map(function (hn) {\n                    return hn.data;\n                })));\n            }\n            _this.original_data.selected = false;\n            _this.sbTooltip.style('visibility', 'hidden');\n            _this.sbGroup.remove();\n        }).merge(paths).attr(\"d\", this.sbArc).style(\"stroke\", \"#fff\");\n    };\n    Sunburst.prototype.selectItem = function (id) {\n        this.selectedItem = id;\n    };\n    return Sunburst;\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvY29tcG9uZW50cy9jb25zdHJ1Y3Qtdmlldy9zdW5idXJzdC50cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9hcHAvY29tcG9uZW50cy9jb25zdHJ1Y3Qtdmlldy9zdW5idXJzdC50cz82ZWQxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJztcbnZhciBTdW5idXJzdCA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU3VuYnVyc3QoJGVsZW1lbnQsICRjb21waWxlLCAkc2NvcGUsIHNwYXJxbEl0ZW1TZXJ2aWNlLCBmaWJyYVNlcnZpY2UsIGRpc3BsYXlJdGVtLCBkaXNwbGF5SXRlbXMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy4kZWxlbWVudCA9ICRlbGVtZW50O1xuICAgICAgICB0aGlzLiRjb21waWxlID0gJGNvbXBpbGU7XG4gICAgICAgIHRoaXMuJHNjb3BlID0gJHNjb3BlO1xuICAgICAgICB0aGlzLnNwYXJxbEl0ZW1TZXJ2aWNlID0gc3BhcnFsSXRlbVNlcnZpY2U7XG4gICAgICAgIHRoaXMuZmlicmFTZXJ2aWNlID0gZmlicmFTZXJ2aWNlO1xuICAgICAgICB0aGlzLmRpc3BsYXlJdGVtID0gZGlzcGxheUl0ZW07XG4gICAgICAgIHRoaXMuZGlzcGxheUl0ZW1zID0gZGlzcGxheUl0ZW1zO1xuICAgICAgICB0aGlzLnNiUmFkaXVzID0gMjAwO1xuICAgICAgICB0aGlzLmxlc3NSYWRpdXMgPSB0aGlzLnNiUmFkaXVzICogdGhpcy5zYlJhZGl1cyAvIDMgLSAxMiAqIDEyO1xuICAgICAgICB0aGlzLnNiQXJjID0gZDMuYXJjKClcbiAgICAgICAgICAgIC5zdGFydEFuZ2xlKGZ1bmN0aW9uIChkKSB7IHJldHVybiBkLngwOyB9KVxuICAgICAgICAgICAgLmVuZEFuZ2xlKGZ1bmN0aW9uIChkKSB7IHJldHVybiBkLngxOyB9KVxuICAgICAgICAgICAgLmlubmVyUmFkaXVzKGZ1bmN0aW9uIChkKSB7IHJldHVybiBNYXRoLnNxcnQoZC55MCAtIF90aGlzLmxlc3NSYWRpdXMpOyB9KVxuICAgICAgICAgICAgLm91dGVyUmFkaXVzKGZ1bmN0aW9uIChkKSB7IHJldHVybiBNYXRoLnNxcnQoZC55MSAtIF90aGlzLmxlc3NSYWRpdXMpOyB9KTtcbiAgICAgICAgdGhpcy5zYlBhcnQgPSBkMy5wYXJ0aXRpb24oKVxuICAgICAgICAgICAgLnNpemUoWzIgKiBNYXRoLlBJLCB0aGlzLnNiUmFkaXVzICogdGhpcy5zYlJhZGl1c10pO1xuICAgICAgICB0aGlzLml0ZW1faW5mb190aXBfZGlzcGxheWVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuc2JUb29sdGlwID0gZDMuc2VsZWN0KCdib2R5JykuYXBwZW5kKCdkaXYnKVxuICAgICAgICAgICAgLnN0eWxlKCdwb3NpdGlvbicsICdhYnNvbHV0ZScpXG4gICAgICAgICAgICAuc3R5bGUoJ3otaW5kZXgnLCAnMjAnKVxuICAgICAgICAgICAgLnN0eWxlKCdiYWNrZ3JvdW5kLWNvbG9yJywgJ2dyYXknKVxuICAgICAgICAgICAgLnN0eWxlKCdjb2xvcicsICd3aGl0ZScpXG4gICAgICAgICAgICAuc3R5bGUoJ3BhZGRpbmcnLCAnM3B4JylcbiAgICAgICAgICAgIC5zdHlsZSgnYm9yZGVyLXJhZGl1cycsICcycHgnKVxuICAgICAgICAgICAgLnN0eWxlKCd2aXNpYmlsaXR5JywgJ2hpZGRlbicpO1xuICAgICAgICB0aGlzLml0ZW1faW5mb190aXAgPSBkMy5zZWxlY3QoJ2JvZHknKS5hcHBlbmQoJ2RpdicpXG4gICAgICAgICAgICAuYXR0cignaWQnLCAnaXRlbV9pbmZvX3RpcCcpXG4gICAgICAgICAgICAuc3R5bGUoJ3Bvc2l0aW9uJywgJ2Fic29sdXRlJylcbiAgICAgICAgICAgIC5zdHlsZSgnei1pbmRleCcsICcyMCcpXG4gICAgICAgICAgICAuc3R5bGUoJ2JhY2tncm91bmQtY29sb3InLCAnd2hpdGUnKVxuICAgICAgICAgICAgLnN0eWxlKCdwYWRkaW5nJywgJzNweCcpXG4gICAgICAgICAgICAuc3R5bGUoJ3Zpc2liaWxpdHknLCAnaGlkZGVuJyk7XG4gICAgICAgIC8vIFR5cGVzY3JpcHQgbWVzc2VzIHdpdGggYHRoaXNgIGRlcGVuZGluZyBvbiBjYWxsZXIuIE92ZXJyaWRlLlxuICAgICAgICB0aGlzLmJ1aWxkU3VuYnVyc3QgPSB0aGlzLmJ1aWxkU3VuYnVyc3QuYmluZCh0aGlzKTtcbiAgICB9XG4gICAgU3VuYnVyc3QucHJvdG90eXBlLmFkZFN1bmJ1cnN0R3JvdXAgPSBmdW5jdGlvbiAoc2VsKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuc2VsID0gc2VsO1xuICAgICAgICBpZiAodGhpcy5zYkdyb3VwKVxuICAgICAgICAgICAgdGhpcy5zYkdyb3VwLnJlbW92ZSgpO1xuICAgICAgICB0aGlzLnNiR3JvdXAgPSBzZWwuYXBwZW5kKCdnJylcbiAgICAgICAgICAgIC5jbGFzc2VkKCdzdW5idXJzdC1vdmVybGF5JywgdHJ1ZSk7XG4gICAgICAgIC8vIEhhbmRsZSBpbmZvIG92ZXJsYXlcbiAgICAgICAgdGhpcy5zZWwub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKF90aGlzLml0ZW1faW5mb190aXBfZGlzcGxheWVkKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuaXRlbV9pbmZvX3RpcC5zdHlsZSgndmlzaWJpbGl0eScsICdoaWRkZW4nKTtcbiAgICAgICAgICAgICAgICBfdGhpcy5pdGVtX2luZm9fdGlwX2Rpc3BsYXllZCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFN1bmJ1cnN0LnByb3RvdHlwZS5idWlsZFN1bmJ1cnN0ID0gZnVuY3Rpb24gKGQsIGksIGcpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5vcmlnaW5hbF9kYXRhID0gZDtcbiAgICAgICAgdGhpcy5zYkdyb3VwLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uIChkKSB7IHJldHVybiAndHJhbnNsYXRlKCcgKyBkLmd4ICsgJywnICsgZC5neSArICcpJzsgfSk7XG4gICAgICAgIC8vIEdyb3VwIGJ5IHByb3BlcnR5IHR5cGUgLT4gcHJvcGVydHkgdmFsdWVcbiAgICAgICAgdmFyIGhpZXIgPSBkMy5oaWVyYXJjaHkoZCwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIGlmIChub2RlLmxvY2FsUHJvcGVydGllcykge1xuICAgICAgICAgICAgICAgIC8vIFJvb3Qgbm9kZVxuICAgICAgICAgICAgICAgIHJldHVybiBub2RlLmxvY2FsUHJvcGVydGllcy5jb25jYXQobm9kZS5yZW1vdGVQcm9wZXJ0aWVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFByb3BlcnR5IG5vZGVcbiAgICAgICAgICAgICAgICByZXR1cm4gbm9kZS52YWx1ZXMgPyBub2RlLnZhbHVlcy5tYXAoZnVuY3Rpb24gKG4pIHsgcmV0dXJuIG4udmFsdWU7IH0pIDogdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgaGllci5zdW0oZnVuY3Rpb24gKGQpIHsgcmV0dXJuIGQudmFsdWVzID09PSB1bmRlZmluZWQgJiYgZC5sb2NhbFByb3BlcnRpZXMgPT09IHVuZGVmaW5lZCA/IDEgOiAwOyB9KTtcbiAgICAgICAgdmFyIHBhcnQgPSB0aGlzLnNiUGFydChoaWVyKTtcbiAgICAgICAgdmFyIHBhdGhzID0gdGhpcy5zYkdyb3VwLnNlbGVjdEFsbChcInBhdGhcIilcbiAgICAgICAgICAgIC5kYXRhKGhpZXIuZGVzY2VuZGFudHMoKSwgZnVuY3Rpb24gKGQpIHsgcmV0dXJuIGQuZGF0YTsgfSk7XG4gICAgICAgIHBhdGhzLmV4aXQoKS5yZW1vdmUoKTtcbiAgICAgICAgcGF0aHMuZW50ZXIoKVxuICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoZCkgeyByZXR1cm4gZC5kZXB0aCA+IDA7IH0pXG4gICAgICAgICAgICAuYXBwZW5kKFwicGF0aFwiKVxuICAgICAgICAgICAgLmNsYXNzZWQoXCJzdW5idXJzdC1jZWxsXCIsIHRydWUpXG4gICAgICAgICAgICAub24oJ21vdXNlb3ZlcicsIGZ1bmN0aW9uIChkLCBpKSB7XG4gICAgICAgICAgICBfdGhpcy5zYlRvb2x0aXAuc3R5bGUoJ3RvcCcsIChkMy5ldmVudC5wYWdlWSAtIDEwKSArICdweCcpXG4gICAgICAgICAgICAgICAgLnN0eWxlKCdsZWZ0JywgKGQzLmV2ZW50LnBhZ2VYICsgMTApICsgJ3B4JylcbiAgICAgICAgICAgICAgICAuc3R5bGUoJ3Zpc2liaWxpdHknLCAndmlzaWJsZScpXG4gICAgICAgICAgICAgICAgLnRleHQoZC5kZXB0aCA9PT0gMiA/XG4gICAgICAgICAgICAgICAgKGQuZGF0YS5sYWJlbCArIFwiIChjbGljayB0byBhZGQpXCIpIDpcbiAgICAgICAgICAgICAgICAoZC5kYXRhLmxhYmVsICsgXCIgKGNsaWNrIHRvIGFkZCBhbGwgY2hpbGRyZW4pXCIpKTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5vbignbW91c2VvdXQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpcy5zYlRvb2x0aXAuc3R5bGUoJ3Zpc2liaWxpdHknLCAnaGlkZGVuJyk7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAub24oJ2NsaWNrJywgZnVuY3Rpb24gKGQsIGkpIHtcbiAgICAgICAgICAgIGlmIChkLmRlcHRoID09PSAyKSB7XG4gICAgICAgICAgICAgICAgLy8gTGVhZlxuICAgICAgICAgICAgICAgIF90aGlzLmZpYnJhU2VydmljZS5kaXNwYXRjaEFjdGlvbihfdGhpcy5kaXNwbGF5SXRlbShkLmRhdGEpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFByb3BlcnR5XG4gICAgICAgICAgICAgICAgX3RoaXMuZmlicmFTZXJ2aWNlLmRpc3BhdGNoQWN0aW9uKF90aGlzLmRpc3BsYXlJdGVtcyhkLmNoaWxkcmVuLm1hcChmdW5jdGlvbiAoaG4pIHsgcmV0dXJuIGhuLmRhdGE7IH0pKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5vcmlnaW5hbF9kYXRhLnNlbGVjdGVkID0gZmFsc2U7XG4gICAgICAgICAgICBfdGhpcy5zYlRvb2x0aXAuc3R5bGUoJ3Zpc2liaWxpdHknLCAnaGlkZGVuJyk7XG4gICAgICAgICAgICBfdGhpcy5zYkdyb3VwLnJlbW92ZSgpO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLm1lcmdlKHBhdGhzKVxuICAgICAgICAgICAgLmF0dHIoXCJkXCIsIHRoaXMuc2JBcmMpXG4gICAgICAgICAgICAuc3R5bGUoXCJzdHJva2VcIiwgXCIjZmZmXCIpO1xuICAgIH07XG4gICAgU3VuYnVyc3QucHJvdG90eXBlLnNlbGVjdEl0ZW0gPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgdGhpcy5zZWxlY3RlZEl0ZW0gPSBpZDtcbiAgICB9O1xuICAgIHJldHVybiBTdW5idXJzdDtcbn0oKSk7XG5leHBvcnQgeyBTdW5idXJzdCB9O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIGFwcC9jb21wb25lbnRzL2NvbnN0cnVjdC12aWV3L3N1bmJ1cnN0LnRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFRQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUlBO0FBTUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ })

})